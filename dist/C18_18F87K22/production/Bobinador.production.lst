

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sat Aug 17 15:46:09 2019

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F2550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    21                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    26                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    27                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    28  0000                     
    29                           ; Version 1.45
    30                           ; Generated 16/11/2017 GMT
    31                           ; 
    32                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    33                           ; All rights reserved.
    34                           ; 
    35                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    36                           ; 
    37                           ; Redistribution and use in source and binary forms, with or without modification, are
    38                           ; permitted provided that the following conditions are met:
    39                           ; 
    40                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    41                           ;        conditions and the following disclaimer.
    42                           ; 
    43                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    44                           ;        of conditions and the following disclaimer in the documentation and/or other
    45                           ;        materials provided with the distribution.
    46                           ; 
    47                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    48                           ;        software without specific prior written permission.
    49                           ; 
    50                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    51                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    52                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    53                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    54                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    55                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    56                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    57                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    58                           ; 
    59                           ; 
    60                           ; Code-generator required, PIC18F2550 Definitions
    61                           ; 
    62                           ; SFR Addresses
    63  0000                     
    64                           	psect	idataCOMRAM
    65  000722                     __pidataCOMRAM:
    66                           	opt stack 0
    67                           
    68                           ;initializer for _PWM_duty
    69  000722  0032               	dw	50
    70                           
    71                           ;initializer for _count_4
    72  000724  0005               	dw	5
    73                           
    74                           ;initializer for _count_3
    75  000726  0084               	dw	132
    76                           
    77                           ;initializer for _count_2
    78  000728  0001               	dw	1
    79                           
    80                           ;initializer for _count_1
    81  00072A  0002               	dw	2
    82                           
    83                           ;initializer for _length
    84  00072C  2422               	dw	9250
    85                           
    86                           ;initializer for _turns
    87  00072E  0FA0               	dw	4000
    88                           
    89                           ;initializer for _zero_flag
    90  000730  01                 	db	1
    91                           
    92                           	psect	idataBANK0
    93  00073E                     __pidataBANK0:
    94                           	opt stack 0
    95                           
    96                           ;initializer for _motor1
    97  00073E  0001               	dw	1
    98  0000                     _ADRES	set	4035
    99  0000                     _TMR1	set	4046
   100  0000                     _TMR0	set	4054
   101  0000                     _T2CONbits	set	4042
   102  0000                     _CCP1CONbits	set	4029
   103  0000                     _PR2	set	4043
   104  0000                     _SPBRG	set	4015
   105  0000                     _IPR1bits	set	3999
   106  0000                     _INTCON2bits	set	4081
   107  0000                     _RCONbits	set	4048
   108  0000                     _TRISBbits	set	3987
   109  0000                     _TRISCbits	set	3988
   110  0000                     _PIE1bits	set	3997
   111  0000                     _ADCON2	set	4032
   112  0000                     _ADCON0bits	set	4034
   113  0000                     _TRISAbits	set	3986
   114  0000                     _ADCON1	set	4033
   115  0000                     _LATC	set	3979
   116  0000                     _PORTC	set	3970
   117  0000                     _LATB	set	3978
   118  0000                     _PORTB	set	3969
   119  0000                     _LATA	set	3977
   120  0000                     _PORTA	set	3968
   121  0000                     _OSCCONbits	set	4051
   122  0000                     _T0CONbits	set	4053
   123  0000                     _T1CONbits	set	4045
   124  0000                     _LATBbits	set	3978
   125  0000                     _CCPR1L	set	4030
   126  0000                     _INTCON3bits	set	4080
   127  0000                     _TXREG	set	4013
   128  0000                     _RCREG	set	4014
   129  0000                     _PIR1bits	set	3998
   130  0000                     _PORTCbits	set	3970
   131  0000                     _LATCbits	set	3979
   132  0000                     _PORTAbits	set	3968
   133  0000                     _LATAbits	set	3977
   134  0000                     _INTCONbits	set	4082
   135  0000                     _TXIE	set	31980
   136  0000                     _RCIE	set	31981
   137  0000                     _RX9	set	32094
   138  0000                     _TX9	set	32102
   139  0000                     _CREN	set	32092
   140  0000                     _TXEN	set	32101
   141  0000                     _SYNC	set	32100
   142  0000                     _SPEN	set	32095
   143  0000                     _BRG16	set	32195
   144  0000                     _BRGH	set	32098
   145  0000                     _GODONE	set	32273
   146  0000                     _TXIF	set	31988
   147                           
   148                           ; #config settings
   149  0000                     
   150                           	psect	cinit
   151  00060A                     __pcinit:
   152                           	opt stack 0
   153  00060A                     start_initialization:
   154                           	opt stack 0
   155  00060A                     __initialization:
   156                           	opt stack 0
   157                           
   158                           ; Initialize objects allocated to BANK0 (2 bytes)
   159                           ; load TBLPTR registers with __pidataBANK0
   160  00060A  0E3E               	movlw	low __pidataBANK0
   161  00060C  6EF6               	movwf	tblptrl,c
   162  00060E  0E07               	movlw	high __pidataBANK0
   163  000610  6EF7               	movwf	tblptrh,c
   164  000612  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   165  000614  6EF8               	movwf	tblptru,c
   166  000616  0009               	tblrd		*+	;fetch initializer
   167  000618  CFF5 F089          	movff	tablat,__pdataBANK0
   168  00061C  0009               	tblrd		*+	;fetch initializer
   169  00061E  CFF5 F08A          	movff	tablat,__pdataBANK0+1
   170                           
   171                           ; Initialize objects allocated to COMRAM (15 bytes)
   172                           ; load TBLPTR registers with __pidataCOMRAM
   173  000622  0E22               	movlw	low __pidataCOMRAM
   174  000624  6EF6               	movwf	tblptrl,c
   175  000626  0E07               	movlw	high __pidataCOMRAM
   176  000628  6EF7               	movwf	tblptrh,c
   177  00062A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   178  00062C  6EF8               	movwf	tblptru,c
   179  00062E  EE00  F044         	lfsr	0,__pdataCOMRAM
   180  000632  EE10 F00F          	lfsr	1,15
   181  000636                     copy_data0:
   182  000636  0009               	tblrd		*+
   183  000638  CFF5 FFEE          	movff	tablat,postinc0
   184  00063C  50E5               	movf	postdec1,w,c
   185  00063E  50E1               	movf	fsr1l,w,c
   186  000640  E1FA               	bnz	copy_data0
   187                           
   188                           ; Clear objects allocated to BANK0 (33 bytes)
   189  000642  EE00  F060         	lfsr	0,__pbssBANK0
   190  000646  0E21               	movlw	33
   191  000648                     clear_0:
   192  000648  6AEE               	clrf	postinc0,c
   193  00064A  06E8               	decf	wreg,f,c
   194  00064C  E1FD               	bnz	clear_0
   195                           
   196                           ; Clear objects allocated to COMRAM (36 bytes)
   197  00064E  EE00  F001         	lfsr	0,__pbssCOMRAM
   198  000652  0E24               	movlw	36
   199  000654                     clear_1:
   200  000654  6AEE               	clrf	postinc0,c
   201  000656  06E8               	decf	wreg,f,c
   202  000658  E1FD               	bnz	clear_1
   203  00065A                     end_of_initialization:
   204                           	opt stack 0
   205  00065A                     __end_of__initialization:
   206                           	opt stack 0
   207  00065A  9053               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   208  00065C  9253               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   209  00065E  0100               	movlb	0
   210  000660  EF09  F000         	goto	_main	;jump to C main() function
   211                           tblptru	equ	0xFF8
   212                           tblptrh	equ	0xFF7
   213                           tblptrl	equ	0xFF6
   214                           tablat	equ	0xFF5
   215                           postinc0	equ	0xFEE
   216                           wreg	equ	0xFE8
   217                           postdec1	equ	0xFE5
   218                           fsr1l	equ	0xFE1
   219                           
   220                           	psect	bssCOMRAM
   221  000001                     __pbssCOMRAM:
   222                           	opt stack 0
   223  000001                     _turns_count:
   224                           	opt stack 0
   225  000001                     	ds	2
   226  000003                     _mot_4_steps:
   227                           	opt stack 0
   228  000003                     	ds	2
   229  000005                     _mot_3_steps:
   230                           	opt stack 0
   231  000005                     	ds	2
   232  000007                     _mot_1_steps:
   233                           	opt stack 0
   234  000007                     	ds	2
   235  000009                     _MOT_4_count:
   236                           	opt stack 0
   237  000009                     	ds	2
   238  00000B                     _MOT_3_count:
   239                           	opt stack 0
   240  00000B                     	ds	2
   241  00000D                     _MOT_2_count:
   242                           	opt stack 0
   243  00000D                     	ds	2
   244  00000F                     _MOT_1_count:
   245                           	opt stack 0
   246  00000F                     	ds	2
   247  000011                     _ADC_value_press:
   248                           	opt stack 0
   249  000011                     	ds	2
   250  000013                     _overflow:
   251                           	opt stack 0
   252  000013                     	ds	2
   253  000015                     _n:
   254                           	opt stack 0
   255  000015                     	ds	2
   256  000017                     _enable:
   257                           	opt stack 0
   258  000017                     	ds	1
   259  000018                     _finish_flag:
   260                           	opt stack 0
   261  000018                     	ds	1
   262  000019                     _param_flag:
   263                           	opt stack 0
   264  000019                     	ds	1
   265  00001A                     _DIR_4:
   266                           	opt stack 0
   267  00001A                     	ds	1
   268  00001B                     _DIR_2:
   269                           	opt stack 0
   270  00001B                     	ds	1
   271  00001C                     _DIR_1:
   272                           	opt stack 0
   273  00001C                     	ds	1
   274  00001D                     _RA0state:
   275                           	opt stack 0
   276  00001D                     	ds	1
   277  00001E                     _recibi:
   278                           	opt stack 0
   279  00001E                     	ds	1
   280  00001F                     _MOT_4:
   281                           	opt stack 0
   282  00001F                     	ds	1
   283  000020                     _winding:
   284                           	opt stack 0
   285  000020                     	ds	1
   286  000021                     _MOT_2:
   287                           	opt stack 0
   288  000021                     	ds	1
   289  000022                     _DIR_3:
   290                           	opt stack 0
   291  000022                     	ds	1
   292  000023                     _MOT_3:
   293                           	opt stack 0
   294  000023                     	ds	1
   295  000024                     _MOT_1:
   296                           	opt stack 0
   297  000024                     	ds	1
   298                           tblptru	equ	0xFF8
   299                           tblptrh	equ	0xFF7
   300                           tblptrl	equ	0xFF6
   301                           tablat	equ	0xFF5
   302                           postinc0	equ	0xFEE
   303                           wreg	equ	0xFE8
   304                           postdec1	equ	0xFE5
   305                           fsr1l	equ	0xFE1
   306                           
   307                           	psect	dataCOMRAM
   308  000044                     __pdataCOMRAM:
   309                           	opt stack 0
   310  000044                     _PWM_duty:
   311                           	opt stack 0
   312  000044                     	ds	2
   313  000046                     _count_4:
   314                           	opt stack 0
   315  000046                     	ds	2
   316  000048                     _count_3:
   317                           	opt stack 0
   318  000048                     	ds	2
   319  00004A                     _count_2:
   320                           	opt stack 0
   321  00004A                     	ds	2
   322  00004C                     _count_1:
   323                           	opt stack 0
   324  00004C                     	ds	2
   325  00004E                     _length:
   326                           	opt stack 0
   327  00004E                     	ds	2
   328  000050                     _turns:
   329                           	opt stack 0
   330  000050                     	ds	2
   331  000052                     _zero_flag:
   332                           	opt stack 0
   333  000052                     	ds	1
   334                           tblptru	equ	0xFF8
   335                           tblptrh	equ	0xFF7
   336                           tblptrl	equ	0xFF6
   337                           tablat	equ	0xFF5
   338                           postinc0	equ	0xFEE
   339                           wreg	equ	0xFE8
   340                           postdec1	equ	0xFE5
   341                           fsr1l	equ	0xFE1
   342                           
   343                           	psect	bssBANK0
   344  000060                     __pbssBANK0:
   345                           	opt stack 0
   346  000060                     _palabra:
   347                           	opt stack 0
   348  000060                     	ds	20
   349  000074                     _send:
   350                           	opt stack 0
   351  000074                     	ds	7
   352  00007B                     _mot_4_step_count:
   353                           	opt stack 0
   354  00007B                     	ds	2
   355  00007D                     _caliber:
   356                           	opt stack 0
   357  00007D                     	ds	2
   358  00007F                     _motor2:
   359                           	opt stack 0
   360  00007F                     	ds	2
   361                           tblptru	equ	0xFF8
   362                           tblptrh	equ	0xFF7
   363                           tblptrl	equ	0xFF6
   364                           tablat	equ	0xFF5
   365                           postinc0	equ	0xFEE
   366                           wreg	equ	0xFE8
   367                           postdec1	equ	0xFE5
   368                           fsr1l	equ	0xFE1
   369                           
   370                           	psect	dataBANK0
   371  000089                     __pdataBANK0:
   372                           	opt stack 0
   373  000089                     _motor1:
   374                           	opt stack 0
   375  000089                     	ds	2
   376                           tblptru	equ	0xFF8
   377                           tblptrh	equ	0xFF7
   378                           tblptrl	equ	0xFF6
   379                           tablat	equ	0xFF5
   380                           postinc0	equ	0xFEE
   381                           wreg	equ	0xFE8
   382                           postdec1	equ	0xFE5
   383                           fsr1l	equ	0xFE1
   384                           
   385                           	psect	cstackBANK0
   386  000081                     __pcstackBANK0:
   387                           	opt stack 0
   388  000081                     ?___wmul:
   389                           	opt stack 0
   390  000081                     ___wmul@multiplier:
   391                           	opt stack 0
   392                           
   393                           ; 2 bytes @ 0x0
   394  000081                     	ds	2
   395  000083                     ___wmul@multiplicand:
   396                           	opt stack 0
   397                           
   398                           ; 2 bytes @ 0x2
   399  000083                     	ds	2
   400  000085                     ___wmul@product:
   401                           	opt stack 0
   402                           
   403                           ; 2 bytes @ 0x4
   404  000085                     	ds	2
   405  000087                     ??_main:
   406                           
   407                           ; 1 bytes @ 0x6
   408  000087                     	ds	2
   409                           tblptru	equ	0xFF8
   410                           tblptrh	equ	0xFF7
   411                           tblptrl	equ	0xFF6
   412                           tablat	equ	0xFF5
   413                           postinc0	equ	0xFEE
   414                           wreg	equ	0xFE8
   415                           postdec1	equ	0xFE5
   416                           fsr1l	equ	0xFE1
   417                           
   418                           	psect	cstackCOMRAM
   419  000025                     __pcstackCOMRAM:
   420                           	opt stack 0
   421  000025                     ?i2___wmul:
   422                           	opt stack 0
   423  000025                     i2___wmul@multiplier:
   424                           	opt stack 0
   425                           
   426                           ; 2 bytes @ 0x0
   427  000025                     	ds	2
   428  000027                     i2___wmul@multiplicand:
   429                           	opt stack 0
   430                           
   431                           ; 2 bytes @ 0x2
   432  000027                     	ds	2
   433  000029                     i2___wmul@product:
   434                           	opt stack 0
   435                           
   436                           ; 2 bytes @ 0x4
   437  000029                     	ds	2
   438  00002B                     ?_mot_3_step_count:
   439                           	opt stack 0
   440  00002B                     mot_3_step_count@l:
   441                           	opt stack 0
   442                           
   443                           ; 2 bytes @ 0x6
   444  00002B                     	ds	2
   445  00002D                     mot_3_step_count@ms:
   446                           	opt stack 0
   447                           
   448                           ; 2 bytes @ 0x8
   449  00002D                     	ds	2
   450  00002F                     ??_mot_3_step_count:
   451                           
   452                           ; 1 bytes @ 0xA
   453  00002F                     	ds	2
   454  000031                     ??_high_isr:
   455                           
   456                           ; 1 bytes @ 0xC
   457  000031                     	ds	19
   458                           tblptru	equ	0xFF8
   459                           tblptrh	equ	0xFF7
   460                           tblptrl	equ	0xFF6
   461                           tablat	equ	0xFF5
   462                           postinc0	equ	0xFEE
   463                           wreg	equ	0xFE8
   464                           postdec1	equ	0xFE5
   465                           fsr1l	equ	0xFE1
   466                           
   467 ;;
   468 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   469 ;;
   470 ;; *************** function _main *****************
   471 ;; Defined at:
   472 ;;		line 80 in file "main.c"
   473 ;; Parameters:    Size  Location     Type
   474 ;;		None
   475 ;; Auto vars:     Size  Location     Type
   476 ;;		None
   477 ;; Return value:  Size  Location     Type
   478 ;;                  1    wreg      void 
   479 ;; Registers used:
   480 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   481 ;; Tracked objects:
   482 ;;		On entry : 0/0
   483 ;;		On exit  : 0/0
   484 ;;		Unchanged: 0/0
   485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   486 ;;      Params:         0       0       0       0       0       0       0       0       0
   487 ;;      Locals:         0       0       0       0       0       0       0       0       0
   488 ;;      Temps:          0       2       0       0       0       0       0       0       0
   489 ;;      Totals:         0       2       0       0       0       0       0       0       0
   490 ;;Total ram usage:        2 bytes
   491 ;; Hardware stack levels required when called:    4
   492 ;; This function calls:
   493 ;;		_ConfigureOscillator
   494 ;;		_InitApp
   495 ;;		___wmul
   496 ;;		_unwind
   497 ;;		_zero_mark
   498 ;; This function is called by:
   499 ;;		Startup code after reset
   500 ;; This function uses a non-reentrant model
   501 ;;
   502                           
   503                           	psect	text0
   504  000012                     __ptext0:
   505                           	opt stack 0
   506  000012                     _main:
   507                           	opt stack 27
   508                           
   509                           ;main.c: 82: ConfigureOscillator();
   510                           
   511                           ;incstack = 0
   512  000012  EC99  F003         	call	_ConfigureOscillator	;wreg free
   513                           
   514                           ;main.c: 85: InitApp();
   515  000016  ECA7  F002         	call	_InitApp	;wreg free
   516  00001A                     
   517                           ;main.c: 88: CCPR1L = PWM_duty;
   518  00001A  C044  FFBE         	movff	_PWM_duty,4030	;volatile
   519                           
   520                           ;main.c: 90: LATAbits.LA2 = DIR_1;
   521  00001E  B01C               	btfsc	_DIR_1,0,c
   522  000020  D002               	bra	u1405
   523  000022  9489               	bcf	3977,2,c	;volatile
   524  000024  D001               	bra	u1406
   525  000026                     u1405:
   526  000026  8489               	bsf	3977,2,c	;volatile
   527  000028                     u1406:
   528                           
   529                           ;main.c: 91: LATAbits.LA4 = DIR_2;
   530  000028  B01B               	btfsc	_DIR_2,0,c
   531  00002A  D002               	bra	u1415
   532  00002C  9889               	bcf	3977,4,c	;volatile
   533  00002E  D001               	bra	u1416
   534  000030                     u1415:
   535  000030  8889               	bsf	3977,4,c	;volatile
   536  000032                     u1416:
   537                           
   538                           ;main.c: 92: LATCbits.LC0 = DIR_3;
   539  000032  B022               	btfsc	_DIR_3,0,c
   540  000034  D002               	bra	u1425
   541  000036  908B               	bcf	3979,0,c	;volatile
   542  000038  D001               	bra	u1426
   543  00003A                     u1425:
   544  00003A  808B               	bsf	3979,0,c	;volatile
   545  00003C                     u1426:
   546                           
   547                           ;main.c: 93: LATBbits.LB7 = DIR_4;
   548  00003C  B01A               	btfsc	_DIR_4,0,c
   549  00003E  D002               	bra	u1435
   550  000040  9E8A               	bcf	3978,7,c	;volatile
   551  000042  D001               	bra	u1436
   552  000044                     u1435:
   553  000044  8E8A               	bsf	3978,7,c	;volatile
   554  000046                     u1436:
   555                           
   556                           ;main.c: 94: LATBbits.LB5 = enable;
   557  000046  B017               	btfsc	_enable,0,c
   558  000048  D002               	bra	u1445
   559  00004A  9A8A               	bcf	3978,5,c	;volatile
   560  00004C  D001               	bra	u1446
   561  00004E                     u1445:
   562  00004E  8A8A               	bsf	3978,5,c	;volatile
   563  000050                     u1446:
   564                           
   565                           ;main.c: 95: LATBbits.LB4 = !enable;
   566  000050  5017               	movf	_enable,w,c
   567  000052  A4D8               	btfss	status,2,c
   568  000054  D004               	goto	u1450
   569  000056  0100               	movlb	0	; () banked
   570  000058  6B87               	clrf	??_main& (0+255),b
   571  00005A  2B87               	incf	??_main& (0+255),f,b
   572  00005C  D002               	goto	u1468
   573  00005E                     u1450:
   574  00005E  0100               	movlb	0	; () banked
   575  000060  6B87               	clrf	??_main& (0+255),b
   576  000062                     u1468:
   577  000062  3B87               	swapf	??_main& (0+255),f,b
   578  000064  508A               	movf	3978,w,c	;volatile
   579  000066  1987               	xorwf	??_main& (0+255),w,b
   580  000068  0BEF               	andlw	-17
   581  00006A  1987               	xorwf	??_main& (0+255),w,b
   582  00006C  6E8A               	movwf	3978,c	;volatile
   583                           
   584                           ; BSR set to: 0
   585                           ;main.c: 97: if (recibi == 1) {
   586  00006E  041E               	decf	_recibi,w,c
   587  000070  A4D8               	btfss	status,2,c
   588  000072  D130               	goto	l195
   589                           
   590                           ; BSR set to: 0
   591                           ;main.c: 99: recibi = 0;
   592  000074  0E00               	movlw	0
   593  000076  6E1E               	movwf	_recibi,c
   594                           
   595                           ; BSR set to: 0
   596                           ;main.c: 101: if (palabra[0] == 'A') {
   597  000078  0E41               	movlw	65
   598  00007A  1960               	xorwf	_palabra& (0+255),w,b
   599  00007C  A4D8               	btfss	status,2,c
   600  00007E  D0A6               	goto	l196
   601                           
   602                           ; BSR set to: 0
   603                           ;main.c: 103: caliber = ((palabra[1] - 48) * 10) + ((palabra[2] - 48));
   604  000080  0ED0               	movlw	208
   605  000082  2561               	addwf	(_palabra+1)& (0+255),w,b
   606  000084  6F81               	movwf	___wmul@multiplier& (0+255),b
   607  000086  6B82               	clrf	(___wmul@multiplier+1)& (0+255),b
   608  000088  0EFF               	movlw	255
   609  00008A  2382               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   610  00008C  0E00               	movlw	0
   611  00008E  6F84               	movwf	(___wmul@multiplicand+1)& (0+255),b
   612  000090  0E0A               	movlw	10
   613  000092  6F83               	movwf	___wmul@multiplicand& (0+255),b
   614  000094  EC32  F003         	call	___wmul	;wreg free
   615  000098  0100               	movlb	0	; () banked
   616  00009A  5162               	movf	(_palabra+2)& (0+255),w,b
   617  00009C  6F87               	movwf	??_main& (0+255),b
   618  00009E  6B88               	clrf	(??_main+1)& (0+255),b
   619  0000A0  5181               	movf	?___wmul& (0+255),w,b
   620  0000A2  2787               	addwf	??_main& (0+255),f,b
   621  0000A4  5182               	movf	(?___wmul+1)& (0+255),w,b
   622  0000A6  2388               	addwfc	(??_main+1)& (0+255),f,b
   623  0000A8  0ED0               	movlw	208
   624  0000AA  2587               	addwf	??_main& (0+255),w,b
   625  0000AC  6F7D               	movwf	_caliber& (0+255),b
   626  0000AE  0EFF               	movlw	255
   627  0000B0  2188               	addwfc	(??_main+1)& (0+255),w,b
   628  0000B2  6F7E               	movwf	(_caliber+1)& (0+255),b
   629                           
   630                           ;main.c: 104: length = ((palabra[3] - 48) * 10000) + ((palabra[4] - 48) * 1000) + ((pala
      +                          bra[5] - 48) * 100) + ((palabra[6] - 48) * 10) + ((palabra[7] - 48));
   631  0000B4  0ED0               	movlw	208
   632  0000B6  2563               	addwf	(_palabra+3)& (0+255),w,b
   633  0000B8  6F81               	movwf	___wmul@multiplier& (0+255),b
   634  0000BA  6B82               	clrf	(___wmul@multiplier+1)& (0+255),b
   635  0000BC  0EFF               	movlw	255
   636  0000BE  2382               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   637  0000C0  0E27               	movlw	39
   638  0000C2  6F84               	movwf	(___wmul@multiplicand+1)& (0+255),b
   639  0000C4  0E10               	movlw	16
   640  0000C6  6F83               	movwf	___wmul@multiplicand& (0+255),b
   641  0000C8  EC32  F003         	call	___wmul	;wreg free
   642  0000CC  0100               	movlb	0	; () banked
   643  0000CE  5167               	movf	(_palabra+7)& (0+255),w,b
   644  0000D0  6F87               	movwf	??_main& (0+255),b
   645  0000D2  6B88               	clrf	(??_main+1)& (0+255),b
   646  0000D4  5181               	movf	?___wmul& (0+255),w,b
   647  0000D6  2787               	addwf	??_main& (0+255),f,b
   648  0000D8  5182               	movf	(?___wmul+1)& (0+255),w,b
   649  0000DA  2388               	addwfc	(??_main+1)& (0+255),f,b
   650  0000DC  0ED0               	movlw	208
   651  0000DE  2564               	addwf	(_palabra+4)& (0+255),w,b
   652  0000E0  6F81               	movwf	___wmul@multiplier& (0+255),b
   653  0000E2  6B82               	clrf	(___wmul@multiplier+1)& (0+255),b
   654  0000E4  0EFF               	movlw	255
   655  0000E6  2382               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   656  0000E8  0E03               	movlw	3
   657  0000EA  6F84               	movwf	(___wmul@multiplicand+1)& (0+255),b
   658  0000EC  0EE8               	movlw	232
   659  0000EE  6F83               	movwf	___wmul@multiplicand& (0+255),b
   660  0000F0  EC32  F003         	call	___wmul	;wreg free
   661  0000F4  0100               	movlb	0	; () banked
   662  0000F6  5181               	movf	?___wmul& (0+255),w,b
   663  0000F8  2787               	addwf	??_main& (0+255),f,b
   664  0000FA  5182               	movf	(?___wmul+1)& (0+255),w,b
   665  0000FC  2388               	addwfc	(??_main+1)& (0+255),f,b
   666  0000FE  0ED0               	movlw	208
   667  000100  2565               	addwf	(_palabra+5)& (0+255),w,b
   668  000102  6F81               	movwf	___wmul@multiplier& (0+255),b
   669  000104  6B82               	clrf	(___wmul@multiplier+1)& (0+255),b
   670  000106  0EFF               	movlw	255
   671  000108  2382               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   672  00010A  0E00               	movlw	0
   673  00010C  6F84               	movwf	(___wmul@multiplicand+1)& (0+255),b
   674  00010E  0E64               	movlw	100
   675  000110  6F83               	movwf	___wmul@multiplicand& (0+255),b
   676  000112  EC32  F003         	call	___wmul	;wreg free
   677  000116  0100               	movlb	0	; () banked
   678  000118  5181               	movf	?___wmul& (0+255),w,b
   679  00011A  2787               	addwf	??_main& (0+255),f,b
   680  00011C  5182               	movf	(?___wmul+1)& (0+255),w,b
   681  00011E  2388               	addwfc	(??_main+1)& (0+255),f,b
   682  000120  0ED0               	movlw	208
   683  000122  2566               	addwf	(_palabra+6)& (0+255),w,b
   684  000124  6F81               	movwf	___wmul@multiplier& (0+255),b
   685  000126  6B82               	clrf	(___wmul@multiplier+1)& (0+255),b
   686  000128  0EFF               	movlw	255
   687  00012A  2382               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   688  00012C  0E00               	movlw	0
   689  00012E  6F84               	movwf	(___wmul@multiplicand+1)& (0+255),b
   690  000130  0E0A               	movlw	10
   691  000132  6F83               	movwf	___wmul@multiplicand& (0+255),b
   692  000134  EC32  F003         	call	___wmul	;wreg free
   693  000138  0100               	movlb	0	; () banked
   694  00013A  5181               	movf	?___wmul& (0+255),w,b
   695  00013C  2787               	addwf	??_main& (0+255),f,b
   696  00013E  5182               	movf	(?___wmul+1)& (0+255),w,b
   697  000140  2388               	addwfc	(??_main+1)& (0+255),f,b
   698  000142  0ED0               	movlw	208
   699  000144  2587               	addwf	??_main& (0+255),w,b
   700  000146  6E4E               	movwf	_length,c
   701  000148  0EFF               	movlw	255
   702  00014A  2188               	addwfc	(??_main+1)& (0+255),w,b
   703  00014C  6E4F               	movwf	_length+1,c
   704                           
   705                           ;main.c: 105: turns = ((palabra[8] - 48) * 1000) + ((palabra[9] - 48) * 100) + ((palabra
      +                          [10] - 48) * 10) + ((palabra[11] - 48));
   706  00014E  0ED0               	movlw	208
   707  000150  2568               	addwf	(_palabra+8)& (0+255),w,b
   708  000152  6F81               	movwf	___wmul@multiplier& (0+255),b
   709  000154  6B82               	clrf	(___wmul@multiplier+1)& (0+255),b
   710  000156  0EFF               	movlw	255
   711  000158  2382               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   712  00015A  0E03               	movlw	3
   713  00015C  6F84               	movwf	(___wmul@multiplicand+1)& (0+255),b
   714  00015E  0EE8               	movlw	232
   715  000160  6F83               	movwf	___wmul@multiplicand& (0+255),b
   716  000162  EC32  F003         	call	___wmul	;wreg free
   717  000166  0100               	movlb	0	; () banked
   718  000168  516B               	movf	(_palabra+11)& (0+255),w,b
   719  00016A  6F87               	movwf	??_main& (0+255),b
   720  00016C  6B88               	clrf	(??_main+1)& (0+255),b
   721  00016E  5181               	movf	?___wmul& (0+255),w,b
   722  000170  2787               	addwf	??_main& (0+255),f,b
   723  000172  5182               	movf	(?___wmul+1)& (0+255),w,b
   724  000174  2388               	addwfc	(??_main+1)& (0+255),f,b
   725  000176  0ED0               	movlw	208
   726  000178  2569               	addwf	(_palabra+9)& (0+255),w,b
   727  00017A  6F81               	movwf	___wmul@multiplier& (0+255),b
   728  00017C  6B82               	clrf	(___wmul@multiplier+1)& (0+255),b
   729  00017E  0EFF               	movlw	255
   730  000180  2382               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   731  000182  0E00               	movlw	0
   732  000184  6F84               	movwf	(___wmul@multiplicand+1)& (0+255),b
   733  000186  0E64               	movlw	100
   734  000188  6F83               	movwf	___wmul@multiplicand& (0+255),b
   735  00018A  EC32  F003         	call	___wmul	;wreg free
   736  00018E  0100               	movlb	0	; () banked
   737  000190  5181               	movf	?___wmul& (0+255),w,b
   738  000192  2787               	addwf	??_main& (0+255),f,b
   739  000194  5182               	movf	(?___wmul+1)& (0+255),w,b
   740  000196  2388               	addwfc	(??_main+1)& (0+255),f,b
   741  000198  0ED0               	movlw	208
   742  00019A  256A               	addwf	(_palabra+10)& (0+255),w,b
   743  00019C  6F81               	movwf	___wmul@multiplier& (0+255),b
   744  00019E  6B82               	clrf	(___wmul@multiplier+1)& (0+255),b
   745  0001A0  0EFF               	movlw	255
   746  0001A2  2382               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   747  0001A4  0E00               	movlw	0
   748  0001A6  6F84               	movwf	(___wmul@multiplicand+1)& (0+255),b
   749  0001A8  0E0A               	movlw	10
   750  0001AA  6F83               	movwf	___wmul@multiplicand& (0+255),b
   751  0001AC  EC32  F003         	call	___wmul	;wreg free
   752  0001B0  0100               	movlb	0	; () banked
   753  0001B2  5181               	movf	?___wmul& (0+255),w,b
   754  0001B4  2787               	addwf	??_main& (0+255),f,b
   755  0001B6  5182               	movf	(?___wmul+1)& (0+255),w,b
   756  0001B8  2388               	addwfc	(??_main+1)& (0+255),f,b
   757  0001BA  0ED0               	movlw	208
   758  0001BC  2587               	addwf	??_main& (0+255),w,b
   759  0001BE  6E50               	movwf	_turns,c
   760  0001C0  0EFF               	movlw	255
   761  0001C2  2188               	addwfc	(??_main+1)& (0+255),w,b
   762  0001C4  6E51               	movwf	_turns+1,c
   763                           
   764                           ; BSR set to: 0
   765                           ;main.c: 107: param_flag = 1;
   766  0001C6  0E01               	movlw	1
   767  0001C8  6E19               	movwf	_param_flag,c
   768                           
   769                           ;main.c: 108: } else if (palabra[0] == 'B') {
   770  0001CA  D727               	goto	l194
   771  0001CC                     l196:
   772                           
   773                           ; BSR set to: 0
   774                           
   775                           ; BSR set to: 0
   776  0001CC  0E42               	movlw	66
   777  0001CE  1960               	xorwf	_palabra& (0+255),w,b
   778  0001D0  A4D8               	btfss	status,2,c
   779  0001D2  D01B               	goto	l198
   780                           
   781                           ; BSR set to: 0
   782                           ;main.c: 110: PWM_duty = ((palabra[1] - 48) * 10) + ((palabra[2] - 48));
   783  0001D4  0ED0               	movlw	208
   784  0001D6  2561               	addwf	(_palabra+1)& (0+255),w,b
   785  0001D8  6F81               	movwf	___wmul@multiplier& (0+255),b
   786  0001DA  6B82               	clrf	(___wmul@multiplier+1)& (0+255),b
   787  0001DC  0EFF               	movlw	255
   788  0001DE  2382               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   789  0001E0  0E00               	movlw	0
   790  0001E2  6F84               	movwf	(___wmul@multiplicand+1)& (0+255),b
   791  0001E4  0E0A               	movlw	10
   792  0001E6  6F83               	movwf	___wmul@multiplicand& (0+255),b
   793  0001E8  EC32  F003         	call	___wmul	;wreg free
   794  0001EC  0100               	movlb	0	; () banked
   795  0001EE  5162               	movf	(_palabra+2)& (0+255),w,b
   796  0001F0  6F87               	movwf	??_main& (0+255),b
   797  0001F2  6B88               	clrf	(??_main+1)& (0+255),b
   798  0001F4  5181               	movf	?___wmul& (0+255),w,b
   799  0001F6  2787               	addwf	??_main& (0+255),f,b
   800  0001F8  5182               	movf	(?___wmul+1)& (0+255),w,b
   801  0001FA  2388               	addwfc	(??_main+1)& (0+255),f,b
   802  0001FC  0ED0               	movlw	208
   803  0001FE  2587               	addwf	??_main& (0+255),w,b
   804  000200  6E44               	movwf	_PWM_duty,c
   805  000202  0EFF               	movlw	255
   806  000204  2188               	addwfc	(??_main+1)& (0+255),w,b
   807  000206  6E45               	movwf	_PWM_duty+1,c
   808                           
   809                           ;main.c: 111: } else if ((palabra[0] == 'D') && (zero_flag)) {
   810  000208  D708               	goto	l194
   811  00020A                     l198:
   812                           
   813                           ; BSR set to: 0
   814                           
   815                           ; BSR set to: 0
   816  00020A  0E44               	movlw	68
   817  00020C  1960               	xorwf	_palabra& (0+255),w,b
   818  00020E  A4D8               	btfss	status,2,c
   819  000210  D025               	goto	l200
   820                           
   821                           ; BSR set to: 0
   822  000212  5052               	movf	_zero_flag,w,c
   823  000214  B4D8               	btfsc	status,2,c
   824  000216  D022               	goto	l200
   825                           
   826                           ; BSR set to: 0
   827                           ;main.c: 113: if (palabra[1] == '0') {
   828  000218  0E30               	movlw	48
   829  00021A  1961               	xorwf	(_palabra+1)& (0+255),w,b
   830  00021C  A4D8               	btfss	status,2,c
   831  00021E  D004               	goto	l201
   832                           
   833                           ; BSR set to: 0
   834                           ;main.c: 115: MOT_3 = 1;
   835  000220  0E01               	movlw	1
   836  000222  6E23               	movwf	_MOT_3,c
   837                           
   838                           ;main.c: 116: DIR_3 = 0;
   839  000224  0E00               	movlw	0
   840  000226  D007               	goto	L1
   841  000228                     l201:
   842                           
   843                           ; BSR set to: 0
   844                           
   845                           ; BSR set to: 0
   846  000228  0E31               	movlw	49
   847  00022A  1961               	xorwf	(_palabra+1)& (0+255),w,b
   848  00022C  A4D8               	btfss	status,2,c
   849  00022E  D005               	goto	l203
   850                           
   851                           ; BSR set to: 0
   852                           ;main.c: 119: MOT_3 = 1;
   853  000230  0E01               	movlw	1
   854  000232  6E23               	movwf	_MOT_3,c
   855                           
   856                           ;main.c: 120: DIR_3 = 1;
   857  000234  0E01               	movlw	1
   858  000236                     L1:
   859  000236  6E22               	movwf	_DIR_3,c
   860                           
   861                           ;main.c: 121: } else if (palabra[1] == '2') {
   862  000238  D6F0               	goto	l194
   863  00023A                     l203:
   864                           
   865                           ; BSR set to: 0
   866                           
   867                           ; BSR set to: 0
   868  00023A  0E32               	movlw	50
   869  00023C  1961               	xorwf	(_palabra+1)& (0+255),w,b
   870  00023E  B4D8               	btfsc	status,2,c
   871  000240  D033               	goto	u1660
   872                           
   873                           ; BSR set to: 0
   874                           
   875                           ; BSR set to: 0
   876                           
   877                           ;main.c: 124: } else if (palabra[1] == '3') {
   878                           
   879                           ; BSR set to: 0
   880                           ;main.c: 123: MOT_3 = 0;
   881  000242  0E33               	movlw	51
   882  000244  1961               	xorwf	(_palabra+1)& (0+255),w,b
   883  000246  A4D8               	btfss	status,2,c
   884  000248  D6E8               	goto	l194
   885                           
   886                           ; BSR set to: 0
   887                           ;main.c: 126: if ((MOT_3 == 0) && (param_flag)) {
   888  00024A  5023               	movf	_MOT_3,w,c
   889  00024C  A4D8               	btfss	status,2,c
   890  00024E  D6E5               	goto	l194
   891                           
   892                           ; BSR set to: 0
   893  000250  5019               	movf	_param_flag,w,c
   894  000252  B4D8               	btfsc	status,2,c
   895  000254  D6E2               	goto	l194
   896                           
   897                           ; BSR set to: 0
   898                           ;main.c: 128: zero_mark();
   899  000256  EC79  F003         	call	_zero_mark	;wreg free
   900                           
   901                           ;main.c: 129: }
   902                           ;main.c: 130: }
   903                           ;main.c: 133: } else if (palabra[0] == 'M') {
   904  00025A  D6DF               	goto	l194
   905  00025C                     l200:
   906  00025C  0E4D               	movlw	77
   907  00025E  0100               	movlb	0	; () banked
   908  000260  1960               	xorwf	_palabra& (0+255),w,b
   909  000262  A4D8               	btfss	status,2,c
   910  000264  D024               	goto	l210
   911                           
   912                           ; BSR set to: 0
   913                           ;main.c: 135: if (palabra[1] == '1') {
   914  000266  0E31               	movlw	49
   915  000268  1961               	xorwf	(_palabra+1)& (0+255),w,b
   916  00026A  A4D8               	btfss	status,2,c
   917  00026C  D008               	goto	l211
   918                           
   919                           ; BSR set to: 0
   920                           ;main.c: 136: MOT_1 = !MOT_1;
   921  00026E  5024               	movf	_MOT_1,w,c
   922  000270  A4D8               	btfss	status,2,c
   923  000272  D002               	goto	u1600
   924  000274  0E01               	movlw	1
   925  000276  D001               	goto	u1610
   926  000278                     u1600:
   927  000278  0E00               	movlw	0
   928  00027A                     u1610:
   929  00027A  6E24               	movwf	_MOT_1,c
   930                           
   931                           ;main.c: 137: } else if (palabra[1] == '2') {
   932  00027C  D6CE               	goto	l194
   933  00027E                     l211:
   934                           
   935                           ; BSR set to: 0
   936                           
   937                           ; BSR set to: 0
   938  00027E  0E32               	movlw	50
   939  000280  1961               	xorwf	(_palabra+1)& (0+255),w,b
   940  000282  A4D8               	btfss	status,2,c
   941  000284  D008               	goto	l213
   942                           
   943                           ; BSR set to: 0
   944                           ;main.c: 138: MOT_2 = !MOT_2;
   945  000286  5021               	movf	_MOT_2,w,c
   946  000288  A4D8               	btfss	status,2,c
   947  00028A  D002               	goto	u1630
   948  00028C  0E01               	movlw	1
   949  00028E  D001               	goto	u1640
   950  000290                     u1630:
   951  000290  0E00               	movlw	0
   952  000292                     u1640:
   953  000292  6E21               	movwf	_MOT_2,c
   954                           
   955                           ;main.c: 139: } else if (palabra[1] == '3') {
   956  000294  D6C2               	goto	l194
   957  000296                     l213:
   958                           
   959                           ; BSR set to: 0
   960                           
   961                           ; BSR set to: 0
   962  000296  0E33               	movlw	51
   963  000298  1961               	xorwf	(_palabra+1)& (0+255),w,b
   964  00029A  A4D8               	btfss	status,2,c
   965  00029C  D6BE               	goto	l194
   966                           
   967                           ; BSR set to: 0
   968                           ;main.c: 140: MOT_3 = !MOT_3;
   969  00029E  5023               	movf	_MOT_3,w,c
   970  0002A0  A4D8               	btfss	status,2,c
   971  0002A2  D002               	goto	u1660
   972  0002A4  0E01               	movlw	1
   973  0002A6  D001               	goto	u1670
   974  0002A8                     u1660:
   975  0002A8  0E00               	movlw	0
   976  0002AA                     u1670:
   977  0002AA  6E23               	movwf	_MOT_3,c
   978                           
   979                           ; BSR set to: 0
   980                           ;main.c: 141: }
   981                           ;main.c: 142: } else if (palabra[0] == 'N') {
   982                           
   983                           ; BSR set to: 0
   984                           
   985                           ; BSR set to: 0
   986  0002AC  D6B6               	goto	l194
   987  0002AE                     l210:
   988                           
   989                           ; BSR set to: 0
   990                           
   991                           ; BSR set to: 0
   992  0002AE  0E4E               	movlw	78
   993  0002B0  1960               	xorwf	_palabra& (0+255),w,b
   994  0002B2  A4D8               	btfss	status,2,c
   995  0002B4  D008               	goto	l217
   996                           
   997                           ; BSR set to: 0
   998                           ;main.c: 144: enable = !enable;
   999  0002B6  5017               	movf	_enable,w,c
  1000  0002B8  A4D8               	btfss	status,2,c
  1001  0002BA  D002               	goto	u1690
  1002  0002BC  0E01               	movlw	1
  1003  0002BE  D001               	goto	u1700
  1004  0002C0                     u1690:
  1005  0002C0  0E00               	movlw	0
  1006  0002C2                     u1700:
  1007  0002C2  6E17               	movwf	_enable,c
  1008                           
  1009                           ;main.c: 145: } else if (palabra[0] == 'W') {
  1010  0002C4  D6AA               	goto	l194
  1011  0002C6                     l217:
  1012                           
  1013                           ; BSR set to: 0
  1014                           
  1015                           ; BSR set to: 0
  1016  0002C6  0E57               	movlw	87
  1017  0002C8  1960               	xorwf	_palabra& (0+255),w,b
  1018  0002CA  A4D8               	btfss	status,2,c
  1019  0002CC  D6A6               	goto	l194
  1020                           
  1021                           ; BSR set to: 0
  1022                           ;main.c: 147: unwind();
  1023  0002CE  EC6B  F003         	call	_unwind	;wreg free
  1024                           
  1025                           ;main.c: 148: }
  1026                           ;main.c: 150: } else if (GODONE == 0) {
  1027  0002D2  D6A3               	goto	l194
  1028  0002D4                     l195:
  1029                           
  1030                           ; BSR set to: 0
  1031  0002D4  B2C2               	btfsc	4034,1,c	;volatile
  1032  0002D6  D6A1               	goto	l194
  1033                           
  1034                           ; BSR set to: 0
  1035                           ;main.c: 152: _delay((unsigned long)((4)*(8000000/4000.0)));
  1036  0002D8  0E0B               	movlw	11
  1037  0002DA  0100               	movlb	0	; () banked
  1038  0002DC  6F87               	movwf	??_main& (0+255),b
  1039  0002DE  0E62               	movlw	98
  1040  0002E0                     u1737:
  1041  0002E0  2EE8               	decfsz	wreg,f,c
  1042  0002E2  D7FE               	bra	u1737
  1043  0002E4  2F87               	decfsz	??_main& (0+255),f,b
  1044  0002E6  D7FC               	bra	u1737
  1045  0002E8  F000               	nop	
  1046                           
  1047                           ;main.c: 154: GODONE = 1;
  1048  0002EA  82C2               	bsf	4034,1,c	;volatile
  1049  0002EC  D696               	goto	l194
  1050  0002EE                     __end_of_main:
  1051                           	opt stack 0
  1052                           tblptru	equ	0xFF8
  1053                           tblptrh	equ	0xFF7
  1054                           tblptrl	equ	0xFF6
  1055                           tablat	equ	0xFF5
  1056                           postinc0	equ	0xFEE
  1057                           wreg	equ	0xFE8
  1058                           postdec1	equ	0xFE5
  1059                           fsr1l	equ	0xFE1
  1060                           status	equ	0xFD8
  1061                           
  1062 ;; *************** function _zero_mark *****************
  1063 ;; Defined at:
  1064 ;;		line 179 in file "main.c"
  1065 ;; Parameters:    Size  Location     Type
  1066 ;;		None
  1067 ;; Auto vars:     Size  Location     Type
  1068 ;;		None
  1069 ;; Return value:  Size  Location     Type
  1070 ;;                  1    wreg      void 
  1071 ;; Registers used:
  1072 ;;		wreg, status,2
  1073 ;; Tracked objects:
  1074 ;;		On entry : 0/0
  1075 ;;		On exit  : 0/0
  1076 ;;		Unchanged: 0/0
  1077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1078 ;;      Params:         0       0       0       0       0       0       0       0       0
  1079 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1080 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1081 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1082 ;;Total ram usage:        0 bytes
  1083 ;; Hardware stack levels used:    1
  1084 ;; Hardware stack levels required when called:    3
  1085 ;; This function calls:
  1086 ;;		Nothing
  1087 ;; This function is called by:
  1088 ;;		_main
  1089 ;; This function uses a non-reentrant model
  1090 ;;
  1091                           
  1092                           	psect	text1
  1093  0006F2                     __ptext1:
  1094                           	opt stack 0
  1095  0006F2                     _zero_mark:
  1096                           	opt stack 27
  1097                           
  1098                           ;main.c: 181: DIR_3 = 1;
  1099                           
  1100                           ;incstack = 0
  1101  0006F2  0E01               	movlw	1
  1102  0006F4  6E22               	movwf	_DIR_3,c
  1103                           
  1104                           ;main.c: 182: T1CONbits.TMR1ON = 0;
  1105  0006F6  90CD               	bcf	4045,0,c	;volatile
  1106                           
  1107                           ;main.c: 183: T0CONbits.TMR0ON = 1;
  1108  0006F8  8ED5               	bsf	4053,7,c	;volatile
  1109                           
  1110                           ;main.c: 184: zero_flag = 0;
  1111  0006FA  0E00               	movlw	0
  1112  0006FC  6E52               	movwf	_zero_flag,c
  1113                           
  1114                           ;main.c: 185: winding = 1;
  1115  0006FE  0E01               	movlw	1
  1116  000700  6E20               	movwf	_winding,c
  1117                           
  1118                           ;main.c: 186: MOT_1 = 1;
  1119  000702  0E01               	movlw	1
  1120  000704  6E24               	movwf	_MOT_1,c
  1121                           
  1122                           ;main.c: 187: MOT_3 = 1;
  1123  000706  0E01               	movlw	1
  1124  000708  6E23               	movwf	_MOT_3,c
  1125  00070A  0012               	return		;funcret
  1126  00070C                     __end_of_zero_mark:
  1127                           	opt stack 0
  1128                           tblptru	equ	0xFF8
  1129                           tblptrh	equ	0xFF7
  1130                           tblptrl	equ	0xFF6
  1131                           tablat	equ	0xFF5
  1132                           postinc0	equ	0xFEE
  1133                           wreg	equ	0xFE8
  1134                           postdec1	equ	0xFE5
  1135                           fsr1l	equ	0xFE1
  1136                           status	equ	0xFD8
  1137                           
  1138 ;; *************** function _unwind *****************
  1139 ;; Defined at:
  1140 ;;		line 194 in file "main.c"
  1141 ;; Parameters:    Size  Location     Type
  1142 ;;		None
  1143 ;; Auto vars:     Size  Location     Type
  1144 ;;		None
  1145 ;; Return value:  Size  Location     Type
  1146 ;;                  1    wreg      void 
  1147 ;; Registers used:
  1148 ;;		wreg, status,2
  1149 ;; Tracked objects:
  1150 ;;		On entry : 0/0
  1151 ;;		On exit  : 0/0
  1152 ;;		Unchanged: 0/0
  1153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1154 ;;      Params:         0       0       0       0       0       0       0       0       0
  1155 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1156 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1157 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1158 ;;Total ram usage:        0 bytes
  1159 ;; Hardware stack levels used:    1
  1160 ;; Hardware stack levels required when called:    3
  1161 ;; This function calls:
  1162 ;;		Nothing
  1163 ;; This function is called by:
  1164 ;;		_main
  1165 ;; This function uses a non-reentrant model
  1166 ;;
  1167                           
  1168                           	psect	text2
  1169  0006D6                     __ptext2:
  1170                           	opt stack 0
  1171  0006D6                     _unwind:
  1172                           	opt stack 27
  1173                           
  1174                           ;main.c: 196: enable = !enable;
  1175                           
  1176                           ;incstack = 0
  1177  0006D6  5017               	movf	_enable,w,c
  1178  0006D8  A4D8               	btfss	status,2,c
  1179  0006DA  D002               	goto	u1380
  1180  0006DC  0E01               	movlw	1
  1181  0006DE  D001               	goto	u1390
  1182  0006E0                     u1380:
  1183  0006E0  0E00               	movlw	0
  1184  0006E2                     u1390:
  1185  0006E2  6E17               	movwf	_enable,c
  1186                           
  1187                           ;main.c: 197: T1CONbits.TMR1ON = 1;
  1188  0006E4  80CD               	bsf	4045,0,c	;volatile
  1189                           
  1190                           ;main.c: 198: T0CONbits.TMR0ON = 0;
  1191  0006E6  9ED5               	bcf	4053,7,c	;volatile
  1192                           
  1193                           ;main.c: 199: MOT_3 = 0;
  1194  0006E8  0E00               	movlw	0
  1195  0006EA  6E23               	movwf	_MOT_3,c
  1196                           
  1197                           ;main.c: 200: MOT_2 = 1;
  1198  0006EC  0E01               	movlw	1
  1199  0006EE  6E21               	movwf	_MOT_2,c
  1200  0006F0  0012               	return		;funcret
  1201  0006F2                     __end_of_unwind:
  1202                           	opt stack 0
  1203                           tblptru	equ	0xFF8
  1204                           tblptrh	equ	0xFF7
  1205                           tblptrl	equ	0xFF6
  1206                           tablat	equ	0xFF5
  1207                           postinc0	equ	0xFEE
  1208                           wreg	equ	0xFE8
  1209                           postdec1	equ	0xFE5
  1210                           fsr1l	equ	0xFE1
  1211                           status	equ	0xFD8
  1212                           
  1213 ;; *************** function ___wmul *****************
  1214 ;; Defined at:
  1215 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
  1216 ;; Parameters:    Size  Location     Type
  1217 ;;  multiplier      2    0[BANK0 ] unsigned int 
  1218 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  1219 ;; Auto vars:     Size  Location     Type
  1220 ;;  product         2    4[BANK0 ] unsigned int 
  1221 ;; Return value:  Size  Location     Type
  1222 ;;                  2    0[BANK0 ] unsigned int 
  1223 ;; Registers used:
  1224 ;;		wreg, status,2, status,0, prodl, prodh
  1225 ;; Tracked objects:
  1226 ;;		On entry : 0/0
  1227 ;;		On exit  : 0/0
  1228 ;;		Unchanged: 0/0
  1229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1230 ;;      Params:         0       4       0       0       0       0       0       0       0
  1231 ;;      Locals:         0       2       0       0       0       0       0       0       0
  1232 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1233 ;;      Totals:         0       6       0       0       0       0       0       0       0
  1234 ;;Total ram usage:        6 bytes
  1235 ;; Hardware stack levels used:    1
  1236 ;; Hardware stack levels required when called:    3
  1237 ;; This function calls:
  1238 ;;		Nothing
  1239 ;; This function is called by:
  1240 ;;		_main
  1241 ;; This function uses a non-reentrant model
  1242 ;;
  1243                           
  1244                           	psect	text3
  1245  000664                     __ptext3:
  1246                           	opt stack 0
  1247  000664                     ___wmul:
  1248                           	opt stack 27
  1249                           
  1250                           ;incstack = 0
  1251  000664  0100               	movlb	0	; () banked
  1252  000666  5181               	movf	___wmul@multiplier& (0+255),w,b
  1253  000668  0383               	mulwf	___wmul@multiplicand& (0+255),b
  1254  00066A  CFF3 F085          	movff	prodl,___wmul@product
  1255  00066E  CFF4 F086          	movff	prodh,___wmul@product+1
  1256  000672  5181               	movf	___wmul@multiplier& (0+255),w,b
  1257  000674  0384               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  1258  000676  50F3               	movf	prodl,w,c
  1259  000678  2786               	addwf	(___wmul@product+1)& (0+255),f,b
  1260  00067A  5182               	movf	(___wmul@multiplier+1)& (0+255),w,b
  1261  00067C  0383               	mulwf	___wmul@multiplicand& (0+255),b
  1262  00067E  50F3               	movf	prodl,w,c
  1263  000680  2786               	addwf	(___wmul@product+1)& (0+255),f,b
  1264                           
  1265                           ; BSR set to: 0
  1266  000682  C085  F081         	movff	___wmul@product,?___wmul
  1267  000686  C086  F082         	movff	___wmul@product+1,?___wmul+1
  1268  00068A  0012               	return	
  1269  00068C                     __end_of___wmul:
  1270                           	opt stack 0
  1271                           tblptru	equ	0xFF8
  1272                           tblptrh	equ	0xFF7
  1273                           tblptrl	equ	0xFF6
  1274                           tablat	equ	0xFF5
  1275                           prodh	equ	0xFF4
  1276                           prodl	equ	0xFF3
  1277                           postinc0	equ	0xFEE
  1278                           wreg	equ	0xFE8
  1279                           postdec1	equ	0xFE5
  1280                           fsr1l	equ	0xFE1
  1281                           status	equ	0xFD8
  1282                           
  1283 ;; *************** function _InitApp *****************
  1284 ;; Defined at:
  1285 ;;		line 33 in file "user.c"
  1286 ;; Parameters:    Size  Location     Type
  1287 ;;		None
  1288 ;; Auto vars:     Size  Location     Type
  1289 ;;		None
  1290 ;; Return value:  Size  Location     Type
  1291 ;;                  1    wreg      void 
  1292 ;; Registers used:
  1293 ;;		wreg, status,2
  1294 ;; Tracked objects:
  1295 ;;		On entry : 0/0
  1296 ;;		On exit  : 0/0
  1297 ;;		Unchanged: 0/0
  1298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1299 ;;      Params:         0       0       0       0       0       0       0       0       0
  1300 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1301 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1302 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1303 ;;Total ram usage:        0 bytes
  1304 ;; Hardware stack levels used:    1
  1305 ;; Hardware stack levels required when called:    3
  1306 ;; This function calls:
  1307 ;;		Nothing
  1308 ;; This function is called by:
  1309 ;;		_main
  1310 ;; This function uses a non-reentrant model
  1311 ;;
  1312                           
  1313                           	psect	text4
  1314  00054E                     __ptext4:
  1315                           	opt stack 0
  1316  00054E                     _InitApp:
  1317                           	opt stack 27
  1318                           
  1319                           ;user.c: 35: PORTA = 0;
  1320                           
  1321                           ; BSR set to: 0
  1322                           ;incstack = 0
  1323  00054E  0E00               	movlw	0
  1324  000550  6E80               	movwf	3968,c	;volatile
  1325                           
  1326                           ;user.c: 36: LATA = 0;
  1327  000552  0E00               	movlw	0
  1328  000554  6E89               	movwf	3977,c	;volatile
  1329                           
  1330                           ;user.c: 37: PORTB = 0;
  1331  000556  0E00               	movlw	0
  1332  000558  6E81               	movwf	3969,c	;volatile
  1333                           
  1334                           ;user.c: 38: LATB = 0;
  1335  00055A  0E00               	movlw	0
  1336  00055C  6E8A               	movwf	3978,c	;volatile
  1337                           
  1338                           ;user.c: 39: PORTC = 0;
  1339  00055E  0E00               	movlw	0
  1340  000560  6E82               	movwf	3970,c	;volatile
  1341                           
  1342                           ;user.c: 40: LATC = 0;
  1343  000562  0E00               	movlw	0
  1344  000564  6E8B               	movwf	3979,c	;volatile
  1345                           
  1346                           ;user.c: 42: ADCON1 = 0b1101;
  1347  000566  0E0D               	movlw	13
  1348  000568  6EC1               	movwf	4033,c	;volatile
  1349                           
  1350                           ;user.c: 43: TRISAbits.TRISA0 = 1;
  1351  00056A  8092               	bsf	3986,0,c	;volatile
  1352                           
  1353                           ;user.c: 44: ADCON0bits.CHS = 0;
  1354  00056C  94C2               	bcf	4034,2,c	;volatile
  1355  00056E  96C2               	bcf	4034,3,c	;volatile
  1356  000570  98C2               	bcf	4034,4,c	;volatile
  1357  000572  9AC2               	bcf	4034,5,c	;volatile
  1358                           
  1359                           ;user.c: 45: ADCON2 = 0b10101100;
  1360  000574  0EAC               	movlw	172
  1361  000576  6EC0               	movwf	4032,c	;volatile
  1362                           
  1363                           ;user.c: 46: PIE1bits.ADIE = 1;
  1364  000578  8C9D               	bsf	3997,6,c	;volatile
  1365                           
  1366                           ;user.c: 47: PIR1bits.ADIF = 0;
  1367  00057A  9C9E               	bcf	3998,6,c	;volatile
  1368                           
  1369                           ;user.c: 48: ADCON0bits.ADON = 1;
  1370  00057C  80C2               	bsf	4034,0,c	;volatile
  1371                           
  1372                           ;user.c: 50: TRISAbits.RA2 = 0;
  1373  00057E  9492               	bcf	3986,2,c	;volatile
  1374                           
  1375                           ;user.c: 51: TRISAbits.RA3 = 0;
  1376  000580  9692               	bcf	3986,3,c	;volatile
  1377                           
  1378                           ;user.c: 52: TRISAbits.RA4 = 0;
  1379  000582  9892               	bcf	3986,4,c	;volatile
  1380                           
  1381                           ;user.c: 53: TRISAbits.RA5 = 0;
  1382  000584  9A92               	bcf	3986,5,c	;volatile
  1383                           
  1384                           ;user.c: 54: TRISCbits.RC0 = 0;
  1385  000586  9094               	bcf	3988,0,c	;volatile
  1386                           
  1387                           ;user.c: 55: TRISCbits.RC1 = 0;
  1388  000588  9294               	bcf	3988,1,c	;volatile
  1389                           
  1390                           ;user.c: 56: TRISBbits.RB7 = 0;
  1391  00058A  9E93               	bcf	3987,7,c	;volatile
  1392                           
  1393                           ;user.c: 57: TRISBbits.RB6 = 0;
  1394  00058C  9C93               	bcf	3987,6,c	;volatile
  1395                           
  1396                           ;user.c: 58: TRISCbits.RC2 = 0;
  1397  00058E  9494               	bcf	3988,2,c	;volatile
  1398                           
  1399                           ;user.c: 59: TRISBbits.RB4 = 0;
  1400  000590  9893               	bcf	3987,4,c	;volatile
  1401                           
  1402                           ;user.c: 60: TRISBbits.RB5 = 0;
  1403  000592  9A93               	bcf	3987,5,c	;volatile
  1404                           
  1405                           ;user.c: 62: RCONbits.IPEN = 0;
  1406  000594  9ED0               	bcf	4048,7,c	;volatile
  1407                           
  1408                           ;user.c: 64: INTCONbits.GIE = 1;
  1409  000596  8EF2               	bsf	intcon,7,c	;volatile
  1410                           
  1411                           ;user.c: 65: INTCONbits.PEIE = 1;
  1412  000598  8CF2               	bsf	intcon,6,c	;volatile
  1413                           
  1414                           ;user.c: 66: INTCONbits.TMR0IE = 1;
  1415  00059A  8AF2               	bsf	intcon,5,c	;volatile
  1416                           
  1417                           ;user.c: 67: INTCONbits.TMR0IF = 0;
  1418  00059C  94F2               	bcf	intcon,2,c	;volatile
  1419                           
  1420                           ;user.c: 68: INTCON2bits.TMR0IP = 1;
  1421  00059E  84F1               	bsf	intcon2,2,c	;volatile
  1422                           
  1423                           ;user.c: 69: T0CONbits.T08BIT = 1;
  1424  0005A0  8CD5               	bsf	4053,6,c	;volatile
  1425                           
  1426                           ;user.c: 70: T0CONbits.T0CS = 0;
  1427  0005A2  9AD5               	bcf	4053,5,c	;volatile
  1428                           
  1429                           ;user.c: 71: T0CONbits.PSA = 0;
  1430  0005A4  96D5               	bcf	4053,3,c	;volatile
  1431                           
  1432                           ;user.c: 72: T0CONbits.T0PS = 0b101;
  1433  0005A6  50D5               	movf	4053,w,c	;volatile
  1434  0005A8  0BF8               	andlw	-8
  1435  0005AA  0905               	iorlw	5
  1436  0005AC  6ED5               	movwf	4053,c	;volatile
  1437                           
  1438                           ;user.c: 73: T0CONbits.TMR0ON = 0;
  1439  0005AE  9ED5               	bcf	4053,7,c	;volatile
  1440                           
  1441                           ;user.c: 74: TMR0 = 0x6;
  1442  0005B0  0E00               	movlw	0
  1443  0005B2  6ED7               	movwf	4055,c	;volatile
  1444  0005B4  0E06               	movlw	6
  1445  0005B6  6ED6               	movwf	4054,c	;volatile
  1446                           
  1447                           ;user.c: 76: PIE1bits.TMR1IE = 1;
  1448  0005B8  809D               	bsf	3997,0,c	;volatile
  1449                           
  1450                           ;user.c: 77: PIR1bits.TMR1IF = 0;
  1451  0005BA  909E               	bcf	3998,0,c	;volatile
  1452                           
  1453                           ;user.c: 78: IPR1bits.TMR1IP = 1;
  1454  0005BC  809F               	bsf	3999,0,c	;volatile
  1455                           
  1456                           ;user.c: 79: T1CONbits.TMR1CS = 0;
  1457  0005BE  92CD               	bcf	4045,1,c	;volatile
  1458                           
  1459                           ;user.c: 80: T1CONbits.T1CKPS = 0b00;
  1460  0005C0  0ECF               	movlw	-49
  1461  0005C2  16CD               	andwf	4045,f,c	;volatile
  1462                           
  1463                           ;user.c: 81: T1CONbits.TMR1ON = 1;
  1464  0005C4  80CD               	bsf	4045,0,c	;volatile
  1465                           
  1466                           ;user.c: 85: TRISBbits.RB1 = 1;
  1467  0005C6  8293               	bsf	3987,1,c	;volatile
  1468                           
  1469                           ;user.c: 86: TRISBbits.RB2 = 1;
  1470  0005C8  8493               	bsf	3987,2,c	;volatile
  1471                           
  1472                           ;user.c: 87: INTCON3bits.INT1IE = 1;
  1473  0005CA  86F0               	bsf	intcon3,3,c	;volatile
  1474                           
  1475                           ;user.c: 88: INTCON3bits.INT2IE = 1;
  1476  0005CC  88F0               	bsf	intcon3,4,c	;volatile
  1477                           
  1478                           ;user.c: 89: INTCON3bits.INT1IF = 0;
  1479  0005CE  90F0               	bcf	intcon3,0,c	;volatile
  1480                           
  1481                           ;user.c: 90: INTCON3bits.INT2IF = 0;
  1482  0005D0  92F0               	bcf	intcon3,1,c	;volatile
  1483                           
  1484                           ;user.c: 91: INTCON2bits.INTEDG1 = 0;
  1485  0005D2  9AF1               	bcf	intcon2,5,c	;volatile
  1486                           
  1487                           ;user.c: 92: INTCON2bits.INTEDG2 = 0;
  1488  0005D4  98F1               	bcf	intcon2,4,c	;volatile
  1489                           
  1490                           ;user.c: 94: TRISCbits.RC6 = 0;
  1491  0005D6  9C94               	bcf	3988,6,c	;volatile
  1492                           
  1493                           ;user.c: 95: TRISCbits.RC7 = 1;
  1494  0005D8  8E94               	bsf	3988,7,c	;volatile
  1495                           
  1496                           ;user.c: 96: BRGH = 1;
  1497  0005DA  84AC               	bsf	4012,2,c	;volatile
  1498                           
  1499                           ;user.c: 97: BRG16 = 1;
  1500  0005DC  86B8               	bsf	4024,3,c	;volatile
  1501                           
  1502                           ;user.c: 98: SPBRG = 207;
  1503  0005DE  0ECF               	movlw	207
  1504  0005E0  6EAF               	movwf	4015,c	;volatile
  1505                           
  1506                           ;user.c: 99: SPEN = 1;
  1507  0005E2  8EAB               	bsf	4011,7,c	;volatile
  1508                           
  1509                           ;user.c: 100: SYNC = 0;
  1510  0005E4  98AC               	bcf	4012,4,c	;volatile
  1511                           
  1512                           ;user.c: 101: TXEN = 1;
  1513  0005E6  8AAC               	bsf	4012,5,c	;volatile
  1514                           
  1515                           ;user.c: 102: CREN = 1;
  1516  0005E8  88AB               	bsf	4011,4,c	;volatile
  1517                           
  1518                           ;user.c: 103: TX9 = 0;
  1519  0005EA  9CAC               	bcf	4012,6,c	;volatile
  1520                           
  1521                           ;user.c: 104: RX9 = 0;
  1522  0005EC  9CAB               	bcf	4011,6,c	;volatile
  1523                           
  1524                           ;user.c: 105: RCIE = 1;
  1525  0005EE  8A9D               	bsf	3997,5,c	;volatile
  1526                           
  1527                           ;user.c: 106: TXIE = 0;
  1528  0005F0  989D               	bcf	3997,4,c	;volatile
  1529                           
  1530                           ;user.c: 108: PR2 = 99;
  1531  0005F2  0E63               	movlw	99
  1532  0005F4  6ECB               	movwf	4043,c	;volatile
  1533                           
  1534                           ;user.c: 109: CCP1CONbits.DC1B = 0;
  1535  0005F6  0ECF               	movlw	-49
  1536  0005F8  16BD               	andwf	4029,f,c	;volatile
  1537                           
  1538                           ;user.c: 110: T2CONbits.T2CKPS = 0b00;
  1539  0005FA  0EFC               	movlw	-4
  1540  0005FC  16CA               	andwf	4042,f,c	;volatile
  1541                           
  1542                           ;user.c: 111: T2CONbits.TMR2ON = 1;
  1543  0005FE  84CA               	bsf	4042,2,c	;volatile
  1544                           
  1545                           ;user.c: 112: CCP1CONbits.CCP1M = 0b1111;
  1546  000600  80BD               	bsf	4029,0,c	;volatile
  1547  000602  82BD               	bsf	4029,1,c	;volatile
  1548  000604  84BD               	bsf	4029,2,c	;volatile
  1549  000606  86BD               	bsf	4029,3,c	;volatile
  1550  000608  0012               	return		;funcret
  1551  00060A                     __end_of_InitApp:
  1552                           	opt stack 0
  1553                           tblptru	equ	0xFF8
  1554                           tblptrh	equ	0xFF7
  1555                           tblptrl	equ	0xFF6
  1556                           tablat	equ	0xFF5
  1557                           prodh	equ	0xFF4
  1558                           prodl	equ	0xFF3
  1559                           intcon	equ	0xFF2
  1560                           intcon2	equ	0xFF1
  1561                           intcon3	equ	0xFF0
  1562                           postinc0	equ	0xFEE
  1563                           wreg	equ	0xFE8
  1564                           postdec1	equ	0xFE5
  1565                           fsr1l	equ	0xFE1
  1566                           status	equ	0xFD8
  1567                           
  1568 ;; *************** function _ConfigureOscillator *****************
  1569 ;; Defined at:
  1570 ;;		line 24 in file "system.c"
  1571 ;; Parameters:    Size  Location     Type
  1572 ;;		None
  1573 ;; Auto vars:     Size  Location     Type
  1574 ;;		None
  1575 ;; Return value:  Size  Location     Type
  1576 ;;                  1    wreg      void 
  1577 ;; Registers used:
  1578 ;;		wreg, status,2
  1579 ;; Tracked objects:
  1580 ;;		On entry : 0/0
  1581 ;;		On exit  : 0/0
  1582 ;;		Unchanged: 0/0
  1583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1584 ;;      Params:         0       0       0       0       0       0       0       0       0
  1585 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1586 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1587 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1588 ;;Total ram usage:        0 bytes
  1589 ;; Hardware stack levels used:    1
  1590 ;; Hardware stack levels required when called:    3
  1591 ;; This function calls:
  1592 ;;		Nothing
  1593 ;; This function is called by:
  1594 ;;		_main
  1595 ;; This function uses a non-reentrant model
  1596 ;;
  1597                           
  1598                           	psect	text5
  1599  000732                     __ptext5:
  1600                           	opt stack 0
  1601  000732                     _ConfigureOscillator:
  1602                           	opt stack 27
  1603                           
  1604                           ;system.c: 27: OSCCONbits.IRCF = 0b111;
  1605                           
  1606                           ;incstack = 0
  1607  000732  88D3               	bsf	4051,4,c	;volatile
  1608  000734  8AD3               	bsf	4051,5,c	;volatile
  1609  000736  8CD3               	bsf	4051,6,c	;volatile
  1610                           
  1611                           ;system.c: 28: OSCCONbits.SCS = 0b11;
  1612  000738  0E03               	movlw	3
  1613  00073A  12D3               	iorwf	4051,f,c	;volatile
  1614  00073C  0012               	return		;funcret
  1615  00073E                     __end_of_ConfigureOscillator:
  1616                           	opt stack 0
  1617                           tblptru	equ	0xFF8
  1618                           tblptrh	equ	0xFF7
  1619                           tblptrl	equ	0xFF6
  1620                           tablat	equ	0xFF5
  1621                           prodh	equ	0xFF4
  1622                           prodl	equ	0xFF3
  1623                           intcon	equ	0xFF2
  1624                           intcon2	equ	0xFF1
  1625                           intcon3	equ	0xFF0
  1626                           postinc0	equ	0xFEE
  1627                           wreg	equ	0xFE8
  1628                           postdec1	equ	0xFE5
  1629                           fsr1l	equ	0xFE1
  1630                           status	equ	0xFD8
  1631                           
  1632 ;; *************** function _high_isr *****************
  1633 ;; Defined at:
  1634 ;;		line 66 in file "interrupts.c"
  1635 ;; Parameters:    Size  Location     Type
  1636 ;;		None
  1637 ;; Auto vars:     Size  Location     Type
  1638 ;;		None
  1639 ;; Return value:  Size  Location     Type
  1640 ;;                  1    wreg      void 
  1641 ;; Registers used:
  1642 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1643 ;; Tracked objects:
  1644 ;;		On entry : 0/0
  1645 ;;		On exit  : 0/0
  1646 ;;		Unchanged: 0/0
  1647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1648 ;;      Params:         0       0       0       0       0       0       0       0       0
  1649 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1650 ;;      Temps:         19       0       0       0       0       0       0       0       0
  1651 ;;      Totals:        19       0       0       0       0       0       0       0       0
  1652 ;;Total ram usage:       19 bytes
  1653 ;; Hardware stack levels used:    1
  1654 ;; Hardware stack levels required when called:    2
  1655 ;; This function calls:
  1656 ;;		_finish
  1657 ;;		_mot_3_step_count
  1658 ;; This function is called by:
  1659 ;;		Interrupt level 2
  1660 ;; This function uses a non-reentrant model
  1661 ;;
  1662                           
  1663                           	psect	intcode
  1664  000008                     __pintcode:
  1665                           	opt stack 0
  1666  000008                     _high_isr:
  1667                           	opt stack 27
  1668                           
  1669                           ;incstack = 0
  1670  000008  8253               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  1671  00000A  ED77  F001         	call	int_func,f	;refresh shadow registers
  1672                           tblptru	equ	0xFF8
  1673                           tblptrh	equ	0xFF7
  1674                           tblptrl	equ	0xFF6
  1675                           tablat	equ	0xFF5
  1676                           prodh	equ	0xFF4
  1677                           prodl	equ	0xFF3
  1678                           intcon	equ	0xFF2
  1679                           intcon2	equ	0xFF1
  1680                           intcon3	equ	0xFF0
  1681                           postinc0	equ	0xFEE
  1682                           wreg	equ	0xFE8
  1683                           postdec1	equ	0xFE5
  1684                           fsr1l	equ	0xFE1
  1685                           status	equ	0xFD8
  1686                           
  1687                           	psect	intcode_body
  1688  0002EE                     __pintcode_body:
  1689                           	opt stack 27
  1690  0002EE                     int_func:
  1691                           	opt stack 27
  1692  0002EE  0006               	pop		; remove dummy address from shadow register refresh
  1693  0002F0  CFFA F032          	movff	pclath,??_high_isr+1
  1694  0002F4  CFFB F033          	movff	pclatu,??_high_isr+2
  1695  0002F8  CFE9 F034          	movff	fsr0l,??_high_isr+3
  1696  0002FC  CFEA F035          	movff	fsr0h,??_high_isr+4
  1697  000300  CFE1 F036          	movff	fsr1l,??_high_isr+5
  1698  000304  CFE2 F037          	movff	fsr1h,??_high_isr+6
  1699  000308  CFD9 F038          	movff	fsr2l,??_high_isr+7
  1700  00030C  CFDA F039          	movff	fsr2h,??_high_isr+8
  1701  000310  CFF3 F03A          	movff	prodl,??_high_isr+9
  1702  000314  CFF4 F03B          	movff	prodh,??_high_isr+10
  1703  000318  CFF6 F03C          	movff	tblptrl,??_high_isr+11
  1704  00031C  CFF7 F03D          	movff	tblptrh,??_high_isr+12
  1705  000320  CFF8 F03E          	movff	tblptru,??_high_isr+13
  1706  000324  CFF5 F03F          	movff	tablat,??_high_isr+14
  1707  000328  C053  F040         	movff	btemp,??_high_isr+15
  1708  00032C  C054  F041         	movff	btemp+1,??_high_isr+16
  1709  000330  C055  F042         	movff	btemp+2,??_high_isr+17
  1710  000334  C056  F043         	movff	btemp+3,??_high_isr+18
  1711                           
  1712                           ;interrupts.c: 67: if (INTCONbits.TMR0IF) {
  1713  000338  A4F2               	btfss	intcon,2,c	;volatile
  1714  00033A  D077               	goto	i2l87
  1715                           
  1716                           ;interrupts.c: 69: INTCONbits.TMR0IF = 0;
  1717  00033C  94F2               	bcf	intcon,2,c	;volatile
  1718                           
  1719                           ;interrupts.c: 70: TMR0 = 250;
  1720  00033E  0E00               	movlw	0
  1721  000340  6ED7               	movwf	4055,c	;volatile
  1722  000342  0EFA               	movlw	250
  1723  000344  6ED6               	movwf	4054,c	;volatile
  1724                           
  1725                           ;interrupts.c: 71: MOT_1_count++;
  1726  000346  4A0F               	infsnz	_MOT_1_count,f,c
  1727  000348  2A10               	incf	_MOT_1_count+1,f,c
  1728                           
  1729                           ;interrupts.c: 72: MOT_2_count++;
  1730  00034A  4A0D               	infsnz	_MOT_2_count,f,c
  1731  00034C  2A0E               	incf	_MOT_2_count+1,f,c
  1732                           
  1733                           ;interrupts.c: 73: MOT_3_count++;
  1734  00034E  4A0B               	infsnz	_MOT_3_count,f,c
  1735  000350  2A0C               	incf	_MOT_3_count+1,f,c
  1736                           
  1737                           ;interrupts.c: 74: MOT_4_count++;
  1738  000352  4A09               	infsnz	_MOT_4_count,f,c
  1739  000354  2A0A               	incf	_MOT_4_count+1,f,c
  1740                           
  1741                           ;interrupts.c: 76: if (MOT_1) {
  1742  000356  5024               	movf	_MOT_1,w,c
  1743  000358  B4D8               	btfsc	status,2,c
  1744  00035A  D02E               	goto	i2l91
  1745                           
  1746                           ;interrupts.c: 78: if (MOT_1_count == count_1) {
  1747  00035C  504C               	movf	_count_1,w,c
  1748  00035E  180F               	xorwf	_MOT_1_count,w,c
  1749  000360  E12B               	bnz	i2l1462
  1750  000362  504D               	movf	_count_1+1,w,c
  1751  000364  1810               	xorwf	_MOT_1_count+1,w,c
  1752  000366  A4D8               	btfss	status,2,c
  1753  000368  D027               	goto	i2l91
  1754                           
  1755                           ;interrupts.c: 79: MOT_1_count = 0;
  1756  00036A  0E00               	movlw	0
  1757  00036C  6E10               	movwf	_MOT_1_count+1,c
  1758  00036E  0E00               	movlw	0
  1759  000370  6E0F               	movwf	_MOT_1_count,c
  1760                           
  1761                           ;interrupts.c: 80: LATAbits.LA3 = !PORTAbits.RA3;
  1762  000372  B680               	btfsc	3968,3,c	;volatile
  1763  000374  D003               	goto	i2u75_40
  1764  000376  6A31               	clrf	??_high_isr& (0+255),c
  1765  000378  2A31               	incf	??_high_isr& (0+255),f,c
  1766  00037A  D001               	goto	i2u76_48
  1767  00037C                     i2u75_40:
  1768  00037C  6A31               	clrf	??_high_isr& (0+255),c
  1769  00037E                     i2u76_48:
  1770  00037E  4631               	rlncf	??_high_isr,f,c
  1771  000380  4631               	rlncf	??_high_isr,f,c
  1772  000382  4631               	rlncf	??_high_isr,f,c
  1773  000384  5089               	movf	3977,w,c	;volatile
  1774  000386  1831               	xorwf	??_high_isr,w,c
  1775  000388  0BF7               	andlw	-9
  1776  00038A  1831               	xorwf	??_high_isr,w,c
  1777  00038C  6E89               	movwf	3977,c	;volatile
  1778                           
  1779                           ;interrupts.c: 81: mot_1_steps++;
  1780  00038E  4A07               	infsnz	_mot_1_steps,f,c
  1781  000390  2A08               	incf	_mot_1_steps+1,f,c
  1782                           
  1783                           ;interrupts.c: 82: if (mot_1_steps == 200) {
  1784  000392  0EC8               	movlw	200
  1785  000394  1807               	xorwf	_mot_1_steps,w,c
  1786  000396  1008               	iorwf	_mot_1_steps+1,w,c
  1787  000398  A4D8               	btfss	status,2,c
  1788  00039A  D006               	goto	i2l90
  1789                           
  1790                           ;interrupts.c: 84: mot_1_steps = 0;
  1791  00039C  0E00               	movlw	0
  1792  00039E  6E08               	movwf	_mot_1_steps+1,c
  1793  0003A0  0E00               	movlw	0
  1794  0003A2  6E07               	movwf	_mot_1_steps,c
  1795                           
  1796                           ;interrupts.c: 85: turns_count++;
  1797  0003A4  4A01               	infsnz	_turns_count,f,c
  1798  0003A6  2A02               	incf	_turns_count+1,f,c
  1799  0003A8                     i2l90:
  1800                           
  1801                           ;interrupts.c: 86: }
  1802                           ;interrupts.c: 87: if (turns_count == turns) {
  1803  0003A8  5050               	movf	_turns,w,c
  1804  0003AA  1801               	xorwf	_turns_count,w,c
  1805  0003AC  E105               	bnz	i2l1462
  1806  0003AE  5051               	movf	_turns+1,w,c
  1807  0003B0  1802               	xorwf	_turns_count+1,w,c
  1808  0003B2  B4D8               	btfsc	status,2,c
  1809                           
  1810                           ;interrupts.c: 89: finish();
  1811  0003B4  EC86  F003         	call	_finish	;wreg free
  1812  0003B8                     i2l91:
  1813  0003B8                     i2l1462:
  1814                           
  1815                           ;interrupts.c: 90: }
  1816                           ;interrupts.c: 91: }
  1817                           ;interrupts.c: 92: }
  1818                           ;interrupts.c: 94: if (MOT_3) {
  1819  0003B8  5023               	movf	_MOT_3,w,c
  1820  0003BA  B4D8               	btfsc	status,2,c
  1821  0003BC  D0A2               	goto	i2l114
  1822                           
  1823                           ;interrupts.c: 96: if (MOT_3_count == count_3) {
  1824  0003BE  5048               	movf	_count_3,w,c
  1825  0003C0  180B               	xorwf	_MOT_3_count,w,c
  1826  0003C2  E103               	bnz	i2u80_41
  1827  0003C4  5049               	movf	_count_3+1,w,c
  1828  0003C6  180C               	xorwf	_MOT_3_count+1,w,c
  1829  0003C8  A4D8               	btfss	status,2,c
  1830  0003CA                     i2u80_41:
  1831  0003CA  D09B               	goto	i2l114
  1832                           
  1833                           ;interrupts.c: 97: MOT_3_count = 0;
  1834  0003CC  0E00               	movlw	0
  1835  0003CE  6E0C               	movwf	_MOT_3_count+1,c
  1836  0003D0  0E00               	movlw	0
  1837  0003D2  6E0B               	movwf	_MOT_3_count,c
  1838                           
  1839                           ;interrupts.c: 98: LATCbits.LC1 = !PORTCbits.RC1;
  1840  0003D4  B282               	btfsc	3970,1,c	;volatile
  1841  0003D6  D003               	goto	i2u81_40
  1842  0003D8  6A31               	clrf	??_high_isr& (0+255),c
  1843  0003DA  2A31               	incf	??_high_isr& (0+255),f,c
  1844  0003DC  D001               	goto	i2u82_48
  1845  0003DE                     i2u81_40:
  1846  0003DE  6A31               	clrf	??_high_isr& (0+255),c
  1847  0003E0                     i2u82_48:
  1848  0003E0  4631               	rlncf	??_high_isr,f,c
  1849  0003E2  508B               	movf	3979,w,c	;volatile
  1850  0003E4  1831               	xorwf	??_high_isr,w,c
  1851  0003E6  0BFD               	andlw	-3
  1852  0003E8  1831               	xorwf	??_high_isr,w,c
  1853  0003EA  6E8B               	movwf	3979,c	;volatile
  1854                           
  1855                           ;interrupts.c: 99: mot_3_steps++;
  1856  0003EC  4A05               	infsnz	_mot_3_steps,f,c
  1857  0003EE  2A06               	incf	_mot_3_steps+1,f,c
  1858                           
  1859                           ;interrupts.c: 101: if (mot_3_steps == mot_3_step_count(length, 1)) {
  1860  0003F0  C04E  F02B         	movff	_length,mot_3_step_count@l
  1861  0003F4  C04F  F02C         	movff	_length+1,mot_3_step_count@l+1
  1862  0003F8  0E00               	movlw	0
  1863  0003FA  6E2E               	movwf	mot_3_step_count@ms+1,c
  1864  0003FC  0E01               	movlw	1
  1865  0003FE  6E2D               	movwf	mot_3_step_count@ms,c
  1866  000400  EC59  F003         	call	_mot_3_step_count	;wreg free
  1867  000404  5005               	movf	_mot_3_steps,w,c
  1868  000406  182B               	xorwf	?_mot_3_step_count,w,c
  1869  000408  E17C               	bnz	i2l114
  1870  00040A  5006               	movf	_mot_3_steps+1,w,c
  1871  00040C  182C               	xorwf	?_mot_3_step_count+1,w,c
  1872  00040E  A4D8               	btfss	status,2,c
  1873  000410  D078               	goto	i2l114
  1874                           
  1875                           ;interrupts.c: 103: DIR_3 = !DIR_3;
  1876  000412  5022               	movf	_DIR_3,w,c
  1877  000414  A4D8               	btfss	status,2,c
  1878  000416  D002               	goto	i2u84_40
  1879  000418  0E01               	movlw	1
  1880  00041A  D001               	goto	i2u85_40
  1881  00041C                     i2u84_40:
  1882  00041C  0E00               	movlw	0
  1883  00041E                     i2u85_40:
  1884  00041E  6E22               	movwf	_DIR_3,c
  1885                           
  1886                           ;interrupts.c: 104: mot_3_steps = 0;
  1887  000420  0E00               	movlw	0
  1888  000422  6E06               	movwf	_mot_3_steps+1,c
  1889  000424  0E00               	movlw	0
  1890  000426  6E05               	movwf	_mot_3_steps,c
  1891                           
  1892                           ;interrupts.c: 105: }
  1893                           ;interrupts.c: 106: }
  1894                           ;interrupts.c: 107: }
  1895                           ;interrupts.c: 117: } else if (PIR1bits.TMR1IF) {
  1896  000428  D06C               	goto	i2l114
  1897  00042A                     i2l87:
  1898  00042A  A09E               	btfss	3998,0,c	;volatile
  1899  00042C  D025               	goto	i2l96
  1900                           
  1901                           ;interrupts.c: 119: PIR1bits.TMR1IF = 0;
  1902  00042E  909E               	bcf	3998,0,c	;volatile
  1903                           
  1904                           ;interrupts.c: 120: TMR1 = 0xD8F0;
  1905  000430  0ED8               	movlw	216
  1906  000432  6ECF               	movwf	4047,c	;volatile
  1907  000434  0EF0               	movlw	240
  1908  000436  6ECE               	movwf	4046,c	;volatile
  1909                           
  1910                           ;interrupts.c: 121: if (MOT_3) {
  1911  000438  5023               	movf	_MOT_3,w,c
  1912  00043A  B4D8               	btfsc	status,2,c
  1913  00043C  D00C               	goto	i2l97
  1914                           
  1915                           ;interrupts.c: 123: LATCbits.LC1 = !PORTCbits.RC1;
  1916  00043E  B282               	btfsc	3970,1,c	;volatile
  1917  000440  D003               	goto	i2u88_40
  1918  000442  6A31               	clrf	??_high_isr& (0+255),c
  1919  000444  2A31               	incf	??_high_isr& (0+255),f,c
  1920  000446  D001               	goto	i2u89_48
  1921  000448                     i2u88_40:
  1922  000448  6A31               	clrf	??_high_isr& (0+255),c
  1923  00044A                     i2u89_48:
  1924  00044A  4631               	rlncf	??_high_isr,f,c
  1925  00044C  508B               	movf	3979,w,c	;volatile
  1926  00044E  1831               	xorwf	??_high_isr,w,c
  1927  000450  0BFD               	andlw	-3
  1928  000452  1831               	xorwf	??_high_isr,w,c
  1929  000454  6E8B               	movwf	3979,c	;volatile
  1930  000456                     i2l97:
  1931                           
  1932                           ;interrupts.c: 124: }
  1933                           ;interrupts.c: 128: if (MOT_2) {
  1934  000456  5021               	movf	_MOT_2,w,c
  1935  000458  B4D8               	btfsc	status,2,c
  1936  00045A  D053               	goto	i2l114
  1937                           
  1938                           ;interrupts.c: 130: LATAbits.LA5 = !PORTAbits.RA5;
  1939  00045C  BA80               	btfsc	3968,5,c	;volatile
  1940  00045E  D003               	goto	i2u91_40
  1941  000460  6A31               	clrf	??_high_isr& (0+255),c
  1942  000462  2A31               	incf	??_high_isr& (0+255),f,c
  1943  000464  D001               	goto	i2u92_48
  1944  000466                     i2u91_40:
  1945  000466  6A31               	clrf	??_high_isr& (0+255),c
  1946  000468                     i2u92_48:
  1947  000468  3A31               	swapf	??_high_isr,f,c
  1948  00046A  4631               	rlncf	??_high_isr,f,c
  1949  00046C  5089               	movf	3977,w,c	;volatile
  1950  00046E  1831               	xorwf	??_high_isr,w,c
  1951  000470  0BDF               	andlw	-33
  1952  000472  1831               	xorwf	??_high_isr,w,c
  1953  000474  6E89               	movwf	3977,c	;volatile
  1954                           
  1955                           ;interrupts.c: 131: }
  1956                           ;interrupts.c: 135: } else if (PIR1bits.RCIF) {
  1957  000476  D045               	goto	i2l114
  1958  000478                     i2l96:
  1959  000478  AA9E               	btfss	3998,5,c	;volatile
  1960  00047A  D01A               	goto	i2l100
  1961                           
  1962                           ;interrupts.c: 137: PIR1bits.RCIF = 0;
  1963  00047C  9A9E               	bcf	3998,5,c	;volatile
  1964                           
  1965                           ;interrupts.c: 138: palabra[n] = RCREG;
  1966  00047E  0E60               	movlw	low _palabra
  1967  000480  2415               	addwf	_n,w,c
  1968  000482  6ED9               	movwf	fsr2l,c
  1969  000484  0E00               	movlw	high _palabra
  1970  000486  2016               	addwfc	_n+1,w,c
  1971  000488  6EDA               	movwf	fsr2h,c
  1972  00048A  CFAE FFDF          	movff	4014,indf2	;volatile
  1973                           
  1974                           ;interrupts.c: 139: n++;
  1975  00048E  4A15               	infsnz	_n,f,c
  1976  000490  2A16               	incf	_n+1,f,c
  1977                           
  1978                           ;interrupts.c: 140: if (RCREG == '\n') {
  1979  000492  0E0A               	movlw	10
  1980  000494  18AE               	xorwf	4014,w,c	;volatile
  1981  000496  A4D8               	btfss	status,2,c
  1982  000498  D034               	goto	i2l114
  1983                           
  1984                           ;interrupts.c: 141: TXREG = palabra[0];
  1985  00049A  C060  FFAD         	movff	_palabra,4013	;volatile
  1986  00049E  A89E               	btfss	3998,4,c	;volatile
  1987  0004A0  D7FE               	goto	i2l103
  1988                           
  1989                           ;interrupts.c: 143: recibi = 1;
  1990  0004A2  0E01               	movlw	1
  1991  0004A4  6E1E               	movwf	_recibi,c
  1992                           
  1993                           ;interrupts.c: 144: n = 0;
  1994  0004A6  0E00               	movlw	0
  1995  0004A8  6E16               	movwf	_n+1,c
  1996  0004AA  0E00               	movlw	0
  1997  0004AC  6E15               	movwf	_n,c
  1998                           
  1999                           ;interrupts.c: 145: }
  2000                           ;interrupts.c: 146: } else if (PIR1bits.ADIF) {
  2001  0004AE  D029               	goto	i2l114
  2002  0004B0                     i2l100:
  2003  0004B0  AC9E               	btfss	3998,6,c	;volatile
  2004  0004B2  D006               	goto	i2l106
  2005                           
  2006                           ;interrupts.c: 148: PIR1bits.ADIF = 0;
  2007  0004B4  9C9E               	bcf	3998,6,c	;volatile
  2008                           
  2009                           ;interrupts.c: 154: ADC_value_press = ADRES;
  2010  0004B6  CFC3 F011          	movff	4035,_ADC_value_press	;volatile
  2011  0004BA  CFC4 F012          	movff	4036,_ADC_value_press+1	;volatile
  2012                           
  2013                           ;interrupts.c: 156: } else if (INTCON3bits.INT1IF) {
  2014  0004BE  D021               	goto	i2l114
  2015  0004C0                     i2l106:
  2016  0004C0  A0F0               	btfss	intcon3,0,c	;volatile
  2017  0004C2  D009               	goto	i2l108
  2018                           
  2019                           ;interrupts.c: 158: INTCON3bits.INT1IF = 0;
  2020  0004C4  90F0               	bcf	intcon3,0,c	;volatile
  2021                           
  2022                           ;interrupts.c: 160: if (winding) {
  2023  0004C6  5020               	movf	_winding,w,c
  2024  0004C8  A4D8               	btfss	status,2,c
  2025  0004CA  D00B               	goto	i2u102_40
  2026                           
  2027                           ;interrupts.c: 169: DIR_3 = !DIR_3;
  2028                           
  2029                           ;interrupts.c: 167: } else {
  2030                           
  2031                           ;interrupts.c: 165: MOT_4 = 0;
  2032                           
  2033                           ;interrupts.c: 164: MOT_3 = 0;
  2034                           
  2035                           ;interrupts.c: 163: MOT_2 = 0;
  2036                           
  2037                           ;interrupts.c: 162: MOT_1 = 0;
  2038  0004CC  5022               	movf	_DIR_3,w,c
  2039  0004CE  A4D8               	btfss	status,2,c
  2040  0004D0  D016               	goto	i2u103_40
  2041  0004D2  0E01               	movlw	1
  2042  0004D4  D015               	goto	i2u104_40
  2043  0004D6                     i2l108:
  2044  0004D6  A2F0               	btfss	intcon3,1,c	;volatile
  2045  0004D8  D014               	goto	i2l114
  2046                           
  2047                           ;interrupts.c: 174: INTCON3bits.INT2IF = 0;
  2048  0004DA  92F0               	bcf	intcon3,1,c	;volatile
  2049                           
  2050                           ;interrupts.c: 176: if (winding) {
  2051  0004DC  5020               	movf	_winding,w,c
  2052  0004DE  B4D8               	btfsc	status,2,c
  2053  0004E0  D009               	goto	i2l113
  2054  0004E2                     i2u102_40:
  2055                           
  2056                           ;interrupts.c: 178: MOT_1 = 0;
  2057  0004E2  0E00               	movlw	0
  2058  0004E4  6E24               	movwf	_MOT_1,c
  2059                           
  2060                           ;interrupts.c: 179: MOT_2 = 0;
  2061  0004E6  0E00               	movlw	0
  2062  0004E8  6E21               	movwf	_MOT_2,c
  2063                           
  2064                           ;interrupts.c: 180: MOT_3 = 0;
  2065  0004EA  0E00               	movlw	0
  2066  0004EC  6E23               	movwf	_MOT_3,c
  2067                           
  2068                           ;interrupts.c: 181: MOT_4 = 0;
  2069  0004EE  0E00               	movlw	0
  2070  0004F0  6E1F               	movwf	_MOT_4,c
  2071                           
  2072                           ;interrupts.c: 183: } else {
  2073  0004F2  D007               	goto	i2l114
  2074  0004F4                     i2l113:
  2075                           
  2076                           ;interrupts.c: 185: DIR_3 = !DIR_3;
  2077  0004F4  5022               	movf	_DIR_3,w,c
  2078  0004F6  A4D8               	btfss	status,2,c
  2079  0004F8  D002               	goto	i2u103_40
  2080  0004FA  0E01               	movlw	1
  2081  0004FC  D001               	goto	i2u104_40
  2082  0004FE                     i2u103_40:
  2083  0004FE  0E00               	movlw	0
  2084  000500                     i2u104_40:
  2085  000500  6E22               	movwf	_DIR_3,c
  2086  000502                     i2l114:
  2087  000502  C043  F056         	movff	??_high_isr+18,btemp+3
  2088  000506  C042  F055         	movff	??_high_isr+17,btemp+2
  2089  00050A  C041  F054         	movff	??_high_isr+16,btemp+1
  2090  00050E  C040  F053         	movff	??_high_isr+15,btemp
  2091  000512  C03F  FFF5         	movff	??_high_isr+14,tablat
  2092  000516  C03E  FFF8         	movff	??_high_isr+13,tblptru
  2093  00051A  C03D  FFF7         	movff	??_high_isr+12,tblptrh
  2094  00051E  C03C  FFF6         	movff	??_high_isr+11,tblptrl
  2095  000522  C03B  FFF4         	movff	??_high_isr+10,prodh
  2096  000526  C03A  FFF3         	movff	??_high_isr+9,prodl
  2097  00052A  C039  FFDA         	movff	??_high_isr+8,fsr2h
  2098  00052E  C038  FFD9         	movff	??_high_isr+7,fsr2l
  2099  000532  C037  FFE2         	movff	??_high_isr+6,fsr1h
  2100  000536  C036  FFE1         	movff	??_high_isr+5,fsr1l
  2101  00053A  C035  FFEA         	movff	??_high_isr+4,fsr0h
  2102  00053E  C034  FFE9         	movff	??_high_isr+3,fsr0l
  2103  000542  C033  FFFB         	movff	??_high_isr+2,pclatu
  2104  000546  C032  FFFA         	movff	??_high_isr+1,pclath
  2105  00054A  9253               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  2106  00054C  0011               	retfie		f
  2107  00054E                     __end_of_high_isr:
  2108                           	opt stack 0
  2109                           pclatu	equ	0xFFB
  2110                           pclath	equ	0xFFA
  2111                           tblptru	equ	0xFF8
  2112                           tblptrh	equ	0xFF7
  2113                           tblptrl	equ	0xFF6
  2114                           tablat	equ	0xFF5
  2115                           prodh	equ	0xFF4
  2116                           prodl	equ	0xFF3
  2117                           intcon	equ	0xFF2
  2118                           intcon2	equ	0xFF1
  2119                           intcon3	equ	0xFF0
  2120                           postinc0	equ	0xFEE
  2121                           fsr0h	equ	0xFEA
  2122                           fsr0l	equ	0xFE9
  2123                           wreg	equ	0xFE8
  2124                           postdec1	equ	0xFE5
  2125                           fsr1h	equ	0xFE2
  2126                           fsr1l	equ	0xFE1
  2127                           indf2	equ	0xFDF
  2128                           fsr2h	equ	0xFDA
  2129                           fsr2l	equ	0xFD9
  2130                           status	equ	0xFD8
  2131                           
  2132 ;; *************** function _mot_3_step_count *****************
  2133 ;; Defined at:
  2134 ;;		line 174 in file "main.c"
  2135 ;; Parameters:    Size  Location     Type
  2136 ;;  l               2    6[COMRAM] unsigned int 
  2137 ;;  ms              2    8[COMRAM] unsigned int 
  2138 ;; Auto vars:     Size  Location     Type
  2139 ;;		None
  2140 ;; Return value:  Size  Location     Type
  2141 ;;                  2    6[COMRAM] unsigned int 
  2142 ;; Registers used:
  2143 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2144 ;; Tracked objects:
  2145 ;;		On entry : 0/0
  2146 ;;		On exit  : 0/0
  2147 ;;		Unchanged: 0/0
  2148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2149 ;;      Params:         4       0       0       0       0       0       0       0       0
  2150 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2151 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2152 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2153 ;;Total ram usage:        6 bytes
  2154 ;; Hardware stack levels used:    1
  2155 ;; Hardware stack levels required when called:    1
  2156 ;; This function calls:
  2157 ;;		i2___wmul
  2158 ;; This function is called by:
  2159 ;;		_high_isr
  2160 ;; This function uses a non-reentrant model
  2161 ;;
  2162                           
  2163                           	psect	text7
  2164  0006B2                     __ptext7:
  2165                           	opt stack 0
  2166  0006B2                     _mot_3_step_count:
  2167                           	opt stack 27
  2168                           
  2169                           ;main.c: 176: return (ms * l) / 2;
  2170                           
  2171                           ;incstack = 0
  2172  0006B2  C02D  F025         	movff	mot_3_step_count@ms,i2___wmul@multiplier
  2173  0006B6  C02E  F026         	movff	mot_3_step_count@ms+1,i2___wmul@multiplier+1
  2174  0006BA  C02B  F027         	movff	mot_3_step_count@l,i2___wmul@multiplicand
  2175  0006BE  C02C  F028         	movff	mot_3_step_count@l+1,i2___wmul@multiplicand+1
  2176  0006C2  EC46  F003         	call	i2___wmul	;wreg free
  2177  0006C6  90D8               	bcf	status,0,c
  2178  0006C8  3026               	rrcf	?i2___wmul+1,w,c
  2179  0006CA  6E2F               	movwf	??_mot_3_step_count& (0+255),c
  2180  0006CC  3025               	rrcf	?i2___wmul,w,c
  2181  0006CE  6E2B               	movwf	?_mot_3_step_count,c
  2182  0006D0  C02F  F02C         	movff	??_mot_3_step_count,?_mot_3_step_count+1
  2183  0006D4  0012               	return	
  2184  0006D6                     __end_of_mot_3_step_count:
  2185                           	opt stack 0
  2186                           pclatu	equ	0xFFB
  2187                           pclath	equ	0xFFA
  2188                           tblptru	equ	0xFF8
  2189                           tblptrh	equ	0xFF7
  2190                           tblptrl	equ	0xFF6
  2191                           tablat	equ	0xFF5
  2192                           prodh	equ	0xFF4
  2193                           prodl	equ	0xFF3
  2194                           intcon	equ	0xFF2
  2195                           intcon2	equ	0xFF1
  2196                           intcon3	equ	0xFF0
  2197                           postinc0	equ	0xFEE
  2198                           fsr0h	equ	0xFEA
  2199                           fsr0l	equ	0xFE9
  2200                           wreg	equ	0xFE8
  2201                           postdec1	equ	0xFE5
  2202                           fsr1h	equ	0xFE2
  2203                           fsr1l	equ	0xFE1
  2204                           indf2	equ	0xFDF
  2205                           fsr2h	equ	0xFDA
  2206                           fsr2l	equ	0xFD9
  2207                           status	equ	0xFD8
  2208                           
  2209 ;; *************** function i2___wmul *****************
  2210 ;; Defined at:
  2211 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
  2212 ;; Parameters:    Size  Location     Type
  2213 ;;  multiplier      2    0[COMRAM] unsigned int 
  2214 ;;  multiplicand    2    2[COMRAM] unsigned int 
  2215 ;; Auto vars:     Size  Location     Type
  2216 ;;  __wmul          2    4[COMRAM] unsigned int 
  2217 ;; Return value:  Size  Location     Type
  2218 ;;                  2    0[COMRAM] unsigned int 
  2219 ;; Registers used:
  2220 ;;		wreg, status,2, status,0, prodl, prodh
  2221 ;; Tracked objects:
  2222 ;;		On entry : 0/0
  2223 ;;		On exit  : 0/0
  2224 ;;		Unchanged: 0/0
  2225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2226 ;;      Params:         4       0       0       0       0       0       0       0       0
  2227 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2228 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2229 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2230 ;;Total ram usage:        6 bytes
  2231 ;; Hardware stack levels used:    1
  2232 ;; This function calls:
  2233 ;;		Nothing
  2234 ;; This function is called by:
  2235 ;;		_mot_3_step_count
  2236 ;; This function uses a non-reentrant model
  2237 ;;
  2238                           
  2239                           	psect	text8
  2240  00068C                     __ptext8:
  2241                           	opt stack 0
  2242  00068C                     i2___wmul:
  2243                           	opt stack 27
  2244                           
  2245                           ;incstack = 0
  2246  00068C  5025               	movf	i2___wmul@multiplier,w,c
  2247  00068E  0227               	mulwf	i2___wmul@multiplicand,c
  2248  000690  CFF3 F029          	movff	prodl,i2___wmul@product
  2249  000694  CFF4 F02A          	movff	prodh,i2___wmul@product+1
  2250  000698  5025               	movf	i2___wmul@multiplier,w,c
  2251  00069A  0228               	mulwf	i2___wmul@multiplicand+1,c
  2252  00069C  50F3               	movf	prodl,w,c
  2253  00069E  262A               	addwf	i2___wmul@product+1,f,c
  2254  0006A0  5026               	movf	i2___wmul@multiplier+1,w,c
  2255  0006A2  0227               	mulwf	i2___wmul@multiplicand,c
  2256  0006A4  50F3               	movf	prodl,w,c
  2257  0006A6  262A               	addwf	i2___wmul@product+1,f,c
  2258  0006A8  C029  F025         	movff	i2___wmul@product,?i2___wmul
  2259  0006AC  C02A  F026         	movff	i2___wmul@product+1,?i2___wmul+1
  2260  0006B0  0012               	return	
  2261  0006B2                     __end_ofi2___wmul:
  2262                           	opt stack 0
  2263                           pclatu	equ	0xFFB
  2264                           pclath	equ	0xFFA
  2265                           tblptru	equ	0xFF8
  2266                           tblptrh	equ	0xFF7
  2267                           tblptrl	equ	0xFF6
  2268                           tablat	equ	0xFF5
  2269                           prodh	equ	0xFF4
  2270                           prodl	equ	0xFF3
  2271                           intcon	equ	0xFF2
  2272                           intcon2	equ	0xFF1
  2273                           intcon3	equ	0xFF0
  2274                           postinc0	equ	0xFEE
  2275                           fsr0h	equ	0xFEA
  2276                           fsr0l	equ	0xFE9
  2277                           wreg	equ	0xFE8
  2278                           postdec1	equ	0xFE5
  2279                           fsr1h	equ	0xFE2
  2280                           fsr1l	equ	0xFE1
  2281                           indf2	equ	0xFDF
  2282                           fsr2h	equ	0xFDA
  2283                           fsr2l	equ	0xFD9
  2284                           status	equ	0xFD8
  2285                           
  2286 ;; *************** function _finish *****************
  2287 ;; Defined at:
  2288 ;;		line 203 in file "main.c"
  2289 ;; Parameters:    Size  Location     Type
  2290 ;;		None
  2291 ;; Auto vars:     Size  Location     Type
  2292 ;;		None
  2293 ;; Return value:  Size  Location     Type
  2294 ;;                  1    wreg      void 
  2295 ;; Registers used:
  2296 ;;		wreg, status,2
  2297 ;; Tracked objects:
  2298 ;;		On entry : 0/0
  2299 ;;		On exit  : 0/0
  2300 ;;		Unchanged: 0/0
  2301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2302 ;;      Params:         0       0       0       0       0       0       0       0       0
  2303 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2304 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2305 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2306 ;;Total ram usage:        0 bytes
  2307 ;; Hardware stack levels used:    1
  2308 ;; This function calls:
  2309 ;;		Nothing
  2310 ;; This function is called by:
  2311 ;;		_high_isr
  2312 ;; This function uses a non-reentrant model
  2313 ;;
  2314                           
  2315                           	psect	text9
  2316  00070C                     __ptext9:
  2317                           	opt stack 0
  2318  00070C                     _finish:
  2319                           	opt stack 28
  2320                           
  2321                           ;main.c: 205: T1CONbits.TMR1ON = 1;
  2322                           
  2323                           ;incstack = 0
  2324  00070C  80CD               	bsf	4045,0,c	;volatile
  2325                           
  2326                           ;main.c: 206: T0CONbits.TMR0ON = 0;
  2327  00070E  9ED5               	bcf	4053,7,c	;volatile
  2328                           
  2329                           ;main.c: 207: MOT_1 = MOT_3 = 0;
  2330  000710  0E00               	movlw	0
  2331  000712  6E23               	movwf	_MOT_3,c
  2332  000714  C023  F024         	movff	_MOT_3,_MOT_1
  2333                           
  2334                           ;main.c: 208: winding = 0;
  2335  000718  0E00               	movlw	0
  2336  00071A  6E20               	movwf	_winding,c
  2337                           
  2338                           ;main.c: 209: finish_flag = 1;
  2339  00071C  0E01               	movlw	1
  2340  00071E  6E18               	movwf	_finish_flag,c
  2341  000720  0012               	return		;funcret
  2342  000722                     __end_of_finish:
  2343                           	opt stack 0
  2344  0000                     pclatu	equ	0xFFB
  2345                           pclath	equ	0xFFA
  2346                           tblptru	equ	0xFF8
  2347                           tblptrh	equ	0xFF7
  2348                           tblptrl	equ	0xFF6
  2349                           tablat	equ	0xFF5
  2350                           prodh	equ	0xFF4
  2351                           prodl	equ	0xFF3
  2352                           intcon	equ	0xFF2
  2353                           intcon2	equ	0xFF1
  2354                           intcon3	equ	0xFF0
  2355                           postinc0	equ	0xFEE
  2356                           fsr0h	equ	0xFEA
  2357                           fsr0l	equ	0xFE9
  2358                           wreg	equ	0xFE8
  2359                           postdec1	equ	0xFE5
  2360                           fsr1h	equ	0xFE2
  2361                           fsr1l	equ	0xFE1
  2362                           indf2	equ	0xFDF
  2363                           fsr2h	equ	0xFDA
  2364                           fsr2l	equ	0xFD9
  2365                           status	equ	0xFD8
  2366                           pclatu	equ	0xFFB
  2367                           pclath	equ	0xFFA
  2368                           tblptru	equ	0xFF8
  2369                           tblptrh	equ	0xFF7
  2370                           tblptrl	equ	0xFF6
  2371                           tablat	equ	0xFF5
  2372                           prodh	equ	0xFF4
  2373                           prodl	equ	0xFF3
  2374                           intcon	equ	0xFF2
  2375                           intcon2	equ	0xFF1
  2376                           intcon3	equ	0xFF0
  2377                           postinc0	equ	0xFEE
  2378                           fsr0h	equ	0xFEA
  2379                           fsr0l	equ	0xFE9
  2380                           wreg	equ	0xFE8
  2381                           postdec1	equ	0xFE5
  2382                           fsr1h	equ	0xFE2
  2383                           fsr1l	equ	0xFE1
  2384                           indf2	equ	0xFDF
  2385                           fsr2h	equ	0xFDA
  2386                           fsr2l	equ	0xFD9
  2387                           status	equ	0xFD8
  2388                           
  2389                           	psect	rparam
  2390  0000                     pclatu	equ	0xFFB
  2391                           pclath	equ	0xFFA
  2392                           tblptru	equ	0xFF8
  2393                           tblptrh	equ	0xFF7
  2394                           tblptrl	equ	0xFF6
  2395                           tablat	equ	0xFF5
  2396                           prodh	equ	0xFF4
  2397                           prodl	equ	0xFF3
  2398                           intcon	equ	0xFF2
  2399                           intcon2	equ	0xFF1
  2400                           intcon3	equ	0xFF0
  2401                           postinc0	equ	0xFEE
  2402                           fsr0h	equ	0xFEA
  2403                           fsr0l	equ	0xFE9
  2404                           wreg	equ	0xFE8
  2405                           postdec1	equ	0xFE5
  2406                           fsr1h	equ	0xFE2
  2407                           fsr1l	equ	0xFE1
  2408                           indf2	equ	0xFDF
  2409                           fsr2h	equ	0xFDA
  2410                           fsr2l	equ	0xFD9
  2411                           status	equ	0xFD8
  2412                           
  2413                           	psect	temp
  2414  000053                     btemp:
  2415                           	opt stack 0
  2416  000053                     	ds	1
  2417  0000                     int$flags	set	btemp
  2418  0000                     wtemp6	set	btemp+1
  2419                           pclatu	equ	0xFFB
  2420                           pclath	equ	0xFFA
  2421                           tblptru	equ	0xFF8
  2422                           tblptrh	equ	0xFF7
  2423                           tblptrl	equ	0xFF6
  2424                           tablat	equ	0xFF5
  2425                           prodh	equ	0xFF4
  2426                           prodl	equ	0xFF3
  2427                           intcon	equ	0xFF2
  2428                           intcon2	equ	0xFF1
  2429                           intcon3	equ	0xFF0
  2430                           postinc0	equ	0xFEE
  2431                           fsr0h	equ	0xFEA
  2432                           fsr0l	equ	0xFE9
  2433                           wreg	equ	0xFE8
  2434                           postdec1	equ	0xFE5
  2435                           fsr1h	equ	0xFE2
  2436                           fsr1l	equ	0xFE1
  2437                           indf2	equ	0xFDF
  2438                           fsr2h	equ	0xFDA
  2439                           fsr2l	equ	0xFD9
  2440                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        17
    BSS         69
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     31      82
    BANK0           160      8      43
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    _high_isr->_mot_3_step_count
    _mot_3_step_count->i2___wmul

Critical Paths under _main in BANK0

    _main->___wmul

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    1968
                                              6 BANK0      2     2      0
                _ConfigureOscillator
                            _InitApp
                             ___wmul
                             _unwind
                          _zero_mark
 ---------------------------------------------------------------------------------
 (1) _zero_mark                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _unwind                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4    1968
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigureOscillator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _high_isr                                            19    19      0     405
                                             12 COMRAM    19    19      0
                             _finish
                   _mot_3_step_count
 ---------------------------------------------------------------------------------
 (3) _mot_3_step_count                                     6     2      4     405
                                              6 COMRAM     6     2      4
                           i2___wmul
 ---------------------------------------------------------------------------------
 (4) i2___wmul                                             6     2      4     209
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _finish                                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfigureOscillator
   _InitApp
   ___wmul
   _unwind
   _zero_mark

 _high_isr (ROOT)
   _finish
   _mot_3_step_count
     i2___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      8      2B       5       26.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     1F      52       1       87.2%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      7D      20        0.0%
DATA                 0      0      7D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sat Aug 17 15:46:09 2019

                           _n 0015           ___wmul@multiplicand 0083                   __CFG_BORV$3 000000  
                __CFG_CP0$OFF 000000                  __CFG_CP1$OFF 000000                  __CFG_CP2$OFF 000000  
                __CFG_CP3$OFF 000000                           l200 025C                           l201 0228  
                         l210 02AE                           l211 027E                           l203 023A  
                         l213 0296                           l217 02C6                           l194 001A  
                         l195 02D4                           l196 01CC                           l198 020A  
                __CFG_CPB$OFF 000000                           _PR2 000FCB                  __CFG_CPD$OFF 000000  
                         _RX9 007D5E                           _TX9 007D66                  __CFG_BOR$OFF 000000  
                         wreg 000FE8                  __CFG_LVP$OFF 000000                  __CFG_WDT$OFF 000000  
                        _BRGH 007D62                          _CREN 007D5C                          u1405 0026  
                        _LATA 000F89                          u1406 0028                          _LATB 000F8A  
                        u1415 0030                          _LATC 000F8B                          u1600 0278  
                        u1416 0032                          u1425 003A                          u1610 027A  
                        u1450 005E                          u1426 003C                          u1435 0044  
                        u1380 06E0                          u1700 02C2                          u1436 0046  
                        u1445 004E                          u1390 06E2                          u1630 0290  
                        u1446 0050                          u1640 0292                          u1660 02A8  
                        u1468 0062                          u1670 02AA                          u1737 02E0  
                        u1690 02C0                          _RCIE 007CED                          i2l90 03A8  
                        i2l91 03B8                          i2l87 042A                          i2l96 0478  
                        i2l97 0456                          _TMR0 000FD6                          _TMR1 000FCE  
                        _SPEN 007D5F                          _TXIE 007CEC                          _TXIF 007CF4  
                        _TXEN 007D65                          _SYNC 007D64                          _main 0012  
                        _send 0074                          fsr0h 000FEA                          fsr1h 000FE2  
                        fsr2h 000FDA                          fsr0l 000FE9                          indf2 000FDF  
                        fsr1l 000FE1                          fsr2l 000FD9                          btemp 0053  
                        prodh 000FF4                          prodl 000FF3                          start 000E  
               __CFG_IESO$OFF 000000                 __CFG_MCLRE$ON 000000                  ___param_bank 000000  
             __end_of_InitApp 060A                 __CFG_PLLDIV$1 000000                __CFG_CCP2MX$ON 000000  
                       ?_main 0025                         _ADRES 000FC3                         _BRG16 007DC3  
                       _DIR_1 001C                         _DIR_2 001B                         _DIR_3 0022  
                       _DIR_4 001A                         i2l100 04B0                         i2l103 049E  
                       i2l113 04F4                         i2l114 0502                         i2l106 04C0  
                       i2l108 04D6                         _RCREG 000FAE                         _MOT_1 0024  
                       _MOT_2 0021                         _MOT_3 0023                         _MOT_4 001F  
                       _SPBRG 000FAF                         _PORTA 000F80                         _PORTB 000F81  
                       _PORTC 000F82                 __CFG_USBDIV$1 000000                         _TXREG 000FAD  
         _ConfigureOscillator 0732                 __CFG_PWRT$OFF 000000                 __CFG_WRT0$OFF 000000  
               __CFG_WRT1$OFF 000000                 __CFG_WRT2$OFF 000000                 __CFG_WRT3$OFF 000000  
              __CFG_EBTR0$OFF 000000                __CFG_FCMEN$OFF 000000                __CFG_EBTR1$OFF 000000  
              __CFG_EBTR2$OFF 000000                __CFG_EBTR3$OFF 000000                 __CFG_WRTB$OFF 000000  
               __CFG_WRTC$OFF 000000                 __CFG_WRTD$OFF 000000                __CFG_EBTRB$OFF 000000  
                       _turns 0050                   _turns_count 0001                         pclath 000FFA  
                       tablat 000FF5              __end_ofi2___wmul 06B2                         status 000FD8  
                       wtemp6 0054          ?_ConfigureOscillator 0025               __initialization 060A  
                __end_of_main 02EE                        ??_main 0087                 __activetblptr 000000  
                      _ADCON1 000FC1                        _ADCON2 000FC0                        _CCPR1L 000FBE  
                      _GODONE 007E11                        i2l1462 03B8                     ??_InitApp 0081  
       ??_ConfigureOscillator 0081                __CFG_XINST$OFF 000000              __end_of_high_isr 054E  
   __size_of_mot_3_step_count 0024                        ___wmul 0664                        _enable 0017  
                      _finish 070C                        _length 004E                        _recibi 001E  
                      clear_0 0648                        clear_1 0654                        _motor1 0089  
                      _motor2 007F                        _unwind 06D6                  __pdataCOMRAM 0044  
                      tblptrh 000FF7                        tblptrl 000FF6                        tblptru 000FF8  
                  __accesstop 0060       __end_of__initialization 065A               __CFG_PBADEN$OFF 000000  
               ___rparam_used 000001                __pcstackCOMRAM 0025                  __pidataBANK0 073E  
                   ?i2___wmul 0025                    __pbssBANK0 0060                       ?___wmul 0081  
                     ?_finish 0025                       ?_unwind 0025                    ??i2___wmul 0029  
                     i2u80_41 03CA                       i2u81_40 03DE                       i2u91_40 0466  
                     i2u82_48 03E0                       i2u75_40 037C                       i2u84_40 041C  
                     i2u92_48 0468                       i2u85_40 041E                       i2u76_48 037E  
                     i2u88_40 0448                       i2u89_48 044A                     ?_high_isr 0025  
             __CFG_VREGEN$OFF 000000            __size_of_zero_mark 001A                       _InitApp 054E  
                     __Hparam 0000                       __Lparam 0000              _mot_3_step_count 06B2  
             __size_of___wmul 0028                       _caliber 007D               __size_of_finish 0016  
             __CFG_STVREN$OFF 000000                       __pcinit 060A                       __ramtop 0800  
                     __ptext0 0012                       __ptext1 06F2                       __ptext2 06D6  
                     __ptext3 0664                       __ptext4 054E                       __ptext5 0732  
                     __ptext7 06B2                       __ptext8 068C                       __ptext9 070C  
                  _param_flag 0019                     _T0CONbits 000FD5                       _count_1 004C  
                     _count_2 004A                       _count_3 0048                       _count_4 0046  
             __size_of_unwind 001C                     _T1CONbits 000FCD                       _palabra 0060  
                   _T2CONbits 000FCA                       _winding 0020              _mot_4_step_count 007B  
                  ??_high_isr 0031                __pintcode_body 02EE          end_of_initialization 065A  
                     int_func 02EE           i2___wmul@multiplier 0025                       postdec1 000FE5  
                     postinc0 000FEE                     _PORTAbits 000F80                     _PORTCbits 000F82  
           __end_of_zero_mark 070C                     _TRISAbits 000F92                     _TRISBbits 000F93  
                   _TRISCbits 000F94   __end_of_ConfigureOscillator 073E                   _CCP1CONbits 000FBD  
              __end_of___wmul 068C                 __pidataCOMRAM 0722                __end_of_finish 0722  
            i2___wmul@product 0029                __end_of_unwind 06F2           start_initialization 060A  
           __size_ofi2___wmul 0026                      ??___wmul 0085                      ??_finish 0025  
                 __pdataBANK0 0089              __CFG_LPT1OSC$OFF 000000                      ??_unwind 0081  
                 __pbssCOMRAM 0001                 __pcstackBANK0 0081      __end_of_mot_3_step_count 06D6  
           __size_of_high_isr 0546                      ?_InitApp 0025                     __pintcode 0008  
              ___wmul@product 0085                      _LATAbits 000F89                      _LATBbits 000F8A  
                    _LATCbits 000F8B                      _IPR1bits 000F9F                      _PIE1bits 000F9D  
                    _RA0state 001D                      i2u102_40 04E2                      i2u103_40 04FE  
                    i2u104_40 0500                      _PIR1bits 000F9E                      _RCONbits 000FD0  
            __CFG_WDTPS$32768 000000                   _finish_flag 0018                    _ADCON0bits 000FC2  
           ___wmul@multiplier 0081                      i2___wmul 068C                      _PWM_duty 0044  
             _ADC_value_press 0011                     _zero_flag 0052                     _zero_mark 06F2  
                 _INTCON2bits 000FF1                   _INTCON3bits 000FF0                     copy_data0 0636  
            __size_of_InitApp 00BC                      __Hrparam 0000                      __Lrparam 0000  
       i2___wmul@multiplicand 0027                    ?_zero_mark 0025                      _high_isr 0008  
               __size_of_main 02DC                   _mot_1_steps 0007                   _mot_3_steps 0005  
                 _mot_4_steps 0003  __size_of_ConfigureOscillator 000C                      _overflow 0013  
                    int$flags 0053            mot_3_step_count@ms 002D         __CFG_CPUDIV$OSC1_PLL2 000000  
                  _INTCONbits 000FF2                   _MOT_1_count 000F                   _MOT_2_count 000D  
                 _MOT_3_count 000B                   _MOT_4_count 0009             ?_mot_3_step_count 002B  
                    intlevel2 0000            ??_mot_3_step_count 002F                    _OSCCONbits 000FD3  
           mot_3_step_count@l 002B           __CFG_FOSC$INTOSC_EC 000000                   ??_zero_mark 0081  

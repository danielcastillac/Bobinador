

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sat Aug 17 13:18:41 2019

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F2550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    20                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    24                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    25                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    26  0000                     
    27                           ; Version 1.45
    28                           ; Generated 16/11/2017 GMT
    29                           ; 
    30                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    31                           ; All rights reserved.
    32                           ; 
    33                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    34                           ; 
    35                           ; Redistribution and use in source and binary forms, with or without modification, are
    36                           ; permitted provided that the following conditions are met:
    37                           ; 
    38                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    39                           ;        conditions and the following disclaimer.
    40                           ; 
    41                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    42                           ;        of conditions and the following disclaimer in the documentation and/or other
    43                           ;        materials provided with the distribution.
    44                           ; 
    45                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    46                           ;        software without specific prior written permission.
    47                           ; 
    48                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    49                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    50                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    51                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    52                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    53                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    54                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    55                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    56                           ; 
    57                           ; 
    58                           ; Code-generator required, PIC18F2550 Definitions
    59                           ; 
    60                           ; SFR Addresses
    61  0000                     
    62                           	psect	idataCOMRAM
    63  0006B2                     __pidataCOMRAM:
    64                           	opt stack 0
    65                           
    66                           ;initializer for _PWM_duty
    67  0006B2  0032               	dw	50
    68                           
    69                           ;initializer for _motor1
    70  0006B4  0001               	dw	1
    71                           
    72                           ;initializer for _count_4
    73  0006B6  0005               	dw	5
    74                           
    75                           ;initializer for _count_3
    76  0006B8  0084               	dw	132
    77                           
    78                           ;initializer for _count_2
    79  0006BA  0005               	dw	5
    80                           
    81                           ;initializer for _count_1
    82  0006BC  0002               	dw	2
    83                           
    84                           ;initializer for _length
    85  0006BE  2422               	dw	9250
    86                           
    87                           ;initializer for _zero_flag
    88  0006C0  01                 	db	1
    89                           
    90                           	psect	idataBANK0
    91  0006CE                     __pidataBANK0:
    92                           	opt stack 0
    93                           
    94                           ;initializer for _turns
    95  0006CE  0FA0               	dw	4000
    96  0000                     _ADRES	set	4035
    97  0000                     _TMR1	set	4046
    98  0000                     _TMR0	set	4054
    99  0000                     _T2CONbits	set	4042
   100  0000                     _CCP1CONbits	set	4029
   101  0000                     _PR2	set	4043
   102  0000                     _SPBRG	set	4015
   103  0000                     _IPR1bits	set	3999
   104  0000                     _INTCON2bits	set	4081
   105  0000                     _RCONbits	set	4048
   106  0000                     _TRISBbits	set	3987
   107  0000                     _TRISCbits	set	3988
   108  0000                     _PIE1bits	set	3997
   109  0000                     _ADCON2	set	4032
   110  0000                     _ADCON0bits	set	4034
   111  0000                     _TRISAbits	set	3986
   112  0000                     _ADCON1	set	4033
   113  0000                     _LATC	set	3979
   114  0000                     _PORTC	set	3970
   115  0000                     _LATB	set	3978
   116  0000                     _PORTB	set	3969
   117  0000                     _LATA	set	3977
   118  0000                     _PORTA	set	3968
   119  0000                     _OSCCONbits	set	4051
   120  0000                     _T0CONbits	set	4053
   121  0000                     _T1CONbits	set	4045
   122  0000                     _LATBbits	set	3978
   123  0000                     _CCPR1L	set	4030
   124  0000                     _INTCON3bits	set	4080
   125  0000                     _TXREG	set	4013
   126  0000                     _RCREG	set	4014
   127  0000                     _PIR1bits	set	3998
   128  0000                     _PORTCbits	set	3970
   129  0000                     _LATCbits	set	3979
   130  0000                     _PORTAbits	set	3968
   131  0000                     _LATAbits	set	3977
   132  0000                     _INTCONbits	set	4082
   133  0000                     _TXIE	set	31980
   134  0000                     _RCIE	set	31981
   135  0000                     _RX9	set	32094
   136  0000                     _TX9	set	32102
   137  0000                     _CREN	set	32092
   138  0000                     _TXEN	set	32101
   139  0000                     _SYNC	set	32100
   140  0000                     _SPEN	set	32095
   141  0000                     _BRG16	set	32195
   142  0000                     _BRGH	set	32098
   143  0000                     _GODONE	set	32273
   144  0000                     _TXIF	set	31988
   145                           
   146                           ; #config settings
   147  0000                     
   148                           	psect	cinit
   149  0005D0                     __pcinit:
   150                           	opt stack 0
   151  0005D0                     start_initialization:
   152                           	opt stack 0
   153  0005D0                     __initialization:
   154                           	opt stack 0
   155                           
   156                           ; Initialize objects allocated to BANK0 (2 bytes)
   157                           ; load TBLPTR registers with __pidataBANK0
   158  0005D0  0ECE               	movlw	low __pidataBANK0
   159  0005D2  6EF6               	movwf	tblptrl,c
   160  0005D4  0E06               	movlw	high __pidataBANK0
   161  0005D6  6EF7               	movwf	tblptrh,c
   162  0005D8  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   163  0005DA  6EF8               	movwf	tblptru,c
   164  0005DC  0009               	tblrd		*+	;fetch initializer
   165  0005DE  CFF5 F08D          	movff	tablat,__pdataBANK0
   166  0005E2  0009               	tblrd		*+	;fetch initializer
   167  0005E4  CFF5 F08E          	movff	tablat,__pdataBANK0+1
   168                           
   169                           ; Initialize objects allocated to COMRAM (15 bytes)
   170                           ; load TBLPTR registers with __pidataCOMRAM
   171  0005E8  0EB2               	movlw	low __pidataCOMRAM
   172  0005EA  6EF6               	movwf	tblptrl,c
   173  0005EC  0E06               	movlw	high __pidataCOMRAM
   174  0005EE  6EF7               	movwf	tblptrh,c
   175  0005F0  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   176  0005F2  6EF8               	movwf	tblptru,c
   177  0005F4  EE00  F045         	lfsr	0,__pdataCOMRAM
   178  0005F8  EE10 F00F          	lfsr	1,15
   179  0005FC                     copy_data0:
   180  0005FC  0009               	tblrd		*+
   181  0005FE  CFF5 FFEE          	movff	tablat,postinc0
   182  000602  50E5               	movf	postdec1,w,c
   183  000604  50E1               	movf	fsr1l,w,c
   184  000606  E1FA               	bnz	copy_data0
   185                           
   186                           ; Clear objects allocated to BANK0 (37 bytes)
   187  000608  EE00  F060         	lfsr	0,__pbssBANK0
   188  00060C  0E25               	movlw	37
   189  00060E                     clear_0:
   190  00060E  6AEE               	clrf	postinc0,c
   191  000610  06E8               	decf	wreg,f,c
   192  000612  E1FD               	bnz	clear_0
   193                           
   194                           ; Clear objects allocated to COMRAM (37 bytes)
   195  000614  EE00  F001         	lfsr	0,__pbssCOMRAM
   196  000618  0E25               	movlw	37
   197  00061A                     clear_1:
   198  00061A  6AEE               	clrf	postinc0,c
   199  00061C  06E8               	decf	wreg,f,c
   200  00061E  E1FD               	bnz	clear_1
   201  000620                     end_of_initialization:
   202                           	opt stack 0
   203  000620                     __end_of__initialization:
   204                           	opt stack 0
   205  000620  9054               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   206  000622  9254               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   207  000624  0100               	movlb	0
   208  000626  EF09  F000         	goto	_main	;jump to C main() function
   209                           tblptru	equ	0xFF8
   210                           tblptrh	equ	0xFF7
   211                           tblptrl	equ	0xFF6
   212                           tablat	equ	0xFF5
   213                           postinc0	equ	0xFEE
   214                           wreg	equ	0xFE8
   215                           postdec1	equ	0xFE5
   216                           fsr1l	equ	0xFE1
   217                           
   218                           	psect	bssCOMRAM
   219  000001                     __pbssCOMRAM:
   220                           	opt stack 0
   221  000001                     _zero_count:
   222                           	opt stack 0
   223  000001                     	ds	2
   224  000003                     _turns_count:
   225                           	opt stack 0
   226  000003                     	ds	2
   227  000005                     _mot_4_steps:
   228                           	opt stack 0
   229  000005                     	ds	2
   230  000007                     _mot_3_steps:
   231                           	opt stack 0
   232  000007                     	ds	2
   233  000009                     _mot_1_steps:
   234                           	opt stack 0
   235  000009                     	ds	2
   236  00000B                     _MOT_4_count:
   237                           	opt stack 0
   238  00000B                     	ds	2
   239  00000D                     _MOT_3_count:
   240                           	opt stack 0
   241  00000D                     	ds	2
   242  00000F                     _MOT_2_count:
   243                           	opt stack 0
   244  00000F                     	ds	2
   245  000011                     _MOT_1_count:
   246                           	opt stack 0
   247  000011                     	ds	2
   248  000013                     _ADC_value_press:
   249                           	opt stack 0
   250  000013                     	ds	2
   251  000015                     _overflow:
   252                           	opt stack 0
   253  000015                     	ds	2
   254  000017                     _n:
   255                           	opt stack 0
   256  000017                     	ds	2
   257  000019                     _enable:
   258                           	opt stack 0
   259  000019                     	ds	1
   260  00001A                     _finish:
   261                           	opt stack 0
   262  00001A                     	ds	1
   263  00001B                     _DIR_4:
   264                           	opt stack 0
   265  00001B                     	ds	1
   266  00001C                     _DIR_2:
   267                           	opt stack 0
   268  00001C                     	ds	1
   269  00001D                     _DIR_1:
   270                           	opt stack 0
   271  00001D                     	ds	1
   272  00001E                     _RA0state:
   273                           	opt stack 0
   274  00001E                     	ds	1
   275  00001F                     _recibi:
   276                           	opt stack 0
   277  00001F                     	ds	1
   278  000020                     _MOT_4:
   279                           	opt stack 0
   280  000020                     	ds	1
   281  000021                     _MOT_2:
   282                           	opt stack 0
   283  000021                     	ds	1
   284  000022                     _param_flag:
   285                           	opt stack 0
   286  000022                     	ds	1
   287  000023                     _DIR_3:
   288                           	opt stack 0
   289  000023                     	ds	1
   290  000024                     _MOT_3:
   291                           	opt stack 0
   292  000024                     	ds	1
   293  000025                     _MOT_1:
   294                           	opt stack 0
   295  000025                     	ds	1
   296                           tblptru	equ	0xFF8
   297                           tblptrh	equ	0xFF7
   298                           tblptrl	equ	0xFF6
   299                           tablat	equ	0xFF5
   300                           postinc0	equ	0xFEE
   301                           wreg	equ	0xFE8
   302                           postdec1	equ	0xFE5
   303                           fsr1l	equ	0xFE1
   304                           
   305                           	psect	dataCOMRAM
   306  000045                     __pdataCOMRAM:
   307                           	opt stack 0
   308  000045                     _PWM_duty:
   309                           	opt stack 0
   310  000045                     	ds	2
   311  000047                     _motor1:
   312                           	opt stack 0
   313  000047                     	ds	2
   314  000049                     _count_4:
   315                           	opt stack 0
   316  000049                     	ds	2
   317  00004B                     _count_3:
   318                           	opt stack 0
   319  00004B                     	ds	2
   320  00004D                     _count_2:
   321                           	opt stack 0
   322  00004D                     	ds	2
   323  00004F                     _count_1:
   324                           	opt stack 0
   325  00004F                     	ds	2
   326  000051                     _length:
   327                           	opt stack 0
   328  000051                     	ds	2
   329  000053                     _zero_flag:
   330                           	opt stack 0
   331  000053                     	ds	1
   332                           tblptru	equ	0xFF8
   333                           tblptrh	equ	0xFF7
   334                           tblptrl	equ	0xFF6
   335                           tablat	equ	0xFF5
   336                           postinc0	equ	0xFEE
   337                           wreg	equ	0xFE8
   338                           postdec1	equ	0xFE5
   339                           fsr1l	equ	0xFE1
   340                           
   341                           	psect	bssBANK0
   342  000060                     __pbssBANK0:
   343                           	opt stack 0
   344  000060                     _palabra:
   345                           	opt stack 0
   346  000060                     	ds	20
   347  000074                     _send:
   348                           	opt stack 0
   349  000074                     	ds	7
   350  00007B                     _mot_4_step_count:
   351                           	opt stack 0
   352  00007B                     	ds	2
   353  00007D                     _speed:
   354                           	opt stack 0
   355  00007D                     	ds	2
   356  00007F                     _diameter:
   357                           	opt stack 0
   358  00007F                     	ds	2
   359  000081                     _caliber:
   360                           	opt stack 0
   361  000081                     	ds	2
   362  000083                     _motor2:
   363                           	opt stack 0
   364  000083                     	ds	2
   365                           tblptru	equ	0xFF8
   366                           tblptrh	equ	0xFF7
   367                           tblptrl	equ	0xFF6
   368                           tablat	equ	0xFF5
   369                           postinc0	equ	0xFEE
   370                           wreg	equ	0xFE8
   371                           postdec1	equ	0xFE5
   372                           fsr1l	equ	0xFE1
   373                           
   374                           	psect	dataBANK0
   375  00008D                     __pdataBANK0:
   376                           	opt stack 0
   377  00008D                     _turns:
   378                           	opt stack 0
   379  00008D                     	ds	2
   380                           tblptru	equ	0xFF8
   381                           tblptrh	equ	0xFF7
   382                           tblptrl	equ	0xFF6
   383                           tablat	equ	0xFF5
   384                           postinc0	equ	0xFEE
   385                           wreg	equ	0xFE8
   386                           postdec1	equ	0xFE5
   387                           fsr1l	equ	0xFE1
   388                           
   389                           	psect	cstackBANK0
   390  000085                     __pcstackBANK0:
   391                           	opt stack 0
   392  000085                     ?___wmul:
   393                           	opt stack 0
   394  000085                     ___wmul@multiplier:
   395                           	opt stack 0
   396                           
   397                           ; 2 bytes @ 0x0
   398  000085                     	ds	2
   399  000087                     ___wmul@multiplicand:
   400                           	opt stack 0
   401                           
   402                           ; 2 bytes @ 0x2
   403  000087                     	ds	2
   404  000089                     ___wmul@product:
   405                           	opt stack 0
   406                           
   407                           ; 2 bytes @ 0x4
   408  000089                     	ds	2
   409  00008B                     ??_main:
   410                           
   411                           ; 1 bytes @ 0x6
   412  00008B                     	ds	2
   413                           tblptru	equ	0xFF8
   414                           tblptrh	equ	0xFF7
   415                           tblptrl	equ	0xFF6
   416                           tablat	equ	0xFF5
   417                           postinc0	equ	0xFEE
   418                           wreg	equ	0xFE8
   419                           postdec1	equ	0xFE5
   420                           fsr1l	equ	0xFE1
   421                           
   422                           	psect	cstackCOMRAM
   423  000026                     __pcstackCOMRAM:
   424                           	opt stack 0
   425  000026                     ?i2___wmul:
   426                           	opt stack 0
   427  000026                     i2___wmul@multiplier:
   428                           	opt stack 0
   429                           
   430                           ; 2 bytes @ 0x0
   431  000026                     	ds	2
   432  000028                     i2___wmul@multiplicand:
   433                           	opt stack 0
   434                           
   435                           ; 2 bytes @ 0x2
   436  000028                     	ds	2
   437  00002A                     i2___wmul@product:
   438                           	opt stack 0
   439                           
   440                           ; 2 bytes @ 0x4
   441  00002A                     	ds	2
   442  00002C                     ?_mot_3_step_count:
   443                           	opt stack 0
   444  00002C                     mot_3_step_count@l:
   445                           	opt stack 0
   446                           
   447                           ; 2 bytes @ 0x6
   448  00002C                     	ds	2
   449  00002E                     mot_3_step_count@ms:
   450                           	opt stack 0
   451                           
   452                           ; 2 bytes @ 0x8
   453  00002E                     	ds	2
   454  000030                     ??_mot_3_step_count:
   455                           
   456                           ; 1 bytes @ 0xA
   457  000030                     	ds	2
   458  000032                     ??_high_isr:
   459                           
   460                           ; 1 bytes @ 0xC
   461  000032                     	ds	19
   462                           tblptru	equ	0xFF8
   463                           tblptrh	equ	0xFF7
   464                           tblptrl	equ	0xFF6
   465                           tablat	equ	0xFF5
   466                           postinc0	equ	0xFEE
   467                           wreg	equ	0xFE8
   468                           postdec1	equ	0xFE5
   469                           fsr1l	equ	0xFE1
   470                           
   471 ;;
   472 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   473 ;;
   474 ;; *************** function _main *****************
   475 ;; Defined at:
   476 ;;		line 77 in file "main.c"
   477 ;; Parameters:    Size  Location     Type
   478 ;;		None
   479 ;; Auto vars:     Size  Location     Type
   480 ;;		None
   481 ;; Return value:  Size  Location     Type
   482 ;;                  1    wreg      void 
   483 ;; Registers used:
   484 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   485 ;; Tracked objects:
   486 ;;		On entry : 0/0
   487 ;;		On exit  : 0/0
   488 ;;		Unchanged: 0/0
   489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   490 ;;      Params:         0       0       0       0       0       0       0       0       0
   491 ;;      Locals:         0       0       0       0       0       0       0       0       0
   492 ;;      Temps:          0       2       0       0       0       0       0       0       0
   493 ;;      Totals:         0       2       0       0       0       0       0       0       0
   494 ;;Total ram usage:        2 bytes
   495 ;; Hardware stack levels required when called:    4
   496 ;; This function calls:
   497 ;;		_ConfigureOscillator
   498 ;;		_InitApp
   499 ;;		___wmul
   500 ;;		_zero_mark
   501 ;; This function is called by:
   502 ;;		Startup code after reset
   503 ;; This function uses a non-reentrant model
   504 ;;
   505                           
   506                           	psect	text0
   507  000012                     __ptext0:
   508                           	opt stack 0
   509  000012                     _main:
   510                           	opt stack 27
   511                           
   512                           ;main.c: 79: ConfigureOscillator();
   513                           
   514                           ;incstack = 0
   515  000012  EC61  F003         	call	_ConfigureOscillator	;wreg free
   516                           
   517                           ;main.c: 82: InitApp();
   518  000016  EC8A  F002         	call	_InitApp	;wreg free
   519  00001A                     
   520                           ;main.c: 85: CCPR1L = PWM_duty;
   521  00001A  C045  FFBE         	movff	_PWM_duty,4030	;volatile
   522                           
   523                           ;main.c: 87: LATAbits.LA2 = DIR_1;
   524  00001E  B01D               	btfsc	_DIR_1,0,c
   525  000020  D002               	bra	u1245
   526  000022  9489               	bcf	3977,2,c	;volatile
   527  000024  D001               	bra	u1246
   528  000026                     u1245:
   529  000026  8489               	bsf	3977,2,c	;volatile
   530  000028                     u1246:
   531                           
   532                           ;main.c: 88: LATAbits.LA4 = DIR_2;
   533  000028  B01C               	btfsc	_DIR_2,0,c
   534  00002A  D002               	bra	u1255
   535  00002C  9889               	bcf	3977,4,c	;volatile
   536  00002E  D001               	bra	u1256
   537  000030                     u1255:
   538  000030  8889               	bsf	3977,4,c	;volatile
   539  000032                     u1256:
   540                           
   541                           ;main.c: 89: LATCbits.LC0 = DIR_3;
   542  000032  B023               	btfsc	_DIR_3,0,c
   543  000034  D002               	bra	u1265
   544  000036  908B               	bcf	3979,0,c	;volatile
   545  000038  D001               	bra	u1266
   546  00003A                     u1265:
   547  00003A  808B               	bsf	3979,0,c	;volatile
   548  00003C                     u1266:
   549                           
   550                           ;main.c: 90: LATBbits.LB7 = DIR_4;
   551  00003C  B01B               	btfsc	_DIR_4,0,c
   552  00003E  D002               	bra	u1275
   553  000040  9E8A               	bcf	3978,7,c	;volatile
   554  000042  D001               	bra	u1276
   555  000044                     u1275:
   556  000044  8E8A               	bsf	3978,7,c	;volatile
   557  000046                     u1276:
   558                           
   559                           ;main.c: 91: LATBbits.LB5 = enable;
   560  000046  B019               	btfsc	_enable,0,c
   561  000048  D002               	bra	u1285
   562  00004A  9A8A               	bcf	3978,5,c	;volatile
   563  00004C  D001               	bra	u1286
   564  00004E                     u1285:
   565  00004E  8A8A               	bsf	3978,5,c	;volatile
   566  000050                     u1286:
   567                           
   568                           ;main.c: 92: LATBbits.LB4 = !enable;
   569  000050  5019               	movf	_enable,w,c
   570  000052  A4D8               	btfss	status,2,c
   571  000054  D004               	goto	u1290
   572  000056  0100               	movlb	0	; () banked
   573  000058  6B8B               	clrf	??_main& (0+255),b
   574  00005A  2B8B               	incf	??_main& (0+255),f,b
   575  00005C  D002               	goto	u1308
   576  00005E                     u1290:
   577  00005E  0100               	movlb	0	; () banked
   578  000060  6B8B               	clrf	??_main& (0+255),b
   579  000062                     u1308:
   580  000062  3B8B               	swapf	??_main& (0+255),f,b
   581  000064  508A               	movf	3978,w,c	;volatile
   582  000066  198B               	xorwf	??_main& (0+255),w,b
   583  000068  0BEF               	andlw	-17
   584  00006A  198B               	xorwf	??_main& (0+255),w,b
   585  00006C  6E8A               	movwf	3978,c	;volatile
   586                           
   587                           ; BSR set to: 0
   588                           ;main.c: 94: if (recibi == 1) {
   589  00006E  041F               	decf	_recibi,w,c
   590  000070  A4D8               	btfss	status,2,c
   591  000072  D129               	goto	l191
   592                           
   593                           ; BSR set to: 0
   594                           ;main.c: 96: recibi = 0;
   595  000074  0E00               	movlw	0
   596  000076  6E1F               	movwf	_recibi,c
   597                           
   598                           ; BSR set to: 0
   599                           ;main.c: 98: if (palabra[0] == 'A') {
   600  000078  0E41               	movlw	65
   601  00007A  1960               	xorwf	_palabra& (0+255),w,b
   602  00007C  A4D8               	btfss	status,2,c
   603  00007E  D0A6               	goto	l192
   604                           
   605                           ; BSR set to: 0
   606                           ;main.c: 100: caliber = ((palabra[1] - 48) * 10) + ((palabra[2] - 48));
   607  000080  0ED0               	movlw	208
   608  000082  2561               	addwf	(_palabra+1)& (0+255),w,b
   609  000084  6F85               	movwf	___wmul@multiplier& (0+255),b
   610  000086  6B86               	clrf	(___wmul@multiplier+1)& (0+255),b
   611  000088  0EFF               	movlw	255
   612  00008A  2386               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   613  00008C  0E00               	movlw	0
   614  00008E  6F88               	movwf	(___wmul@multiplicand+1)& (0+255),b
   615  000090  0E0A               	movlw	10
   616  000092  6F87               	movwf	___wmul@multiplicand& (0+255),b
   617  000094  EC15  F003         	call	___wmul	;wreg free
   618  000098  0100               	movlb	0	; () banked
   619  00009A  5162               	movf	(_palabra+2)& (0+255),w,b
   620  00009C  6F8B               	movwf	??_main& (0+255),b
   621  00009E  6B8C               	clrf	(??_main+1)& (0+255),b
   622  0000A0  5185               	movf	?___wmul& (0+255),w,b
   623  0000A2  278B               	addwf	??_main& (0+255),f,b
   624  0000A4  5186               	movf	(?___wmul+1)& (0+255),w,b
   625  0000A6  238C               	addwfc	(??_main+1)& (0+255),f,b
   626  0000A8  0ED0               	movlw	208
   627  0000AA  258B               	addwf	??_main& (0+255),w,b
   628  0000AC  6F81               	movwf	_caliber& (0+255),b
   629  0000AE  0EFF               	movlw	255
   630  0000B0  218C               	addwfc	(??_main+1)& (0+255),w,b
   631  0000B2  6F82               	movwf	(_caliber+1)& (0+255),b
   632                           
   633                           ;main.c: 101: length = ((palabra[3] - 48) * 10000) + ((palabra[4] - 48) * 1000) + ((pala
      +                          bra[5] - 48) * 100) + ((palabra[6] - 48) * 10) + ((palabra[7] - 48));
   634  0000B4  0ED0               	movlw	208
   635  0000B6  2563               	addwf	(_palabra+3)& (0+255),w,b
   636  0000B8  6F85               	movwf	___wmul@multiplier& (0+255),b
   637  0000BA  6B86               	clrf	(___wmul@multiplier+1)& (0+255),b
   638  0000BC  0EFF               	movlw	255
   639  0000BE  2386               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   640  0000C0  0E27               	movlw	39
   641  0000C2  6F88               	movwf	(___wmul@multiplicand+1)& (0+255),b
   642  0000C4  0E10               	movlw	16
   643  0000C6  6F87               	movwf	___wmul@multiplicand& (0+255),b
   644  0000C8  EC15  F003         	call	___wmul	;wreg free
   645  0000CC  0100               	movlb	0	; () banked
   646  0000CE  5167               	movf	(_palabra+7)& (0+255),w,b
   647  0000D0  6F8B               	movwf	??_main& (0+255),b
   648  0000D2  6B8C               	clrf	(??_main+1)& (0+255),b
   649  0000D4  5185               	movf	?___wmul& (0+255),w,b
   650  0000D6  278B               	addwf	??_main& (0+255),f,b
   651  0000D8  5186               	movf	(?___wmul+1)& (0+255),w,b
   652  0000DA  238C               	addwfc	(??_main+1)& (0+255),f,b
   653  0000DC  0ED0               	movlw	208
   654  0000DE  2564               	addwf	(_palabra+4)& (0+255),w,b
   655  0000E0  6F85               	movwf	___wmul@multiplier& (0+255),b
   656  0000E2  6B86               	clrf	(___wmul@multiplier+1)& (0+255),b
   657  0000E4  0EFF               	movlw	255
   658  0000E6  2386               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   659  0000E8  0E03               	movlw	3
   660  0000EA  6F88               	movwf	(___wmul@multiplicand+1)& (0+255),b
   661  0000EC  0EE8               	movlw	232
   662  0000EE  6F87               	movwf	___wmul@multiplicand& (0+255),b
   663  0000F0  EC15  F003         	call	___wmul	;wreg free
   664  0000F4  0100               	movlb	0	; () banked
   665  0000F6  5185               	movf	?___wmul& (0+255),w,b
   666  0000F8  278B               	addwf	??_main& (0+255),f,b
   667  0000FA  5186               	movf	(?___wmul+1)& (0+255),w,b
   668  0000FC  238C               	addwfc	(??_main+1)& (0+255),f,b
   669  0000FE  0ED0               	movlw	208
   670  000100  2565               	addwf	(_palabra+5)& (0+255),w,b
   671  000102  6F85               	movwf	___wmul@multiplier& (0+255),b
   672  000104  6B86               	clrf	(___wmul@multiplier+1)& (0+255),b
   673  000106  0EFF               	movlw	255
   674  000108  2386               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   675  00010A  0E00               	movlw	0
   676  00010C  6F88               	movwf	(___wmul@multiplicand+1)& (0+255),b
   677  00010E  0E64               	movlw	100
   678  000110  6F87               	movwf	___wmul@multiplicand& (0+255),b
   679  000112  EC15  F003         	call	___wmul	;wreg free
   680  000116  0100               	movlb	0	; () banked
   681  000118  5185               	movf	?___wmul& (0+255),w,b
   682  00011A  278B               	addwf	??_main& (0+255),f,b
   683  00011C  5186               	movf	(?___wmul+1)& (0+255),w,b
   684  00011E  238C               	addwfc	(??_main+1)& (0+255),f,b
   685  000120  0ED0               	movlw	208
   686  000122  2566               	addwf	(_palabra+6)& (0+255),w,b
   687  000124  6F85               	movwf	___wmul@multiplier& (0+255),b
   688  000126  6B86               	clrf	(___wmul@multiplier+1)& (0+255),b
   689  000128  0EFF               	movlw	255
   690  00012A  2386               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   691  00012C  0E00               	movlw	0
   692  00012E  6F88               	movwf	(___wmul@multiplicand+1)& (0+255),b
   693  000130  0E0A               	movlw	10
   694  000132  6F87               	movwf	___wmul@multiplicand& (0+255),b
   695  000134  EC15  F003         	call	___wmul	;wreg free
   696  000138  0100               	movlb	0	; () banked
   697  00013A  5185               	movf	?___wmul& (0+255),w,b
   698  00013C  278B               	addwf	??_main& (0+255),f,b
   699  00013E  5186               	movf	(?___wmul+1)& (0+255),w,b
   700  000140  238C               	addwfc	(??_main+1)& (0+255),f,b
   701  000142  0ED0               	movlw	208
   702  000144  258B               	addwf	??_main& (0+255),w,b
   703  000146  6E51               	movwf	_length,c
   704  000148  0EFF               	movlw	255
   705  00014A  218C               	addwfc	(??_main+1)& (0+255),w,b
   706  00014C  6E52               	movwf	_length+1,c
   707                           
   708                           ;main.c: 102: turns = ((palabra[8] - 48) * 1000) + ((palabra[9] - 48) * 100) + ((palabra
      +                          [10] - 48) * 10) + ((palabra[11] - 48));
   709  00014E  0ED0               	movlw	208
   710  000150  2568               	addwf	(_palabra+8)& (0+255),w,b
   711  000152  6F85               	movwf	___wmul@multiplier& (0+255),b
   712  000154  6B86               	clrf	(___wmul@multiplier+1)& (0+255),b
   713  000156  0EFF               	movlw	255
   714  000158  2386               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   715  00015A  0E03               	movlw	3
   716  00015C  6F88               	movwf	(___wmul@multiplicand+1)& (0+255),b
   717  00015E  0EE8               	movlw	232
   718  000160  6F87               	movwf	___wmul@multiplicand& (0+255),b
   719  000162  EC15  F003         	call	___wmul	;wreg free
   720  000166  0100               	movlb	0	; () banked
   721  000168  516B               	movf	(_palabra+11)& (0+255),w,b
   722  00016A  6F8B               	movwf	??_main& (0+255),b
   723  00016C  6B8C               	clrf	(??_main+1)& (0+255),b
   724  00016E  5185               	movf	?___wmul& (0+255),w,b
   725  000170  278B               	addwf	??_main& (0+255),f,b
   726  000172  5186               	movf	(?___wmul+1)& (0+255),w,b
   727  000174  238C               	addwfc	(??_main+1)& (0+255),f,b
   728  000176  0ED0               	movlw	208
   729  000178  2569               	addwf	(_palabra+9)& (0+255),w,b
   730  00017A  6F85               	movwf	___wmul@multiplier& (0+255),b
   731  00017C  6B86               	clrf	(___wmul@multiplier+1)& (0+255),b
   732  00017E  0EFF               	movlw	255
   733  000180  2386               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   734  000182  0E00               	movlw	0
   735  000184  6F88               	movwf	(___wmul@multiplicand+1)& (0+255),b
   736  000186  0E64               	movlw	100
   737  000188  6F87               	movwf	___wmul@multiplicand& (0+255),b
   738  00018A  EC15  F003         	call	___wmul	;wreg free
   739  00018E  0100               	movlb	0	; () banked
   740  000190  5185               	movf	?___wmul& (0+255),w,b
   741  000192  278B               	addwf	??_main& (0+255),f,b
   742  000194  5186               	movf	(?___wmul+1)& (0+255),w,b
   743  000196  238C               	addwfc	(??_main+1)& (0+255),f,b
   744  000198  0ED0               	movlw	208
   745  00019A  256A               	addwf	(_palabra+10)& (0+255),w,b
   746  00019C  6F85               	movwf	___wmul@multiplier& (0+255),b
   747  00019E  6B86               	clrf	(___wmul@multiplier+1)& (0+255),b
   748  0001A0  0EFF               	movlw	255
   749  0001A2  2386               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   750  0001A4  0E00               	movlw	0
   751  0001A6  6F88               	movwf	(___wmul@multiplicand+1)& (0+255),b
   752  0001A8  0E0A               	movlw	10
   753  0001AA  6F87               	movwf	___wmul@multiplicand& (0+255),b
   754  0001AC  EC15  F003         	call	___wmul	;wreg free
   755  0001B0  0100               	movlb	0	; () banked
   756  0001B2  5185               	movf	?___wmul& (0+255),w,b
   757  0001B4  278B               	addwf	??_main& (0+255),f,b
   758  0001B6  5186               	movf	(?___wmul+1)& (0+255),w,b
   759  0001B8  238C               	addwfc	(??_main+1)& (0+255),f,b
   760  0001BA  0ED0               	movlw	208
   761  0001BC  258B               	addwf	??_main& (0+255),w,b
   762  0001BE  6F8D               	movwf	_turns& (0+255),b
   763  0001C0  0EFF               	movlw	255
   764  0001C2  218C               	addwfc	(??_main+1)& (0+255),w,b
   765  0001C4  6F8E               	movwf	(_turns+1)& (0+255),b
   766                           
   767                           ; BSR set to: 0
   768                           ;main.c: 104: param_flag = 1;
   769  0001C6  0E01               	movlw	1
   770  0001C8  6E22               	movwf	_param_flag,c
   771                           
   772                           ;main.c: 105: } else if (palabra[0] == 'B') {
   773  0001CA  D727               	goto	l190
   774  0001CC                     l192:
   775                           
   776                           ; BSR set to: 0
   777                           
   778                           ; BSR set to: 0
   779  0001CC  0E42               	movlw	66
   780  0001CE  1960               	xorwf	_palabra& (0+255),w,b
   781  0001D0  A4D8               	btfss	status,2,c
   782  0001D2  D01B               	goto	l194
   783                           
   784                           ; BSR set to: 0
   785                           ;main.c: 107: PWM_duty = ((palabra[1] - 48) * 10) + ((palabra[2] - 48));
   786  0001D4  0ED0               	movlw	208
   787  0001D6  2561               	addwf	(_palabra+1)& (0+255),w,b
   788  0001D8  6F85               	movwf	___wmul@multiplier& (0+255),b
   789  0001DA  6B86               	clrf	(___wmul@multiplier+1)& (0+255),b
   790  0001DC  0EFF               	movlw	255
   791  0001DE  2386               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   792  0001E0  0E00               	movlw	0
   793  0001E2  6F88               	movwf	(___wmul@multiplicand+1)& (0+255),b
   794  0001E4  0E0A               	movlw	10
   795  0001E6  6F87               	movwf	___wmul@multiplicand& (0+255),b
   796  0001E8  EC15  F003         	call	___wmul	;wreg free
   797  0001EC  0100               	movlb	0	; () banked
   798  0001EE  5162               	movf	(_palabra+2)& (0+255),w,b
   799  0001F0  6F8B               	movwf	??_main& (0+255),b
   800  0001F2  6B8C               	clrf	(??_main+1)& (0+255),b
   801  0001F4  5185               	movf	?___wmul& (0+255),w,b
   802  0001F6  278B               	addwf	??_main& (0+255),f,b
   803  0001F8  5186               	movf	(?___wmul+1)& (0+255),w,b
   804  0001FA  238C               	addwfc	(??_main+1)& (0+255),f,b
   805  0001FC  0ED0               	movlw	208
   806  0001FE  258B               	addwf	??_main& (0+255),w,b
   807  000200  6E45               	movwf	_PWM_duty,c
   808  000202  0EFF               	movlw	255
   809  000204  218C               	addwfc	(??_main+1)& (0+255),w,b
   810  000206  6E46               	movwf	_PWM_duty+1,c
   811                           
   812                           ;main.c: 108: } else if ((palabra[0] == 'D') && (zero_flag)) {
   813  000208  D708               	goto	l190
   814  00020A                     l194:
   815                           
   816                           ; BSR set to: 0
   817                           
   818                           ; BSR set to: 0
   819  00020A  0E44               	movlw	68
   820  00020C  1960               	xorwf	_palabra& (0+255),w,b
   821  00020E  A4D8               	btfss	status,2,c
   822  000210  D025               	goto	l196
   823                           
   824                           ; BSR set to: 0
   825  000212  5053               	movf	_zero_flag,w,c
   826  000214  B4D8               	btfsc	status,2,c
   827  000216  D022               	goto	l196
   828                           
   829                           ; BSR set to: 0
   830                           ;main.c: 110: if (palabra[1] == '0') {
   831  000218  0E30               	movlw	48
   832  00021A  1961               	xorwf	(_palabra+1)& (0+255),w,b
   833  00021C  A4D8               	btfss	status,2,c
   834  00021E  D004               	goto	l197
   835                           
   836                           ; BSR set to: 0
   837                           ;main.c: 112: MOT_3 = 1;
   838  000220  0E01               	movlw	1
   839  000222  6E24               	movwf	_MOT_3,c
   840                           
   841                           ;main.c: 113: DIR_3 = 0;
   842  000224  0E00               	movlw	0
   843  000226  D007               	goto	L1
   844  000228                     l197:
   845                           
   846                           ; BSR set to: 0
   847                           
   848                           ; BSR set to: 0
   849  000228  0E31               	movlw	49
   850  00022A  1961               	xorwf	(_palabra+1)& (0+255),w,b
   851  00022C  A4D8               	btfss	status,2,c
   852  00022E  D005               	goto	l199
   853                           
   854                           ; BSR set to: 0
   855                           ;main.c: 116: MOT_3 = 1;
   856  000230  0E01               	movlw	1
   857  000232  6E24               	movwf	_MOT_3,c
   858                           
   859                           ;main.c: 117: DIR_3 = 1;
   860  000234  0E01               	movlw	1
   861  000236                     L1:
   862  000236  6E23               	movwf	_DIR_3,c
   863                           
   864                           ;main.c: 118: } else if (palabra[1] == '2') {
   865  000238  D6F0               	goto	l190
   866  00023A                     l199:
   867                           
   868                           ; BSR set to: 0
   869                           
   870                           ; BSR set to: 0
   871  00023A  0E32               	movlw	50
   872  00023C  1961               	xorwf	(_palabra+1)& (0+255),w,b
   873  00023E  B4D8               	btfsc	status,2,c
   874  000240  D033               	goto	u1500
   875                           
   876                           ; BSR set to: 0
   877                           
   878                           ; BSR set to: 0
   879                           
   880                           ;main.c: 121: } else if (palabra[1] == '3') {
   881                           
   882                           ; BSR set to: 0
   883                           ;main.c: 120: MOT_3 = 0;
   884  000242  0E33               	movlw	51
   885  000244  1961               	xorwf	(_palabra+1)& (0+255),w,b
   886  000246  A4D8               	btfss	status,2,c
   887  000248  D6E8               	goto	l190
   888                           
   889                           ; BSR set to: 0
   890                           ;main.c: 123: if ((MOT_3 == 0) && (param_flag)) {
   891  00024A  5024               	movf	_MOT_3,w,c
   892  00024C  A4D8               	btfss	status,2,c
   893  00024E  D6E5               	goto	l190
   894                           
   895                           ; BSR set to: 0
   896  000250  5022               	movf	_param_flag,w,c
   897  000252  B4D8               	btfsc	status,2,c
   898  000254  D6E2               	goto	l190
   899                           
   900                           ; BSR set to: 0
   901                           ;main.c: 125: zero_mark();
   902  000256  EC4E  F003         	call	_zero_mark	;wreg free
   903                           
   904                           ;main.c: 126: }
   905                           ;main.c: 127: }
   906                           ;main.c: 130: } else if (palabra[0] == 'M') {
   907  00025A  D6DF               	goto	l190
   908  00025C                     l196:
   909  00025C  0E4D               	movlw	77
   910  00025E  0100               	movlb	0	; () banked
   911  000260  1960               	xorwf	_palabra& (0+255),w,b
   912  000262  A4D8               	btfss	status,2,c
   913  000264  D024               	goto	l206
   914                           
   915                           ; BSR set to: 0
   916                           ;main.c: 132: if (palabra[1] == '1') {
   917  000266  0E31               	movlw	49
   918  000268  1961               	xorwf	(_palabra+1)& (0+255),w,b
   919  00026A  A4D8               	btfss	status,2,c
   920  00026C  D008               	goto	l207
   921                           
   922                           ; BSR set to: 0
   923                           ;main.c: 133: MOT_1 = !MOT_1;
   924  00026E  5025               	movf	_MOT_1,w,c
   925  000270  A4D8               	btfss	status,2,c
   926  000272  D002               	goto	u1440
   927  000274  0E01               	movlw	1
   928  000276  D001               	goto	u1450
   929  000278                     u1440:
   930  000278  0E00               	movlw	0
   931  00027A                     u1450:
   932  00027A  6E25               	movwf	_MOT_1,c
   933                           
   934                           ;main.c: 134: } else if (palabra[1] == '2') {
   935  00027C  D6CE               	goto	l190
   936  00027E                     l207:
   937                           
   938                           ; BSR set to: 0
   939                           
   940                           ; BSR set to: 0
   941  00027E  0E32               	movlw	50
   942  000280  1961               	xorwf	(_palabra+1)& (0+255),w,b
   943  000282  A4D8               	btfss	status,2,c
   944  000284  D008               	goto	l209
   945                           
   946                           ; BSR set to: 0
   947                           ;main.c: 135: MOT_2 = !MOT_2;
   948  000286  5021               	movf	_MOT_2,w,c
   949  000288  A4D8               	btfss	status,2,c
   950  00028A  D002               	goto	u1470
   951  00028C  0E01               	movlw	1
   952  00028E  D001               	goto	u1480
   953  000290                     u1470:
   954  000290  0E00               	movlw	0
   955  000292                     u1480:
   956  000292  6E21               	movwf	_MOT_2,c
   957                           
   958                           ;main.c: 136: } else if (palabra[1] == '3') {
   959  000294  D6C2               	goto	l190
   960  000296                     l209:
   961                           
   962                           ; BSR set to: 0
   963                           
   964                           ; BSR set to: 0
   965  000296  0E33               	movlw	51
   966  000298  1961               	xorwf	(_palabra+1)& (0+255),w,b
   967  00029A  A4D8               	btfss	status,2,c
   968  00029C  D6BE               	goto	l190
   969                           
   970                           ; BSR set to: 0
   971                           ;main.c: 137: MOT_3 = !MOT_3;
   972  00029E  5024               	movf	_MOT_3,w,c
   973  0002A0  A4D8               	btfss	status,2,c
   974  0002A2  D002               	goto	u1500
   975  0002A4  0E01               	movlw	1
   976  0002A6  D001               	goto	u1510
   977  0002A8                     u1500:
   978  0002A8  0E00               	movlw	0
   979  0002AA                     u1510:
   980  0002AA  6E24               	movwf	_MOT_3,c
   981                           
   982                           ; BSR set to: 0
   983                           ;main.c: 138: }
   984                           ;main.c: 139: } else if (palabra[0] == 'N') {
   985                           
   986                           ; BSR set to: 0
   987                           
   988                           ; BSR set to: 0
   989  0002AC  D6B6               	goto	l190
   990  0002AE                     l206:
   991                           
   992                           ; BSR set to: 0
   993                           
   994                           ; BSR set to: 0
   995  0002AE  0E4E               	movlw	78
   996  0002B0  1960               	xorwf	_palabra& (0+255),w,b
   997  0002B2  A4D8               	btfss	status,2,c
   998  0002B4  D6B2               	goto	l190
   999                           
  1000                           ; BSR set to: 0
  1001                           ;main.c: 141: enable = !enable;
  1002  0002B6  5019               	movf	_enable,w,c
  1003  0002B8  A4D8               	btfss	status,2,c
  1004  0002BA  D002               	goto	u1530
  1005  0002BC  0E01               	movlw	1
  1006  0002BE  D001               	goto	u1540
  1007  0002C0                     u1530:
  1008  0002C0  0E00               	movlw	0
  1009  0002C2                     u1540:
  1010  0002C2  6E19               	movwf	_enable,c
  1011                           
  1012                           ; BSR set to: 0
  1013                           ;main.c: 142: }
  1014                           ;main.c: 144: } else if (GODONE == 0) {
  1015                           
  1016                           ; BSR set to: 0
  1017                           
  1018                           ; BSR set to: 0
  1019                           
  1020                           ; BSR set to: 0
  1021                           
  1022                           ; BSR set to: 0
  1023  0002C4  D6AA               	goto	l190
  1024  0002C6                     l191:
  1025                           
  1026                           ; BSR set to: 0
  1027  0002C6  B2C2               	btfsc	4034,1,c	;volatile
  1028  0002C8  D6A8               	goto	l190
  1029                           
  1030                           ; BSR set to: 0
  1031                           ;main.c: 146: _delay((unsigned long)((4)*(8000000/4000.0)));
  1032  0002CA  0E0B               	movlw	11
  1033  0002CC  0100               	movlb	0	; () banked
  1034  0002CE  6F8B               	movwf	??_main& (0+255),b
  1035  0002D0  0E62               	movlw	98
  1036  0002D2                     u1567:
  1037  0002D2  2EE8               	decfsz	wreg,f,c
  1038  0002D4  D7FE               	bra	u1567
  1039  0002D6  2F8B               	decfsz	??_main& (0+255),f,b
  1040  0002D8  D7FC               	bra	u1567
  1041  0002DA  F000               	nop	
  1042                           
  1043                           ;main.c: 148: GODONE = 1;
  1044  0002DC  82C2               	bsf	4034,1,c	;volatile
  1045  0002DE  D69D               	goto	l190
  1046  0002E0                     __end_of_main:
  1047                           	opt stack 0
  1048                           tblptru	equ	0xFF8
  1049                           tblptrh	equ	0xFF7
  1050                           tblptrl	equ	0xFF6
  1051                           tablat	equ	0xFF5
  1052                           postinc0	equ	0xFEE
  1053                           wreg	equ	0xFE8
  1054                           postdec1	equ	0xFE5
  1055                           fsr1l	equ	0xFE1
  1056                           status	equ	0xFD8
  1057                           
  1058 ;; *************** function _zero_mark *****************
  1059 ;; Defined at:
  1060 ;;		line 173 in file "main.c"
  1061 ;; Parameters:    Size  Location     Type
  1062 ;;		None
  1063 ;; Auto vars:     Size  Location     Type
  1064 ;;		None
  1065 ;; Return value:  Size  Location     Type
  1066 ;;                  1    wreg      void 
  1067 ;; Registers used:
  1068 ;;		wreg, status,2
  1069 ;; Tracked objects:
  1070 ;;		On entry : 0/0
  1071 ;;		On exit  : 0/0
  1072 ;;		Unchanged: 0/0
  1073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1074 ;;      Params:         0       0       0       0       0       0       0       0       0
  1075 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1076 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1077 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1078 ;;Total ram usage:        0 bytes
  1079 ;; Hardware stack levels used:    1
  1080 ;; Hardware stack levels required when called:    3
  1081 ;; This function calls:
  1082 ;;		Nothing
  1083 ;; This function is called by:
  1084 ;;		_main
  1085 ;; This function uses a non-reentrant model
  1086 ;;
  1087                           
  1088                           	psect	text1
  1089  00069C                     __ptext1:
  1090                           	opt stack 0
  1091  00069C                     _zero_mark:
  1092                           	opt stack 27
  1093                           
  1094                           ;main.c: 174: DIR_3 = 1;
  1095                           
  1096                           ;incstack = 0
  1097  00069C  0E01               	movlw	1
  1098  00069E  6E23               	movwf	_DIR_3,c
  1099                           
  1100                           ;main.c: 175: T1CONbits.TMR1ON = 0;
  1101  0006A0  90CD               	bcf	4045,0,c	;volatile
  1102                           
  1103                           ;main.c: 176: T0CONbits.TMR0ON = 1;
  1104  0006A2  8ED5               	bsf	4053,7,c	;volatile
  1105                           
  1106                           ;main.c: 177: zero_flag = 0;
  1107  0006A4  0E00               	movlw	0
  1108  0006A6  6E53               	movwf	_zero_flag,c
  1109                           
  1110                           ;main.c: 178: MOT_1 = 1;
  1111  0006A8  0E01               	movlw	1
  1112  0006AA  6E25               	movwf	_MOT_1,c
  1113                           
  1114                           ;main.c: 179: MOT_3 = 1;
  1115  0006AC  0E01               	movlw	1
  1116  0006AE  6E24               	movwf	_MOT_3,c
  1117  0006B0  0012               	return		;funcret
  1118  0006B2                     __end_of_zero_mark:
  1119                           	opt stack 0
  1120                           tblptru	equ	0xFF8
  1121                           tblptrh	equ	0xFF7
  1122                           tblptrl	equ	0xFF6
  1123                           tablat	equ	0xFF5
  1124                           postinc0	equ	0xFEE
  1125                           wreg	equ	0xFE8
  1126                           postdec1	equ	0xFE5
  1127                           fsr1l	equ	0xFE1
  1128                           status	equ	0xFD8
  1129                           
  1130 ;; *************** function ___wmul *****************
  1131 ;; Defined at:
  1132 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
  1133 ;; Parameters:    Size  Location     Type
  1134 ;;  multiplier      2    0[BANK0 ] unsigned int 
  1135 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  1136 ;; Auto vars:     Size  Location     Type
  1137 ;;  product         2    4[BANK0 ] unsigned int 
  1138 ;; Return value:  Size  Location     Type
  1139 ;;                  2    0[BANK0 ] unsigned int 
  1140 ;; Registers used:
  1141 ;;		wreg, status,2, status,0, prodl, prodh
  1142 ;; Tracked objects:
  1143 ;;		On entry : 0/0
  1144 ;;		On exit  : 0/0
  1145 ;;		Unchanged: 0/0
  1146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1147 ;;      Params:         0       4       0       0       0       0       0       0       0
  1148 ;;      Locals:         0       2       0       0       0       0       0       0       0
  1149 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1150 ;;      Totals:         0       6       0       0       0       0       0       0       0
  1151 ;;Total ram usage:        6 bytes
  1152 ;; Hardware stack levels used:    1
  1153 ;; Hardware stack levels required when called:    3
  1154 ;; This function calls:
  1155 ;;		Nothing
  1156 ;; This function is called by:
  1157 ;;		_main
  1158 ;; This function uses a non-reentrant model
  1159 ;;
  1160                           
  1161                           	psect	text2
  1162  00062A                     __ptext2:
  1163                           	opt stack 0
  1164  00062A                     ___wmul:
  1165                           	opt stack 27
  1166                           
  1167                           ;incstack = 0
  1168  00062A  0100               	movlb	0	; () banked
  1169  00062C  5185               	movf	___wmul@multiplier& (0+255),w,b
  1170  00062E  0387               	mulwf	___wmul@multiplicand& (0+255),b
  1171  000630  CFF3 F089          	movff	prodl,___wmul@product
  1172  000634  CFF4 F08A          	movff	prodh,___wmul@product+1
  1173  000638  5185               	movf	___wmul@multiplier& (0+255),w,b
  1174  00063A  0388               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  1175  00063C  50F3               	movf	prodl,w,c
  1176  00063E  278A               	addwf	(___wmul@product+1)& (0+255),f,b
  1177  000640  5186               	movf	(___wmul@multiplier+1)& (0+255),w,b
  1178  000642  0387               	mulwf	___wmul@multiplicand& (0+255),b
  1179  000644  50F3               	movf	prodl,w,c
  1180  000646  278A               	addwf	(___wmul@product+1)& (0+255),f,b
  1181                           
  1182                           ; BSR set to: 0
  1183  000648  C089  F085         	movff	___wmul@product,?___wmul
  1184  00064C  C08A  F086         	movff	___wmul@product+1,?___wmul+1
  1185  000650  0012               	return	
  1186  000652                     __end_of___wmul:
  1187                           	opt stack 0
  1188                           tblptru	equ	0xFF8
  1189                           tblptrh	equ	0xFF7
  1190                           tblptrl	equ	0xFF6
  1191                           tablat	equ	0xFF5
  1192                           prodh	equ	0xFF4
  1193                           prodl	equ	0xFF3
  1194                           postinc0	equ	0xFEE
  1195                           wreg	equ	0xFE8
  1196                           postdec1	equ	0xFE5
  1197                           fsr1l	equ	0xFE1
  1198                           status	equ	0xFD8
  1199                           
  1200 ;; *************** function _InitApp *****************
  1201 ;; Defined at:
  1202 ;;		line 33 in file "user.c"
  1203 ;; Parameters:    Size  Location     Type
  1204 ;;		None
  1205 ;; Auto vars:     Size  Location     Type
  1206 ;;		None
  1207 ;; Return value:  Size  Location     Type
  1208 ;;                  1    wreg      void 
  1209 ;; Registers used:
  1210 ;;		wreg, status,2
  1211 ;; Tracked objects:
  1212 ;;		On entry : 0/0
  1213 ;;		On exit  : 0/0
  1214 ;;		Unchanged: 0/0
  1215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1216 ;;      Params:         0       0       0       0       0       0       0       0       0
  1217 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1218 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1219 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1220 ;;Total ram usage:        0 bytes
  1221 ;; Hardware stack levels used:    1
  1222 ;; Hardware stack levels required when called:    3
  1223 ;; This function calls:
  1224 ;;		Nothing
  1225 ;; This function is called by:
  1226 ;;		_main
  1227 ;; This function uses a non-reentrant model
  1228 ;;
  1229                           
  1230                           	psect	text3
  1231  000514                     __ptext3:
  1232                           	opt stack 0
  1233  000514                     _InitApp:
  1234                           	opt stack 27
  1235                           
  1236                           ;user.c: 35: PORTA = 0;
  1237                           
  1238                           ; BSR set to: 0
  1239                           ;incstack = 0
  1240  000514  0E00               	movlw	0
  1241  000516  6E80               	movwf	3968,c	;volatile
  1242                           
  1243                           ;user.c: 36: LATA = 0;
  1244  000518  0E00               	movlw	0
  1245  00051A  6E89               	movwf	3977,c	;volatile
  1246                           
  1247                           ;user.c: 37: PORTB = 0;
  1248  00051C  0E00               	movlw	0
  1249  00051E  6E81               	movwf	3969,c	;volatile
  1250                           
  1251                           ;user.c: 38: LATB = 0;
  1252  000520  0E00               	movlw	0
  1253  000522  6E8A               	movwf	3978,c	;volatile
  1254                           
  1255                           ;user.c: 39: PORTC = 0;
  1256  000524  0E00               	movlw	0
  1257  000526  6E82               	movwf	3970,c	;volatile
  1258                           
  1259                           ;user.c: 40: LATC = 0;
  1260  000528  0E00               	movlw	0
  1261  00052A  6E8B               	movwf	3979,c	;volatile
  1262                           
  1263                           ;user.c: 42: ADCON1 = 0b1101;
  1264  00052C  0E0D               	movlw	13
  1265  00052E  6EC1               	movwf	4033,c	;volatile
  1266                           
  1267                           ;user.c: 43: TRISAbits.TRISA0 = 1;
  1268  000530  8092               	bsf	3986,0,c	;volatile
  1269                           
  1270                           ;user.c: 44: ADCON0bits.CHS = 0;
  1271  000532  94C2               	bcf	4034,2,c	;volatile
  1272  000534  96C2               	bcf	4034,3,c	;volatile
  1273  000536  98C2               	bcf	4034,4,c	;volatile
  1274  000538  9AC2               	bcf	4034,5,c	;volatile
  1275                           
  1276                           ;user.c: 45: ADCON2 = 0b10101100;
  1277  00053A  0EAC               	movlw	172
  1278  00053C  6EC0               	movwf	4032,c	;volatile
  1279                           
  1280                           ;user.c: 46: PIE1bits.ADIE = 1;
  1281  00053E  8C9D               	bsf	3997,6,c	;volatile
  1282                           
  1283                           ;user.c: 47: PIR1bits.ADIF = 0;
  1284  000540  9C9E               	bcf	3998,6,c	;volatile
  1285                           
  1286                           ;user.c: 48: ADCON0bits.ADON = 1;
  1287  000542  80C2               	bsf	4034,0,c	;volatile
  1288                           
  1289                           ;user.c: 50: TRISAbits.RA2 = 0;
  1290  000544  9492               	bcf	3986,2,c	;volatile
  1291                           
  1292                           ;user.c: 51: TRISAbits.RA3 = 0;
  1293  000546  9692               	bcf	3986,3,c	;volatile
  1294                           
  1295                           ;user.c: 52: TRISAbits.RA4 = 0;
  1296  000548  9892               	bcf	3986,4,c	;volatile
  1297                           
  1298                           ;user.c: 53: TRISAbits.RA5 = 0;
  1299  00054A  9A92               	bcf	3986,5,c	;volatile
  1300                           
  1301                           ;user.c: 54: TRISCbits.RC0 = 0;
  1302  00054C  9094               	bcf	3988,0,c	;volatile
  1303                           
  1304                           ;user.c: 55: TRISCbits.RC1 = 0;
  1305  00054E  9294               	bcf	3988,1,c	;volatile
  1306                           
  1307                           ;user.c: 56: TRISBbits.RB7 = 0;
  1308  000550  9E93               	bcf	3987,7,c	;volatile
  1309                           
  1310                           ;user.c: 57: TRISBbits.RB6 = 0;
  1311  000552  9C93               	bcf	3987,6,c	;volatile
  1312                           
  1313                           ;user.c: 58: TRISCbits.RC2 = 0;
  1314  000554  9494               	bcf	3988,2,c	;volatile
  1315                           
  1316                           ;user.c: 59: TRISBbits.RB4 = 0;
  1317  000556  9893               	bcf	3987,4,c	;volatile
  1318                           
  1319                           ;user.c: 60: TRISBbits.RB5 = 0;
  1320  000558  9A93               	bcf	3987,5,c	;volatile
  1321                           
  1322                           ;user.c: 62: RCONbits.IPEN = 0;
  1323  00055A  9ED0               	bcf	4048,7,c	;volatile
  1324                           
  1325                           ;user.c: 64: INTCONbits.GIE = 1;
  1326  00055C  8EF2               	bsf	intcon,7,c	;volatile
  1327                           
  1328                           ;user.c: 65: INTCONbits.PEIE = 1;
  1329  00055E  8CF2               	bsf	intcon,6,c	;volatile
  1330                           
  1331                           ;user.c: 66: INTCONbits.TMR0IE = 1;
  1332  000560  8AF2               	bsf	intcon,5,c	;volatile
  1333                           
  1334                           ;user.c: 67: INTCONbits.TMR0IF = 0;
  1335  000562  94F2               	bcf	intcon,2,c	;volatile
  1336                           
  1337                           ;user.c: 68: INTCON2bits.TMR0IP = 1;
  1338  000564  84F1               	bsf	intcon2,2,c	;volatile
  1339                           
  1340                           ;user.c: 69: T0CONbits.T08BIT = 1;
  1341  000566  8CD5               	bsf	4053,6,c	;volatile
  1342                           
  1343                           ;user.c: 70: T0CONbits.T0CS = 0;
  1344  000568  9AD5               	bcf	4053,5,c	;volatile
  1345                           
  1346                           ;user.c: 71: T0CONbits.PSA = 0;
  1347  00056A  96D5               	bcf	4053,3,c	;volatile
  1348                           
  1349                           ;user.c: 72: T0CONbits.T0PS = 0b101;
  1350  00056C  50D5               	movf	4053,w,c	;volatile
  1351  00056E  0BF8               	andlw	-8
  1352  000570  0905               	iorlw	5
  1353  000572  6ED5               	movwf	4053,c	;volatile
  1354                           
  1355                           ;user.c: 73: T0CONbits.TMR0ON = 0;
  1356  000574  9ED5               	bcf	4053,7,c	;volatile
  1357                           
  1358                           ;user.c: 74: TMR0 = 0x6;
  1359  000576  0E00               	movlw	0
  1360  000578  6ED7               	movwf	4055,c	;volatile
  1361  00057A  0E06               	movlw	6
  1362  00057C  6ED6               	movwf	4054,c	;volatile
  1363                           
  1364                           ;user.c: 76: PIE1bits.TMR1IE = 1;
  1365  00057E  809D               	bsf	3997,0,c	;volatile
  1366                           
  1367                           ;user.c: 77: PIR1bits.TMR1IF = 0;
  1368  000580  909E               	bcf	3998,0,c	;volatile
  1369                           
  1370                           ;user.c: 78: IPR1bits.TMR1IP = 1;
  1371  000582  809F               	bsf	3999,0,c	;volatile
  1372                           
  1373                           ;user.c: 79: T1CONbits.TMR1CS = 0;
  1374  000584  92CD               	bcf	4045,1,c	;volatile
  1375                           
  1376                           ;user.c: 80: T1CONbits.T1CKPS = 0b00;
  1377  000586  0ECF               	movlw	-49
  1378  000588  16CD               	andwf	4045,f,c	;volatile
  1379                           
  1380                           ;user.c: 81: T1CONbits.TMR1ON = 1;
  1381  00058A  80CD               	bsf	4045,0,c	;volatile
  1382                           
  1383                           ;user.c: 85: TRISBbits.RB1 = 1;
  1384  00058C  8293               	bsf	3987,1,c	;volatile
  1385                           
  1386                           ;user.c: 86: TRISBbits.RB2 = 1;
  1387  00058E  8493               	bsf	3987,2,c	;volatile
  1388                           
  1389                           ;user.c: 87: INTCON3bits.INT1IE = 1;
  1390  000590  86F0               	bsf	intcon3,3,c	;volatile
  1391                           
  1392                           ;user.c: 88: INTCON3bits.INT2IE = 1;
  1393  000592  88F0               	bsf	intcon3,4,c	;volatile
  1394                           
  1395                           ;user.c: 89: INTCON3bits.INT1IF = 0;
  1396  000594  90F0               	bcf	intcon3,0,c	;volatile
  1397                           
  1398                           ;user.c: 90: INTCON3bits.INT2IF = 0;
  1399  000596  92F0               	bcf	intcon3,1,c	;volatile
  1400                           
  1401                           ;user.c: 91: INTCON2bits.INTEDG1 = 0;
  1402  000598  9AF1               	bcf	intcon2,5,c	;volatile
  1403                           
  1404                           ;user.c: 92: INTCON2bits.INTEDG2 = 0;
  1405  00059A  98F1               	bcf	intcon2,4,c	;volatile
  1406                           
  1407                           ;user.c: 94: TRISCbits.RC6 = 0;
  1408  00059C  9C94               	bcf	3988,6,c	;volatile
  1409                           
  1410                           ;user.c: 95: TRISCbits.RC7 = 1;
  1411  00059E  8E94               	bsf	3988,7,c	;volatile
  1412                           
  1413                           ;user.c: 96: BRGH = 1;
  1414  0005A0  84AC               	bsf	4012,2,c	;volatile
  1415                           
  1416                           ;user.c: 97: BRG16 = 1;
  1417  0005A2  86B8               	bsf	4024,3,c	;volatile
  1418                           
  1419                           ;user.c: 98: SPBRG = 207;
  1420  0005A4  0ECF               	movlw	207
  1421  0005A6  6EAF               	movwf	4015,c	;volatile
  1422                           
  1423                           ;user.c: 99: SPEN = 1;
  1424  0005A8  8EAB               	bsf	4011,7,c	;volatile
  1425                           
  1426                           ;user.c: 100: SYNC = 0;
  1427  0005AA  98AC               	bcf	4012,4,c	;volatile
  1428                           
  1429                           ;user.c: 101: TXEN = 1;
  1430  0005AC  8AAC               	bsf	4012,5,c	;volatile
  1431                           
  1432                           ;user.c: 102: CREN = 1;
  1433  0005AE  88AB               	bsf	4011,4,c	;volatile
  1434                           
  1435                           ;user.c: 103: TX9 = 0;
  1436  0005B0  9CAC               	bcf	4012,6,c	;volatile
  1437                           
  1438                           ;user.c: 104: RX9 = 0;
  1439  0005B2  9CAB               	bcf	4011,6,c	;volatile
  1440                           
  1441                           ;user.c: 105: RCIE = 1;
  1442  0005B4  8A9D               	bsf	3997,5,c	;volatile
  1443                           
  1444                           ;user.c: 106: TXIE = 0;
  1445  0005B6  989D               	bcf	3997,4,c	;volatile
  1446                           
  1447                           ;user.c: 108: PR2 = 99;
  1448  0005B8  0E63               	movlw	99
  1449  0005BA  6ECB               	movwf	4043,c	;volatile
  1450                           
  1451                           ;user.c: 109: CCP1CONbits.DC1B = 0;
  1452  0005BC  0ECF               	movlw	-49
  1453  0005BE  16BD               	andwf	4029,f,c	;volatile
  1454                           
  1455                           ;user.c: 110: T2CONbits.T2CKPS = 0b00;
  1456  0005C0  0EFC               	movlw	-4
  1457  0005C2  16CA               	andwf	4042,f,c	;volatile
  1458                           
  1459                           ;user.c: 111: T2CONbits.TMR2ON = 1;
  1460  0005C4  84CA               	bsf	4042,2,c	;volatile
  1461                           
  1462                           ;user.c: 112: CCP1CONbits.CCP1M = 0b1111;
  1463  0005C6  80BD               	bsf	4029,0,c	;volatile
  1464  0005C8  82BD               	bsf	4029,1,c	;volatile
  1465  0005CA  84BD               	bsf	4029,2,c	;volatile
  1466  0005CC  86BD               	bsf	4029,3,c	;volatile
  1467  0005CE  0012               	return		;funcret
  1468  0005D0                     __end_of_InitApp:
  1469                           	opt stack 0
  1470                           tblptru	equ	0xFF8
  1471                           tblptrh	equ	0xFF7
  1472                           tblptrl	equ	0xFF6
  1473                           tablat	equ	0xFF5
  1474                           prodh	equ	0xFF4
  1475                           prodl	equ	0xFF3
  1476                           intcon	equ	0xFF2
  1477                           intcon2	equ	0xFF1
  1478                           intcon3	equ	0xFF0
  1479                           postinc0	equ	0xFEE
  1480                           wreg	equ	0xFE8
  1481                           postdec1	equ	0xFE5
  1482                           fsr1l	equ	0xFE1
  1483                           status	equ	0xFD8
  1484                           
  1485 ;; *************** function _ConfigureOscillator *****************
  1486 ;; Defined at:
  1487 ;;		line 24 in file "system.c"
  1488 ;; Parameters:    Size  Location     Type
  1489 ;;		None
  1490 ;; Auto vars:     Size  Location     Type
  1491 ;;		None
  1492 ;; Return value:  Size  Location     Type
  1493 ;;                  1    wreg      void 
  1494 ;; Registers used:
  1495 ;;		wreg, status,2
  1496 ;; Tracked objects:
  1497 ;;		On entry : 0/0
  1498 ;;		On exit  : 0/0
  1499 ;;		Unchanged: 0/0
  1500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1501 ;;      Params:         0       0       0       0       0       0       0       0       0
  1502 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1503 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1504 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1505 ;;Total ram usage:        0 bytes
  1506 ;; Hardware stack levels used:    1
  1507 ;; Hardware stack levels required when called:    3
  1508 ;; This function calls:
  1509 ;;		Nothing
  1510 ;; This function is called by:
  1511 ;;		_main
  1512 ;; This function uses a non-reentrant model
  1513 ;;
  1514                           
  1515                           	psect	text4
  1516  0006C2                     __ptext4:
  1517                           	opt stack 0
  1518  0006C2                     _ConfigureOscillator:
  1519                           	opt stack 27
  1520                           
  1521                           ;system.c: 27: OSCCONbits.IRCF = 0b111;
  1522                           
  1523                           ;incstack = 0
  1524  0006C2  88D3               	bsf	4051,4,c	;volatile
  1525  0006C4  8AD3               	bsf	4051,5,c	;volatile
  1526  0006C6  8CD3               	bsf	4051,6,c	;volatile
  1527                           
  1528                           ;system.c: 28: OSCCONbits.SCS = 0b11;
  1529  0006C8  0E03               	movlw	3
  1530  0006CA  12D3               	iorwf	4051,f,c	;volatile
  1531  0006CC  0012               	return		;funcret
  1532  0006CE                     __end_of_ConfigureOscillator:
  1533                           	opt stack 0
  1534                           tblptru	equ	0xFF8
  1535                           tblptrh	equ	0xFF7
  1536                           tblptrl	equ	0xFF6
  1537                           tablat	equ	0xFF5
  1538                           prodh	equ	0xFF4
  1539                           prodl	equ	0xFF3
  1540                           intcon	equ	0xFF2
  1541                           intcon2	equ	0xFF1
  1542                           intcon3	equ	0xFF0
  1543                           postinc0	equ	0xFEE
  1544                           wreg	equ	0xFE8
  1545                           postdec1	equ	0xFE5
  1546                           fsr1l	equ	0xFE1
  1547                           status	equ	0xFD8
  1548                           
  1549 ;; *************** function _high_isr *****************
  1550 ;; Defined at:
  1551 ;;		line 72 in file "interrupts.c"
  1552 ;; Parameters:    Size  Location     Type
  1553 ;;		None
  1554 ;; Auto vars:     Size  Location     Type
  1555 ;;		None
  1556 ;; Return value:  Size  Location     Type
  1557 ;;                  1    wreg      void 
  1558 ;; Registers used:
  1559 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1560 ;; Tracked objects:
  1561 ;;		On entry : 0/0
  1562 ;;		On exit  : 0/0
  1563 ;;		Unchanged: 0/0
  1564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1565 ;;      Params:         0       0       0       0       0       0       0       0       0
  1566 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1567 ;;      Temps:         19       0       0       0       0       0       0       0       0
  1568 ;;      Totals:        19       0       0       0       0       0       0       0       0
  1569 ;;Total ram usage:       19 bytes
  1570 ;; Hardware stack levels used:    1
  1571 ;; Hardware stack levels required when called:    2
  1572 ;; This function calls:
  1573 ;;		_mot_3_step_count
  1574 ;; This function is called by:
  1575 ;;		Interrupt level 2
  1576 ;; This function uses a non-reentrant model
  1577 ;;
  1578                           
  1579                           	psect	intcode
  1580  000008                     __pintcode:
  1581                           	opt stack 0
  1582  000008                     _high_isr:
  1583                           	opt stack 27
  1584                           
  1585                           ;incstack = 0
  1586  000008  8254               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  1587  00000A  ED70  F001         	call	int_func,f	;refresh shadow registers
  1588                           tblptru	equ	0xFF8
  1589                           tblptrh	equ	0xFF7
  1590                           tblptrl	equ	0xFF6
  1591                           tablat	equ	0xFF5
  1592                           prodh	equ	0xFF4
  1593                           prodl	equ	0xFF3
  1594                           intcon	equ	0xFF2
  1595                           intcon2	equ	0xFF1
  1596                           intcon3	equ	0xFF0
  1597                           postinc0	equ	0xFEE
  1598                           wreg	equ	0xFE8
  1599                           postdec1	equ	0xFE5
  1600                           fsr1l	equ	0xFE1
  1601                           status	equ	0xFD8
  1602                           
  1603                           	psect	intcode_body
  1604  0002E0                     __pintcode_body:
  1605                           	opt stack 27
  1606  0002E0                     int_func:
  1607                           	opt stack 27
  1608  0002E0  0006               	pop		; remove dummy address from shadow register refresh
  1609  0002E2  CFFA F033          	movff	pclath,??_high_isr+1
  1610  0002E6  CFFB F034          	movff	pclatu,??_high_isr+2
  1611  0002EA  CFE9 F035          	movff	fsr0l,??_high_isr+3
  1612  0002EE  CFEA F036          	movff	fsr0h,??_high_isr+4
  1613  0002F2  CFE1 F037          	movff	fsr1l,??_high_isr+5
  1614  0002F6  CFE2 F038          	movff	fsr1h,??_high_isr+6
  1615  0002FA  CFD9 F039          	movff	fsr2l,??_high_isr+7
  1616  0002FE  CFDA F03A          	movff	fsr2h,??_high_isr+8
  1617  000302  CFF3 F03B          	movff	prodl,??_high_isr+9
  1618  000306  CFF4 F03C          	movff	prodh,??_high_isr+10
  1619  00030A  CFF6 F03D          	movff	tblptrl,??_high_isr+11
  1620  00030E  CFF7 F03E          	movff	tblptrh,??_high_isr+12
  1621  000312  CFF8 F03F          	movff	tblptru,??_high_isr+13
  1622  000316  CFF5 F040          	movff	tablat,??_high_isr+14
  1623  00031A  C054  F041         	movff	btemp,??_high_isr+15
  1624  00031E  C055  F042         	movff	btemp+1,??_high_isr+16
  1625  000322  C056  F043         	movff	btemp+2,??_high_isr+17
  1626  000326  C057  F044         	movff	btemp+3,??_high_isr+18
  1627                           
  1628                           ;interrupts.c: 73: if (INTCONbits.TMR0IF) {
  1629  00032A  A4F2               	btfss	intcon,2,c	;volatile
  1630  00032C  D06F               	goto	i2l85
  1631                           
  1632                           ;interrupts.c: 75: INTCONbits.TMR0IF = 0;
  1633  00032E  94F2               	bcf	intcon,2,c	;volatile
  1634                           
  1635                           ;interrupts.c: 76: TMR0 = 250;
  1636  000330  0E00               	movlw	0
  1637  000332  6ED7               	movwf	4055,c	;volatile
  1638  000334  0EFA               	movlw	250
  1639  000336  6ED6               	movwf	4054,c	;volatile
  1640                           
  1641                           ;interrupts.c: 77: MOT_1_count++;
  1642  000338  4A11               	infsnz	_MOT_1_count,f,c
  1643  00033A  2A12               	incf	_MOT_1_count+1,f,c
  1644                           
  1645                           ;interrupts.c: 78: MOT_2_count++;
  1646  00033C  4A0F               	infsnz	_MOT_2_count,f,c
  1647  00033E  2A10               	incf	_MOT_2_count+1,f,c
  1648                           
  1649                           ;interrupts.c: 79: MOT_3_count++;
  1650  000340  4A0D               	infsnz	_MOT_3_count,f,c
  1651  000342  2A0E               	incf	_MOT_3_count+1,f,c
  1652                           
  1653                           ;interrupts.c: 80: MOT_4_count++;
  1654  000344  4A0B               	infsnz	_MOT_4_count,f,c
  1655  000346  2A0C               	incf	_MOT_4_count+1,f,c
  1656                           
  1657                           ;interrupts.c: 82: if (MOT_1) {
  1658  000348  5025               	movf	_MOT_1,w,c
  1659  00034A  B4D8               	btfsc	status,2,c
  1660  00034C  D026               	goto	i2l88
  1661                           
  1662                           ;interrupts.c: 84: if (MOT_1_count == count_1) {
  1663  00034E  504F               	movf	_count_1,w,c
  1664  000350  1811               	xorwf	_MOT_1_count,w,c
  1665  000352  E123               	bnz	i2l1410
  1666  000354  5050               	movf	_count_1+1,w,c
  1667  000356  1812               	xorwf	_MOT_1_count+1,w,c
  1668  000358  A4D8               	btfss	status,2,c
  1669  00035A  D01F               	goto	i2l88
  1670                           
  1671                           ;interrupts.c: 85: MOT_1_count = 0;
  1672  00035C  0E00               	movlw	0
  1673  00035E  6E12               	movwf	_MOT_1_count+1,c
  1674  000360  0E00               	movlw	0
  1675  000362  6E11               	movwf	_MOT_1_count,c
  1676                           
  1677                           ;interrupts.c: 86: LATAbits.LA3 = !PORTAbits.RA3;
  1678  000364  B680               	btfsc	3968,3,c	;volatile
  1679  000366  D003               	goto	i2u66_40
  1680  000368  6A32               	clrf	??_high_isr& (0+255),c
  1681  00036A  2A32               	incf	??_high_isr& (0+255),f,c
  1682  00036C  D001               	goto	i2u67_48
  1683  00036E                     i2u66_40:
  1684  00036E  6A32               	clrf	??_high_isr& (0+255),c
  1685  000370                     i2u67_48:
  1686  000370  4632               	rlncf	??_high_isr,f,c
  1687  000372  4632               	rlncf	??_high_isr,f,c
  1688  000374  4632               	rlncf	??_high_isr,f,c
  1689  000376  5089               	movf	3977,w,c	;volatile
  1690  000378  1832               	xorwf	??_high_isr,w,c
  1691  00037A  0BF7               	andlw	-9
  1692  00037C  1832               	xorwf	??_high_isr,w,c
  1693  00037E  6E89               	movwf	3977,c	;volatile
  1694                           
  1695                           ;interrupts.c: 87: mot_1_steps++;
  1696  000380  4A09               	infsnz	_mot_1_steps,f,c
  1697  000382  2A0A               	incf	_mot_1_steps+1,f,c
  1698                           
  1699                           ;interrupts.c: 88: if (mot_1_steps == 200) {
  1700  000384  0EC8               	movlw	200
  1701  000386  1809               	xorwf	_mot_1_steps,w,c
  1702  000388  100A               	iorwf	_mot_1_steps+1,w,c
  1703  00038A  A4D8               	btfss	status,2,c
  1704  00038C  D006               	goto	i2l88
  1705                           
  1706                           ;interrupts.c: 90: mot_1_steps = 0;
  1707  00038E  0E00               	movlw	0
  1708  000390  6E0A               	movwf	_mot_1_steps+1,c
  1709  000392  0E00               	movlw	0
  1710  000394  6E09               	movwf	_mot_1_steps,c
  1711                           
  1712                           ;interrupts.c: 91: turns_count++;
  1713  000396  4A03               	infsnz	_turns_count,f,c
  1714  000398  2A04               	incf	_turns_count+1,f,c
  1715  00039A                     i2l88:
  1716  00039A                     i2l1410:
  1717                           
  1718                           ;interrupts.c: 92: }
  1719                           ;interrupts.c: 99: }
  1720                           ;interrupts.c: 100: }
  1721                           ;interrupts.c: 107: if (MOT_3) {
  1722  00039A  5024               	movf	_MOT_3,w,c
  1723  00039C  B4D8               	btfsc	status,2,c
  1724  00039E  D094               	goto	i2l110
  1725                           
  1726                           ;interrupts.c: 109: if (MOT_3_count == count_3) {
  1727  0003A0  504B               	movf	_count_3,w,c
  1728  0003A2  180D               	xorwf	_MOT_3_count,w,c
  1729  0003A4  E103               	bnz	i2u70_41
  1730  0003A6  504C               	movf	_count_3+1,w,c
  1731  0003A8  180E               	xorwf	_MOT_3_count+1,w,c
  1732  0003AA  A4D8               	btfss	status,2,c
  1733  0003AC                     i2u70_41:
  1734  0003AC  D08D               	goto	i2l110
  1735                           
  1736                           ;interrupts.c: 110: MOT_3_count = 0;
  1737  0003AE  0E00               	movlw	0
  1738  0003B0  6E0E               	movwf	_MOT_3_count+1,c
  1739  0003B2  0E00               	movlw	0
  1740  0003B4  6E0D               	movwf	_MOT_3_count,c
  1741                           
  1742                           ;interrupts.c: 111: LATCbits.LC1 = !PORTCbits.RC1;
  1743  0003B6  B282               	btfsc	3970,1,c	;volatile
  1744  0003B8  D003               	goto	i2u71_40
  1745  0003BA  6A32               	clrf	??_high_isr& (0+255),c
  1746  0003BC  2A32               	incf	??_high_isr& (0+255),f,c
  1747  0003BE  D001               	goto	i2u72_48
  1748  0003C0                     i2u71_40:
  1749  0003C0  6A32               	clrf	??_high_isr& (0+255),c
  1750  0003C2                     i2u72_48:
  1751  0003C2  4632               	rlncf	??_high_isr,f,c
  1752  0003C4  508B               	movf	3979,w,c	;volatile
  1753  0003C6  1832               	xorwf	??_high_isr,w,c
  1754  0003C8  0BFD               	andlw	-3
  1755  0003CA  1832               	xorwf	??_high_isr,w,c
  1756  0003CC  6E8B               	movwf	3979,c	;volatile
  1757                           
  1758                           ;interrupts.c: 112: mot_3_steps++;
  1759  0003CE  4A07               	infsnz	_mot_3_steps,f,c
  1760  0003D0  2A08               	incf	_mot_3_steps+1,f,c
  1761                           
  1762                           ;interrupts.c: 114: if (mot_3_steps == mot_3_step_count(length, 1)) {
  1763  0003D2  C051  F02C         	movff	_length,mot_3_step_count@l
  1764  0003D6  C052  F02D         	movff	_length+1,mot_3_step_count@l+1
  1765  0003DA  0E00               	movlw	0
  1766  0003DC  6E2F               	movwf	mot_3_step_count@ms+1,c
  1767  0003DE  0E01               	movlw	1
  1768  0003E0  6E2E               	movwf	mot_3_step_count@ms,c
  1769  0003E2  EC3C  F003         	call	_mot_3_step_count	;wreg free
  1770  0003E6  5007               	movf	_mot_3_steps,w,c
  1771  0003E8  182C               	xorwf	?_mot_3_step_count,w,c
  1772  0003EA  E16E               	bnz	i2l92
  1773  0003EC  5008               	movf	_mot_3_steps+1,w,c
  1774  0003EE  182D               	xorwf	?_mot_3_step_count+1,w,c
  1775  0003F0  A4D8               	btfss	status,2,c
  1776  0003F2  D06A               	goto	i2l110
  1777                           
  1778                           ;interrupts.c: 116: DIR_3 = !DIR_3;
  1779  0003F4  5023               	movf	_DIR_3,w,c
  1780  0003F6  A4D8               	btfss	status,2,c
  1781  0003F8  D002               	goto	i2u74_40
  1782  0003FA  0E01               	movlw	1
  1783  0003FC  D001               	goto	i2u75_40
  1784  0003FE                     i2u74_40:
  1785  0003FE  0E00               	movlw	0
  1786  000400                     i2u75_40:
  1787  000400  6E23               	movwf	_DIR_3,c
  1788                           
  1789                           ;interrupts.c: 117: mot_3_steps = 0;
  1790  000402  0E00               	movlw	0
  1791  000404  6E08               	movwf	_mot_3_steps+1,c
  1792  000406  0E00               	movlw	0
  1793  000408  6E07               	movwf	_mot_3_steps,c
  1794                           
  1795                           ;interrupts.c: 118: }
  1796                           ;interrupts.c: 119: }
  1797                           ;interrupts.c: 120: }
  1798                           ;interrupts.c: 130: } else if (PIR1bits.TMR1IF) {
  1799  00040A  D05E               	goto	i2l110
  1800  00040C                     i2l85:
  1801  00040C  A09E               	btfss	3998,0,c	;volatile
  1802  00040E  D017               	goto	i2l93
  1803                           
  1804                           ;interrupts.c: 132: if(MOT_3) {
  1805  000410  5024               	movf	_MOT_3,w,c
  1806  000412  B4D8               	btfsc	status,2,c
  1807  000414  D00C               	goto	i2l94
  1808                           
  1809                           ;interrupts.c: 133: LATCbits.LC1 = !PORTCbits.RC1;
  1810  000416  B282               	btfsc	3970,1,c	;volatile
  1811  000418  D003               	goto	i2u78_40
  1812  00041A  6A32               	clrf	??_high_isr& (0+255),c
  1813  00041C  2A32               	incf	??_high_isr& (0+255),f,c
  1814  00041E  D001               	goto	i2u79_48
  1815  000420                     i2u78_40:
  1816  000420  6A32               	clrf	??_high_isr& (0+255),c
  1817  000422                     i2u79_48:
  1818  000422  4632               	rlncf	??_high_isr,f,c
  1819  000424  508B               	movf	3979,w,c	;volatile
  1820  000426  1832               	xorwf	??_high_isr,w,c
  1821  000428  0BFD               	andlw	-3
  1822  00042A  1832               	xorwf	??_high_isr,w,c
  1823  00042C  6E8B               	movwf	3979,c	;volatile
  1824  00042E                     i2l94:
  1825                           
  1826                           ;interrupts.c: 134: }
  1827                           ;interrupts.c: 135: PIR1bits.TMR1IF = 0;
  1828  00042E  909E               	bcf	3998,0,c	;volatile
  1829                           
  1830                           ;interrupts.c: 136: TMR1 = 0xD8F0;
  1831  000430  0ED8               	movlw	216
  1832  000432  6ECF               	movwf	4047,c	;volatile
  1833  000434  0EF0               	movlw	240
  1834  000436  6ECE               	movwf	4046,c	;volatile
  1835                           
  1836                           ;interrupts.c: 137: zero_count++;
  1837  000438  4A01               	infsnz	_zero_count,f,c
  1838  00043A  2A02               	incf	_zero_count+1,f,c
  1839                           
  1840                           ;interrupts.c: 139: } else if (PIR1bits.RCIF) {
  1841  00043C  D045               	goto	i2l110
  1842  00043E                     i2l93:
  1843  00043E  AA9E               	btfss	3998,5,c	;volatile
  1844  000440  D01A               	goto	i2l96
  1845                           
  1846                           ;interrupts.c: 141: PIR1bits.RCIF = 0;
  1847  000442  9A9E               	bcf	3998,5,c	;volatile
  1848                           
  1849                           ;interrupts.c: 142: palabra[n] = RCREG;
  1850  000444  0E60               	movlw	low _palabra
  1851  000446  2417               	addwf	_n,w,c
  1852  000448  6ED9               	movwf	fsr2l,c
  1853  00044A  0E00               	movlw	high _palabra
  1854  00044C  2018               	addwfc	_n+1,w,c
  1855  00044E  6EDA               	movwf	fsr2h,c
  1856  000450  CFAE FFDF          	movff	4014,indf2	;volatile
  1857                           
  1858                           ;interrupts.c: 143: n++;
  1859  000454  4A17               	infsnz	_n,f,c
  1860  000456  2A18               	incf	_n+1,f,c
  1861                           
  1862                           ;interrupts.c: 144: if (RCREG == '\n') {
  1863  000458  0E0A               	movlw	10
  1864  00045A  18AE               	xorwf	4014,w,c	;volatile
  1865  00045C  A4D8               	btfss	status,2,c
  1866  00045E  D034               	goto	i2l110
  1867                           
  1868                           ;interrupts.c: 145: TXREG = palabra[0];
  1869  000460  C060  FFAD         	movff	_palabra,4013	;volatile
  1870  000464  A89E               	btfss	3998,4,c	;volatile
  1871  000466  D7FE               	goto	i2l99
  1872                           
  1873                           ;interrupts.c: 147: recibi = 1;
  1874  000468  0E01               	movlw	1
  1875  00046A  6E1F               	movwf	_recibi,c
  1876                           
  1877                           ;interrupts.c: 148: n = 0;
  1878  00046C  0E00               	movlw	0
  1879  00046E  6E18               	movwf	_n+1,c
  1880  000470  0E00               	movlw	0
  1881  000472  6E17               	movwf	_n,c
  1882                           
  1883                           ;interrupts.c: 149: }
  1884                           ;interrupts.c: 150: } else if (PIR1bits.ADIF) {
  1885  000474  D029               	goto	i2l110
  1886  000476                     i2l96:
  1887  000476  AC9E               	btfss	3998,6,c	;volatile
  1888  000478  D006               	goto	i2l102
  1889                           
  1890                           ;interrupts.c: 152: PIR1bits.ADIF = 0;
  1891  00047A  9C9E               	bcf	3998,6,c	;volatile
  1892                           
  1893                           ;interrupts.c: 158: ADC_value_press = ADRES;
  1894  00047C  CFC3 F013          	movff	4035,_ADC_value_press	;volatile
  1895  000480  CFC4 F014          	movff	4036,_ADC_value_press+1	;volatile
  1896                           
  1897                           ;interrupts.c: 160: } else if (INTCON3bits.INT1IF) {
  1898  000484  D021               	goto	i2l110
  1899  000486                     i2l102:
  1900  000486  A0F0               	btfss	intcon3,0,c	;volatile
  1901  000488  D009               	goto	i2l104
  1902                           
  1903                           ;interrupts.c: 162: INTCON3bits.INT1IF = 0;
  1904  00048A  90F0               	bcf	intcon3,0,c	;volatile
  1905                           
  1906                           ;interrupts.c: 164: if (param_flag) {
  1907  00048C  5022               	movf	_param_flag,w,c
  1908  00048E  A4D8               	btfss	status,2,c
  1909  000490  D00B               	goto	i2u89_40
  1910                           
  1911                           ;interrupts.c: 173: DIR_3 = !DIR_3;
  1912                           
  1913                           ;interrupts.c: 171: } else {
  1914                           
  1915                           ;interrupts.c: 169: MOT_4 = 0;
  1916                           
  1917                           ;interrupts.c: 168: MOT_3 = 0;
  1918                           
  1919                           ;interrupts.c: 167: MOT_2 = 0;
  1920                           
  1921                           ;interrupts.c: 166: MOT_1 = 0;
  1922  000492  5023               	movf	_DIR_3,w,c
  1923  000494  A4D8               	btfss	status,2,c
  1924  000496  D016               	goto	i2u90_40
  1925  000498  0E01               	movlw	1
  1926  00049A  D015               	goto	i2u91_40
  1927  00049C                     i2l104:
  1928  00049C  A2F0               	btfss	intcon3,1,c	;volatile
  1929  00049E  D014               	goto	i2l110
  1930                           
  1931                           ;interrupts.c: 178: INTCON3bits.INT2IF = 0;
  1932  0004A0  92F0               	bcf	intcon3,1,c	;volatile
  1933                           
  1934                           ;interrupts.c: 180: if (param_flag) {
  1935  0004A2  5022               	movf	_param_flag,w,c
  1936  0004A4  B4D8               	btfsc	status,2,c
  1937  0004A6  D009               	goto	i2l109
  1938  0004A8                     i2u89_40:
  1939                           
  1940                           ;interrupts.c: 182: MOT_1 = 0;
  1941  0004A8  0E00               	movlw	0
  1942  0004AA  6E25               	movwf	_MOT_1,c
  1943                           
  1944                           ;interrupts.c: 183: MOT_2 = 0;
  1945  0004AC  0E00               	movlw	0
  1946  0004AE  6E21               	movwf	_MOT_2,c
  1947                           
  1948                           ;interrupts.c: 184: MOT_3 = 0;
  1949  0004B0  0E00               	movlw	0
  1950  0004B2  6E24               	movwf	_MOT_3,c
  1951                           
  1952                           ;interrupts.c: 185: MOT_4 = 0;
  1953  0004B4  0E00               	movlw	0
  1954  0004B6  6E20               	movwf	_MOT_4,c
  1955                           
  1956                           ;interrupts.c: 187: } else {
  1957  0004B8  D007               	goto	i2l110
  1958  0004BA                     i2l109:
  1959                           
  1960                           ;interrupts.c: 189: DIR_3 = !DIR_3;
  1961  0004BA  5023               	movf	_DIR_3,w,c
  1962  0004BC  A4D8               	btfss	status,2,c
  1963  0004BE  D002               	goto	i2u90_40
  1964  0004C0  0E01               	movlw	1
  1965  0004C2  D001               	goto	i2u91_40
  1966  0004C4                     i2u90_40:
  1967  0004C4  0E00               	movlw	0
  1968  0004C6                     i2u91_40:
  1969  0004C6  6E23               	movwf	_DIR_3,c
  1970  0004C8                     i2l110:
  1971  0004C8                     i2l92:
  1972  0004C8  C044  F057         	movff	??_high_isr+18,btemp+3
  1973  0004CC  C043  F056         	movff	??_high_isr+17,btemp+2
  1974  0004D0  C042  F055         	movff	??_high_isr+16,btemp+1
  1975  0004D4  C041  F054         	movff	??_high_isr+15,btemp
  1976  0004D8  C040  FFF5         	movff	??_high_isr+14,tablat
  1977  0004DC  C03F  FFF8         	movff	??_high_isr+13,tblptru
  1978  0004E0  C03E  FFF7         	movff	??_high_isr+12,tblptrh
  1979  0004E4  C03D  FFF6         	movff	??_high_isr+11,tblptrl
  1980  0004E8  C03C  FFF4         	movff	??_high_isr+10,prodh
  1981  0004EC  C03B  FFF3         	movff	??_high_isr+9,prodl
  1982  0004F0  C03A  FFDA         	movff	??_high_isr+8,fsr2h
  1983  0004F4  C039  FFD9         	movff	??_high_isr+7,fsr2l
  1984  0004F8  C038  FFE2         	movff	??_high_isr+6,fsr1h
  1985  0004FC  C037  FFE1         	movff	??_high_isr+5,fsr1l
  1986  000500  C036  FFEA         	movff	??_high_isr+4,fsr0h
  1987  000504  C035  FFE9         	movff	??_high_isr+3,fsr0l
  1988  000508  C034  FFFB         	movff	??_high_isr+2,pclatu
  1989  00050C  C033  FFFA         	movff	??_high_isr+1,pclath
  1990  000510  9254               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  1991  000512  0011               	retfie		f
  1992  000514                     __end_of_high_isr:
  1993                           	opt stack 0
  1994                           pclatu	equ	0xFFB
  1995                           pclath	equ	0xFFA
  1996                           tblptru	equ	0xFF8
  1997                           tblptrh	equ	0xFF7
  1998                           tblptrl	equ	0xFF6
  1999                           tablat	equ	0xFF5
  2000                           prodh	equ	0xFF4
  2001                           prodl	equ	0xFF3
  2002                           intcon	equ	0xFF2
  2003                           intcon2	equ	0xFF1
  2004                           intcon3	equ	0xFF0
  2005                           postinc0	equ	0xFEE
  2006                           fsr0h	equ	0xFEA
  2007                           fsr0l	equ	0xFE9
  2008                           wreg	equ	0xFE8
  2009                           postdec1	equ	0xFE5
  2010                           fsr1h	equ	0xFE2
  2011                           fsr1l	equ	0xFE1
  2012                           indf2	equ	0xFDF
  2013                           fsr2h	equ	0xFDA
  2014                           fsr2l	equ	0xFD9
  2015                           status	equ	0xFD8
  2016                           
  2017 ;; *************** function _mot_3_step_count *****************
  2018 ;; Defined at:
  2019 ;;		line 168 in file "main.c"
  2020 ;; Parameters:    Size  Location     Type
  2021 ;;  l               2    6[COMRAM] unsigned int 
  2022 ;;  ms              2    8[COMRAM] unsigned int 
  2023 ;; Auto vars:     Size  Location     Type
  2024 ;;		None
  2025 ;; Return value:  Size  Location     Type
  2026 ;;                  2    6[COMRAM] unsigned int 
  2027 ;; Registers used:
  2028 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2029 ;; Tracked objects:
  2030 ;;		On entry : 0/0
  2031 ;;		On exit  : 0/0
  2032 ;;		Unchanged: 0/0
  2033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2034 ;;      Params:         4       0       0       0       0       0       0       0       0
  2035 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2036 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2037 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2038 ;;Total ram usage:        6 bytes
  2039 ;; Hardware stack levels used:    1
  2040 ;; Hardware stack levels required when called:    1
  2041 ;; This function calls:
  2042 ;;		i2___wmul
  2043 ;; This function is called by:
  2044 ;;		_high_isr
  2045 ;; This function uses a non-reentrant model
  2046 ;;
  2047                           
  2048                           	psect	text6
  2049  000678                     __ptext6:
  2050                           	opt stack 0
  2051  000678                     _mot_3_step_count:
  2052                           	opt stack 27
  2053                           
  2054                           ;main.c: 170: return (ms * l) / 2;
  2055                           
  2056                           ;incstack = 0
  2057  000678  C02E  F026         	movff	mot_3_step_count@ms,i2___wmul@multiplier
  2058  00067C  C02F  F027         	movff	mot_3_step_count@ms+1,i2___wmul@multiplier+1
  2059  000680  C02C  F028         	movff	mot_3_step_count@l,i2___wmul@multiplicand
  2060  000684  C02D  F029         	movff	mot_3_step_count@l+1,i2___wmul@multiplicand+1
  2061  000688  EC29  F003         	call	i2___wmul	;wreg free
  2062  00068C  90D8               	bcf	status,0,c
  2063  00068E  3027               	rrcf	?i2___wmul+1,w,c
  2064  000690  6E30               	movwf	??_mot_3_step_count& (0+255),c
  2065  000692  3026               	rrcf	?i2___wmul,w,c
  2066  000694  6E2C               	movwf	?_mot_3_step_count,c
  2067  000696  C030  F02D         	movff	??_mot_3_step_count,?_mot_3_step_count+1
  2068  00069A  0012               	return	
  2069  00069C                     __end_of_mot_3_step_count:
  2070                           	opt stack 0
  2071                           pclatu	equ	0xFFB
  2072                           pclath	equ	0xFFA
  2073                           tblptru	equ	0xFF8
  2074                           tblptrh	equ	0xFF7
  2075                           tblptrl	equ	0xFF6
  2076                           tablat	equ	0xFF5
  2077                           prodh	equ	0xFF4
  2078                           prodl	equ	0xFF3
  2079                           intcon	equ	0xFF2
  2080                           intcon2	equ	0xFF1
  2081                           intcon3	equ	0xFF0
  2082                           postinc0	equ	0xFEE
  2083                           fsr0h	equ	0xFEA
  2084                           fsr0l	equ	0xFE9
  2085                           wreg	equ	0xFE8
  2086                           postdec1	equ	0xFE5
  2087                           fsr1h	equ	0xFE2
  2088                           fsr1l	equ	0xFE1
  2089                           indf2	equ	0xFDF
  2090                           fsr2h	equ	0xFDA
  2091                           fsr2l	equ	0xFD9
  2092                           status	equ	0xFD8
  2093                           
  2094 ;; *************** function i2___wmul *****************
  2095 ;; Defined at:
  2096 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
  2097 ;; Parameters:    Size  Location     Type
  2098 ;;  multiplier      2    0[COMRAM] unsigned int 
  2099 ;;  multiplicand    2    2[COMRAM] unsigned int 
  2100 ;; Auto vars:     Size  Location     Type
  2101 ;;  __wmul          2    4[COMRAM] unsigned int 
  2102 ;; Return value:  Size  Location     Type
  2103 ;;                  2    0[COMRAM] unsigned int 
  2104 ;; Registers used:
  2105 ;;		wreg, status,2, status,0, prodl, prodh
  2106 ;; Tracked objects:
  2107 ;;		On entry : 0/0
  2108 ;;		On exit  : 0/0
  2109 ;;		Unchanged: 0/0
  2110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2111 ;;      Params:         4       0       0       0       0       0       0       0       0
  2112 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2113 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2114 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2115 ;;Total ram usage:        6 bytes
  2116 ;; Hardware stack levels used:    1
  2117 ;; This function calls:
  2118 ;;		Nothing
  2119 ;; This function is called by:
  2120 ;;		_mot_3_step_count
  2121 ;; This function uses a non-reentrant model
  2122 ;;
  2123                           
  2124                           	psect	text7
  2125  000652                     __ptext7:
  2126                           	opt stack 0
  2127  000652                     i2___wmul:
  2128                           	opt stack 27
  2129                           
  2130                           ;incstack = 0
  2131  000652  5026               	movf	i2___wmul@multiplier,w,c
  2132  000654  0228               	mulwf	i2___wmul@multiplicand,c
  2133  000656  CFF3 F02A          	movff	prodl,i2___wmul@product
  2134  00065A  CFF4 F02B          	movff	prodh,i2___wmul@product+1
  2135  00065E  5026               	movf	i2___wmul@multiplier,w,c
  2136  000660  0229               	mulwf	i2___wmul@multiplicand+1,c
  2137  000662  50F3               	movf	prodl,w,c
  2138  000664  262B               	addwf	i2___wmul@product+1,f,c
  2139  000666  5027               	movf	i2___wmul@multiplier+1,w,c
  2140  000668  0228               	mulwf	i2___wmul@multiplicand,c
  2141  00066A  50F3               	movf	prodl,w,c
  2142  00066C  262B               	addwf	i2___wmul@product+1,f,c
  2143  00066E  C02A  F026         	movff	i2___wmul@product,?i2___wmul
  2144  000672  C02B  F027         	movff	i2___wmul@product+1,?i2___wmul+1
  2145  000676  0012               	return	
  2146  000678                     __end_ofi2___wmul:
  2147                           	opt stack 0
  2148  0000                     pclatu	equ	0xFFB
  2149                           pclath	equ	0xFFA
  2150                           tblptru	equ	0xFF8
  2151                           tblptrh	equ	0xFF7
  2152                           tblptrl	equ	0xFF6
  2153                           tablat	equ	0xFF5
  2154                           prodh	equ	0xFF4
  2155                           prodl	equ	0xFF3
  2156                           intcon	equ	0xFF2
  2157                           intcon2	equ	0xFF1
  2158                           intcon3	equ	0xFF0
  2159                           postinc0	equ	0xFEE
  2160                           fsr0h	equ	0xFEA
  2161                           fsr0l	equ	0xFE9
  2162                           wreg	equ	0xFE8
  2163                           postdec1	equ	0xFE5
  2164                           fsr1h	equ	0xFE2
  2165                           fsr1l	equ	0xFE1
  2166                           indf2	equ	0xFDF
  2167                           fsr2h	equ	0xFDA
  2168                           fsr2l	equ	0xFD9
  2169                           status	equ	0xFD8
  2170                           pclatu	equ	0xFFB
  2171                           pclath	equ	0xFFA
  2172                           tblptru	equ	0xFF8
  2173                           tblptrh	equ	0xFF7
  2174                           tblptrl	equ	0xFF6
  2175                           tablat	equ	0xFF5
  2176                           prodh	equ	0xFF4
  2177                           prodl	equ	0xFF3
  2178                           intcon	equ	0xFF2
  2179                           intcon2	equ	0xFF1
  2180                           intcon3	equ	0xFF0
  2181                           postinc0	equ	0xFEE
  2182                           fsr0h	equ	0xFEA
  2183                           fsr0l	equ	0xFE9
  2184                           wreg	equ	0xFE8
  2185                           postdec1	equ	0xFE5
  2186                           fsr1h	equ	0xFE2
  2187                           fsr1l	equ	0xFE1
  2188                           indf2	equ	0xFDF
  2189                           fsr2h	equ	0xFDA
  2190                           fsr2l	equ	0xFD9
  2191                           status	equ	0xFD8
  2192                           
  2193                           	psect	rparam
  2194  0000                     pclatu	equ	0xFFB
  2195                           pclath	equ	0xFFA
  2196                           tblptru	equ	0xFF8
  2197                           tblptrh	equ	0xFF7
  2198                           tblptrl	equ	0xFF6
  2199                           tablat	equ	0xFF5
  2200                           prodh	equ	0xFF4
  2201                           prodl	equ	0xFF3
  2202                           intcon	equ	0xFF2
  2203                           intcon2	equ	0xFF1
  2204                           intcon3	equ	0xFF0
  2205                           postinc0	equ	0xFEE
  2206                           fsr0h	equ	0xFEA
  2207                           fsr0l	equ	0xFE9
  2208                           wreg	equ	0xFE8
  2209                           postdec1	equ	0xFE5
  2210                           fsr1h	equ	0xFE2
  2211                           fsr1l	equ	0xFE1
  2212                           indf2	equ	0xFDF
  2213                           fsr2h	equ	0xFDA
  2214                           fsr2l	equ	0xFD9
  2215                           status	equ	0xFD8
  2216                           
  2217                           	psect	temp
  2218  000054                     btemp:
  2219                           	opt stack 0
  2220  000054                     	ds	1
  2221  0000                     int$flags	set	btemp
  2222  0000                     wtemp6	set	btemp+1
  2223                           pclatu	equ	0xFFB
  2224                           pclath	equ	0xFFA
  2225                           tblptru	equ	0xFF8
  2226                           tblptrh	equ	0xFF7
  2227                           tblptrl	equ	0xFF6
  2228                           tablat	equ	0xFF5
  2229                           prodh	equ	0xFF4
  2230                           prodl	equ	0xFF3
  2231                           intcon	equ	0xFF2
  2232                           intcon2	equ	0xFF1
  2233                           intcon3	equ	0xFF0
  2234                           postinc0	equ	0xFEE
  2235                           fsr0h	equ	0xFEA
  2236                           fsr0l	equ	0xFE9
  2237                           wreg	equ	0xFE8
  2238                           postdec1	equ	0xFE5
  2239                           fsr1h	equ	0xFE2
  2240                           fsr1l	equ	0xFE1
  2241                           indf2	equ	0xFDF
  2242                           fsr2h	equ	0xFDA
  2243                           fsr2l	equ	0xFD9
  2244                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        17
    BSS         74
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     31      83
    BANK0           160      8      47
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    _high_isr->_mot_3_step_count
    _mot_3_step_count->i2___wmul

Critical Paths under _main in BANK0

    _main->___wmul

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    1968
                                              6 BANK0      2     2      0
                _ConfigureOscillator
                            _InitApp
                             ___wmul
                          _zero_mark
 ---------------------------------------------------------------------------------
 (1) _zero_mark                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4    1968
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigureOscillator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _high_isr                                            19    19      0     405
                                             12 COMRAM    19    19      0
                   _mot_3_step_count
 ---------------------------------------------------------------------------------
 (3) _mot_3_step_count                                     6     2      4     405
                                              6 COMRAM     6     2      4
                           i2___wmul
 ---------------------------------------------------------------------------------
 (4) i2___wmul                                             6     2      4     209
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfigureOscillator
   _InitApp
   ___wmul
   _zero_mark

 _high_isr (ROOT)
   _mot_3_step_count
     i2___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      8      2F       5       29.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     1F      53       1       88.3%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      82      20        0.0%
DATA                 0      0      82       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sat Aug 17 13:18:41 2019

                           _n 0017           ___wmul@multiplicand 0087                   __CFG_BORV$3 000000  
                __CFG_CP0$OFF 000000                  __CFG_CP1$OFF 000000                  __CFG_CP2$OFF 000000  
                __CFG_CP3$OFF 000000                           l206 02AE                           l207 027E  
                         l209 0296                           l190 001A                           l191 02C6  
                         l192 01CC                           l194 020A                           l196 025C  
                         l197 0228                           l199 023A                  __CFG_CPB$OFF 000000  
                         _PR2 000FCB                  __CFG_CPD$OFF 000000                           _RX9 007D5E  
                         _TX9 007D66                  __CFG_BOR$OFF 000000                           wreg 000FE8  
                __CFG_LVP$OFF 000000                  __CFG_WDT$OFF 000000                          _BRGH 007D62  
                        _CREN 007D5C                          u1500 02A8                          u1308 0062  
                        u1245 0026                          _LATA 000F89                          u1510 02AA  
                        u1246 0028                          _LATB 000F8A                          u1255 0030  
                        _LATC 000F8B                          u1440 0278                          u1256 0032  
                        u1265 003A                          u1530 02C0                          u1450 027A  
                        u1290 005E                          u1266 003C                          u1275 0044  
                        u1540 02C2                          u1276 0046                          u1285 004E  
                        u1470 0290                          u1286 0050                          u1480 0292  
                        u1567 02D2                          _RCIE 007CED                          i2l92 04C8  
                        i2l93 043E                          i2l85 040C                          i2l94 042E  
                        i2l96 0476                          i2l88 039A                          i2l99 0464  
                        _TMR0 000FD6                          _TMR1 000FCE                          _SPEN 007D5F  
                        _TXIE 007CEC                          _TXIF 007CF4                          _TXEN 007D65  
                        _SYNC 007D64                          _main 0012                          _send 0074  
                        fsr0h 000FEA                          fsr1h 000FE2                          fsr2h 000FDA  
                        fsr0l 000FE9                          indf2 000FDF                          fsr1l 000FE1  
                        fsr2l 000FD9                          btemp 0054                          prodh 000FF4  
                        prodl 000FF3                          start 000E                 __CFG_IESO$OFF 000000  
               __CFG_MCLRE$ON 000000                  ___param_bank 000000               __end_of_InitApp 05D0  
               __CFG_PLLDIV$1 000000                __CFG_CCP2MX$ON 000000                         ?_main 0026  
                       _ADRES 000FC3                         _BRG16 007DC3                         _DIR_1 001D  
                       _DIR_2 001C                         _DIR_3 0023                         _DIR_4 001B  
                       i2l110 04C8                         i2l102 0486                         i2l104 049C  
                       i2l109 04BA                         _RCREG 000FAE                         _MOT_1 0025  
                       _MOT_2 0021                         _MOT_3 0024                         _MOT_4 0020  
                       _SPBRG 000FAF                         _PORTA 000F80                         _PORTB 000F81  
                       _PORTC 000F82                 __CFG_USBDIV$1 000000                         _TXREG 000FAD  
         _ConfigureOscillator 06C2                 __CFG_PWRT$OFF 000000                 __CFG_WRT0$OFF 000000  
               __CFG_WRT1$OFF 000000                 __CFG_WRT2$OFF 000000                 __CFG_WRT3$OFF 000000  
              __CFG_EBTR0$OFF 000000                __CFG_FCMEN$OFF 000000                __CFG_EBTR1$OFF 000000  
              __CFG_EBTR2$OFF 000000                __CFG_EBTR3$OFF 000000                 __CFG_WRTB$OFF 000000  
               __CFG_WRTC$OFF 000000                 __CFG_WRTD$OFF 000000                __CFG_EBTRB$OFF 000000  
                       _speed 007D                         _turns 008D                   _turns_count 0003  
                       pclath 000FFA                         tablat 000FF5              __end_ofi2___wmul 0678  
                       status 000FD8                         wtemp6 0055          ?_ConfigureOscillator 0026  
             __initialization 05D0                  __end_of_main 02E0                        ??_main 008B  
               __activetblptr 000000                        _ADCON1 000FC1                        _ADCON2 000FC0  
                      _CCPR1L 000FBE                        _GODONE 007E11                        i2l1410 039A  
                   ??_InitApp 0085         ??_ConfigureOscillator 0085                __CFG_XINST$OFF 000000  
            __end_of_high_isr 0514     __size_of_mot_3_step_count 0024                        ___wmul 062A  
                      _enable 0019                        _finish 001A                        _length 0051  
                      _recibi 001F                        clear_0 060E                        clear_1 061A  
                      _motor1 0047                        _motor2 0083                  __pdataCOMRAM 0045  
                      tblptrh 000FF7                        tblptrl 000FF6                        tblptru 000FF8  
                  __accesstop 0060       __end_of__initialization 0620               __CFG_PBADEN$OFF 000000  
               ___rparam_used 000001                __pcstackCOMRAM 0026                  __pidataBANK0 06CE  
                   ?i2___wmul 0026                    __pbssBANK0 0060                       ?___wmul 0085  
                  ??i2___wmul 002A                       i2u70_41 03AC                       i2u71_40 03C0  
                     i2u72_48 03C2                       i2u90_40 04C4                       i2u74_40 03FE  
                     i2u66_40 036E                       i2u91_40 04C6                       i2u75_40 0400  
                     i2u67_48 0370                       i2u78_40 0420                       i2u79_48 0422  
                     i2u89_40 04A8                     ?_high_isr 0026               __CFG_VREGEN$OFF 000000  
          __size_of_zero_mark 0016                       _InitApp 0514                       __Hparam 0000  
                     __Lparam 0000              _mot_3_step_count 0678               __size_of___wmul 0028  
                     _caliber 0081               __CFG_STVREN$OFF 000000                       __pcinit 05D0  
                     __ramtop 0800                       __ptext0 0012                       __ptext1 069C  
                     __ptext2 062A                       __ptext3 0514                       __ptext4 06C2  
                     __ptext6 0678                       __ptext7 0652                    _param_flag 0022  
                   _T0CONbits 000FD5                       _count_1 004F                       _count_2 004D  
                     _count_3 004B                       _count_4 0049                     _T1CONbits 000FCD  
                     _palabra 0060                     _T2CONbits 000FCA              _mot_4_step_count 007B  
                  ??_high_isr 0032                __pintcode_body 02E0          end_of_initialization 0620  
                     int_func 02E0           i2___wmul@multiplier 0026                       postdec1 000FE5  
                     postinc0 000FEE                     _PORTAbits 000F80                     _PORTCbits 000F82  
           __end_of_zero_mark 06B2                     _TRISAbits 000F92                     _TRISBbits 000F93  
                   _TRISCbits 000F94   __end_of_ConfigureOscillator 06CE                   _CCP1CONbits 000FBD  
                  _zero_count 0001                __end_of___wmul 0652                 __pidataCOMRAM 06B2  
            i2___wmul@product 002A           start_initialization 05D0             __size_ofi2___wmul 0026  
                    ??___wmul 0089                   __pdataBANK0 008D              __CFG_LPT1OSC$OFF 000000  
                 __pbssCOMRAM 0001                 __pcstackBANK0 0085      __end_of_mot_3_step_count 069C  
           __size_of_high_isr 050C                      ?_InitApp 0026                     __pintcode 0008  
              ___wmul@product 0089                      _LATAbits 000F89                      _LATBbits 000F8A  
                    _LATCbits 000F8B                      _IPR1bits 000F9F                      _PIE1bits 000F9D  
                    _RA0state 001E                      _PIR1bits 000F9E                      _RCONbits 000FD0  
            __CFG_WDTPS$32768 000000                    _ADCON0bits 000FC2             ___wmul@multiplier 0085  
                    i2___wmul 0652                      _PWM_duty 0045               _ADC_value_press 0013  
                   _zero_flag 0053                     _zero_mark 069C                   _INTCON2bits 000FF1  
                 _INTCON3bits 000FF0                     copy_data0 05FC              __size_of_InitApp 00BC  
                    __Hrparam 0000                      __Lrparam 0000         i2___wmul@multiplicand 0028  
                    _diameter 007F                    ?_zero_mark 0026                      _high_isr 0008  
               __size_of_main 02CE                   _mot_1_steps 0009                   _mot_3_steps 0007  
                 _mot_4_steps 0005  __size_of_ConfigureOscillator 000C                      _overflow 0015  
                    int$flags 0054            mot_3_step_count@ms 002E         __CFG_CPUDIV$OSC1_PLL2 000000  
                  _INTCONbits 000FF2                   _MOT_1_count 0011                   _MOT_2_count 000F  
                 _MOT_3_count 000D                   _MOT_4_count 000B             ?_mot_3_step_count 002C  
                    intlevel2 0000            ??_mot_3_step_count 0030                    _OSCCONbits 000FD3  
           mot_3_step_count@l 002C           __CFG_FOSC$INTOSC_EC 000000                   ??_zero_mark 0085  



Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Thu Aug 15 13:10:19 2019

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F2550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    18                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    19                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    20                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    21                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    22  0000                     
    23                           ; Version 1.45
    24                           ; Generated 16/11/2017 GMT
    25                           ; 
    26                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC18F2550 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57  0000                     
    58                           	psect	idataCOMRAM
    59  0006F0                     __pidataCOMRAM:
    60                           	opt stack 0
    61                           
    62                           ;initializer for _PWM_duty
    63  0006F0  0032               	dw	50
    64                           
    65                           ;initializer for _motor1
    66  0006F2  0001               	dw	1
    67                           
    68                           ;initializer for _count_4
    69  0006F4  0005               	dw	5
    70                           
    71                           ;initializer for _count_3
    72  0006F6  0005               	dw	5
    73                           
    74                           ;initializer for _count_2
    75  0006F8  0005               	dw	5
    76                           
    77                           ;initializer for _count_1
    78  0006FA  0005               	dw	5
    79                           
    80                           	psect	nvCOMRAM
    81  00004F                     __pnvCOMRAM:
    82                           	opt stack 0
    83  00004F                     _MOT_4:
    84                           	opt stack 0
    85  00004F                     	ds	1
    86  000050                     _MOT_3:
    87                           	opt stack 0
    88  000050                     	ds	1
    89  000051                     _MOT_2:
    90                           	opt stack 0
    91  000051                     	ds	1
    92  000052                     _MOT_1:
    93                           	opt stack 0
    94  000052                     	ds	1
    95  0000                     _ADRES	set	4035
    96  0000                     _TMR0	set	4054
    97  0000                     _T2CONbits	set	4042
    98  0000                     _CCP1CONbits	set	4029
    99  0000                     _PR2	set	4043
   100  0000                     _SPBRG	set	4015
   101  0000                     _T0CONbits	set	4053
   102  0000                     _INTCON2bits	set	4081
   103  0000                     _RCONbits	set	4048
   104  0000                     _TRISBbits	set	3987
   105  0000                     _TRISCbits	set	3988
   106  0000                     _PIE1bits	set	3997
   107  0000                     _ADCON2	set	4032
   108  0000                     _TRISAbits	set	3986
   109  0000                     _ADCON1	set	4033
   110  0000                     _LATC	set	3979
   111  0000                     _PORTC	set	3970
   112  0000                     _LATB	set	3978
   113  0000                     _PORTB	set	3969
   114  0000                     _LATA	set	3977
   115  0000                     _PORTA	set	3968
   116  0000                     _OSCCONbits	set	4051
   117  0000                     _CCPR1L	set	4030
   118  0000                     _INTCON3bits	set	4080
   119  0000                     _ADCON0bits	set	4034
   120  0000                     _TXREG	set	4013
   121  0000                     _RCREG	set	4014
   122  0000                     _PIR1bits	set	3998
   123  0000                     _PORTBbits	set	3969
   124  0000                     _LATBbits	set	3978
   125  0000                     _PORTCbits	set	3970
   126  0000                     _LATCbits	set	3979
   127  0000                     _PORTAbits	set	3968
   128  0000                     _LATAbits	set	3977
   129  0000                     _INTCONbits	set	4082
   130  0000                     _TXIE	set	31980
   131  0000                     _RCIE	set	31981
   132  0000                     _RX9	set	32094
   133  0000                     _TX9	set	32102
   134  0000                     _CREN	set	32092
   135  0000                     _TXEN	set	32101
   136  0000                     _SYNC	set	32100
   137  0000                     _SPEN	set	32095
   138  0000                     _BRG16	set	32195
   139  0000                     _BRGH	set	32098
   140  0000                     _GODONE	set	32273
   141  0000                     _TXIF	set	31988
   142                           
   143                           ; #config settings
   144  0000                     
   145                           	psect	cinit
   146  000686                     __pcinit:
   147                           	opt stack 0
   148  000686                     start_initialization:
   149                           	opt stack 0
   150  000686                     __initialization:
   151                           	opt stack 0
   152                           
   153                           ; Initialize objects allocated to COMRAM (12 bytes)
   154                           ; load TBLPTR registers with __pidataCOMRAM
   155  000686  0EF0               	movlw	low __pidataCOMRAM
   156  000688  6EF6               	movwf	tblptrl,c
   157  00068A  0E06               	movlw	high __pidataCOMRAM
   158  00068C  6EF7               	movwf	tblptrh,c
   159  00068E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   160  000690  6EF8               	movwf	tblptru,c
   161  000692  EE00  F043         	lfsr	0,__pdataCOMRAM
   162  000696  EE10 F00C          	lfsr	1,12
   163  00069A                     copy_data0:
   164  00069A  0009               	tblrd		*+
   165  00069C  CFF5 FFEE          	movff	tablat,postinc0
   166  0006A0  50E5               	movf	postdec1,w,c
   167  0006A2  50E1               	movf	fsr1l,w,c
   168  0006A4  E1FA               	bnz	copy_data0
   169                           
   170                           ; Clear objects allocated to BANK0 (20 bytes)
   171  0006A6  EE00  F060         	lfsr	0,__pbssBANK0
   172  0006AA  0E14               	movlw	20
   173  0006AC                     clear_0:
   174  0006AC  6AEE               	clrf	postinc0,c
   175  0006AE  06E8               	decf	wreg,f,c
   176  0006B0  E1FD               	bnz	clear_0
   177                           
   178                           ; Clear objects allocated to COMRAM (47 bytes)
   179  0006B2  EE00  F001         	lfsr	0,__pbssCOMRAM
   180  0006B6  0E2F               	movlw	47
   181  0006B8                     clear_1:
   182  0006B8  6AEE               	clrf	postinc0,c
   183  0006BA  06E8               	decf	wreg,f,c
   184  0006BC  E1FD               	bnz	clear_1
   185  0006BE                     end_of_initialization:
   186                           	opt stack 0
   187  0006BE                     __end_of__initialization:
   188                           	opt stack 0
   189  0006BE  9053               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   190  0006C0  9253               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   191  0006C2  0100               	movlb	0
   192  0006C4  EF09  F000         	goto	_main	;jump to C main() function
   193                           tblptru	equ	0xFF8
   194                           tblptrh	equ	0xFF7
   195                           tblptrl	equ	0xFF6
   196                           tablat	equ	0xFF5
   197                           postinc0	equ	0xFEE
   198                           wreg	equ	0xFE8
   199                           postdec1	equ	0xFE5
   200                           fsr1l	equ	0xFE1
   201                           
   202                           	psect	bssCOMRAM
   203  000001                     __pbssCOMRAM:
   204                           	opt stack 0
   205  000001                     _send:
   206                           	opt stack 0
   207  000001                     	ds	7
   208  000008                     _mot_4_step_count:
   209                           	opt stack 0
   210  000008                     	ds	2
   211  00000A                     _speed:
   212                           	opt stack 0
   213  00000A                     	ds	2
   214  00000C                     _turns:
   215                           	opt stack 0
   216  00000C                     	ds	2
   217  00000E                     _length:
   218                           	opt stack 0
   219  00000E                     	ds	2
   220  000010                     _diameter:
   221                           	opt stack 0
   222  000010                     	ds	2
   223  000012                     _caliber:
   224                           	opt stack 0
   225  000012                     	ds	2
   226  000014                     _motor2:
   227                           	opt stack 0
   228  000014                     	ds	2
   229  000016                     _mot_4_steps:
   230                           	opt stack 0
   231  000016                     	ds	2
   232  000018                     _MOT_4_count:
   233                           	opt stack 0
   234  000018                     	ds	2
   235  00001A                     _MOT_3_count:
   236                           	opt stack 0
   237  00001A                     	ds	2
   238  00001C                     _MOT_2_count:
   239                           	opt stack 0
   240  00001C                     	ds	2
   241  00001E                     _MOT_1_count:
   242                           	opt stack 0
   243  00001E                     	ds	2
   244  000020                     _ADC_value_dist:
   245                           	opt stack 0
   246  000020                     	ds	2
   247  000022                     _ADC_value_press:
   248                           	opt stack 0
   249  000022                     	ds	2
   250  000024                     _overflow:
   251                           	opt stack 0
   252  000024                     	ds	2
   253  000026                     _n:
   254                           	opt stack 0
   255  000026                     	ds	2
   256  000028                     _enable:
   257                           	opt stack 0
   258  000028                     	ds	1
   259  000029                     _busy_flag:
   260                           	opt stack 0
   261  000029                     	ds	1
   262  00002A                     _DIR_4:
   263                           	opt stack 0
   264  00002A                     	ds	1
   265  00002B                     _DIR_2:
   266                           	opt stack 0
   267  00002B                     	ds	1
   268  00002C                     _DIR_1:
   269                           	opt stack 0
   270  00002C                     	ds	1
   271  00002D                     _RA0state:
   272                           	opt stack 0
   273  00002D                     	ds	1
   274  00002E                     _recibi:
   275                           	opt stack 0
   276  00002E                     	ds	1
   277  00002F                     _DIR_3:
   278                           	opt stack 0
   279  00002F                     	ds	1
   280                           tblptru	equ	0xFF8
   281                           tblptrh	equ	0xFF7
   282                           tblptrl	equ	0xFF6
   283                           tablat	equ	0xFF5
   284                           postinc0	equ	0xFEE
   285                           wreg	equ	0xFE8
   286                           postdec1	equ	0xFE5
   287                           fsr1l	equ	0xFE1
   288                           
   289                           	psect	dataCOMRAM
   290  000043                     __pdataCOMRAM:
   291                           	opt stack 0
   292  000043                     _PWM_duty:
   293                           	opt stack 0
   294  000043                     	ds	2
   295  000045                     _motor1:
   296                           	opt stack 0
   297  000045                     	ds	2
   298  000047                     _count_4:
   299                           	opt stack 0
   300  000047                     	ds	2
   301  000049                     _count_3:
   302                           	opt stack 0
   303  000049                     	ds	2
   304  00004B                     _count_2:
   305                           	opt stack 0
   306  00004B                     	ds	2
   307  00004D                     _count_1:
   308                           	opt stack 0
   309  00004D                     	ds	2
   310                           tblptru	equ	0xFF8
   311                           tblptrh	equ	0xFF7
   312                           tblptrl	equ	0xFF6
   313                           tablat	equ	0xFF5
   314                           postinc0	equ	0xFEE
   315                           wreg	equ	0xFE8
   316                           postdec1	equ	0xFE5
   317                           fsr1l	equ	0xFE1
   318                           
   319                           	psect	bssBANK0
   320  000060                     __pbssBANK0:
   321                           	opt stack 0
   322  000060                     _palabra:
   323                           	opt stack 0
   324  000060                     	ds	20
   325                           tblptru	equ	0xFF8
   326                           tblptrh	equ	0xFF7
   327                           tblptrl	equ	0xFF6
   328                           tablat	equ	0xFF5
   329                           postinc0	equ	0xFEE
   330                           wreg	equ	0xFE8
   331                           postdec1	equ	0xFE5
   332                           fsr1l	equ	0xFE1
   333                           
   334                           	psect	cstackBANK0
   335  000074                     __pcstackBANK0:
   336                           	opt stack 0
   337  000074                     ?___wmul:
   338                           	opt stack 0
   339  000074                     ___wmul@multiplier:
   340                           	opt stack 0
   341                           
   342                           ; 2 bytes @ 0x0
   343  000074                     	ds	2
   344  000076                     ___wmul@multiplicand:
   345                           	opt stack 0
   346                           
   347                           ; 2 bytes @ 0x2
   348  000076                     	ds	2
   349  000078                     ___wmul@product:
   350                           	opt stack 0
   351                           
   352                           ; 2 bytes @ 0x4
   353  000078                     	ds	2
   354  00007A                     ??_main:
   355                           
   356                           ; 1 bytes @ 0x6
   357  00007A                     	ds	2
   358                           tblptru	equ	0xFF8
   359                           tblptrh	equ	0xFF7
   360                           tblptrl	equ	0xFF6
   361                           tablat	equ	0xFF5
   362                           postinc0	equ	0xFEE
   363                           wreg	equ	0xFE8
   364                           postdec1	equ	0xFE5
   365                           fsr1l	equ	0xFE1
   366                           
   367                           	psect	cstackCOMRAM
   368  000030                     __pcstackCOMRAM:
   369                           	opt stack 0
   370  000030                     ??_high_isr:
   371  000030                     
   372                           ; 1 bytes @ 0x0
   373  000030                     	ds	19
   374                           tblptru	equ	0xFF8
   375                           tblptrh	equ	0xFF7
   376                           tblptrl	equ	0xFF6
   377                           tablat	equ	0xFF5
   378                           postinc0	equ	0xFEE
   379                           wreg	equ	0xFE8
   380                           postdec1	equ	0xFE5
   381                           fsr1l	equ	0xFE1
   382                           
   383 ;;
   384 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   385 ;;
   386 ;; *************** function _main *****************
   387 ;; Defined at:
   388 ;;		line 74 in file "main.c"
   389 ;; Parameters:    Size  Location     Type
   390 ;;		None
   391 ;; Auto vars:     Size  Location     Type
   392 ;;		None
   393 ;; Return value:  Size  Location     Type
   394 ;;                  1    wreg      void 
   395 ;; Registers used:
   396 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   397 ;; Tracked objects:
   398 ;;		On entry : 0/0
   399 ;;		On exit  : 0/0
   400 ;;		Unchanged: 0/0
   401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   402 ;;      Params:         0       0       0       0       0       0       0       0       0
   403 ;;      Locals:         0       0       0       0       0       0       0       0       0
   404 ;;      Temps:          0       2       0       0       0       0       0       0       0
   405 ;;      Totals:         0       2       0       0       0       0       0       0       0
   406 ;;Total ram usage:        2 bytes
   407 ;; Hardware stack levels required when called:    2
   408 ;; This function calls:
   409 ;;		_ConfigureOscillator
   410 ;;		_InitApp
   411 ;;		___wmul
   412 ;; This function is called by:
   413 ;;		Startup code after reset
   414 ;; This function uses a non-reentrant model
   415 ;;
   416                           
   417                           	psect	text0
   418  000012                     __ptext0:
   419                           	opt stack 0
   420  000012                     _main:
   421                           	opt stack 29
   422                           
   423                           ;main.c: 76: ConfigureOscillator();
   424                           
   425                           ;incstack = 0
   426  000012  EC7E  F003         	call	_ConfigureOscillator	;wreg free
   427                           
   428                           ;main.c: 79: InitApp();
   429  000016  ECED  F002         	call	_InitApp	;wreg free
   430                           
   431                           ;main.c: 80: MOT_1 = 1;
   432  00001A  0E01               	movlw	1
   433  00001C  6E52               	movwf	_MOT_1,c
   434                           
   435                           ;main.c: 81: MOT_2 = 1;
   436  00001E  0E01               	movlw	1
   437  000020  6E51               	movwf	_MOT_2,c
   438                           
   439                           ;main.c: 82: MOT_3 = 1;
   440  000022  0E01               	movlw	1
   441  000024  6E50               	movwf	_MOT_3,c
   442                           
   443                           ;main.c: 83: MOT_4 = 1;
   444  000026  0E01               	movlw	1
   445  000028  6E4F               	movwf	_MOT_4,c
   446  00002A                     
   447                           ;main.c: 86: CCPR1L = PWM_duty;
   448  00002A  C043  FFBE         	movff	_PWM_duty,4030	;volatile
   449                           
   450                           ;main.c: 88: LATAbits.LA2 = DIR_1;
   451  00002E  B02C               	btfsc	_DIR_1,0,c
   452  000030  D002               	bra	u1345
   453  000032  9489               	bcf	3977,2,c	;volatile
   454  000034  D001               	bra	u1346
   455  000036                     u1345:
   456  000036  8489               	bsf	3977,2,c	;volatile
   457  000038                     u1346:
   458                           
   459                           ;main.c: 89: LATAbits.LA4 = DIR_2;
   460  000038  B02B               	btfsc	_DIR_2,0,c
   461  00003A  D002               	bra	u1355
   462  00003C  9889               	bcf	3977,4,c	;volatile
   463  00003E  D001               	bra	u1356
   464  000040                     u1355:
   465  000040  8889               	bsf	3977,4,c	;volatile
   466  000042                     u1356:
   467                           
   468                           ;main.c: 90: LATCbits.LC0 = DIR_3;
   469  000042  B02F               	btfsc	_DIR_3,0,c
   470  000044  D002               	bra	u1365
   471  000046  908B               	bcf	3979,0,c	;volatile
   472  000048  D001               	bra	u1366
   473  00004A                     u1365:
   474  00004A  808B               	bsf	3979,0,c	;volatile
   475  00004C                     u1366:
   476                           
   477                           ;main.c: 91: LATBbits.LB7 = DIR_4;
   478  00004C  B02A               	btfsc	_DIR_4,0,c
   479  00004E  D002               	bra	u1375
   480  000050  9E8A               	bcf	3978,7,c	;volatile
   481  000052  D001               	bra	u1376
   482  000054                     u1375:
   483  000054  8E8A               	bsf	3978,7,c	;volatile
   484  000056                     u1376:
   485                           
   486                           ;main.c: 92: LATBbits.LB4 = enable;
   487  000056  B028               	btfsc	_enable,0,c
   488  000058  D002               	bra	u1385
   489  00005A  988A               	bcf	3978,4,c	;volatile
   490  00005C  D001               	bra	u1386
   491  00005E                     u1385:
   492  00005E  888A               	bsf	3978,4,c	;volatile
   493  000060                     u1386:
   494                           
   495                           ;main.c: 93: LATBbits.LB5 = !enable;
   496  000060  5028               	movf	_enable,w,c
   497  000062  A4D8               	btfss	status,2,c
   498  000064  D004               	goto	u1390
   499  000066  0100               	movlb	0	; () banked
   500  000068  6B7A               	clrf	??_main& (0+255),b
   501  00006A  2B7A               	incf	??_main& (0+255),f,b
   502  00006C  D002               	goto	u1408
   503  00006E                     u1390:
   504  00006E  0100               	movlb	0	; () banked
   505  000070  6B7A               	clrf	??_main& (0+255),b
   506  000072                     u1408:
   507  000072  3B7A               	swapf	??_main& (0+255),f,b
   508  000074  477A               	rlncf	??_main& (0+255),f,b
   509  000076  508A               	movf	3978,w,c	;volatile
   510  000078  197A               	xorwf	??_main& (0+255),w,b
   511  00007A  0BDF               	andlw	-33
   512  00007C  197A               	xorwf	??_main& (0+255),w,b
   513  00007E  6E8A               	movwf	3978,c	;volatile
   514                           
   515                           ; BSR set to: 0
   516                           ;main.c: 100: if (recibi == 1) {
   517  000080  042E               	decf	_recibi,w,c
   518  000082  A4D8               	btfss	status,2,c
   519  000084  D174               	goto	l171
   520                           
   521                           ; BSR set to: 0
   522                           ;main.c: 102: recibi = 0;
   523  000086  0E00               	movlw	0
   524  000088  6E2E               	movwf	_recibi,c
   525                           
   526                           ; BSR set to: 0
   527                           ;main.c: 104: if (palabra[0] == 'B') {
   528  00008A  0E42               	movlw	66
   529  00008C  1960               	xorwf	_palabra& (0+255),w,b
   530  00008E  A4D8               	btfss	status,2,c
   531  000090  D01B               	goto	l172
   532                           
   533                           ; BSR set to: 0
   534                           ;main.c: 106: PWM_duty = ((palabra[1] - 48) * 10) + ((palabra[2] - 48));
   535  000092  0ED0               	movlw	208
   536  000094  2561               	addwf	(_palabra+1)& (0+255),w,b
   537  000096  6F74               	movwf	___wmul@multiplier& (0+255),b
   538  000098  6B75               	clrf	(___wmul@multiplier+1)& (0+255),b
   539  00009A  0EFF               	movlw	255
   540  00009C  2375               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   541  00009E  0E00               	movlw	0
   542  0000A0  6F77               	movwf	(___wmul@multiplicand+1)& (0+255),b
   543  0000A2  0E0A               	movlw	10
   544  0000A4  6F76               	movwf	___wmul@multiplicand& (0+255),b
   545  0000A6  EC64  F003         	call	___wmul	;wreg free
   546  0000AA  0100               	movlb	0	; () banked
   547  0000AC  5162               	movf	(_palabra+2)& (0+255),w,b
   548  0000AE  6F7A               	movwf	??_main& (0+255),b
   549  0000B0  6B7B               	clrf	(??_main+1)& (0+255),b
   550  0000B2  5174               	movf	?___wmul& (0+255),w,b
   551  0000B4  277A               	addwf	??_main& (0+255),f,b
   552  0000B6  5175               	movf	(?___wmul+1)& (0+255),w,b
   553  0000B8  237B               	addwfc	(??_main+1)& (0+255),f,b
   554  0000BA  0ED0               	movlw	208
   555  0000BC  257A               	addwf	??_main& (0+255),w,b
   556  0000BE  6E43               	movwf	_PWM_duty,c
   557  0000C0  0EFF               	movlw	255
   558  0000C2  217B               	addwfc	(??_main+1)& (0+255),w,b
   559  0000C4  6E44               	movwf	_PWM_duty+1,c
   560                           
   561                           ;main.c: 107: } else if (palabra[0] == 'A') {
   562  0000C6  D172               	goto	l197
   563  0000C8                     l172:
   564                           
   565                           ; BSR set to: 0
   566                           
   567                           ; BSR set to: 0
   568  0000C8  0E41               	movlw	65
   569  0000CA  1960               	xorwf	_palabra& (0+255),w,b
   570  0000CC  A4D8               	btfss	status,2,c
   571  0000CE  D0E5               	goto	l174
   572                           
   573                           ; BSR set to: 0
   574                           ;main.c: 109: caliber = ((palabra[1] - 48) * 10) + ((palabra[2] - 48));
   575  0000D0  0ED0               	movlw	208
   576  0000D2  2561               	addwf	(_palabra+1)& (0+255),w,b
   577  0000D4  6F74               	movwf	___wmul@multiplier& (0+255),b
   578  0000D6  6B75               	clrf	(___wmul@multiplier+1)& (0+255),b
   579  0000D8  0EFF               	movlw	255
   580  0000DA  2375               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   581  0000DC  0E00               	movlw	0
   582  0000DE  6F77               	movwf	(___wmul@multiplicand+1)& (0+255),b
   583  0000E0  0E0A               	movlw	10
   584  0000E2  6F76               	movwf	___wmul@multiplicand& (0+255),b
   585  0000E4  EC64  F003         	call	___wmul	;wreg free
   586  0000E8  0100               	movlb	0	; () banked
   587  0000EA  5162               	movf	(_palabra+2)& (0+255),w,b
   588  0000EC  6F7A               	movwf	??_main& (0+255),b
   589  0000EE  6B7B               	clrf	(??_main+1)& (0+255),b
   590  0000F0  5174               	movf	?___wmul& (0+255),w,b
   591  0000F2  277A               	addwf	??_main& (0+255),f,b
   592  0000F4  5175               	movf	(?___wmul+1)& (0+255),w,b
   593  0000F6  237B               	addwfc	(??_main+1)& (0+255),f,b
   594  0000F8  0ED0               	movlw	208
   595  0000FA  257A               	addwf	??_main& (0+255),w,b
   596  0000FC  6E12               	movwf	_caliber,c
   597  0000FE  0EFF               	movlw	255
   598  000100  217B               	addwfc	(??_main+1)& (0+255),w,b
   599  000102  6E13               	movwf	_caliber+1,c
   600                           
   601                           ;main.c: 110: diameter = ((palabra[3] - 48) * 1000) + ((palabra[4] - 48) * 100) + ((pala
      +                          bra[5] - 48) * 10) + ((palabra[6] - 48));
   602  000104  0ED0               	movlw	208
   603  000106  2563               	addwf	(_palabra+3)& (0+255),w,b
   604  000108  6F74               	movwf	___wmul@multiplier& (0+255),b
   605  00010A  6B75               	clrf	(___wmul@multiplier+1)& (0+255),b
   606  00010C  0EFF               	movlw	255
   607  00010E  2375               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   608  000110  0E03               	movlw	3
   609  000112  6F77               	movwf	(___wmul@multiplicand+1)& (0+255),b
   610  000114  0EE8               	movlw	232
   611  000116  6F76               	movwf	___wmul@multiplicand& (0+255),b
   612  000118  EC64  F003         	call	___wmul	;wreg free
   613  00011C  0100               	movlb	0	; () banked
   614  00011E  5166               	movf	(_palabra+6)& (0+255),w,b
   615  000120  6F7A               	movwf	??_main& (0+255),b
   616  000122  6B7B               	clrf	(??_main+1)& (0+255),b
   617  000124  5174               	movf	?___wmul& (0+255),w,b
   618  000126  277A               	addwf	??_main& (0+255),f,b
   619  000128  5175               	movf	(?___wmul+1)& (0+255),w,b
   620  00012A  237B               	addwfc	(??_main+1)& (0+255),f,b
   621  00012C  0ED0               	movlw	208
   622  00012E  2564               	addwf	(_palabra+4)& (0+255),w,b
   623  000130  6F74               	movwf	___wmul@multiplier& (0+255),b
   624  000132  6B75               	clrf	(___wmul@multiplier+1)& (0+255),b
   625  000134  0EFF               	movlw	255
   626  000136  2375               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   627  000138  0E00               	movlw	0
   628  00013A  6F77               	movwf	(___wmul@multiplicand+1)& (0+255),b
   629  00013C  0E64               	movlw	100
   630  00013E  6F76               	movwf	___wmul@multiplicand& (0+255),b
   631  000140  EC64  F003         	call	___wmul	;wreg free
   632  000144  0100               	movlb	0	; () banked
   633  000146  5174               	movf	?___wmul& (0+255),w,b
   634  000148  277A               	addwf	??_main& (0+255),f,b
   635  00014A  5175               	movf	(?___wmul+1)& (0+255),w,b
   636  00014C  237B               	addwfc	(??_main+1)& (0+255),f,b
   637  00014E  0ED0               	movlw	208
   638  000150  2565               	addwf	(_palabra+5)& (0+255),w,b
   639  000152  6F74               	movwf	___wmul@multiplier& (0+255),b
   640  000154  6B75               	clrf	(___wmul@multiplier+1)& (0+255),b
   641  000156  0EFF               	movlw	255
   642  000158  2375               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   643  00015A  0E00               	movlw	0
   644  00015C  6F77               	movwf	(___wmul@multiplicand+1)& (0+255),b
   645  00015E  0E0A               	movlw	10
   646  000160  6F76               	movwf	___wmul@multiplicand& (0+255),b
   647  000162  EC64  F003         	call	___wmul	;wreg free
   648  000166  0100               	movlb	0	; () banked
   649  000168  5174               	movf	?___wmul& (0+255),w,b
   650  00016A  277A               	addwf	??_main& (0+255),f,b
   651  00016C  5175               	movf	(?___wmul+1)& (0+255),w,b
   652  00016E  237B               	addwfc	(??_main+1)& (0+255),f,b
   653  000170  0ED0               	movlw	208
   654  000172  257A               	addwf	??_main& (0+255),w,b
   655  000174  6E10               	movwf	_diameter,c
   656  000176  0EFF               	movlw	255
   657  000178  217B               	addwfc	(??_main+1)& (0+255),w,b
   658  00017A  6E11               	movwf	_diameter+1,c
   659                           
   660                           ;main.c: 111: length = ((palabra[7] - 48) * 10000) + ((palabra[8] - 48) * 1000) + ((pala
      +                          bra[9] - 48) * 100) + ((palabra[10] - 48) * 10) + ((palabra[11] - 48));
   661  00017C  0ED0               	movlw	208
   662  00017E  2567               	addwf	(_palabra+7)& (0+255),w,b
   663  000180  6F74               	movwf	___wmul@multiplier& (0+255),b
   664  000182  6B75               	clrf	(___wmul@multiplier+1)& (0+255),b
   665  000184  0EFF               	movlw	255
   666  000186  2375               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   667  000188  0E27               	movlw	39
   668  00018A  6F77               	movwf	(___wmul@multiplicand+1)& (0+255),b
   669  00018C  0E10               	movlw	16
   670  00018E  6F76               	movwf	___wmul@multiplicand& (0+255),b
   671  000190  EC64  F003         	call	___wmul	;wreg free
   672  000194  0100               	movlb	0	; () banked
   673  000196  516B               	movf	(_palabra+11)& (0+255),w,b
   674  000198  6F7A               	movwf	??_main& (0+255),b
   675  00019A  6B7B               	clrf	(??_main+1)& (0+255),b
   676  00019C  5174               	movf	?___wmul& (0+255),w,b
   677  00019E  277A               	addwf	??_main& (0+255),f,b
   678  0001A0  5175               	movf	(?___wmul+1)& (0+255),w,b
   679  0001A2  237B               	addwfc	(??_main+1)& (0+255),f,b
   680  0001A4  0ED0               	movlw	208
   681  0001A6  2568               	addwf	(_palabra+8)& (0+255),w,b
   682  0001A8  6F74               	movwf	___wmul@multiplier& (0+255),b
   683  0001AA  6B75               	clrf	(___wmul@multiplier+1)& (0+255),b
   684  0001AC  0EFF               	movlw	255
   685  0001AE  2375               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   686  0001B0  0E03               	movlw	3
   687  0001B2  6F77               	movwf	(___wmul@multiplicand+1)& (0+255),b
   688  0001B4  0EE8               	movlw	232
   689  0001B6  6F76               	movwf	___wmul@multiplicand& (0+255),b
   690  0001B8  EC64  F003         	call	___wmul	;wreg free
   691  0001BC  0100               	movlb	0	; () banked
   692  0001BE  5174               	movf	?___wmul& (0+255),w,b
   693  0001C0  277A               	addwf	??_main& (0+255),f,b
   694  0001C2  5175               	movf	(?___wmul+1)& (0+255),w,b
   695  0001C4  237B               	addwfc	(??_main+1)& (0+255),f,b
   696  0001C6  0ED0               	movlw	208
   697  0001C8  2569               	addwf	(_palabra+9)& (0+255),w,b
   698  0001CA  6F74               	movwf	___wmul@multiplier& (0+255),b
   699  0001CC  6B75               	clrf	(___wmul@multiplier+1)& (0+255),b
   700  0001CE  0EFF               	movlw	255
   701  0001D0  2375               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   702  0001D2  0E00               	movlw	0
   703  0001D4  6F77               	movwf	(___wmul@multiplicand+1)& (0+255),b
   704  0001D6  0E64               	movlw	100
   705  0001D8  6F76               	movwf	___wmul@multiplicand& (0+255),b
   706  0001DA  EC64  F003         	call	___wmul	;wreg free
   707  0001DE  0100               	movlb	0	; () banked
   708  0001E0  5174               	movf	?___wmul& (0+255),w,b
   709  0001E2  277A               	addwf	??_main& (0+255),f,b
   710  0001E4  5175               	movf	(?___wmul+1)& (0+255),w,b
   711  0001E6  237B               	addwfc	(??_main+1)& (0+255),f,b
   712  0001E8  0ED0               	movlw	208
   713  0001EA  256A               	addwf	(_palabra+10)& (0+255),w,b
   714  0001EC  6F74               	movwf	___wmul@multiplier& (0+255),b
   715  0001EE  6B75               	clrf	(___wmul@multiplier+1)& (0+255),b
   716  0001F0  0EFF               	movlw	255
   717  0001F2  2375               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   718  0001F4  0E00               	movlw	0
   719  0001F6  6F77               	movwf	(___wmul@multiplicand+1)& (0+255),b
   720  0001F8  0E0A               	movlw	10
   721  0001FA  6F76               	movwf	___wmul@multiplicand& (0+255),b
   722  0001FC  EC64  F003         	call	___wmul	;wreg free
   723  000200  0100               	movlb	0	; () banked
   724  000202  5174               	movf	?___wmul& (0+255),w,b
   725  000204  277A               	addwf	??_main& (0+255),f,b
   726  000206  5175               	movf	(?___wmul+1)& (0+255),w,b
   727  000208  237B               	addwfc	(??_main+1)& (0+255),f,b
   728  00020A  0ED0               	movlw	208
   729  00020C  257A               	addwf	??_main& (0+255),w,b
   730  00020E  6E0E               	movwf	_length,c
   731  000210  0EFF               	movlw	255
   732  000212  217B               	addwfc	(??_main+1)& (0+255),w,b
   733  000214  6E0F               	movwf	_length+1,c
   734                           
   735                           ;main.c: 112: turns = ((palabra[12] - 48) * 1000) + ((palabra[13] - 48) * 100) + ((palab
      +                          ra[14] - 48) * 10) + ((palabra[15] - 48));
   736  000216  0ED0               	movlw	208
   737  000218  256C               	addwf	(_palabra+12)& (0+255),w,b
   738  00021A  6F74               	movwf	___wmul@multiplier& (0+255),b
   739  00021C  6B75               	clrf	(___wmul@multiplier+1)& (0+255),b
   740  00021E  0EFF               	movlw	255
   741  000220  2375               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   742  000222  0E03               	movlw	3
   743  000224  6F77               	movwf	(___wmul@multiplicand+1)& (0+255),b
   744  000226  0EE8               	movlw	232
   745  000228  6F76               	movwf	___wmul@multiplicand& (0+255),b
   746  00022A  EC64  F003         	call	___wmul	;wreg free
   747  00022E  0100               	movlb	0	; () banked
   748  000230  516F               	movf	(_palabra+15)& (0+255),w,b
   749  000232  6F7A               	movwf	??_main& (0+255),b
   750  000234  6B7B               	clrf	(??_main+1)& (0+255),b
   751  000236  5174               	movf	?___wmul& (0+255),w,b
   752  000238  277A               	addwf	??_main& (0+255),f,b
   753  00023A  5175               	movf	(?___wmul+1)& (0+255),w,b
   754  00023C  237B               	addwfc	(??_main+1)& (0+255),f,b
   755  00023E  0ED0               	movlw	208
   756  000240  256D               	addwf	(_palabra+13)& (0+255),w,b
   757  000242  6F74               	movwf	___wmul@multiplier& (0+255),b
   758  000244  6B75               	clrf	(___wmul@multiplier+1)& (0+255),b
   759  000246  0EFF               	movlw	255
   760  000248  2375               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   761  00024A  0E00               	movlw	0
   762  00024C  6F77               	movwf	(___wmul@multiplicand+1)& (0+255),b
   763  00024E  0E64               	movlw	100
   764  000250  6F76               	movwf	___wmul@multiplicand& (0+255),b
   765  000252  EC64  F003         	call	___wmul	;wreg free
   766  000256  0100               	movlb	0	; () banked
   767  000258  5174               	movf	?___wmul& (0+255),w,b
   768  00025A  277A               	addwf	??_main& (0+255),f,b
   769  00025C  5175               	movf	(?___wmul+1)& (0+255),w,b
   770  00025E  237B               	addwfc	(??_main+1)& (0+255),f,b
   771  000260  0ED0               	movlw	208
   772  000262  256E               	addwf	(_palabra+14)& (0+255),w,b
   773  000264  6F74               	movwf	___wmul@multiplier& (0+255),b
   774  000266  6B75               	clrf	(___wmul@multiplier+1)& (0+255),b
   775  000268  0EFF               	movlw	255
   776  00026A  2375               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   777  00026C  0E00               	movlw	0
   778  00026E  6F77               	movwf	(___wmul@multiplicand+1)& (0+255),b
   779  000270  0E0A               	movlw	10
   780  000272  6F76               	movwf	___wmul@multiplicand& (0+255),b
   781  000274  EC64  F003         	call	___wmul	;wreg free
   782  000278  0100               	movlb	0	; () banked
   783  00027A  5174               	movf	?___wmul& (0+255),w,b
   784  00027C  277A               	addwf	??_main& (0+255),f,b
   785  00027E  5175               	movf	(?___wmul+1)& (0+255),w,b
   786  000280  237B               	addwfc	(??_main+1)& (0+255),f,b
   787  000282  0ED0               	movlw	208
   788  000284  257A               	addwf	??_main& (0+255),w,b
   789  000286  6E0C               	movwf	_turns,c
   790  000288  0EFF               	movlw	255
   791  00028A  217B               	addwfc	(??_main+1)& (0+255),w,b
   792  00028C  6E0D               	movwf	_turns+1,c
   793                           
   794                           ; BSR set to: 0
   795                           ;main.c: 113: speed = palabra[15];
   796  00028E  C06F  F00A         	movff	_palabra+15,_speed
   797  000292  6A0B               	clrf	_speed+1,c
   798                           
   799                           ; BSR set to: 0
   800                           ;main.c: 115: busy_flag = 1;
   801  000294  0E01               	movlw	1
   802  000296  6E29               	movwf	_busy_flag,c
   803                           
   804                           ;main.c: 116: } else if (palabra[0] == 'C') {
   805  000298  D089               	goto	l197
   806  00029A                     l174:
   807                           
   808                           ; BSR set to: 0
   809                           
   810                           ; BSR set to: 0
   811  00029A  0E43               	movlw	67
   812  00029C  1960               	xorwf	_palabra& (0+255),w,b
   813  00029E  A4D8               	btfss	status,2,c
   814  0002A0  D008               	goto	l176
   815                           
   816                           ; BSR set to: 0
   817                           ;main.c: 118: enable = !enable;
   818  0002A2  5028               	movf	_enable,w,c
   819  0002A4  A4D8               	btfss	status,2,c
   820  0002A6  D002               	goto	u1450
   821  0002A8  0E01               	movlw	1
   822  0002AA  D001               	goto	u1460
   823  0002AC                     u1450:
   824  0002AC  0E00               	movlw	0
   825  0002AE                     u1460:
   826  0002AE  6E28               	movwf	_enable,c
   827                           
   828                           ;main.c: 119: } else if ((palabra[0] == 'D')) {
   829  0002B0  D07D               	goto	l197
   830  0002B2                     l176:
   831                           
   832                           ; BSR set to: 0
   833                           
   834                           ; BSR set to: 0
   835  0002B2  0E44               	movlw	68
   836  0002B4  1960               	xorwf	_palabra& (0+255),w,b
   837  0002B6  A4D8               	btfss	status,2,c
   838  0002B8  D016               	goto	l178
   839                           
   840                           ; BSR set to: 0
   841                           ;main.c: 121: if (palabra[1] == '0') {
   842  0002BA  0E30               	movlw	48
   843  0002BC  1961               	xorwf	(_palabra+1)& (0+255),w,b
   844  0002BE  A4D8               	btfss	status,2,c
   845  0002C0  D004               	goto	l179
   846                           
   847                           ; BSR set to: 0
   848                           ;main.c: 123: MOT_3 = 1;
   849  0002C2  0E01               	movlw	1
   850  0002C4  6E50               	movwf	_MOT_3,c
   851                           
   852                           ;main.c: 124: DIR_3 = 0;
   853  0002C6  0E00               	movlw	0
   854  0002C8  D007               	goto	L1
   855  0002CA                     l179:
   856                           
   857                           ; BSR set to: 0
   858                           
   859                           ; BSR set to: 0
   860  0002CA  0E31               	movlw	49
   861  0002CC  1961               	xorwf	(_palabra+1)& (0+255),w,b
   862  0002CE  A4D8               	btfss	status,2,c
   863  0002D0  D005               	goto	l181
   864                           
   865                           ; BSR set to: 0
   866                           ;main.c: 127: MOT_3 = 1;
   867  0002D2  0E01               	movlw	1
   868  0002D4  6E50               	movwf	_MOT_3,c
   869                           
   870                           ;main.c: 128: DIR_3 = 1;
   871  0002D6  0E01               	movlw	1
   872  0002D8                     L1:
   873  0002D8  6E2F               	movwf	_DIR_3,c
   874                           
   875                           ;main.c: 129: } else if (palabra[1] == '2') {
   876  0002DA  D068               	goto	l197
   877  0002DC                     l181:
   878                           
   879                           ; BSR set to: 0
   880                           
   881                           ; BSR set to: 0
   882  0002DC  0E32               	movlw	50
   883  0002DE  1961               	xorwf	(_palabra+1)& (0+255),w,b
   884  0002E0  A4D8               	btfss	status,2,c
   885  0002E2  D064               	goto	l197
   886  0002E4  D041               	goto	u1660
   887  0002E6                     l178:
   888                           
   889                           ; BSR set to: 0
   890                           
   891                           ; BSR set to: 0
   892  0002E6  0E45               	movlw	69
   893  0002E8  1960               	xorwf	_palabra& (0+255),w,b
   894  0002EA  A4D8               	btfss	status,2,c
   895  0002EC  D018               	goto	l185
   896                           
   897                           ; BSR set to: 0
   898                           ;main.c: 138: if (palabra[1] == '0') {
   899  0002EE  0E30               	movlw	48
   900  0002F0  1961               	xorwf	(_palabra+1)& (0+255),w,b
   901  0002F2  A4D8               	btfss	status,2,c
   902  0002F4  D008               	goto	l186
   903                           
   904                           ; BSR set to: 0
   905                           ;main.c: 139: MOT_4 = !MOT_4;
   906  0002F6  504F               	movf	_MOT_4,w,c
   907  0002F8  A4D8               	btfss	status,2,c
   908  0002FA  D002               	goto	u1530
   909  0002FC  0E01               	movlw	1
   910  0002FE  D001               	goto	u1540
   911  000300                     u1530:
   912  000300  0E00               	movlw	0
   913  000302                     u1540:
   914  000302  6E4F               	movwf	_MOT_4,c
   915                           
   916                           ;main.c: 140: } else if (palabra[1] == '1') {
   917  000304  D053               	goto	l197
   918  000306                     l186:
   919                           
   920                           ; BSR set to: 0
   921                           
   922                           ; BSR set to: 0
   923  000306  0E31               	movlw	49
   924  000308  1961               	xorwf	(_palabra+1)& (0+255),w,b
   925  00030A  A4D8               	btfss	status,2,c
   926  00030C  D04F               	goto	l197
   927                           
   928                           ; BSR set to: 0
   929                           ;main.c: 141: DIR_4 = !DIR_4;
   930  00030E  502A               	movf	_DIR_4,w,c
   931  000310  A4D8               	btfss	status,2,c
   932  000312  D002               	goto	u1560
   933  000314  0E01               	movlw	1
   934  000316  D001               	goto	u1570
   935  000318                     u1560:
   936  000318  0E00               	movlw	0
   937  00031A                     u1570:
   938  00031A  6E2A               	movwf	_DIR_4,c
   939                           
   940                           ; BSR set to: 0
   941                           ;main.c: 142: }
   942                           ;main.c: 143: } else if (palabra[0] == 'M') {
   943                           
   944                           ; BSR set to: 0
   945  00031C  D047               	goto	l197
   946  00031E                     l185:
   947                           
   948                           ; BSR set to: 0
   949                           
   950                           ; BSR set to: 0
   951  00031E  0E4D               	movlw	77
   952  000320  1960               	xorwf	_palabra& (0+255),w,b
   953  000322  A4D8               	btfss	status,2,c
   954  000324  D043               	goto	l197
   955                           
   956                           ; BSR set to: 0
   957                           ;main.c: 145: if (palabra[1] == '1') {
   958  000326  0E31               	movlw	49
   959  000328  1961               	xorwf	(_palabra+1)& (0+255),w,b
   960  00032A  A4D8               	btfss	status,2,c
   961  00032C  D008               	goto	l191
   962                           
   963                           ; BSR set to: 0
   964                           ;main.c: 146: MOT_1 = !MOT_1;
   965  00032E  5052               	movf	_MOT_1,w,c
   966  000330  A4D8               	btfss	status,2,c
   967  000332  D002               	goto	u1600
   968  000334  0E01               	movlw	1
   969  000336  D001               	goto	u1610
   970  000338                     u1600:
   971  000338  0E00               	movlw	0
   972  00033A                     u1610:
   973  00033A  6E52               	movwf	_MOT_1,c
   974                           
   975                           ;main.c: 147: } else if (palabra[1] == '2') {
   976  00033C  D037               	goto	l197
   977  00033E                     l191:
   978                           
   979                           ; BSR set to: 0
   980                           
   981                           ; BSR set to: 0
   982  00033E  0E32               	movlw	50
   983  000340  1961               	xorwf	(_palabra+1)& (0+255),w,b
   984  000342  A4D8               	btfss	status,2,c
   985  000344  D008               	goto	l193
   986                           
   987                           ; BSR set to: 0
   988                           ;main.c: 148: MOT_2 = !MOT_2;
   989  000346  5051               	movf	_MOT_2,w,c
   990  000348  A4D8               	btfss	status,2,c
   991  00034A  D002               	goto	u1630
   992  00034C  0E01               	movlw	1
   993  00034E  D001               	goto	u1640
   994  000350                     u1630:
   995  000350  0E00               	movlw	0
   996  000352                     u1640:
   997  000352  6E51               	movwf	_MOT_2,c
   998                           
   999                           ;main.c: 149: } else if (palabra[1] == '3') {
  1000  000354  D02B               	goto	l197
  1001  000356                     l193:
  1002                           
  1003                           ; BSR set to: 0
  1004                           
  1005                           ; BSR set to: 0
  1006  000356  0E33               	movlw	51
  1007  000358  1961               	xorwf	(_palabra+1)& (0+255),w,b
  1008  00035A  A4D8               	btfss	status,2,c
  1009  00035C  D027               	goto	l197
  1010                           
  1011                           ; BSR set to: 0
  1012                           ;main.c: 150: MOT_3 = !MOT_3;
  1013  00035E  5050               	movf	_MOT_3,w,c
  1014  000360  A4D8               	btfss	status,2,c
  1015  000362  D002               	goto	u1660
  1016  000364  0E01               	movlw	1
  1017  000366  D001               	goto	u1670
  1018  000368                     u1660:
  1019  000368  0E00               	movlw	0
  1020  00036A                     u1670:
  1021  00036A  6E50               	movwf	_MOT_3,c
  1022                           
  1023                           ; BSR set to: 0
  1024                           ;main.c: 151: }
  1025                           ;main.c: 152: }
  1026                           ;main.c: 155: } else if (GODONE == 0) {
  1027                           
  1028                           ; BSR set to: 0
  1029                           
  1030                           ; BSR set to: 0
  1031                           
  1032                           ; BSR set to: 0
  1033                           
  1034                           ; BSR set to: 0
  1035                           
  1036                           ; BSR set to: 0
  1037                           
  1038                           ; BSR set to: 0
  1039                           
  1040                           ; BSR set to: 0
  1041                           
  1042                           ; BSR set to: 0
  1043  00036C  D01F               	goto	l197
  1044  00036E                     l171:
  1045                           
  1046                           ; BSR set to: 0
  1047  00036E  B2C2               	btfsc	4034,1,c	;volatile
  1048  000370  D01D               	goto	l197
  1049                           
  1050                           ; BSR set to: 0
  1051                           ;main.c: 157: _delay((unsigned long)((4)*(8000000/4000.0)));
  1052  000372  0E0B               	movlw	11
  1053  000374  0100               	movlb	0	; () banked
  1054  000376  6F7A               	movwf	??_main& (0+255),b
  1055  000378  0E62               	movlw	98
  1056  00037A                     u1727:
  1057  00037A  2EE8               	decfsz	wreg,f,c
  1058  00037C  D7FE               	bra	u1727
  1059  00037E  2F7A               	decfsz	??_main& (0+255),f,b
  1060  000380  D7FC               	bra	u1727
  1061  000382  F000               	nop	
  1062                           
  1063                           ;main.c: 158: ADCON0bits.CHS = !ADCON0bits.CHS;
  1064  000384  30C2               	rrcf	4034,w,c	;volatile
  1065  000386  32E8               	rrcf	wreg,f,c
  1066  000388  0B0F               	andlw	15
  1067  00038A  0900               	iorlw	0
  1068  00038C  A4D8               	btfss	status,2,c
  1069  00038E  D004               	goto	u1690
  1070  000390  0100               	movlb	0	; () banked
  1071  000392  6B7A               	clrf	??_main& (0+255),b
  1072  000394  2B7A               	incf	??_main& (0+255),f,b
  1073  000396  D002               	goto	u1708
  1074  000398                     u1690:
  1075  000398  0100               	movlb	0	; () banked
  1076  00039A  6B7A               	clrf	??_main& (0+255),b
  1077  00039C                     u1708:
  1078  00039C  477A               	rlncf	??_main& (0+255),f,b
  1079  00039E  477A               	rlncf	??_main& (0+255),f,b
  1080  0003A0  50C2               	movf	4034,w,c	;volatile
  1081  0003A2  197A               	xorwf	??_main& (0+255),w,b
  1082  0003A4  0BC3               	andlw	-61
  1083  0003A6  197A               	xorwf	??_main& (0+255),w,b
  1084  0003A8  6EC2               	movwf	4034,c	;volatile
  1085                           
  1086                           ; BSR set to: 0
  1087                           ;main.c: 159: GODONE = 1;
  1088  0003AA  82C2               	bsf	4034,1,c	;volatile
  1089  0003AC                     l197:
  1090                           
  1091                           ; BSR set to: 0
  1092                           ;main.c: 167: }
  1093                           ;main.c: 169: if (mot_4_steps == mot_4_step_count) {
  1094                           
  1095                           ; BSR set to: 0
  1096                           
  1097                           ; BSR set to: 0
  1098  0003AC  5008               	movf	_mot_4_step_count,w,c
  1099  0003AE  1816               	xorwf	_mot_4_steps,w,c
  1100  0003B0  E103               	bnz	u1711
  1101  0003B2  5009               	movf	_mot_4_step_count+1,w,c
  1102  0003B4  1817               	xorwf	_mot_4_steps+1,w,c
  1103  0003B6  A4D8               	btfss	status,2,c
  1104  0003B8                     u1711:
  1105  0003B8  D638               	goto	l170
  1106                           
  1107                           ; BSR set to: 0
  1108                           ;main.c: 171: MOT_4 = 0;
  1109  0003BA  0E00               	movlw	0
  1110  0003BC  D635               	goto	L2
  1111  0003BE                     __end_of_main:
  1112                           	opt stack 0
  1113                           tblptru	equ	0xFF8
  1114                           tblptrh	equ	0xFF7
  1115                           tblptrl	equ	0xFF6
  1116                           tablat	equ	0xFF5
  1117                           postinc0	equ	0xFEE
  1118                           wreg	equ	0xFE8
  1119                           postdec1	equ	0xFE5
  1120                           fsr1l	equ	0xFE1
  1121                           status	equ	0xFD8
  1122                           
  1123 ;; *************** function ___wmul *****************
  1124 ;; Defined at:
  1125 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
  1126 ;; Parameters:    Size  Location     Type
  1127 ;;  multiplier      2    0[BANK0 ] unsigned int 
  1128 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  1129 ;; Auto vars:     Size  Location     Type
  1130 ;;  product         2    4[BANK0 ] unsigned int 
  1131 ;; Return value:  Size  Location     Type
  1132 ;;                  2    0[BANK0 ] unsigned int 
  1133 ;; Registers used:
  1134 ;;		wreg, status,2, status,0, prodl, prodh
  1135 ;; Tracked objects:
  1136 ;;		On entry : 0/0
  1137 ;;		On exit  : 0/0
  1138 ;;		Unchanged: 0/0
  1139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1140 ;;      Params:         0       4       0       0       0       0       0       0       0
  1141 ;;      Locals:         0       2       0       0       0       0       0       0       0
  1142 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1143 ;;      Totals:         0       6       0       0       0       0       0       0       0
  1144 ;;Total ram usage:        6 bytes
  1145 ;; Hardware stack levels used:    1
  1146 ;; Hardware stack levels required when called:    1
  1147 ;; This function calls:
  1148 ;;		Nothing
  1149 ;; This function is called by:
  1150 ;;		_main
  1151 ;; This function uses a non-reentrant model
  1152 ;;
  1153                           
  1154                           	psect	text1
  1155  0006C8                     __ptext1:
  1156                           	opt stack 0
  1157  0006C8                     ___wmul:
  1158                           	opt stack 29
  1159                           
  1160                           ; BSR set to: 0
  1161                           ;incstack = 0
  1162  0006C8  0100               	movlb	0	; () banked
  1163  0006CA  5174               	movf	___wmul@multiplier& (0+255),w,b
  1164  0006CC  0376               	mulwf	___wmul@multiplicand& (0+255),b
  1165  0006CE  CFF3 F078          	movff	prodl,___wmul@product
  1166  0006D2  CFF4 F079          	movff	prodh,___wmul@product+1
  1167  0006D6  5174               	movf	___wmul@multiplier& (0+255),w,b
  1168  0006D8  0377               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  1169  0006DA  50F3               	movf	prodl,w,c
  1170  0006DC  2779               	addwf	(___wmul@product+1)& (0+255),f,b
  1171  0006DE  5175               	movf	(___wmul@multiplier+1)& (0+255),w,b
  1172  0006E0  0376               	mulwf	___wmul@multiplicand& (0+255),b
  1173  0006E2  50F3               	movf	prodl,w,c
  1174  0006E4  2779               	addwf	(___wmul@product+1)& (0+255),f,b
  1175                           
  1176                           ; BSR set to: 0
  1177  0006E6  C078  F074         	movff	___wmul@product,?___wmul
  1178  0006EA  C079  F075         	movff	___wmul@product+1,?___wmul+1
  1179  0006EE  0012               	return	
  1180  0006F0                     __end_of___wmul:
  1181                           	opt stack 0
  1182                           tblptru	equ	0xFF8
  1183                           tblptrh	equ	0xFF7
  1184                           tblptrl	equ	0xFF6
  1185                           tablat	equ	0xFF5
  1186                           prodh	equ	0xFF4
  1187                           prodl	equ	0xFF3
  1188                           postinc0	equ	0xFEE
  1189                           wreg	equ	0xFE8
  1190                           postdec1	equ	0xFE5
  1191                           fsr1l	equ	0xFE1
  1192                           status	equ	0xFD8
  1193                           
  1194 ;; *************** function _InitApp *****************
  1195 ;; Defined at:
  1196 ;;		line 33 in file "user.c"
  1197 ;; Parameters:    Size  Location     Type
  1198 ;;		None
  1199 ;; Auto vars:     Size  Location     Type
  1200 ;;		None
  1201 ;; Return value:  Size  Location     Type
  1202 ;;                  1    wreg      void 
  1203 ;; Registers used:
  1204 ;;		wreg, status,2
  1205 ;; Tracked objects:
  1206 ;;		On entry : 0/0
  1207 ;;		On exit  : 0/0
  1208 ;;		Unchanged: 0/0
  1209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1210 ;;      Params:         0       0       0       0       0       0       0       0       0
  1211 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1212 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1213 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1214 ;;Total ram usage:        0 bytes
  1215 ;; Hardware stack levels used:    1
  1216 ;; Hardware stack levels required when called:    1
  1217 ;; This function calls:
  1218 ;;		Nothing
  1219 ;; This function is called by:
  1220 ;;		_main
  1221 ;; This function uses a non-reentrant model
  1222 ;;
  1223                           
  1224                           	psect	text2
  1225  0005DA                     __ptext2:
  1226                           	opt stack 0
  1227  0005DA                     _InitApp:
  1228                           	opt stack 29
  1229                           
  1230                           ;user.c: 35: PORTA = 0;
  1231                           
  1232                           ; BSR set to: 0
  1233                           ;incstack = 0
  1234  0005DA  0E00               	movlw	0
  1235  0005DC  6E80               	movwf	3968,c	;volatile
  1236                           
  1237                           ;user.c: 36: LATA = 0;
  1238  0005DE  0E00               	movlw	0
  1239  0005E0  6E89               	movwf	3977,c	;volatile
  1240                           
  1241                           ;user.c: 37: PORTB = 0;
  1242  0005E2  0E00               	movlw	0
  1243  0005E4  6E81               	movwf	3969,c	;volatile
  1244                           
  1245                           ;user.c: 38: LATB = 0;
  1246  0005E6  0E00               	movlw	0
  1247  0005E8  6E8A               	movwf	3978,c	;volatile
  1248                           
  1249                           ;user.c: 39: PORTC = 0;
  1250  0005EA  0E00               	movlw	0
  1251  0005EC  6E82               	movwf	3970,c	;volatile
  1252                           
  1253                           ;user.c: 40: LATC = 0;
  1254  0005EE  0E00               	movlw	0
  1255  0005F0  6E8B               	movwf	3979,c	;volatile
  1256                           
  1257                           ;user.c: 42: ADCON1 = 0b1101;
  1258  0005F2  0E0D               	movlw	13
  1259  0005F4  6EC1               	movwf	4033,c	;volatile
  1260                           
  1261                           ;user.c: 43: TRISAbits.TRISA0 = 1;
  1262  0005F6  8092               	bsf	3986,0,c	;volatile
  1263                           
  1264                           ;user.c: 44: ADCON0bits.CHS = 0;
  1265  0005F8  94C2               	bcf	4034,2,c	;volatile
  1266  0005FA  96C2               	bcf	4034,3,c	;volatile
  1267  0005FC  98C2               	bcf	4034,4,c	;volatile
  1268  0005FE  9AC2               	bcf	4034,5,c	;volatile
  1269                           
  1270                           ;user.c: 45: ADCON2 = 0b10101100;
  1271  000600  0EAC               	movlw	172
  1272  000602  6EC0               	movwf	4032,c	;volatile
  1273                           
  1274                           ;user.c: 46: PIE1bits.ADIE = 1;
  1275  000604  8C9D               	bsf	3997,6,c	;volatile
  1276                           
  1277                           ;user.c: 47: PIR1bits.ADIF = 0;
  1278  000606  9C9E               	bcf	3998,6,c	;volatile
  1279                           
  1280                           ;user.c: 48: ADCON0bits.ADON = 1;
  1281  000608  80C2               	bsf	4034,0,c	;volatile
  1282                           
  1283                           ;user.c: 50: TRISAbits.RA2 = 0;
  1284  00060A  9492               	bcf	3986,2,c	;volatile
  1285                           
  1286                           ;user.c: 51: TRISAbits.RA3 = 0;
  1287  00060C  9692               	bcf	3986,3,c	;volatile
  1288                           
  1289                           ;user.c: 52: TRISAbits.RA4 = 0;
  1290  00060E  9892               	bcf	3986,4,c	;volatile
  1291                           
  1292                           ;user.c: 53: TRISAbits.RA5 = 0;
  1293  000610  9A92               	bcf	3986,5,c	;volatile
  1294                           
  1295                           ;user.c: 54: TRISCbits.RC0 = 0;
  1296  000612  9094               	bcf	3988,0,c	;volatile
  1297                           
  1298                           ;user.c: 55: TRISCbits.RC1 = 0;
  1299  000614  9294               	bcf	3988,1,c	;volatile
  1300                           
  1301                           ;user.c: 56: TRISBbits.RB7 = 0;
  1302  000616  9E93               	bcf	3987,7,c	;volatile
  1303                           
  1304                           ;user.c: 57: TRISBbits.RB6 = 0;
  1305  000618  9C93               	bcf	3987,6,c	;volatile
  1306                           
  1307                           ;user.c: 58: TRISCbits.RC2 = 0;
  1308  00061A  9494               	bcf	3988,2,c	;volatile
  1309                           
  1310                           ;user.c: 59: TRISBbits.RB4 = 0;
  1311  00061C  9893               	bcf	3987,4,c	;volatile
  1312                           
  1313                           ;user.c: 60: TRISBbits.RB5 = 0;
  1314  00061E  9A93               	bcf	3987,5,c	;volatile
  1315                           
  1316                           ;user.c: 62: RCONbits.IPEN = 0;
  1317  000620  9ED0               	bcf	4048,7,c	;volatile
  1318                           
  1319                           ;user.c: 64: INTCONbits.GIE = 1;
  1320  000622  8EF2               	bsf	intcon,7,c	;volatile
  1321                           
  1322                           ;user.c: 65: INTCONbits.PEIE = 1;
  1323  000624  8CF2               	bsf	intcon,6,c	;volatile
  1324                           
  1325                           ;user.c: 66: INTCONbits.TMR0IE = 1;
  1326  000626  8AF2               	bsf	intcon,5,c	;volatile
  1327                           
  1328                           ;user.c: 67: INTCONbits.TMR0IF = 0;
  1329  000628  94F2               	bcf	intcon,2,c	;volatile
  1330                           
  1331                           ;user.c: 68: INTCON2bits.TMR0IP = 1;
  1332  00062A  84F1               	bsf	intcon2,2,c	;volatile
  1333                           
  1334                           ;user.c: 69: T0CONbits.T08BIT = 1;
  1335  00062C  8CD5               	bsf	4053,6,c	;volatile
  1336                           
  1337                           ;user.c: 70: T0CONbits.T0CS = 0;
  1338  00062E  9AD5               	bcf	4053,5,c	;volatile
  1339                           
  1340                           ;user.c: 71: T0CONbits.PSA = 0;
  1341  000630  96D5               	bcf	4053,3,c	;volatile
  1342                           
  1343                           ;user.c: 72: T0CONbits.T0PS = 0b101;
  1344  000632  50D5               	movf	4053,w,c	;volatile
  1345  000634  0BF8               	andlw	-8
  1346  000636  0905               	iorlw	5
  1347  000638  6ED5               	movwf	4053,c	;volatile
  1348                           
  1349                           ;user.c: 73: TMR0 = 0x6;
  1350  00063A  0E00               	movlw	0
  1351  00063C  6ED7               	movwf	4055,c	;volatile
  1352  00063E  0E06               	movlw	6
  1353  000640  6ED6               	movwf	4054,c	;volatile
  1354                           
  1355                           ;user.c: 75: TRISBbits.RB1 = 1;
  1356  000642  8293               	bsf	3987,1,c	;volatile
  1357                           
  1358                           ;user.c: 76: TRISBbits.RB2 = 1;
  1359  000644  8493               	bsf	3987,2,c	;volatile
  1360                           
  1361                           ;user.c: 77: INTCON3bits.INT1IE = 1;
  1362  000646  86F0               	bsf	intcon3,3,c	;volatile
  1363                           
  1364                           ;user.c: 78: INTCON3bits.INT2IE = 1;
  1365  000648  88F0               	bsf	intcon3,4,c	;volatile
  1366                           
  1367                           ;user.c: 79: INTCON3bits.INT1IF = 0;
  1368  00064A  90F0               	bcf	intcon3,0,c	;volatile
  1369                           
  1370                           ;user.c: 80: INTCON3bits.INT2IF = 0;
  1371  00064C  92F0               	bcf	intcon3,1,c	;volatile
  1372                           
  1373                           ;user.c: 81: INTCON2bits.INTEDG1 = 0;
  1374  00064E  9AF1               	bcf	intcon2,5,c	;volatile
  1375                           
  1376                           ;user.c: 82: INTCON2bits.INTEDG2 = 0;
  1377  000650  98F1               	bcf	intcon2,4,c	;volatile
  1378                           
  1379                           ;user.c: 84: TRISCbits.RC6 = 0;
  1380  000652  9C94               	bcf	3988,6,c	;volatile
  1381                           
  1382                           ;user.c: 85: TRISCbits.RC7 = 1;
  1383  000654  8E94               	bsf	3988,7,c	;volatile
  1384                           
  1385                           ;user.c: 86: BRGH = 1;
  1386  000656  84AC               	bsf	4012,2,c	;volatile
  1387                           
  1388                           ;user.c: 87: BRG16 = 1;
  1389  000658  86B8               	bsf	4024,3,c	;volatile
  1390                           
  1391                           ;user.c: 88: SPBRG = 207;
  1392  00065A  0ECF               	movlw	207
  1393  00065C  6EAF               	movwf	4015,c	;volatile
  1394                           
  1395                           ;user.c: 89: SPEN = 1;
  1396  00065E  8EAB               	bsf	4011,7,c	;volatile
  1397                           
  1398                           ;user.c: 90: SYNC = 0;
  1399  000660  98AC               	bcf	4012,4,c	;volatile
  1400                           
  1401                           ;user.c: 91: TXEN = 1;
  1402  000662  8AAC               	bsf	4012,5,c	;volatile
  1403                           
  1404                           ;user.c: 92: CREN = 1;
  1405  000664  88AB               	bsf	4011,4,c	;volatile
  1406                           
  1407                           ;user.c: 93: TX9 = 0;
  1408  000666  9CAC               	bcf	4012,6,c	;volatile
  1409                           
  1410                           ;user.c: 94: RX9 = 0;
  1411  000668  9CAB               	bcf	4011,6,c	;volatile
  1412                           
  1413                           ;user.c: 95: RCIE = 1;
  1414  00066A  8A9D               	bsf	3997,5,c	;volatile
  1415                           
  1416                           ;user.c: 96: TXIE = 0;
  1417  00066C  989D               	bcf	3997,4,c	;volatile
  1418                           
  1419                           ;user.c: 98: PR2 = 99;
  1420  00066E  0E63               	movlw	99
  1421  000670  6ECB               	movwf	4043,c	;volatile
  1422                           
  1423                           ;user.c: 99: CCP1CONbits.DC1B = 0;
  1424  000672  0ECF               	movlw	-49
  1425  000674  16BD               	andwf	4029,f,c	;volatile
  1426                           
  1427                           ;user.c: 100: T2CONbits.T2CKPS = 0b00;
  1428  000676  0EFC               	movlw	-4
  1429  000678  16CA               	andwf	4042,f,c	;volatile
  1430                           
  1431                           ;user.c: 101: T2CONbits.TMR2ON = 1;
  1432  00067A  84CA               	bsf	4042,2,c	;volatile
  1433                           
  1434                           ;user.c: 102: CCP1CONbits.CCP1M = 0b1111;
  1435  00067C  80BD               	bsf	4029,0,c	;volatile
  1436  00067E  82BD               	bsf	4029,1,c	;volatile
  1437  000680  84BD               	bsf	4029,2,c	;volatile
  1438  000682  86BD               	bsf	4029,3,c	;volatile
  1439  000684  0012               	return		;funcret
  1440  000686                     __end_of_InitApp:
  1441                           	opt stack 0
  1442                           tblptru	equ	0xFF8
  1443                           tblptrh	equ	0xFF7
  1444                           tblptrl	equ	0xFF6
  1445                           tablat	equ	0xFF5
  1446                           prodh	equ	0xFF4
  1447                           prodl	equ	0xFF3
  1448                           intcon	equ	0xFF2
  1449                           intcon2	equ	0xFF1
  1450                           intcon3	equ	0xFF0
  1451                           postinc0	equ	0xFEE
  1452                           wreg	equ	0xFE8
  1453                           postdec1	equ	0xFE5
  1454                           fsr1l	equ	0xFE1
  1455                           status	equ	0xFD8
  1456                           
  1457 ;; *************** function _ConfigureOscillator *****************
  1458 ;; Defined at:
  1459 ;;		line 24 in file "system.c"
  1460 ;; Parameters:    Size  Location     Type
  1461 ;;		None
  1462 ;; Auto vars:     Size  Location     Type
  1463 ;;		None
  1464 ;; Return value:  Size  Location     Type
  1465 ;;                  1    wreg      void 
  1466 ;; Registers used:
  1467 ;;		wreg, status,2
  1468 ;; Tracked objects:
  1469 ;;		On entry : 0/0
  1470 ;;		On exit  : 0/0
  1471 ;;		Unchanged: 0/0
  1472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1473 ;;      Params:         0       0       0       0       0       0       0       0       0
  1474 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1475 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1476 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1477 ;;Total ram usage:        0 bytes
  1478 ;; Hardware stack levels used:    1
  1479 ;; Hardware stack levels required when called:    1
  1480 ;; This function calls:
  1481 ;;		Nothing
  1482 ;; This function is called by:
  1483 ;;		_main
  1484 ;; This function uses a non-reentrant model
  1485 ;;
  1486                           
  1487                           	psect	text3
  1488  0006FC                     __ptext3:
  1489                           	opt stack 0
  1490  0006FC                     _ConfigureOscillator:
  1491                           	opt stack 29
  1492                           
  1493                           ;system.c: 27: OSCCONbits.IRCF = 0b111;
  1494                           
  1495                           ;incstack = 0
  1496  0006FC  88D3               	bsf	4051,4,c	;volatile
  1497  0006FE  8AD3               	bsf	4051,5,c	;volatile
  1498  000700  8CD3               	bsf	4051,6,c	;volatile
  1499                           
  1500                           ;system.c: 28: OSCCONbits.SCS = 0b11;
  1501  000702  0E03               	movlw	3
  1502  000704  12D3               	iorwf	4051,f,c	;volatile
  1503  000706  0012               	return		;funcret
  1504  000708                     __end_of_ConfigureOscillator:
  1505                           	opt stack 0
  1506                           tblptru	equ	0xFF8
  1507                           tblptrh	equ	0xFF7
  1508                           tblptrl	equ	0xFF6
  1509                           tablat	equ	0xFF5
  1510                           prodh	equ	0xFF4
  1511                           prodl	equ	0xFF3
  1512                           intcon	equ	0xFF2
  1513                           intcon2	equ	0xFF1
  1514                           intcon3	equ	0xFF0
  1515                           postinc0	equ	0xFEE
  1516                           wreg	equ	0xFE8
  1517                           postdec1	equ	0xFE5
  1518                           fsr1l	equ	0xFE1
  1519                           status	equ	0xFD8
  1520                           
  1521 ;; *************** function _high_isr *****************
  1522 ;; Defined at:
  1523 ;;		line 51 in file "interrupts.c"
  1524 ;; Parameters:    Size  Location     Type
  1525 ;;		None
  1526 ;; Auto vars:     Size  Location     Type
  1527 ;;		None
  1528 ;; Return value:  Size  Location     Type
  1529 ;;                  1    wreg      void 
  1530 ;; Registers used:
  1531 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1532 ;; Tracked objects:
  1533 ;;		On entry : 0/0
  1534 ;;		On exit  : 0/0
  1535 ;;		Unchanged: 0/0
  1536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1537 ;;      Params:         0       0       0       0       0       0       0       0       0
  1538 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1539 ;;      Temps:         19       0       0       0       0       0       0       0       0
  1540 ;;      Totals:        19       0       0       0       0       0       0       0       0
  1541 ;;Total ram usage:       19 bytes
  1542 ;; Hardware stack levels used:    1
  1543 ;; This function calls:
  1544 ;;		Nothing
  1545 ;; This function is called by:
  1546 ;;		Interrupt level 2
  1547 ;; This function uses a non-reentrant model
  1548 ;;
  1549                           
  1550                           	psect	intcode
  1551  000008                     __pintcode:
  1552                           	opt stack 0
  1553  000008                     _high_isr:
  1554                           	opt stack 29
  1555                           
  1556                           ;incstack = 0
  1557  000008  8253               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  1558  00000A  EDDF  F001         	call	int_func,f	;refresh shadow registers
  1559                           tblptru	equ	0xFF8
  1560                           tblptrh	equ	0xFF7
  1561                           tblptrl	equ	0xFF6
  1562                           tablat	equ	0xFF5
  1563                           prodh	equ	0xFF4
  1564                           prodl	equ	0xFF3
  1565                           intcon	equ	0xFF2
  1566                           intcon2	equ	0xFF1
  1567                           intcon3	equ	0xFF0
  1568                           postinc0	equ	0xFEE
  1569                           wreg	equ	0xFE8
  1570                           postdec1	equ	0xFE5
  1571                           fsr1l	equ	0xFE1
  1572                           status	equ	0xFD8
  1573                           
  1574                           	psect	intcode_body
  1575  0003BE                     __pintcode_body:
  1576                           	opt stack 29
  1577  0003BE                     int_func:
  1578                           	opt stack 29
  1579  0003BE  0006               	pop		; remove dummy address from shadow register refresh
  1580  0003C0  CFFA F031          	movff	pclath,??_high_isr+1
  1581  0003C4  CFFB F032          	movff	pclatu,??_high_isr+2
  1582  0003C8  CFE9 F033          	movff	fsr0l,??_high_isr+3
  1583  0003CC  CFEA F034          	movff	fsr0h,??_high_isr+4
  1584  0003D0  CFE1 F035          	movff	fsr1l,??_high_isr+5
  1585  0003D4  CFE2 F036          	movff	fsr1h,??_high_isr+6
  1586  0003D8  CFD9 F037          	movff	fsr2l,??_high_isr+7
  1587  0003DC  CFDA F038          	movff	fsr2h,??_high_isr+8
  1588  0003E0  CFF3 F039          	movff	prodl,??_high_isr+9
  1589  0003E4  CFF4 F03A          	movff	prodh,??_high_isr+10
  1590  0003E8  CFF6 F03B          	movff	tblptrl,??_high_isr+11
  1591  0003EC  CFF7 F03C          	movff	tblptrh,??_high_isr+12
  1592  0003F0  CFF8 F03D          	movff	tblptru,??_high_isr+13
  1593  0003F4  CFF5 F03E          	movff	tablat,??_high_isr+14
  1594  0003F8  C053  F03F         	movff	btemp,??_high_isr+15
  1595  0003FC  C054  F040         	movff	btemp+1,??_high_isr+16
  1596  000400  C055  F041         	movff	btemp+2,??_high_isr+17
  1597  000404  C056  F042         	movff	btemp+3,??_high_isr+18
  1598                           
  1599                           ;interrupts.c: 52: if (INTCONbits.TMR0IF) {
  1600  000408  A4F2               	btfss	intcon,2,c	;volatile
  1601  00040A  D07D               	goto	i2l77
  1602                           
  1603                           ;interrupts.c: 54: INTCONbits.TMR0IF = 0;
  1604  00040C  94F2               	bcf	intcon,2,c	;volatile
  1605                           
  1606                           ;interrupts.c: 55: TMR0 = 250;
  1607  00040E  0E00               	movlw	0
  1608  000410  6ED7               	movwf	4055,c	;volatile
  1609  000412  0EFA               	movlw	250
  1610  000414  6ED6               	movwf	4054,c	;volatile
  1611                           
  1612                           ;interrupts.c: 56: MOT_1_count++;
  1613  000416  4A1E               	infsnz	_MOT_1_count,f,c
  1614  000418  2A1F               	incf	_MOT_1_count+1,f,c
  1615                           
  1616                           ;interrupts.c: 57: MOT_2_count++;
  1617  00041A  4A1C               	infsnz	_MOT_2_count,f,c
  1618  00041C  2A1D               	incf	_MOT_2_count+1,f,c
  1619                           
  1620                           ;interrupts.c: 58: MOT_3_count++;
  1621  00041E  4A1A               	infsnz	_MOT_3_count,f,c
  1622  000420  2A1B               	incf	_MOT_3_count+1,f,c
  1623                           
  1624                           ;interrupts.c: 59: MOT_4_count++;
  1625  000422  4A18               	infsnz	_MOT_4_count,f,c
  1626  000424  2A19               	incf	_MOT_4_count+1,f,c
  1627                           
  1628                           ;interrupts.c: 61: if (MOT_1) {
  1629  000426  5052               	movf	_MOT_1,w,c
  1630  000428  B4D8               	btfsc	status,2,c
  1631  00042A  D019               	goto	i2l79
  1632                           
  1633                           ;interrupts.c: 62: if (MOT_1_count == count_1) {
  1634  00042C  504D               	movf	_count_1,w,c
  1635  00042E  181E               	xorwf	_MOT_1_count,w,c
  1636  000430  E116               	bnz	i2l1301
  1637  000432  504E               	movf	_count_1+1,w,c
  1638  000434  181F               	xorwf	_MOT_1_count+1,w,c
  1639  000436  A4D8               	btfss	status,2,c
  1640  000438  D012               	goto	i2l79
  1641                           
  1642                           ;interrupts.c: 63: LATAbits.LA3 = !PORTAbits.RA3;
  1643  00043A  B680               	btfsc	3968,3,c	;volatile
  1644  00043C  D003               	goto	i2u70_40
  1645  00043E  6A30               	clrf	??_high_isr& (0+255),c
  1646  000440  2A30               	incf	??_high_isr& (0+255),f,c
  1647  000442  D001               	goto	i2u71_48
  1648  000444                     i2u70_40:
  1649  000444  6A30               	clrf	??_high_isr& (0+255),c
  1650  000446                     i2u71_48:
  1651  000446  4630               	rlncf	??_high_isr,f,c
  1652  000448  4630               	rlncf	??_high_isr,f,c
  1653  00044A  4630               	rlncf	??_high_isr,f,c
  1654  00044C  5089               	movf	3977,w,c	;volatile
  1655  00044E  1830               	xorwf	??_high_isr,w,c
  1656  000450  0BF7               	andlw	-9
  1657  000452  1830               	xorwf	??_high_isr,w,c
  1658  000454  6E89               	movwf	3977,c	;volatile
  1659                           
  1660                           ;interrupts.c: 64: MOT_1_count = 0;
  1661  000456  0E00               	movlw	0
  1662  000458  6E1F               	movwf	_MOT_1_count+1,c
  1663  00045A  0E00               	movlw	0
  1664  00045C  6E1E               	movwf	_MOT_1_count,c
  1665  00045E                     i2l79:
  1666  00045E                     i2l1301:
  1667                           
  1668                           ;interrupts.c: 65: }
  1669                           ;interrupts.c: 66: }
  1670                           ;interrupts.c: 67: if (MOT_2) {
  1671  00045E  5051               	movf	_MOT_2,w,c
  1672  000460  B4D8               	btfsc	status,2,c
  1673  000462  D018               	goto	i2l81
  1674                           
  1675                           ;interrupts.c: 68: if (MOT_2_count == count_2) {
  1676  000464  504B               	movf	_count_2,w,c
  1677  000466  181C               	xorwf	_MOT_2_count,w,c
  1678  000468  E115               	bnz	i2l1309
  1679  00046A  504C               	movf	_count_2+1,w,c
  1680  00046C  181D               	xorwf	_MOT_2_count+1,w,c
  1681  00046E  A4D8               	btfss	status,2,c
  1682  000470  D011               	goto	i2l81
  1683                           
  1684                           ;interrupts.c: 69: LATAbits.LA5 = !PORTAbits.RA5;
  1685  000472  BA80               	btfsc	3968,5,c	;volatile
  1686  000474  D003               	goto	i2u74_40
  1687  000476  6A30               	clrf	??_high_isr& (0+255),c
  1688  000478  2A30               	incf	??_high_isr& (0+255),f,c
  1689  00047A  D001               	goto	i2u75_48
  1690  00047C                     i2u74_40:
  1691  00047C  6A30               	clrf	??_high_isr& (0+255),c
  1692  00047E                     i2u75_48:
  1693  00047E  3A30               	swapf	??_high_isr,f,c
  1694  000480  4630               	rlncf	??_high_isr,f,c
  1695  000482  5089               	movf	3977,w,c	;volatile
  1696  000484  1830               	xorwf	??_high_isr,w,c
  1697  000486  0BDF               	andlw	-33
  1698  000488  1830               	xorwf	??_high_isr,w,c
  1699  00048A  6E89               	movwf	3977,c	;volatile
  1700                           
  1701                           ;interrupts.c: 70: MOT_2_count = 0;
  1702  00048C  0E00               	movlw	0
  1703  00048E  6E1D               	movwf	_MOT_2_count+1,c
  1704  000490  0E00               	movlw	0
  1705  000492  6E1C               	movwf	_MOT_2_count,c
  1706  000494                     i2l81:
  1707  000494                     i2l1309:
  1708                           
  1709                           ;interrupts.c: 71: }
  1710                           ;interrupts.c: 72: }
  1711                           ;interrupts.c: 73: if (MOT_3) {
  1712  000494  5050               	movf	_MOT_3,w,c
  1713  000496  B4D8               	btfsc	status,2,c
  1714  000498  D017               	goto	i2l83
  1715                           
  1716                           ;interrupts.c: 74: if (MOT_3_count == count_3) {
  1717  00049A  5049               	movf	_count_3,w,c
  1718  00049C  181A               	xorwf	_MOT_3_count,w,c
  1719  00049E  E114               	bnz	i2l1317
  1720  0004A0  504A               	movf	_count_3+1,w,c
  1721  0004A2  181B               	xorwf	_MOT_3_count+1,w,c
  1722  0004A4  A4D8               	btfss	status,2,c
  1723  0004A6  D010               	goto	i2l83
  1724                           
  1725                           ;interrupts.c: 75: LATCbits.LC1 = !PORTCbits.RC1;
  1726  0004A8  B282               	btfsc	3970,1,c	;volatile
  1727  0004AA  D003               	goto	i2u78_40
  1728  0004AC  6A30               	clrf	??_high_isr& (0+255),c
  1729  0004AE  2A30               	incf	??_high_isr& (0+255),f,c
  1730  0004B0  D001               	goto	i2u79_48
  1731  0004B2                     i2u78_40:
  1732  0004B2  6A30               	clrf	??_high_isr& (0+255),c
  1733  0004B4                     i2u79_48:
  1734  0004B4  4630               	rlncf	??_high_isr,f,c
  1735  0004B6  508B               	movf	3979,w,c	;volatile
  1736  0004B8  1830               	xorwf	??_high_isr,w,c
  1737  0004BA  0BFD               	andlw	-3
  1738  0004BC  1830               	xorwf	??_high_isr,w,c
  1739  0004BE  6E8B               	movwf	3979,c	;volatile
  1740                           
  1741                           ;interrupts.c: 76: MOT_3_count = 0;
  1742  0004C0  0E00               	movlw	0
  1743  0004C2  6E1B               	movwf	_MOT_3_count+1,c
  1744  0004C4  0E00               	movlw	0
  1745  0004C6  6E1A               	movwf	_MOT_3_count,c
  1746  0004C8                     i2l83:
  1747  0004C8                     i2l1317:
  1748                           
  1749                           ;interrupts.c: 77: }
  1750                           ;interrupts.c: 78: }
  1751                           ;interrupts.c: 79: if (MOT_4) {
  1752  0004C8  504F               	movf	_MOT_4,w,c
  1753  0004CA  B4D8               	btfsc	status,2,c
  1754  0004CC  D060               	goto	i2l100
  1755                           
  1756                           ;interrupts.c: 80: if (MOT_4_count == count_4) {
  1757  0004CE  5047               	movf	_count_4,w,c
  1758  0004D0  1818               	xorwf	_MOT_4_count,w,c
  1759  0004D2  E15D               	bnz	i2l86
  1760  0004D4  5048               	movf	_count_4+1,w,c
  1761  0004D6  1819               	xorwf	_MOT_4_count+1,w,c
  1762  0004D8  A4D8               	btfss	status,2,c
  1763  0004DA  D059               	goto	i2l100
  1764                           
  1765                           ;interrupts.c: 81: LATBbits.LB6 = !PORTBbits.RB6;
  1766  0004DC  BC81               	btfsc	3969,6,c	;volatile
  1767  0004DE  D003               	goto	i2u82_40
  1768  0004E0  6A30               	clrf	??_high_isr& (0+255),c
  1769  0004E2  2A30               	incf	??_high_isr& (0+255),f,c
  1770  0004E4  D001               	goto	i2u83_48
  1771  0004E6                     i2u82_40:
  1772  0004E6  6A30               	clrf	??_high_isr& (0+255),c
  1773  0004E8                     i2u83_48:
  1774  0004E8  3A30               	swapf	??_high_isr,f,c
  1775  0004EA  4630               	rlncf	??_high_isr,f,c
  1776  0004EC  4630               	rlncf	??_high_isr,f,c
  1777  0004EE  508A               	movf	3978,w,c	;volatile
  1778  0004F0  1830               	xorwf	??_high_isr,w,c
  1779  0004F2  0BBF               	andlw	-65
  1780  0004F4  1830               	xorwf	??_high_isr,w,c
  1781  0004F6  6E8A               	movwf	3978,c	;volatile
  1782                           
  1783                           ;interrupts.c: 82: MOT_4_count = 0;
  1784  0004F8  0E00               	movlw	0
  1785  0004FA  6E19               	movwf	_MOT_4_count+1,c
  1786  0004FC  0E00               	movlw	0
  1787  0004FE  6E18               	movwf	_MOT_4_count,c
  1788                           
  1789                           ;interrupts.c: 83: mot_4_steps++;
  1790  000500  4A16               	infsnz	_mot_4_steps,f,c
  1791  000502  2A17               	incf	_mot_4_steps+1,f,c
  1792                           
  1793                           ;interrupts.c: 84: }
  1794                           ;interrupts.c: 85: }
  1795                           ;interrupts.c: 87: } else if (PIR1bits.RCIF) {
  1796  000504  D044               	goto	i2l100
  1797  000506                     i2l77:
  1798  000506  AA9E               	btfss	3998,5,c	;volatile
  1799  000508  D01A               	goto	i2l87
  1800                           
  1801                           ;interrupts.c: 89: PIR1bits.RCIF = 0;
  1802  00050A  9A9E               	bcf	3998,5,c	;volatile
  1803                           
  1804                           ;interrupts.c: 90: palabra[n] = RCREG;
  1805  00050C  0E60               	movlw	low _palabra
  1806  00050E  2426               	addwf	_n,w,c
  1807  000510  6ED9               	movwf	fsr2l,c
  1808  000512  0E00               	movlw	high _palabra
  1809  000514  2027               	addwfc	_n+1,w,c
  1810  000516  6EDA               	movwf	fsr2h,c
  1811  000518  CFAE FFDF          	movff	4014,indf2	;volatile
  1812                           
  1813                           ;interrupts.c: 91: n++;
  1814  00051C  4A26               	infsnz	_n,f,c
  1815  00051E  2A27               	incf	_n+1,f,c
  1816                           
  1817                           ;interrupts.c: 92: if (RCREG == '\n') {
  1818  000520  0E0A               	movlw	10
  1819  000522  18AE               	xorwf	4014,w,c	;volatile
  1820  000524  A4D8               	btfss	status,2,c
  1821  000526  D033               	goto	i2l100
  1822                           
  1823                           ;interrupts.c: 93: TXREG = palabra[0];
  1824  000528  C060  FFAD         	movff	_palabra,4013	;volatile
  1825  00052C  A89E               	btfss	3998,4,c	;volatile
  1826  00052E  D7FE               	goto	i2l90
  1827                           
  1828                           ;interrupts.c: 95: recibi = 1;
  1829  000530  0E01               	movlw	1
  1830  000532  6E2E               	movwf	_recibi,c
  1831                           
  1832                           ;interrupts.c: 96: n = 0;
  1833  000534  0E00               	movlw	0
  1834  000536  6E27               	movwf	_n+1,c
  1835  000538  0E00               	movlw	0
  1836  00053A  6E26               	movwf	_n,c
  1837                           
  1838                           ;interrupts.c: 97: }
  1839                           ;interrupts.c: 98: } else if (PIR1bits.ADIF) {
  1840  00053C  D028               	goto	i2l100
  1841  00053E                     i2l87:
  1842  00053E  AC9E               	btfss	3998,6,c	;volatile
  1843  000540  D017               	goto	i2l93
  1844                           
  1845                           ;interrupts.c: 100: PIR1bits.ADIF = 0;
  1846  000542  9C9E               	bcf	3998,6,c	;volatile
  1847                           
  1848                           ;interrupts.c: 101: if (ADCON0bits.CHS == 0b0000) {
  1849  000544  30C2               	rrcf	4034,w,c	;volatile
  1850  000546  32E8               	rrcf	wreg,f,c
  1851  000548  0B0F               	andlw	15
  1852  00054A  0900               	iorlw	0
  1853  00054C  A4D8               	btfss	status,2,c
  1854  00054E  D005               	goto	i2l94
  1855                           
  1856                           ;interrupts.c: 102: ADC_value_press = ADRES;
  1857  000550  CFC3 F022          	movff	4035,_ADC_value_press	;volatile
  1858  000554  CFC4 F023          	movff	4036,_ADC_value_press+1	;volatile
  1859                           
  1860                           ;interrupts.c: 103: } else if (ADCON0bits.CHS == 0b0001) {
  1861  000558  D01A               	goto	i2l100
  1862  00055A                     i2l94:
  1863  00055A  30C2               	rrcf	4034,w,c	;volatile
  1864  00055C  32E8               	rrcf	wreg,f,c
  1865  00055E  0B0F               	andlw	15
  1866  000560  06E8               	decf	wreg,f,c
  1867  000562  A4D8               	btfss	status,2,c
  1868  000564  D014               	goto	i2l100
  1869                           
  1870                           ;interrupts.c: 104: ADC_value_dist = ADRES;
  1871  000566  CFC3 F020          	movff	4035,_ADC_value_dist	;volatile
  1872  00056A  CFC4 F021          	movff	4036,_ADC_value_dist+1	;volatile
  1873                           
  1874                           ;interrupts.c: 105: }
  1875                           ;interrupts.c: 110: } else if (INTCON3bits.INT1IF) {
  1876  00056E  D00F               	goto	i2l100
  1877  000570                     i2l93:
  1878  000570  A0F0               	btfss	intcon3,0,c	;volatile
  1879  000572  D005               	goto	i2l98
  1880                           
  1881                           ;interrupts.c: 112: INTCON3bits.INT1IF = 0;
  1882  000574  90F0               	bcf	intcon3,0,c	;volatile
  1883  000576                     i2l1351:
  1884                           
  1885                           ;interrupts.c: 115: DIR_3 = !DIR_3;
  1886  000576  502F               	movf	_DIR_3,w,c
  1887  000578  A4D8               	btfss	status,2,c
  1888  00057A  D007               	goto	i2u94_40
  1889  00057C  D004               	goto	i2u94_41
  1890  00057E                     i2l98:
  1891  00057E  A2F0               	btfss	intcon3,1,c	;volatile
  1892  000580  D006               	goto	i2l100
  1893                           
  1894                           ;interrupts.c: 119: INTCON3bits.INT2IF = 0;
  1895  000582  92F0               	bcf	intcon3,1,c	;volatile
  1896  000584  D7F8               	goto	i2l1351
  1897  000586                     i2u94_41:
  1898  000586  0E01               	movlw	1
  1899  000588  D001               	goto	i2u95_40
  1900  00058A                     i2u94_40:
  1901  00058A  0E00               	movlw	0
  1902  00058C                     i2u95_40:
  1903  00058C  6E2F               	movwf	_DIR_3,c
  1904  00058E                     i2l100:
  1905  00058E                     i2l86:
  1906  00058E  C042  F056         	movff	??_high_isr+18,btemp+3
  1907  000592  C041  F055         	movff	??_high_isr+17,btemp+2
  1908  000596  C040  F054         	movff	??_high_isr+16,btemp+1
  1909  00059A  C03F  F053         	movff	??_high_isr+15,btemp
  1910  00059E  C03E  FFF5         	movff	??_high_isr+14,tablat
  1911  0005A2  C03D  FFF8         	movff	??_high_isr+13,tblptru
  1912  0005A6  C03C  FFF7         	movff	??_high_isr+12,tblptrh
  1913  0005AA  C03B  FFF6         	movff	??_high_isr+11,tblptrl
  1914  0005AE  C03A  FFF4         	movff	??_high_isr+10,prodh
  1915  0005B2  C039  FFF3         	movff	??_high_isr+9,prodl
  1916  0005B6  C038  FFDA         	movff	??_high_isr+8,fsr2h
  1917  0005BA  C037  FFD9         	movff	??_high_isr+7,fsr2l
  1918  0005BE  C036  FFE2         	movff	??_high_isr+6,fsr1h
  1919  0005C2  C035  FFE1         	movff	??_high_isr+5,fsr1l
  1920  0005C6  C034  FFEA         	movff	??_high_isr+4,fsr0h
  1921  0005CA  C033  FFE9         	movff	??_high_isr+3,fsr0l
  1922  0005CE  C032  FFFB         	movff	??_high_isr+2,pclatu
  1923  0005D2  C031  FFFA         	movff	??_high_isr+1,pclath
  1924  0005D6  9253               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  1925  0005D8  0011               	retfie		f
  1926  0005DA                     __end_of_high_isr:
  1927                           	opt stack 0
  1928  0000                     pclatu	equ	0xFFB
  1929                           pclath	equ	0xFFA
  1930                           tblptru	equ	0xFF8
  1931                           tblptrh	equ	0xFF7
  1932                           tblptrl	equ	0xFF6
  1933                           tablat	equ	0xFF5
  1934                           prodh	equ	0xFF4
  1935                           prodl	equ	0xFF3
  1936                           intcon	equ	0xFF2
  1937                           intcon2	equ	0xFF1
  1938                           intcon3	equ	0xFF0
  1939                           postinc0	equ	0xFEE
  1940                           fsr0h	equ	0xFEA
  1941                           fsr0l	equ	0xFE9
  1942                           wreg	equ	0xFE8
  1943                           postdec1	equ	0xFE5
  1944                           fsr1h	equ	0xFE2
  1945                           fsr1l	equ	0xFE1
  1946                           indf2	equ	0xFDF
  1947                           fsr2h	equ	0xFDA
  1948                           fsr2l	equ	0xFD9
  1949                           status	equ	0xFD8
  1950                           pclatu	equ	0xFFB
  1951                           pclath	equ	0xFFA
  1952                           tblptru	equ	0xFF8
  1953                           tblptrh	equ	0xFF7
  1954                           tblptrl	equ	0xFF6
  1955                           tablat	equ	0xFF5
  1956                           prodh	equ	0xFF4
  1957                           prodl	equ	0xFF3
  1958                           intcon	equ	0xFF2
  1959                           intcon2	equ	0xFF1
  1960                           intcon3	equ	0xFF0
  1961                           postinc0	equ	0xFEE
  1962                           fsr0h	equ	0xFEA
  1963                           fsr0l	equ	0xFE9
  1964                           wreg	equ	0xFE8
  1965                           postdec1	equ	0xFE5
  1966                           fsr1h	equ	0xFE2
  1967                           fsr1l	equ	0xFE1
  1968                           indf2	equ	0xFDF
  1969                           fsr2h	equ	0xFDA
  1970                           fsr2l	equ	0xFD9
  1971                           status	equ	0xFD8
  1972                           
  1973                           	psect	rparam
  1974  0000                     pclatu	equ	0xFFB
  1975                           pclath	equ	0xFFA
  1976                           tblptru	equ	0xFF8
  1977                           tblptrh	equ	0xFF7
  1978                           tblptrl	equ	0xFF6
  1979                           tablat	equ	0xFF5
  1980                           prodh	equ	0xFF4
  1981                           prodl	equ	0xFF3
  1982                           intcon	equ	0xFF2
  1983                           intcon2	equ	0xFF1
  1984                           intcon3	equ	0xFF0
  1985                           postinc0	equ	0xFEE
  1986                           fsr0h	equ	0xFEA
  1987                           fsr0l	equ	0xFE9
  1988                           wreg	equ	0xFE8
  1989                           postdec1	equ	0xFE5
  1990                           fsr1h	equ	0xFE2
  1991                           fsr1l	equ	0xFE1
  1992                           indf2	equ	0xFDF
  1993                           fsr2h	equ	0xFDA
  1994                           fsr2l	equ	0xFD9
  1995                           status	equ	0xFD8
  1996                           
  1997                           	psect	temp
  1998  000053                     btemp:
  1999                           	opt stack 0
  2000  000053                     	ds	1
  2001  0000                     int$flags	set	btemp
  2002  0000                     wtemp6	set	btemp+1
  2003                           pclatu	equ	0xFFB
  2004                           pclath	equ	0xFFA
  2005                           tblptru	equ	0xFF8
  2006                           tblptrh	equ	0xFF7
  2007                           tblptrl	equ	0xFF6
  2008                           tablat	equ	0xFF5
  2009                           prodh	equ	0xFF4
  2010                           prodl	equ	0xFF3
  2011                           intcon	equ	0xFF2
  2012                           intcon2	equ	0xFF1
  2013                           intcon3	equ	0xFF0
  2014                           postinc0	equ	0xFEE
  2015                           fsr0h	equ	0xFEA
  2016                           fsr0l	equ	0xFE9
  2017                           wreg	equ	0xFE8
  2018                           postdec1	equ	0xFE5
  2019                           fsr1h	equ	0xFE2
  2020                           fsr1l	equ	0xFE1
  2021                           indf2	equ	0xFDF
  2022                           fsr2h	equ	0xFDA
  2023                           fsr2l	equ	0xFD9
  2024                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        12
    BSS         67
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     19      82
    BANK0           160      8      28
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->___wmul

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    2392
                                              6 BANK0      2     2      0
                _ConfigureOscillator
                            _InitApp
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4    2392
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigureOscillator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _high_isr                                            19    19      0       0
                                              0 COMRAM    19    19      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfigureOscillator
   _InitApp
   ___wmul

 _high_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      8      1C       5       17.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     13      52       1       87.2%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      6E      20        0.0%
DATA                 0      0      6E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Thu Aug 15 13:10:19 2019

                           _n 0026           ___wmul@multiplicand 0076                   __CFG_BORV$3 000000  
                __CFG_CP0$OFF 000000                  __CFG_CP1$OFF 000000                  __CFG_CP2$OFF 000000  
                __CFG_CP3$OFF 000000                           l170 002A                           l171 036E  
                         l172 00C8                           l181 02DC                           l174 029A  
                         l191 033E                           l176 02B2                           l193 0356  
                         l185 031E                           l186 0306                           l178 02E6  
                         l179 02CA                           l197 03AC                  __CFG_CPB$OFF 000000  
                         _PR2 000FCB                  __CFG_CPD$OFF 000000                           _RX9 007D5E  
                         _TX9 007D66                  __CFG_BOR$OFF 000000                           wreg 000FE8  
                __CFG_LVP$OFF 000000                  __CFG_WDT$OFF 000000                          _BRGH 007D62  
                        _CREN 007D5C                          _LATA 000F89                          _LATB 000F8A  
                        _LATC 000F8B                          u1600 0338                          u1408 0072  
                        u1345 0036                          u1610 033A                          u1530 0300  
                        u1450 02AC                          u1346 0038                          u1355 0040  
                        u1540 0302                          u1460 02AE                          u1356 0042  
                        u1365 004A                          u1630 0350                          u1390 006E  
                        u1366 004C                          u1711 03B8                          u1375 0054  
                        u1640 0352                          u1560 0318                          u1376 0056  
                        u1385 005E                          u1570 031A                          u1386 0060  
                        u1708 039C                          u1660 0368                          u1670 036A  
                        u1727 037A                          u1690 0398                          _RCIE 007CED  
                        i2l81 0494                          i2l90 052C                          i2l83 04C8  
                        i2l93 0570                          i2l77 0506                          i2l86 058E  
                        i2l94 055A                          i2l87 053E                          i2l79 045E  
                        i2l98 057E                          _TMR0 000FD6                          _SPEN 007D5F  
                        _TXIE 007CEC                          _TXIF 007CF4                          _TXEN 007D65  
                        _SYNC 007D64                          _main 0012                          _send 0001  
                        fsr0h 000FEA                          fsr1h 000FE2                          fsr2h 000FDA  
                        fsr0l 000FE9                          indf2 000FDF                          fsr1l 000FE1  
                        fsr2l 000FD9                          btemp 0053                          prodh 000FF4  
                        prodl 000FF3                          start 000E                 __CFG_IESO$OFF 000000  
               __CFG_MCLRE$ON 000000                  ___param_bank 000000               __end_of_InitApp 0686  
               __CFG_PLLDIV$1 000000                __CFG_CCP2MX$ON 000000                         ?_main 0030  
                       _ADRES 000FC3                         _BRG16 007DC3                         _DIR_1 002C  
                       _DIR_2 002B                         _DIR_3 002F                         _DIR_4 002A  
                       i2l100 058E                         _RCREG 000FAE                         _MOT_1 0052  
                       _MOT_2 0051                         _MOT_3 0050                         _MOT_4 004F  
                       _SPBRG 000FAF                         _PORTA 000F80                         _PORTB 000F81  
                       _PORTC 000F82                 __CFG_USBDIV$1 000000                         _TXREG 000FAD  
         _ConfigureOscillator 06FC                 __CFG_PWRT$OFF 000000                 __CFG_WRT0$OFF 000000  
               __CFG_WRT1$OFF 000000                 __CFG_WRT2$OFF 000000                 __CFG_WRT3$OFF 000000  
              __CFG_EBTR0$OFF 000000                __CFG_FCMEN$OFF 000000                __CFG_EBTR1$OFF 000000  
              __CFG_EBTR2$OFF 000000                __CFG_EBTR3$OFF 000000                 __CFG_WRTB$OFF 000000  
               __CFG_WRTC$OFF 000000                 __CFG_WRTD$OFF 000000                __CFG_EBTRB$OFF 000000  
                       _speed 000A                         _turns 000C                         pclath 000FFA  
                       tablat 000FF5                         status 000FD8                         wtemp6 0054  
        ?_ConfigureOscillator 0030               __initialization 0686                  __end_of_main 03BE  
                      ??_main 007A                 __activetblptr 000000                        _ADCON1 000FC1  
                      _ADCON2 000FC0                        _CCPR1L 000FBE                        _GODONE 007E11  
                      i2l1301 045E                        i2l1317 04C8                        i2l1309 0494  
                      i2l1351 0576                     ??_InitApp 0074         ??_ConfigureOscillator 0074  
              __CFG_XINST$OFF 000000              __end_of_high_isr 05DA                        ___wmul 06C8  
                      _enable 0028                        _length 000E                        _recibi 002E  
                      clear_0 06AC                        clear_1 06B8                        _motor1 0045  
                      _motor2 0014                  __pdataCOMRAM 0043                        tblptrh 000FF7  
                      tblptrl 000FF6                        tblptru 000FF8                    __accesstop 0060  
     __end_of__initialization 06BE               __CFG_PBADEN$OFF 000000                 ___rparam_used 000001  
              __pcstackCOMRAM 0030                    __pbssBANK0 0060                    __pnvCOMRAM 004F  
                     ?___wmul 0074                       i2u70_40 0444                       i2u71_48 0446  
                     i2u82_40 04E6                       i2u74_40 047C                       i2u83_48 04E8  
                     i2u75_48 047E                       i2u94_40 058A                       i2u78_40 04B2  
                     i2u94_41 0586                       i2u95_40 058C                       i2u79_48 04B4  
                   ?_high_isr 0030               __CFG_VREGEN$OFF 000000                       _InitApp 05DA  
                     __Hparam 0000                       __Lparam 0000               __size_of___wmul 0028  
                     _caliber 0012               __CFG_STVREN$OFF 000000                       __pcinit 0686  
                     __ramtop 0800                       __ptext0 0012                       __ptext1 06C8  
                     __ptext2 05DA                       __ptext3 06FC                     _T0CONbits 000FD5  
                     _count_1 004D                       _count_2 004B                       _count_3 0049  
                     _count_4 0047                       _palabra 0060                     _T2CONbits 000FCA  
            _mot_4_step_count 0008                    ??_high_isr 0030                __pintcode_body 03BE  
        end_of_initialization 06BE                       int_func 03BE                       postdec1 000FE5  
                     postinc0 000FEE                     _PORTAbits 000F80                     _PORTBbits 000F81  
                   _PORTCbits 000F82                     _TRISAbits 000F92                     _TRISBbits 000F93  
                   _TRISCbits 000F94   __end_of_ConfigureOscillator 0708                   _CCP1CONbits 000FBD  
              __end_of___wmul 06F0                 __pidataCOMRAM 06F0           start_initialization 0686  
                    ??___wmul 0078              __CFG_LPT1OSC$OFF 000000                   __pbssCOMRAM 0001  
               __pcstackBANK0 0074             __size_of_high_isr 05D2                      ?_InitApp 0030  
                   __pintcode 0008                     _busy_flag 0029                ___wmul@product 0078  
                    _LATAbits 000F89                      _LATBbits 000F8A                      _LATCbits 000F8B  
                    _PIE1bits 000F9D                      _RA0state 002D                      _PIR1bits 000F9E  
                    _RCONbits 000FD0              __CFG_WDTPS$32768 000000                    _ADCON0bits 000FC2  
           ___wmul@multiplier 0074                      _PWM_duty 0043               _ADC_value_press 0022  
                 _INTCON2bits 000FF1                   _INTCON3bits 000FF0                     copy_data0 069A  
            __size_of_InitApp 00AC                      __Hrparam 0000                      __Lrparam 0000  
                    _diameter 0010                      _high_isr 0008                 __size_of_main 03AC  
                 _mot_4_steps 0016  __size_of_ConfigureOscillator 000C                      _overflow 0024  
                    int$flags 0053                _ADC_value_dist 0020         __CFG_CPUDIV$OSC1_PLL2 000000  
                  _INTCONbits 000FF2                   _MOT_1_count 001E                   _MOT_2_count 001C  
                 _MOT_3_count 001A                   _MOT_4_count 0018                      intlevel2 0000  
                  _OSCCONbits 000FD3           __CFG_FOSC$INTOSC_EC 000000  



Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sat Aug 17 01:09:49 2019

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F2550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    20                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    25                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    26                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    27  0000                     
    28                           ; Version 1.45
    29                           ; Generated 16/11/2017 GMT
    30                           ; 
    31                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    32                           ; All rights reserved.
    33                           ; 
    34                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    35                           ; 
    36                           ; Redistribution and use in source and binary forms, with or without modification, are
    37                           ; permitted provided that the following conditions are met:
    38                           ; 
    39                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    40                           ;        conditions and the following disclaimer.
    41                           ; 
    42                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    43                           ;        of conditions and the following disclaimer in the documentation and/or other
    44                           ;        materials provided with the distribution.
    45                           ; 
    46                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    47                           ;        software without specific prior written permission.
    48                           ; 
    49                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    50                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    51                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    52                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    53                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    54                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    55                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    56                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    57                           ; 
    58                           ; 
    59                           ; Code-generator required, PIC18F2550 Definitions
    60                           ; 
    61                           ; SFR Addresses
    62  0000                     
    63                           	psect	idataCOMRAM
    64  000728                     __pidataCOMRAM:
    65                           	opt stack 0
    66                           
    67                           ;initializer for _PWM_duty
    68  000728  0032               	dw	50
    69                           
    70                           ;initializer for _count_4
    71  00072A  0005               	dw	5
    72                           
    73                           ;initializer for _count_3
    74  00072C  0084               	dw	132
    75                           
    76                           ;initializer for _count_2
    77  00072E  0005               	dw	5
    78                           
    79                           ;initializer for _count_1
    80  000730  0002               	dw	2
    81                           
    82                           ;initializer for _length
    83  000732  0BB8               	dw	3000
    84                           
    85                           ;initializer for _turns
    86  000734  0014               	dw	20
    87                           
    88                           ;initializer for _zero_flag
    89  000736  01                 	db	1
    90                           
    91                           	psect	idataBANK0
    92  00075E                     __pidataBANK0:
    93                           	opt stack 0
    94                           
    95                           ;initializer for _motor1
    96  00075E  0001               	dw	1
    97  0000                     _ADRES	set	4035
    98  0000                     _TMR1	set	4046
    99  0000                     _TMR0	set	4054
   100  0000                     _T2CONbits	set	4042
   101  0000                     _CCP1CONbits	set	4029
   102  0000                     _PR2	set	4043
   103  0000                     _SPBRG	set	4015
   104  0000                     _IPR1bits	set	3999
   105  0000                     _INTCON2bits	set	4081
   106  0000                     _RCONbits	set	4048
   107  0000                     _TRISBbits	set	3987
   108  0000                     _TRISCbits	set	3988
   109  0000                     _PIE1bits	set	3997
   110  0000                     _ADCON2	set	4032
   111  0000                     _ADCON0bits	set	4034
   112  0000                     _TRISAbits	set	3986
   113  0000                     _ADCON1	set	4033
   114  0000                     _LATC	set	3979
   115  0000                     _PORTC	set	3970
   116  0000                     _LATB	set	3978
   117  0000                     _PORTB	set	3969
   118  0000                     _LATA	set	3977
   119  0000                     _PORTA	set	3968
   120  0000                     _OSCCONbits	set	4051
   121  0000                     _T0CONbits	set	4053
   122  0000                     _T1CONbits	set	4045
   123  0000                     _TXREG	set	4013
   124  0000                     _LATBbits	set	3978
   125  0000                     _CCPR1L	set	4030
   126  0000                     _INTCON3bits	set	4080
   127  0000                     _RCREG	set	4014
   128  0000                     _PIR1bits	set	3998
   129  0000                     _PORTCbits	set	3970
   130  0000                     _LATCbits	set	3979
   131  0000                     _PORTAbits	set	3968
   132  0000                     _LATAbits	set	3977
   133  0000                     _INTCONbits	set	4082
   134  0000                     _TXIE	set	31980
   135  0000                     _RCIE	set	31981
   136  0000                     _RX9	set	32094
   137  0000                     _TX9	set	32102
   138  0000                     _CREN	set	32092
   139  0000                     _TXEN	set	32101
   140  0000                     _SYNC	set	32100
   141  0000                     _SPEN	set	32095
   142  0000                     _BRG16	set	32195
   143  0000                     _BRGH	set	32098
   144  0000                     _TXIF	set	31988
   145  0000                     _GODONE	set	32273
   146                           
   147                           ; #config settings
   148  0000                     
   149                           	psect	cinit
   150  00065C                     __pcinit:
   151                           	opt stack 0
   152  00065C                     start_initialization:
   153                           	opt stack 0
   154  00065C                     __initialization:
   155                           	opt stack 0
   156                           
   157                           ; Initialize objects allocated to BANK0 (2 bytes)
   158                           ; load TBLPTR registers with __pidataBANK0
   159  00065C  0E5E               	movlw	low __pidataBANK0
   160  00065E  6EF6               	movwf	tblptrl,c
   161  000660  0E07               	movlw	high __pidataBANK0
   162  000662  6EF7               	movwf	tblptrh,c
   163  000664  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   164  000666  6EF8               	movwf	tblptru,c
   165  000668  0009               	tblrd		*+	;fetch initializer
   166  00066A  CFF5 F08D          	movff	tablat,__pdataBANK0
   167  00066E  0009               	tblrd		*+	;fetch initializer
   168  000670  CFF5 F08E          	movff	tablat,__pdataBANK0+1
   169                           
   170                           ; Initialize objects allocated to COMRAM (15 bytes)
   171                           ; load TBLPTR registers with __pidataCOMRAM
   172  000674  0E28               	movlw	low __pidataCOMRAM
   173  000676  6EF6               	movwf	tblptrl,c
   174  000678  0E07               	movlw	high __pidataCOMRAM
   175  00067A  6EF7               	movwf	tblptrh,c
   176  00067C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   177  00067E  6EF8               	movwf	tblptru,c
   178  000680  EE00  F045         	lfsr	0,__pdataCOMRAM
   179  000684  EE10 F00F          	lfsr	1,15
   180  000688                     copy_data0:
   181  000688  0009               	tblrd		*+
   182  00068A  CFF5 FFEE          	movff	tablat,postinc0
   183  00068E  50E5               	movf	postdec1,w,c
   184  000690  50E1               	movf	fsr1l,w,c
   185  000692  E1FA               	bnz	copy_data0
   186                           
   187                           ; Clear objects allocated to BANK0 (37 bytes)
   188  000694  EE00  F060         	lfsr	0,__pbssBANK0
   189  000698  0E25               	movlw	37
   190  00069A                     clear_0:
   191  00069A  6AEE               	clrf	postinc0,c
   192  00069C  06E8               	decf	wreg,f,c
   193  00069E  E1FD               	bnz	clear_0
   194                           
   195                           ; Clear objects allocated to COMRAM (37 bytes)
   196  0006A0  EE00  F001         	lfsr	0,__pbssCOMRAM
   197  0006A4  0E25               	movlw	37
   198  0006A6                     clear_1:
   199  0006A6  6AEE               	clrf	postinc0,c
   200  0006A8  06E8               	decf	wreg,f,c
   201  0006AA  E1FD               	bnz	clear_1
   202  0006AC                     end_of_initialization:
   203                           	opt stack 0
   204  0006AC                     __end_of__initialization:
   205                           	opt stack 0
   206  0006AC  9054               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   207  0006AE  9254               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   208  0006B0  0100               	movlb	0
   209  0006B2  EF09  F000         	goto	_main	;jump to C main() function
   210                           tblptru	equ	0xFF8
   211                           tblptrh	equ	0xFF7
   212                           tblptrl	equ	0xFF6
   213                           tablat	equ	0xFF5
   214                           postinc0	equ	0xFEE
   215                           wreg	equ	0xFE8
   216                           postdec1	equ	0xFE5
   217                           fsr1l	equ	0xFE1
   218                           
   219                           	psect	bssCOMRAM
   220  000001                     __pbssCOMRAM:
   221                           	opt stack 0
   222  000001                     _zero_count:
   223                           	opt stack 0
   224  000001                     	ds	2
   225  000003                     _turns_count:
   226                           	opt stack 0
   227  000003                     	ds	2
   228  000005                     _mot_4_steps:
   229                           	opt stack 0
   230  000005                     	ds	2
   231  000007                     _mot_3_steps:
   232                           	opt stack 0
   233  000007                     	ds	2
   234  000009                     _mot_1_steps:
   235                           	opt stack 0
   236  000009                     	ds	2
   237  00000B                     _MOT_4_count:
   238                           	opt stack 0
   239  00000B                     	ds	2
   240  00000D                     _MOT_3_count:
   241                           	opt stack 0
   242  00000D                     	ds	2
   243  00000F                     _MOT_2_count:
   244                           	opt stack 0
   245  00000F                     	ds	2
   246  000011                     _MOT_1_count:
   247                           	opt stack 0
   248  000011                     	ds	2
   249  000013                     _ADC_value_press:
   250                           	opt stack 0
   251  000013                     	ds	2
   252  000015                     _overflow:
   253                           	opt stack 0
   254  000015                     	ds	2
   255  000017                     _n:
   256                           	opt stack 0
   257  000017                     	ds	2
   258  000019                     _enable:
   259                           	opt stack 0
   260  000019                     	ds	1
   261  00001A                     _finish:
   262                           	opt stack 0
   263  00001A                     	ds	1
   264  00001B                     _DIR_4:
   265                           	opt stack 0
   266  00001B                     	ds	1
   267  00001C                     _DIR_2:
   268                           	opt stack 0
   269  00001C                     	ds	1
   270  00001D                     _DIR_1:
   271                           	opt stack 0
   272  00001D                     	ds	1
   273  00001E                     _RA0state:
   274                           	opt stack 0
   275  00001E                     	ds	1
   276  00001F                     _recibi:
   277                           	opt stack 0
   278  00001F                     	ds	1
   279  000020                     _MOT_4:
   280                           	opt stack 0
   281  000020                     	ds	1
   282  000021                     _MOT_2:
   283                           	opt stack 0
   284  000021                     	ds	1
   285  000022                     _busy_flag:
   286                           	opt stack 0
   287  000022                     	ds	1
   288  000023                     _DIR_3:
   289                           	opt stack 0
   290  000023                     	ds	1
   291  000024                     _MOT_3:
   292                           	opt stack 0
   293  000024                     	ds	1
   294  000025                     _MOT_1:
   295                           	opt stack 0
   296  000025                     	ds	1
   297                           tblptru	equ	0xFF8
   298                           tblptrh	equ	0xFF7
   299                           tblptrl	equ	0xFF6
   300                           tablat	equ	0xFF5
   301                           postinc0	equ	0xFEE
   302                           wreg	equ	0xFE8
   303                           postdec1	equ	0xFE5
   304                           fsr1l	equ	0xFE1
   305                           
   306                           	psect	dataCOMRAM
   307  000045                     __pdataCOMRAM:
   308                           	opt stack 0
   309  000045                     _PWM_duty:
   310                           	opt stack 0
   311  000045                     	ds	2
   312  000047                     _count_4:
   313                           	opt stack 0
   314  000047                     	ds	2
   315  000049                     _count_3:
   316                           	opt stack 0
   317  000049                     	ds	2
   318  00004B                     _count_2:
   319                           	opt stack 0
   320  00004B                     	ds	2
   321  00004D                     _count_1:
   322                           	opt stack 0
   323  00004D                     	ds	2
   324  00004F                     _length:
   325                           	opt stack 0
   326  00004F                     	ds	2
   327  000051                     _turns:
   328                           	opt stack 0
   329  000051                     	ds	2
   330  000053                     _zero_flag:
   331                           	opt stack 0
   332  000053                     	ds	1
   333                           tblptru	equ	0xFF8
   334                           tblptrh	equ	0xFF7
   335                           tblptrl	equ	0xFF6
   336                           tablat	equ	0xFF5
   337                           postinc0	equ	0xFEE
   338                           wreg	equ	0xFE8
   339                           postdec1	equ	0xFE5
   340                           fsr1l	equ	0xFE1
   341                           
   342                           	psect	bssBANK0
   343  000060                     __pbssBANK0:
   344                           	opt stack 0
   345  000060                     _palabra:
   346                           	opt stack 0
   347  000060                     	ds	20
   348  000074                     _send:
   349                           	opt stack 0
   350  000074                     	ds	7
   351  00007B                     _mot_4_step_count:
   352                           	opt stack 0
   353  00007B                     	ds	2
   354  00007D                     _speed:
   355                           	opt stack 0
   356  00007D                     	ds	2
   357  00007F                     _diameter:
   358                           	opt stack 0
   359  00007F                     	ds	2
   360  000081                     _caliber:
   361                           	opt stack 0
   362  000081                     	ds	2
   363  000083                     _motor2:
   364                           	opt stack 0
   365  000083                     	ds	2
   366                           tblptru	equ	0xFF8
   367                           tblptrh	equ	0xFF7
   368                           tblptrl	equ	0xFF6
   369                           tablat	equ	0xFF5
   370                           postinc0	equ	0xFEE
   371                           wreg	equ	0xFE8
   372                           postdec1	equ	0xFE5
   373                           fsr1l	equ	0xFE1
   374                           
   375                           	psect	dataBANK0
   376  00008D                     __pdataBANK0:
   377                           	opt stack 0
   378  00008D                     _motor1:
   379                           	opt stack 0
   380  00008D                     	ds	2
   381                           tblptru	equ	0xFF8
   382                           tblptrh	equ	0xFF7
   383                           tblptrl	equ	0xFF6
   384                           tablat	equ	0xFF5
   385                           postinc0	equ	0xFEE
   386                           wreg	equ	0xFE8
   387                           postdec1	equ	0xFE5
   388                           fsr1l	equ	0xFE1
   389                           
   390                           	psect	cstackBANK0
   391  000085                     __pcstackBANK0:
   392                           	opt stack 0
   393  000085                     ?___wmul:
   394                           	opt stack 0
   395  000085                     ___wmul@multiplier:
   396                           	opt stack 0
   397                           
   398                           ; 2 bytes @ 0x0
   399  000085                     	ds	2
   400  000087                     ___wmul@multiplicand:
   401                           	opt stack 0
   402                           
   403                           ; 2 bytes @ 0x2
   404  000087                     	ds	2
   405  000089                     ___wmul@product:
   406                           	opt stack 0
   407                           
   408                           ; 2 bytes @ 0x4
   409  000089                     	ds	2
   410  00008B                     ??_main:
   411                           
   412                           ; 1 bytes @ 0x6
   413  00008B                     	ds	2
   414                           tblptru	equ	0xFF8
   415                           tblptrh	equ	0xFF7
   416                           tblptrl	equ	0xFF6
   417                           tablat	equ	0xFF5
   418                           postinc0	equ	0xFEE
   419                           wreg	equ	0xFE8
   420                           postdec1	equ	0xFE5
   421                           fsr1l	equ	0xFE1
   422                           
   423                           	psect	cstackCOMRAM
   424  000026                     __pcstackCOMRAM:
   425                           	opt stack 0
   426  000026                     ?i2___wmul:
   427                           	opt stack 0
   428  000026                     trans_Char@out:
   429                           	opt stack 0
   430  000026                     i2___wmul@multiplier:
   431                           	opt stack 0
   432                           
   433                           ; 2 bytes @ 0x0
   434  000026                     	ds	2
   435  000028                     i2___wmul@multiplicand:
   436                           	opt stack 0
   437                           
   438                           ; 2 bytes @ 0x2
   439  000028                     	ds	2
   440  00002A                     i2___wmul@product:
   441                           	opt stack 0
   442                           
   443                           ; 2 bytes @ 0x4
   444  00002A                     	ds	2
   445  00002C                     ?_mot_3_step_count:
   446                           	opt stack 0
   447  00002C                     mot_3_step_count@l:
   448                           	opt stack 0
   449                           
   450                           ; 2 bytes @ 0x6
   451  00002C                     	ds	2
   452  00002E                     mot_3_step_count@ms:
   453                           	opt stack 0
   454                           
   455                           ; 2 bytes @ 0x8
   456  00002E                     	ds	2
   457  000030                     ??_mot_3_step_count:
   458                           
   459                           ; 1 bytes @ 0xA
   460  000030                     	ds	2
   461  000032                     ??_high_isr:
   462                           
   463                           ; 1 bytes @ 0xC
   464  000032                     	ds	19
   465                           tblptru	equ	0xFF8
   466                           tblptrh	equ	0xFF7
   467                           tblptrl	equ	0xFF6
   468                           tablat	equ	0xFF5
   469                           postinc0	equ	0xFEE
   470                           wreg	equ	0xFE8
   471                           postdec1	equ	0xFE5
   472                           fsr1l	equ	0xFE1
   473                           
   474 ;;
   475 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   476 ;;
   477 ;; *************** function _main *****************
   478 ;; Defined at:
   479 ;;		line 78 in file "main.c"
   480 ;; Parameters:    Size  Location     Type
   481 ;;		None
   482 ;; Auto vars:     Size  Location     Type
   483 ;;		None
   484 ;; Return value:  Size  Location     Type
   485 ;;                  1    wreg      void 
   486 ;; Registers used:
   487 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   488 ;; Tracked objects:
   489 ;;		On entry : 0/0
   490 ;;		On exit  : 0/0
   491 ;;		Unchanged: 0/0
   492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   493 ;;      Params:         0       0       0       0       0       0       0       0       0
   494 ;;      Locals:         0       0       0       0       0       0       0       0       0
   495 ;;      Temps:          0       2       0       0       0       0       0       0       0
   496 ;;      Totals:         0       2       0       0       0       0       0       0       0
   497 ;;Total ram usage:        2 bytes
   498 ;; Hardware stack levels required when called:    4
   499 ;; This function calls:
   500 ;;		_ConfigureOscillator
   501 ;;		_InitApp
   502 ;;		___wmul
   503 ;;		_zero_mark
   504 ;; This function is called by:
   505 ;;		Startup code after reset
   506 ;; This function uses a non-reentrant model
   507 ;;
   508                           
   509                           	psect	text0
   510  000012                     __ptext0:
   511                           	opt stack 0
   512  000012                     _main:
   513                           	opt stack 27
   514                           
   515                           ;main.c: 80: ConfigureOscillator();
   516                           
   517                           ;incstack = 0
   518  000012  ECA3  F003         	call	_ConfigureOscillator	;wreg free
   519                           
   520                           ;main.c: 83: InitApp();
   521  000016  ECD0  F002         	call	_InitApp	;wreg free
   522  00001A                     
   523                           ;main.c: 86: CCPR1L = PWM_duty;
   524  00001A  C045  FFBE         	movff	_PWM_duty,4030	;volatile
   525                           
   526                           ;main.c: 88: LATAbits.LA2 = DIR_1;
   527  00001E  B01D               	btfsc	_DIR_1,0,c
   528  000020  D002               	bra	u1245
   529  000022  9489               	bcf	3977,2,c	;volatile
   530  000024  D001               	bra	u1246
   531  000026                     u1245:
   532  000026  8489               	bsf	3977,2,c	;volatile
   533  000028                     u1246:
   534                           
   535                           ;main.c: 89: LATAbits.LA4 = DIR_2;
   536  000028  B01C               	btfsc	_DIR_2,0,c
   537  00002A  D002               	bra	u1255
   538  00002C  9889               	bcf	3977,4,c	;volatile
   539  00002E  D001               	bra	u1256
   540  000030                     u1255:
   541  000030  8889               	bsf	3977,4,c	;volatile
   542  000032                     u1256:
   543                           
   544                           ;main.c: 90: LATCbits.LC0 = DIR_3;
   545  000032  B023               	btfsc	_DIR_3,0,c
   546  000034  D002               	bra	u1265
   547  000036  908B               	bcf	3979,0,c	;volatile
   548  000038  D001               	bra	u1266
   549  00003A                     u1265:
   550  00003A  808B               	bsf	3979,0,c	;volatile
   551  00003C                     u1266:
   552                           
   553                           ;main.c: 91: LATBbits.LB7 = DIR_4;
   554  00003C  B01B               	btfsc	_DIR_4,0,c
   555  00003E  D002               	bra	u1275
   556  000040  9E8A               	bcf	3978,7,c	;volatile
   557  000042  D001               	bra	u1276
   558  000044                     u1275:
   559  000044  8E8A               	bsf	3978,7,c	;volatile
   560  000046                     u1276:
   561                           
   562                           ;main.c: 92: LATBbits.LB5 = enable;
   563  000046  B019               	btfsc	_enable,0,c
   564  000048  D002               	bra	u1285
   565  00004A  9A8A               	bcf	3978,5,c	;volatile
   566  00004C  D001               	bra	u1286
   567  00004E                     u1285:
   568  00004E  8A8A               	bsf	3978,5,c	;volatile
   569  000050                     u1286:
   570                           
   571                           ;main.c: 93: LATBbits.LB4 = !enable;
   572  000050  5019               	movf	_enable,w,c
   573  000052  A4D8               	btfss	status,2,c
   574  000054  D004               	goto	u1290
   575  000056  0100               	movlb	0	; () banked
   576  000058  6B8B               	clrf	??_main& (0+255),b
   577  00005A  2B8B               	incf	??_main& (0+255),f,b
   578  00005C  D002               	goto	u1308
   579  00005E                     u1290:
   580  00005E  0100               	movlb	0	; () banked
   581  000060  6B8B               	clrf	??_main& (0+255),b
   582  000062                     u1308:
   583  000062  3B8B               	swapf	??_main& (0+255),f,b
   584  000064  508A               	movf	3978,w,c	;volatile
   585  000066  198B               	xorwf	??_main& (0+255),w,b
   586  000068  0BEF               	andlw	-17
   587  00006A  198B               	xorwf	??_main& (0+255),w,b
   588  00006C  6E8A               	movwf	3978,c	;volatile
   589                           
   590                           ; BSR set to: 0
   591                           ;main.c: 101: if (recibi == 1) {
   592  00006E  041F               	decf	_recibi,w,c
   593  000070  A4D8               	btfss	status,2,c
   594  000072  D165               	goto	l189
   595                           
   596                           ; BSR set to: 0
   597                           ;main.c: 103: recibi = 0;
   598  000074  0E00               	movlw	0
   599  000076  6E1F               	movwf	_recibi,c
   600                           
   601                           ; BSR set to: 0
   602                           ;main.c: 106: if (palabra[0] == 'B') {
   603  000078  0E42               	movlw	66
   604  00007A  1960               	xorwf	_palabra& (0+255),w,b
   605  00007C  A4D8               	btfss	status,2,c
   606  00007E  D01B               	goto	l190
   607                           
   608                           ; BSR set to: 0
   609                           ;main.c: 108: PWM_duty = ((palabra[1] - 48) * 10) + ((palabra[2] - 48));
   610  000080  0ED0               	movlw	208
   611  000082  2561               	addwf	(_palabra+1)& (0+255),w,b
   612  000084  6F85               	movwf	___wmul@multiplier& (0+255),b
   613  000086  6B86               	clrf	(___wmul@multiplier+1)& (0+255),b
   614  000088  0EFF               	movlw	255
   615  00008A  2386               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   616  00008C  0E00               	movlw	0
   617  00008E  6F88               	movwf	(___wmul@multiplicand+1)& (0+255),b
   618  000090  0E0A               	movlw	10
   619  000092  6F87               	movwf	___wmul@multiplicand& (0+255),b
   620  000094  EC5B  F003         	call	___wmul	;wreg free
   621  000098  0100               	movlb	0	; () banked
   622  00009A  5162               	movf	(_palabra+2)& (0+255),w,b
   623  00009C  6F8B               	movwf	??_main& (0+255),b
   624  00009E  6B8C               	clrf	(??_main+1)& (0+255),b
   625  0000A0  5185               	movf	?___wmul& (0+255),w,b
   626  0000A2  278B               	addwf	??_main& (0+255),f,b
   627  0000A4  5186               	movf	(?___wmul+1)& (0+255),w,b
   628  0000A6  238C               	addwfc	(??_main+1)& (0+255),f,b
   629  0000A8  0ED0               	movlw	208
   630  0000AA  258B               	addwf	??_main& (0+255),w,b
   631  0000AC  6E45               	movwf	_PWM_duty,c
   632  0000AE  0EFF               	movlw	255
   633  0000B0  218C               	addwfc	(??_main+1)& (0+255),w,b
   634  0000B2  6E46               	movwf	_PWM_duty+1,c
   635                           
   636                           ;main.c: 109: } else if (palabra[0] == 'A') {
   637  0000B4  D7B2               	goto	l188
   638  0000B6                     l190:
   639                           
   640                           ; BSR set to: 0
   641                           
   642                           ; BSR set to: 0
   643  0000B6  0E41               	movlw	65
   644  0000B8  1960               	xorwf	_palabra& (0+255),w,b
   645  0000BA  A4D8               	btfss	status,2,c
   646  0000BC  D0E5               	goto	l192
   647                           
   648                           ; BSR set to: 0
   649                           ;main.c: 111: caliber = ((palabra[1] - 48) * 10) + ((palabra[2] - 48));
   650  0000BE  0ED0               	movlw	208
   651  0000C0  2561               	addwf	(_palabra+1)& (0+255),w,b
   652  0000C2  6F85               	movwf	___wmul@multiplier& (0+255),b
   653  0000C4  6B86               	clrf	(___wmul@multiplier+1)& (0+255),b
   654  0000C6  0EFF               	movlw	255
   655  0000C8  2386               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   656  0000CA  0E00               	movlw	0
   657  0000CC  6F88               	movwf	(___wmul@multiplicand+1)& (0+255),b
   658  0000CE  0E0A               	movlw	10
   659  0000D0  6F87               	movwf	___wmul@multiplicand& (0+255),b
   660  0000D2  EC5B  F003         	call	___wmul	;wreg free
   661  0000D6  0100               	movlb	0	; () banked
   662  0000D8  5162               	movf	(_palabra+2)& (0+255),w,b
   663  0000DA  6F8B               	movwf	??_main& (0+255),b
   664  0000DC  6B8C               	clrf	(??_main+1)& (0+255),b
   665  0000DE  5185               	movf	?___wmul& (0+255),w,b
   666  0000E0  278B               	addwf	??_main& (0+255),f,b
   667  0000E2  5186               	movf	(?___wmul+1)& (0+255),w,b
   668  0000E4  238C               	addwfc	(??_main+1)& (0+255),f,b
   669  0000E6  0ED0               	movlw	208
   670  0000E8  258B               	addwf	??_main& (0+255),w,b
   671  0000EA  6F81               	movwf	_caliber& (0+255),b
   672  0000EC  0EFF               	movlw	255
   673  0000EE  218C               	addwfc	(??_main+1)& (0+255),w,b
   674  0000F0  6F82               	movwf	(_caliber+1)& (0+255),b
   675                           
   676                           ;main.c: 112: diameter = ((palabra[3] - 48) * 1000) + ((palabra[4] - 48) * 100) + ((pala
      +                          bra[5] - 48) * 10) + ((palabra[6] - 48));
   677  0000F2  0ED0               	movlw	208
   678  0000F4  2563               	addwf	(_palabra+3)& (0+255),w,b
   679  0000F6  6F85               	movwf	___wmul@multiplier& (0+255),b
   680  0000F8  6B86               	clrf	(___wmul@multiplier+1)& (0+255),b
   681  0000FA  0EFF               	movlw	255
   682  0000FC  2386               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   683  0000FE  0E03               	movlw	3
   684  000100  6F88               	movwf	(___wmul@multiplicand+1)& (0+255),b
   685  000102  0EE8               	movlw	232
   686  000104  6F87               	movwf	___wmul@multiplicand& (0+255),b
   687  000106  EC5B  F003         	call	___wmul	;wreg free
   688  00010A  0100               	movlb	0	; () banked
   689  00010C  5166               	movf	(_palabra+6)& (0+255),w,b
   690  00010E  6F8B               	movwf	??_main& (0+255),b
   691  000110  6B8C               	clrf	(??_main+1)& (0+255),b
   692  000112  5185               	movf	?___wmul& (0+255),w,b
   693  000114  278B               	addwf	??_main& (0+255),f,b
   694  000116  5186               	movf	(?___wmul+1)& (0+255),w,b
   695  000118  238C               	addwfc	(??_main+1)& (0+255),f,b
   696  00011A  0ED0               	movlw	208
   697  00011C  2564               	addwf	(_palabra+4)& (0+255),w,b
   698  00011E  6F85               	movwf	___wmul@multiplier& (0+255),b
   699  000120  6B86               	clrf	(___wmul@multiplier+1)& (0+255),b
   700  000122  0EFF               	movlw	255
   701  000124  2386               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   702  000126  0E00               	movlw	0
   703  000128  6F88               	movwf	(___wmul@multiplicand+1)& (0+255),b
   704  00012A  0E64               	movlw	100
   705  00012C  6F87               	movwf	___wmul@multiplicand& (0+255),b
   706  00012E  EC5B  F003         	call	___wmul	;wreg free
   707  000132  0100               	movlb	0	; () banked
   708  000134  5185               	movf	?___wmul& (0+255),w,b
   709  000136  278B               	addwf	??_main& (0+255),f,b
   710  000138  5186               	movf	(?___wmul+1)& (0+255),w,b
   711  00013A  238C               	addwfc	(??_main+1)& (0+255),f,b
   712  00013C  0ED0               	movlw	208
   713  00013E  2565               	addwf	(_palabra+5)& (0+255),w,b
   714  000140  6F85               	movwf	___wmul@multiplier& (0+255),b
   715  000142  6B86               	clrf	(___wmul@multiplier+1)& (0+255),b
   716  000144  0EFF               	movlw	255
   717  000146  2386               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   718  000148  0E00               	movlw	0
   719  00014A  6F88               	movwf	(___wmul@multiplicand+1)& (0+255),b
   720  00014C  0E0A               	movlw	10
   721  00014E  6F87               	movwf	___wmul@multiplicand& (0+255),b
   722  000150  EC5B  F003         	call	___wmul	;wreg free
   723  000154  0100               	movlb	0	; () banked
   724  000156  5185               	movf	?___wmul& (0+255),w,b
   725  000158  278B               	addwf	??_main& (0+255),f,b
   726  00015A  5186               	movf	(?___wmul+1)& (0+255),w,b
   727  00015C  238C               	addwfc	(??_main+1)& (0+255),f,b
   728  00015E  0ED0               	movlw	208
   729  000160  258B               	addwf	??_main& (0+255),w,b
   730  000162  6F7F               	movwf	_diameter& (0+255),b
   731  000164  0EFF               	movlw	255
   732  000166  218C               	addwfc	(??_main+1)& (0+255),w,b
   733  000168  6F80               	movwf	(_diameter+1)& (0+255),b
   734                           
   735                           ;main.c: 113: length = ((palabra[7] - 48) * 10000) + ((palabra[8] - 48) * 1000) + ((pala
      +                          bra[9] - 48) * 100) + ((palabra[10] - 48) * 10) + ((palabra[11] - 48));
   736  00016A  0ED0               	movlw	208
   737  00016C  2567               	addwf	(_palabra+7)& (0+255),w,b
   738  00016E  6F85               	movwf	___wmul@multiplier& (0+255),b
   739  000170  6B86               	clrf	(___wmul@multiplier+1)& (0+255),b
   740  000172  0EFF               	movlw	255
   741  000174  2386               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   742  000176  0E27               	movlw	39
   743  000178  6F88               	movwf	(___wmul@multiplicand+1)& (0+255),b
   744  00017A  0E10               	movlw	16
   745  00017C  6F87               	movwf	___wmul@multiplicand& (0+255),b
   746  00017E  EC5B  F003         	call	___wmul	;wreg free
   747  000182  0100               	movlb	0	; () banked
   748  000184  516B               	movf	(_palabra+11)& (0+255),w,b
   749  000186  6F8B               	movwf	??_main& (0+255),b
   750  000188  6B8C               	clrf	(??_main+1)& (0+255),b
   751  00018A  5185               	movf	?___wmul& (0+255),w,b
   752  00018C  278B               	addwf	??_main& (0+255),f,b
   753  00018E  5186               	movf	(?___wmul+1)& (0+255),w,b
   754  000190  238C               	addwfc	(??_main+1)& (0+255),f,b
   755  000192  0ED0               	movlw	208
   756  000194  2568               	addwf	(_palabra+8)& (0+255),w,b
   757  000196  6F85               	movwf	___wmul@multiplier& (0+255),b
   758  000198  6B86               	clrf	(___wmul@multiplier+1)& (0+255),b
   759  00019A  0EFF               	movlw	255
   760  00019C  2386               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   761  00019E  0E03               	movlw	3
   762  0001A0  6F88               	movwf	(___wmul@multiplicand+1)& (0+255),b
   763  0001A2  0EE8               	movlw	232
   764  0001A4  6F87               	movwf	___wmul@multiplicand& (0+255),b
   765  0001A6  EC5B  F003         	call	___wmul	;wreg free
   766  0001AA  0100               	movlb	0	; () banked
   767  0001AC  5185               	movf	?___wmul& (0+255),w,b
   768  0001AE  278B               	addwf	??_main& (0+255),f,b
   769  0001B0  5186               	movf	(?___wmul+1)& (0+255),w,b
   770  0001B2  238C               	addwfc	(??_main+1)& (0+255),f,b
   771  0001B4  0ED0               	movlw	208
   772  0001B6  2569               	addwf	(_palabra+9)& (0+255),w,b
   773  0001B8  6F85               	movwf	___wmul@multiplier& (0+255),b
   774  0001BA  6B86               	clrf	(___wmul@multiplier+1)& (0+255),b
   775  0001BC  0EFF               	movlw	255
   776  0001BE  2386               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   777  0001C0  0E00               	movlw	0
   778  0001C2  6F88               	movwf	(___wmul@multiplicand+1)& (0+255),b
   779  0001C4  0E64               	movlw	100
   780  0001C6  6F87               	movwf	___wmul@multiplicand& (0+255),b
   781  0001C8  EC5B  F003         	call	___wmul	;wreg free
   782  0001CC  0100               	movlb	0	; () banked
   783  0001CE  5185               	movf	?___wmul& (0+255),w,b
   784  0001D0  278B               	addwf	??_main& (0+255),f,b
   785  0001D2  5186               	movf	(?___wmul+1)& (0+255),w,b
   786  0001D4  238C               	addwfc	(??_main+1)& (0+255),f,b
   787  0001D6  0ED0               	movlw	208
   788  0001D8  256A               	addwf	(_palabra+10)& (0+255),w,b
   789  0001DA  6F85               	movwf	___wmul@multiplier& (0+255),b
   790  0001DC  6B86               	clrf	(___wmul@multiplier+1)& (0+255),b
   791  0001DE  0EFF               	movlw	255
   792  0001E0  2386               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   793  0001E2  0E00               	movlw	0
   794  0001E4  6F88               	movwf	(___wmul@multiplicand+1)& (0+255),b
   795  0001E6  0E0A               	movlw	10
   796  0001E8  6F87               	movwf	___wmul@multiplicand& (0+255),b
   797  0001EA  EC5B  F003         	call	___wmul	;wreg free
   798  0001EE  0100               	movlb	0	; () banked
   799  0001F0  5185               	movf	?___wmul& (0+255),w,b
   800  0001F2  278B               	addwf	??_main& (0+255),f,b
   801  0001F4  5186               	movf	(?___wmul+1)& (0+255),w,b
   802  0001F6  238C               	addwfc	(??_main+1)& (0+255),f,b
   803  0001F8  0ED0               	movlw	208
   804  0001FA  258B               	addwf	??_main& (0+255),w,b
   805  0001FC  6E4F               	movwf	_length,c
   806  0001FE  0EFF               	movlw	255
   807  000200  218C               	addwfc	(??_main+1)& (0+255),w,b
   808  000202  6E50               	movwf	_length+1,c
   809                           
   810                           ;main.c: 114: turns = ((palabra[12] - 48) * 1000) + ((palabra[13] - 48) * 100) + ((palab
      +                          ra[14] - 48) * 10) + ((palabra[15] - 48));
   811  000204  0ED0               	movlw	208
   812  000206  256C               	addwf	(_palabra+12)& (0+255),w,b
   813  000208  6F85               	movwf	___wmul@multiplier& (0+255),b
   814  00020A  6B86               	clrf	(___wmul@multiplier+1)& (0+255),b
   815  00020C  0EFF               	movlw	255
   816  00020E  2386               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   817  000210  0E03               	movlw	3
   818  000212  6F88               	movwf	(___wmul@multiplicand+1)& (0+255),b
   819  000214  0EE8               	movlw	232
   820  000216  6F87               	movwf	___wmul@multiplicand& (0+255),b
   821  000218  EC5B  F003         	call	___wmul	;wreg free
   822  00021C  0100               	movlb	0	; () banked
   823  00021E  516F               	movf	(_palabra+15)& (0+255),w,b
   824  000220  6F8B               	movwf	??_main& (0+255),b
   825  000222  6B8C               	clrf	(??_main+1)& (0+255),b
   826  000224  5185               	movf	?___wmul& (0+255),w,b
   827  000226  278B               	addwf	??_main& (0+255),f,b
   828  000228  5186               	movf	(?___wmul+1)& (0+255),w,b
   829  00022A  238C               	addwfc	(??_main+1)& (0+255),f,b
   830  00022C  0ED0               	movlw	208
   831  00022E  256D               	addwf	(_palabra+13)& (0+255),w,b
   832  000230  6F85               	movwf	___wmul@multiplier& (0+255),b
   833  000232  6B86               	clrf	(___wmul@multiplier+1)& (0+255),b
   834  000234  0EFF               	movlw	255
   835  000236  2386               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   836  000238  0E00               	movlw	0
   837  00023A  6F88               	movwf	(___wmul@multiplicand+1)& (0+255),b
   838  00023C  0E64               	movlw	100
   839  00023E  6F87               	movwf	___wmul@multiplicand& (0+255),b
   840  000240  EC5B  F003         	call	___wmul	;wreg free
   841  000244  0100               	movlb	0	; () banked
   842  000246  5185               	movf	?___wmul& (0+255),w,b
   843  000248  278B               	addwf	??_main& (0+255),f,b
   844  00024A  5186               	movf	(?___wmul+1)& (0+255),w,b
   845  00024C  238C               	addwfc	(??_main+1)& (0+255),f,b
   846  00024E  0ED0               	movlw	208
   847  000250  256E               	addwf	(_palabra+14)& (0+255),w,b
   848  000252  6F85               	movwf	___wmul@multiplier& (0+255),b
   849  000254  6B86               	clrf	(___wmul@multiplier+1)& (0+255),b
   850  000256  0EFF               	movlw	255
   851  000258  2386               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   852  00025A  0E00               	movlw	0
   853  00025C  6F88               	movwf	(___wmul@multiplicand+1)& (0+255),b
   854  00025E  0E0A               	movlw	10
   855  000260  6F87               	movwf	___wmul@multiplicand& (0+255),b
   856  000262  EC5B  F003         	call	___wmul	;wreg free
   857  000266  0100               	movlb	0	; () banked
   858  000268  5185               	movf	?___wmul& (0+255),w,b
   859  00026A  278B               	addwf	??_main& (0+255),f,b
   860  00026C  5186               	movf	(?___wmul+1)& (0+255),w,b
   861  00026E  238C               	addwfc	(??_main+1)& (0+255),f,b
   862  000270  0ED0               	movlw	208
   863  000272  258B               	addwf	??_main& (0+255),w,b
   864  000274  6E51               	movwf	_turns,c
   865  000276  0EFF               	movlw	255
   866  000278  218C               	addwfc	(??_main+1)& (0+255),w,b
   867  00027A  6E52               	movwf	_turns+1,c
   868                           
   869                           ; BSR set to: 0
   870                           ;main.c: 115: speed = palabra[15];
   871  00027C  C06F  F07D         	movff	_palabra+15,_speed
   872  000280  6B7E               	clrf	(_speed+1)& (0+255),b
   873                           
   874                           ; BSR set to: 0
   875                           ;main.c: 117: busy_flag = 1;
   876  000282  0E01               	movlw	1
   877  000284  6E22               	movwf	_busy_flag,c
   878                           
   879                           ;main.c: 118: } else if (palabra[0] == 'C') {
   880  000286  D6C9               	goto	l188
   881  000288                     l192:
   882                           
   883                           ; BSR set to: 0
   884                           
   885                           ; BSR set to: 0
   886  000288  0E43               	movlw	67
   887  00028A  1960               	xorwf	_palabra& (0+255),w,b
   888  00028C  A4D8               	btfss	status,2,c
   889  00028E  D008               	goto	l194
   890                           
   891                           ; BSR set to: 0
   892                           ;main.c: 120: enable = !enable;
   893  000290  5019               	movf	_enable,w,c
   894  000292  A4D8               	btfss	status,2,c
   895  000294  D002               	goto	u1350
   896  000296  0E01               	movlw	1
   897  000298  D001               	goto	u1360
   898  00029A                     u1350:
   899  00029A  0E00               	movlw	0
   900  00029C                     u1360:
   901  00029C  6E19               	movwf	_enable,c
   902                           
   903                           ;main.c: 121: } else if ((palabra[0] == 'D') && (zero_flag)) {
   904  00029E  D6BD               	goto	l188
   905  0002A0                     l194:
   906                           
   907                           ; BSR set to: 0
   908                           
   909                           ; BSR set to: 0
   910  0002A0  0E44               	movlw	68
   911  0002A2  1960               	xorwf	_palabra& (0+255),w,b
   912  0002A4  A4D8               	btfss	status,2,c
   913  0002A6  D022               	goto	l196
   914                           
   915                           ; BSR set to: 0
   916  0002A8  5053               	movf	_zero_flag,w,c
   917  0002AA  B4D8               	btfsc	status,2,c
   918  0002AC  D01F               	goto	l196
   919                           
   920                           ; BSR set to: 0
   921                           ;main.c: 123: if (palabra[1] == '0') {
   922  0002AE  0E30               	movlw	48
   923  0002B0  1961               	xorwf	(_palabra+1)& (0+255),w,b
   924  0002B2  A4D8               	btfss	status,2,c
   925  0002B4  D004               	goto	l197
   926                           
   927                           ; BSR set to: 0
   928                           ;main.c: 125: MOT_3 = 1;
   929  0002B6  0E01               	movlw	1
   930  0002B8  6E24               	movwf	_MOT_3,c
   931                           
   932                           ;main.c: 126: DIR_3 = 0;
   933  0002BA  0E00               	movlw	0
   934  0002BC  D007               	goto	L1
   935  0002BE                     l197:
   936                           
   937                           ; BSR set to: 0
   938                           
   939                           ; BSR set to: 0
   940  0002BE  0E31               	movlw	49
   941  0002C0  1961               	xorwf	(_palabra+1)& (0+255),w,b
   942  0002C2  A4D8               	btfss	status,2,c
   943  0002C4  D005               	goto	l199
   944                           
   945                           ; BSR set to: 0
   946                           ;main.c: 129: MOT_3 = 1;
   947  0002C6  0E01               	movlw	1
   948  0002C8  6E24               	movwf	_MOT_3,c
   949                           
   950                           ;main.c: 130: DIR_3 = 1;
   951  0002CA  0E01               	movlw	1
   952  0002CC                     L1:
   953  0002CC  6E23               	movwf	_DIR_3,c
   954                           
   955                           ;main.c: 131: } else if (palabra[1] == '2') {
   956  0002CE  D6A5               	goto	l188
   957  0002D0                     l199:
   958                           
   959                           ; BSR set to: 0
   960                           
   961                           ; BSR set to: 0
   962  0002D0  0E32               	movlw	50
   963  0002D2  1961               	xorwf	(_palabra+1)& (0+255),w,b
   964  0002D4  B4D8               	btfsc	status,2,c
   965  0002D6  D030               	goto	u1520
   966                           
   967                           ; BSR set to: 0
   968                           
   969                           ; BSR set to: 0
   970                           
   971                           ;main.c: 134: } else if (palabra[1] == '3') {
   972                           
   973                           ; BSR set to: 0
   974                           ;main.c: 133: MOT_3 = 0;
   975  0002D8  0E33               	movlw	51
   976  0002DA  1961               	xorwf	(_palabra+1)& (0+255),w,b
   977  0002DC  A4D8               	btfss	status,2,c
   978  0002DE  D69D               	goto	l188
   979                           
   980                           ; BSR set to: 0
   981                           ;main.c: 136: if (MOT_3 == 0) {
   982  0002E0  5024               	movf	_MOT_3,w,c
   983  0002E2  A4D8               	btfss	status,2,c
   984  0002E4  D69A               	goto	l188
   985                           
   986                           ; BSR set to: 0
   987                           ;main.c: 138: zero_mark();
   988  0002E6  EC9C  F003         	call	_zero_mark	;wreg free
   989                           
   990                           ;main.c: 139: }
   991                           ;main.c: 141: }
   992                           ;main.c: 144: } else if (palabra[0] == 'M') {
   993  0002EA  D697               	goto	l188
   994  0002EC                     l196:
   995  0002EC  0E4D               	movlw	77
   996  0002EE  0100               	movlb	0	; () banked
   997  0002F0  1960               	xorwf	_palabra& (0+255),w,b
   998  0002F2  A4D8               	btfss	status,2,c
   999  0002F4  D692               	goto	l188
  1000                           
  1001                           ; BSR set to: 0
  1002                           ;main.c: 146: if (palabra[1] == '1') {
  1003  0002F6  0E31               	movlw	49
  1004  0002F8  1961               	xorwf	(_palabra+1)& (0+255),w,b
  1005  0002FA  A4D8               	btfss	status,2,c
  1006  0002FC  D008               	goto	l207
  1007                           
  1008                           ; BSR set to: 0
  1009                           ;main.c: 147: MOT_1 = !MOT_1;
  1010  0002FE  5025               	movf	_MOT_1,w,c
  1011  000300  A4D8               	btfss	status,2,c
  1012  000302  D002               	goto	u1460
  1013  000304  0E01               	movlw	1
  1014  000306  D001               	goto	u1470
  1015  000308                     u1460:
  1016  000308  0E00               	movlw	0
  1017  00030A                     u1470:
  1018  00030A  6E25               	movwf	_MOT_1,c
  1019                           
  1020                           ;main.c: 148: } else if (palabra[1] == '2') {
  1021  00030C  D686               	goto	l188
  1022  00030E                     l207:
  1023                           
  1024                           ; BSR set to: 0
  1025                           
  1026                           ; BSR set to: 0
  1027  00030E  0E32               	movlw	50
  1028  000310  1961               	xorwf	(_palabra+1)& (0+255),w,b
  1029  000312  A4D8               	btfss	status,2,c
  1030  000314  D008               	goto	l209
  1031                           
  1032                           ; BSR set to: 0
  1033                           ;main.c: 149: MOT_2 = !MOT_2;
  1034  000316  5021               	movf	_MOT_2,w,c
  1035  000318  A4D8               	btfss	status,2,c
  1036  00031A  D002               	goto	u1490
  1037  00031C  0E01               	movlw	1
  1038  00031E  D001               	goto	u1500
  1039  000320                     u1490:
  1040  000320  0E00               	movlw	0
  1041  000322                     u1500:
  1042  000322  6E21               	movwf	_MOT_2,c
  1043                           
  1044                           ;main.c: 150: } else if (palabra[1] == '3') {
  1045  000324  D67A               	goto	l188
  1046  000326                     l209:
  1047                           
  1048                           ; BSR set to: 0
  1049                           
  1050                           ; BSR set to: 0
  1051  000326  0E33               	movlw	51
  1052  000328  1961               	xorwf	(_palabra+1)& (0+255),w,b
  1053  00032A  A4D8               	btfss	status,2,c
  1054  00032C  D676               	goto	l188
  1055                           
  1056                           ; BSR set to: 0
  1057                           ;main.c: 151: MOT_3 = !MOT_3;
  1058  00032E  5024               	movf	_MOT_3,w,c
  1059  000330  A4D8               	btfss	status,2,c
  1060  000332  D002               	goto	u1520
  1061  000334  0E01               	movlw	1
  1062  000336  D001               	goto	u1530
  1063  000338                     u1520:
  1064  000338  0E00               	movlw	0
  1065  00033A                     u1530:
  1066  00033A  6E24               	movwf	_MOT_3,c
  1067                           
  1068                           ; BSR set to: 0
  1069                           ;main.c: 152: }
  1070                           ;main.c: 153: }
  1071                           ;main.c: 156: } else if (GODONE == 0) {
  1072                           
  1073                           ; BSR set to: 0
  1074                           
  1075                           ; BSR set to: 0
  1076                           
  1077                           ; BSR set to: 0
  1078                           
  1079                           ; BSR set to: 0
  1080                           
  1081                           ; BSR set to: 0
  1082                           
  1083                           ; BSR set to: 0
  1084                           
  1085                           ; BSR set to: 0
  1086  00033C  D66E               	goto	l188
  1087  00033E                     l189:
  1088                           
  1089                           ; BSR set to: 0
  1090  00033E  B2C2               	btfsc	4034,1,c	;volatile
  1091  000340  D66C               	goto	l188
  1092                           
  1093                           ; BSR set to: 0
  1094                           ;main.c: 158: _delay((unsigned long)((4)*(8000000/4000.0)));
  1095  000342  0E0B               	movlw	11
  1096  000344  0100               	movlb	0	; () banked
  1097  000346  6F8B               	movwf	??_main& (0+255),b
  1098  000348  0E62               	movlw	98
  1099  00034A                     u1557:
  1100  00034A  2EE8               	decfsz	wreg,f,c
  1101  00034C  D7FE               	bra	u1557
  1102  00034E  2F8B               	decfsz	??_main& (0+255),f,b
  1103  000350  D7FC               	bra	u1557
  1104  000352  F000               	nop	
  1105                           
  1106                           ;main.c: 160: GODONE = 1;
  1107  000354  82C2               	bsf	4034,1,c	;volatile
  1108  000356  D661               	goto	l188
  1109  000358                     __end_of_main:
  1110                           	opt stack 0
  1111                           tblptru	equ	0xFF8
  1112                           tblptrh	equ	0xFF7
  1113                           tblptrl	equ	0xFF6
  1114                           tablat	equ	0xFF5
  1115                           postinc0	equ	0xFEE
  1116                           wreg	equ	0xFE8
  1117                           postdec1	equ	0xFE5
  1118                           fsr1l	equ	0xFE1
  1119                           status	equ	0xFD8
  1120                           
  1121 ;; *************** function _zero_mark *****************
  1122 ;; Defined at:
  1123 ;;		line 218 in file "main.c"
  1124 ;; Parameters:    Size  Location     Type
  1125 ;;		None
  1126 ;; Auto vars:     Size  Location     Type
  1127 ;;		None
  1128 ;; Return value:  Size  Location     Type
  1129 ;;                  1    wreg      void 
  1130 ;; Registers used:
  1131 ;;		wreg, status,2
  1132 ;; Tracked objects:
  1133 ;;		On entry : 0/0
  1134 ;;		On exit  : 0/0
  1135 ;;		Unchanged: 0/0
  1136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1137 ;;      Params:         0       0       0       0       0       0       0       0       0
  1138 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1139 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1140 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1141 ;;Total ram usage:        0 bytes
  1142 ;; Hardware stack levels used:    1
  1143 ;; Hardware stack levels required when called:    3
  1144 ;; This function calls:
  1145 ;;		Nothing
  1146 ;; This function is called by:
  1147 ;;		_main
  1148 ;; This function uses a non-reentrant model
  1149 ;;
  1150                           
  1151                           	psect	text1
  1152  000738                     __ptext1:
  1153                           	opt stack 0
  1154  000738                     _zero_mark:
  1155                           	opt stack 27
  1156                           
  1157                           ;main.c: 219: DIR_3 = 1;
  1158                           
  1159                           ;incstack = 0
  1160  000738  0E01               	movlw	1
  1161  00073A  6E23               	movwf	_DIR_3,c
  1162                           
  1163                           ;main.c: 220: T1CONbits.TMR1ON = 0;
  1164  00073C  90CD               	bcf	4045,0,c	;volatile
  1165                           
  1166                           ;main.c: 221: T0CONbits.TMR0ON = 1;
  1167  00073E  8ED5               	bsf	4053,7,c	;volatile
  1168                           
  1169                           ;main.c: 222: zero_flag = 0;
  1170  000740  0E00               	movlw	0
  1171  000742  6E53               	movwf	_zero_flag,c
  1172  000744  0012               	return		;funcret
  1173  000746                     __end_of_zero_mark:
  1174                           	opt stack 0
  1175                           tblptru	equ	0xFF8
  1176                           tblptrh	equ	0xFF7
  1177                           tblptrl	equ	0xFF6
  1178                           tablat	equ	0xFF5
  1179                           postinc0	equ	0xFEE
  1180                           wreg	equ	0xFE8
  1181                           postdec1	equ	0xFE5
  1182                           fsr1l	equ	0xFE1
  1183                           status	equ	0xFD8
  1184                           
  1185 ;; *************** function ___wmul *****************
  1186 ;; Defined at:
  1187 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
  1188 ;; Parameters:    Size  Location     Type
  1189 ;;  multiplier      2    0[BANK0 ] unsigned int 
  1190 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  1191 ;; Auto vars:     Size  Location     Type
  1192 ;;  product         2    4[BANK0 ] unsigned int 
  1193 ;; Return value:  Size  Location     Type
  1194 ;;                  2    0[BANK0 ] unsigned int 
  1195 ;; Registers used:
  1196 ;;		wreg, status,2, status,0, prodl, prodh
  1197 ;; Tracked objects:
  1198 ;;		On entry : 0/0
  1199 ;;		On exit  : 0/0
  1200 ;;		Unchanged: 0/0
  1201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1202 ;;      Params:         0       4       0       0       0       0       0       0       0
  1203 ;;      Locals:         0       2       0       0       0       0       0       0       0
  1204 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1205 ;;      Totals:         0       6       0       0       0       0       0       0       0
  1206 ;;Total ram usage:        6 bytes
  1207 ;; Hardware stack levels used:    1
  1208 ;; Hardware stack levels required when called:    3
  1209 ;; This function calls:
  1210 ;;		Nothing
  1211 ;; This function is called by:
  1212 ;;		_main
  1213 ;; This function uses a non-reentrant model
  1214 ;;
  1215                           
  1216                           	psect	text2
  1217  0006B6                     __ptext2:
  1218                           	opt stack 0
  1219  0006B6                     ___wmul:
  1220                           	opt stack 27
  1221                           
  1222                           ;incstack = 0
  1223  0006B6  0100               	movlb	0	; () banked
  1224  0006B8  5185               	movf	___wmul@multiplier& (0+255),w,b
  1225  0006BA  0387               	mulwf	___wmul@multiplicand& (0+255),b
  1226  0006BC  CFF3 F089          	movff	prodl,___wmul@product
  1227  0006C0  CFF4 F08A          	movff	prodh,___wmul@product+1
  1228  0006C4  5185               	movf	___wmul@multiplier& (0+255),w,b
  1229  0006C6  0388               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  1230  0006C8  50F3               	movf	prodl,w,c
  1231  0006CA  278A               	addwf	(___wmul@product+1)& (0+255),f,b
  1232  0006CC  5186               	movf	(___wmul@multiplier+1)& (0+255),w,b
  1233  0006CE  0387               	mulwf	___wmul@multiplicand& (0+255),b
  1234  0006D0  50F3               	movf	prodl,w,c
  1235  0006D2  278A               	addwf	(___wmul@product+1)& (0+255),f,b
  1236                           
  1237                           ; BSR set to: 0
  1238  0006D4  C089  F085         	movff	___wmul@product,?___wmul
  1239  0006D8  C08A  F086         	movff	___wmul@product+1,?___wmul+1
  1240  0006DC  0012               	return	
  1241  0006DE                     __end_of___wmul:
  1242                           	opt stack 0
  1243                           tblptru	equ	0xFF8
  1244                           tblptrh	equ	0xFF7
  1245                           tblptrl	equ	0xFF6
  1246                           tablat	equ	0xFF5
  1247                           prodh	equ	0xFF4
  1248                           prodl	equ	0xFF3
  1249                           postinc0	equ	0xFEE
  1250                           wreg	equ	0xFE8
  1251                           postdec1	equ	0xFE5
  1252                           fsr1l	equ	0xFE1
  1253                           status	equ	0xFD8
  1254                           
  1255 ;; *************** function _InitApp *****************
  1256 ;; Defined at:
  1257 ;;		line 33 in file "user.c"
  1258 ;; Parameters:    Size  Location     Type
  1259 ;;		None
  1260 ;; Auto vars:     Size  Location     Type
  1261 ;;		None
  1262 ;; Return value:  Size  Location     Type
  1263 ;;                  1    wreg      void 
  1264 ;; Registers used:
  1265 ;;		wreg, status,2
  1266 ;; Tracked objects:
  1267 ;;		On entry : 0/0
  1268 ;;		On exit  : 0/0
  1269 ;;		Unchanged: 0/0
  1270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1271 ;;      Params:         0       0       0       0       0       0       0       0       0
  1272 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1273 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1274 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1275 ;;Total ram usage:        0 bytes
  1276 ;; Hardware stack levels used:    1
  1277 ;; Hardware stack levels required when called:    3
  1278 ;; This function calls:
  1279 ;;		Nothing
  1280 ;; This function is called by:
  1281 ;;		_main
  1282 ;; This function uses a non-reentrant model
  1283 ;;
  1284                           
  1285                           	psect	text3
  1286  0005A0                     __ptext3:
  1287                           	opt stack 0
  1288  0005A0                     _InitApp:
  1289                           	opt stack 27
  1290                           
  1291                           ;user.c: 35: PORTA = 0;
  1292                           
  1293                           ; BSR set to: 0
  1294                           ;incstack = 0
  1295  0005A0  0E00               	movlw	0
  1296  0005A2  6E80               	movwf	3968,c	;volatile
  1297                           
  1298                           ;user.c: 36: LATA = 0;
  1299  0005A4  0E00               	movlw	0
  1300  0005A6  6E89               	movwf	3977,c	;volatile
  1301                           
  1302                           ;user.c: 37: PORTB = 0;
  1303  0005A8  0E00               	movlw	0
  1304  0005AA  6E81               	movwf	3969,c	;volatile
  1305                           
  1306                           ;user.c: 38: LATB = 0;
  1307  0005AC  0E00               	movlw	0
  1308  0005AE  6E8A               	movwf	3978,c	;volatile
  1309                           
  1310                           ;user.c: 39: PORTC = 0;
  1311  0005B0  0E00               	movlw	0
  1312  0005B2  6E82               	movwf	3970,c	;volatile
  1313                           
  1314                           ;user.c: 40: LATC = 0;
  1315  0005B4  0E00               	movlw	0
  1316  0005B6  6E8B               	movwf	3979,c	;volatile
  1317                           
  1318                           ;user.c: 42: ADCON1 = 0b1101;
  1319  0005B8  0E0D               	movlw	13
  1320  0005BA  6EC1               	movwf	4033,c	;volatile
  1321                           
  1322                           ;user.c: 43: TRISAbits.TRISA0 = 1;
  1323  0005BC  8092               	bsf	3986,0,c	;volatile
  1324                           
  1325                           ;user.c: 44: ADCON0bits.CHS = 0;
  1326  0005BE  94C2               	bcf	4034,2,c	;volatile
  1327  0005C0  96C2               	bcf	4034,3,c	;volatile
  1328  0005C2  98C2               	bcf	4034,4,c	;volatile
  1329  0005C4  9AC2               	bcf	4034,5,c	;volatile
  1330                           
  1331                           ;user.c: 45: ADCON2 = 0b10101100;
  1332  0005C6  0EAC               	movlw	172
  1333  0005C8  6EC0               	movwf	4032,c	;volatile
  1334                           
  1335                           ;user.c: 46: PIE1bits.ADIE = 1;
  1336  0005CA  8C9D               	bsf	3997,6,c	;volatile
  1337                           
  1338                           ;user.c: 47: PIR1bits.ADIF = 0;
  1339  0005CC  9C9E               	bcf	3998,6,c	;volatile
  1340                           
  1341                           ;user.c: 48: ADCON0bits.ADON = 1;
  1342  0005CE  80C2               	bsf	4034,0,c	;volatile
  1343                           
  1344                           ;user.c: 50: TRISAbits.RA2 = 0;
  1345  0005D0  9492               	bcf	3986,2,c	;volatile
  1346                           
  1347                           ;user.c: 51: TRISAbits.RA3 = 0;
  1348  0005D2  9692               	bcf	3986,3,c	;volatile
  1349                           
  1350                           ;user.c: 52: TRISAbits.RA4 = 0;
  1351  0005D4  9892               	bcf	3986,4,c	;volatile
  1352                           
  1353                           ;user.c: 53: TRISAbits.RA5 = 0;
  1354  0005D6  9A92               	bcf	3986,5,c	;volatile
  1355                           
  1356                           ;user.c: 54: TRISCbits.RC0 = 0;
  1357  0005D8  9094               	bcf	3988,0,c	;volatile
  1358                           
  1359                           ;user.c: 55: TRISCbits.RC1 = 0;
  1360  0005DA  9294               	bcf	3988,1,c	;volatile
  1361                           
  1362                           ;user.c: 56: TRISBbits.RB7 = 0;
  1363  0005DC  9E93               	bcf	3987,7,c	;volatile
  1364                           
  1365                           ;user.c: 57: TRISBbits.RB6 = 0;
  1366  0005DE  9C93               	bcf	3987,6,c	;volatile
  1367                           
  1368                           ;user.c: 58: TRISCbits.RC2 = 0;
  1369  0005E0  9494               	bcf	3988,2,c	;volatile
  1370                           
  1371                           ;user.c: 59: TRISBbits.RB4 = 0;
  1372  0005E2  9893               	bcf	3987,4,c	;volatile
  1373                           
  1374                           ;user.c: 60: TRISBbits.RB5 = 0;
  1375  0005E4  9A93               	bcf	3987,5,c	;volatile
  1376                           
  1377                           ;user.c: 62: RCONbits.IPEN = 0;
  1378  0005E6  9ED0               	bcf	4048,7,c	;volatile
  1379                           
  1380                           ;user.c: 64: INTCONbits.GIE = 1;
  1381  0005E8  8EF2               	bsf	intcon,7,c	;volatile
  1382                           
  1383                           ;user.c: 65: INTCONbits.PEIE = 1;
  1384  0005EA  8CF2               	bsf	intcon,6,c	;volatile
  1385                           
  1386                           ;user.c: 66: INTCONbits.TMR0IE = 1;
  1387  0005EC  8AF2               	bsf	intcon,5,c	;volatile
  1388                           
  1389                           ;user.c: 67: INTCONbits.TMR0IF = 0;
  1390  0005EE  94F2               	bcf	intcon,2,c	;volatile
  1391                           
  1392                           ;user.c: 68: INTCON2bits.TMR0IP = 1;
  1393  0005F0  84F1               	bsf	intcon2,2,c	;volatile
  1394                           
  1395                           ;user.c: 69: T0CONbits.T08BIT = 1;
  1396  0005F2  8CD5               	bsf	4053,6,c	;volatile
  1397                           
  1398                           ;user.c: 70: T0CONbits.T0CS = 0;
  1399  0005F4  9AD5               	bcf	4053,5,c	;volatile
  1400                           
  1401                           ;user.c: 71: T0CONbits.PSA = 0;
  1402  0005F6  96D5               	bcf	4053,3,c	;volatile
  1403                           
  1404                           ;user.c: 72: T0CONbits.T0PS = 0b101;
  1405  0005F8  50D5               	movf	4053,w,c	;volatile
  1406  0005FA  0BF8               	andlw	-8
  1407  0005FC  0905               	iorlw	5
  1408  0005FE  6ED5               	movwf	4053,c	;volatile
  1409                           
  1410                           ;user.c: 73: T0CONbits.TMR0ON = 0;
  1411  000600  9ED5               	bcf	4053,7,c	;volatile
  1412                           
  1413                           ;user.c: 74: TMR0 = 0x6;
  1414  000602  0E00               	movlw	0
  1415  000604  6ED7               	movwf	4055,c	;volatile
  1416  000606  0E06               	movlw	6
  1417  000608  6ED6               	movwf	4054,c	;volatile
  1418                           
  1419                           ;user.c: 76: PIE1bits.TMR1IE = 1;
  1420  00060A  809D               	bsf	3997,0,c	;volatile
  1421                           
  1422                           ;user.c: 77: PIR1bits.TMR1IF = 0;
  1423  00060C  909E               	bcf	3998,0,c	;volatile
  1424                           
  1425                           ;user.c: 78: IPR1bits.TMR1IP = 1;
  1426  00060E  809F               	bsf	3999,0,c	;volatile
  1427                           
  1428                           ;user.c: 79: T1CONbits.TMR1CS = 0;
  1429  000610  92CD               	bcf	4045,1,c	;volatile
  1430                           
  1431                           ;user.c: 80: T1CONbits.T1CKPS = 0b00;
  1432  000612  0ECF               	movlw	-49
  1433  000614  16CD               	andwf	4045,f,c	;volatile
  1434                           
  1435                           ;user.c: 81: T1CONbits.TMR1ON = 1;
  1436  000616  80CD               	bsf	4045,0,c	;volatile
  1437                           
  1438                           ;user.c: 85: TRISBbits.RB1 = 1;
  1439  000618  8293               	bsf	3987,1,c	;volatile
  1440                           
  1441                           ;user.c: 86: TRISBbits.RB2 = 1;
  1442  00061A  8493               	bsf	3987,2,c	;volatile
  1443                           
  1444                           ;user.c: 87: INTCON3bits.INT1IE = 1;
  1445  00061C  86F0               	bsf	intcon3,3,c	;volatile
  1446                           
  1447                           ;user.c: 88: INTCON3bits.INT2IE = 1;
  1448  00061E  88F0               	bsf	intcon3,4,c	;volatile
  1449                           
  1450                           ;user.c: 89: INTCON3bits.INT1IF = 0;
  1451  000620  90F0               	bcf	intcon3,0,c	;volatile
  1452                           
  1453                           ;user.c: 90: INTCON3bits.INT2IF = 0;
  1454  000622  92F0               	bcf	intcon3,1,c	;volatile
  1455                           
  1456                           ;user.c: 91: INTCON2bits.INTEDG1 = 0;
  1457  000624  9AF1               	bcf	intcon2,5,c	;volatile
  1458                           
  1459                           ;user.c: 92: INTCON2bits.INTEDG2 = 0;
  1460  000626  98F1               	bcf	intcon2,4,c	;volatile
  1461                           
  1462                           ;user.c: 94: TRISCbits.RC6 = 0;
  1463  000628  9C94               	bcf	3988,6,c	;volatile
  1464                           
  1465                           ;user.c: 95: TRISCbits.RC7 = 1;
  1466  00062A  8E94               	bsf	3988,7,c	;volatile
  1467                           
  1468                           ;user.c: 96: BRGH = 1;
  1469  00062C  84AC               	bsf	4012,2,c	;volatile
  1470                           
  1471                           ;user.c: 97: BRG16 = 1;
  1472  00062E  86B8               	bsf	4024,3,c	;volatile
  1473                           
  1474                           ;user.c: 98: SPBRG = 207;
  1475  000630  0ECF               	movlw	207
  1476  000632  6EAF               	movwf	4015,c	;volatile
  1477                           
  1478                           ;user.c: 99: SPEN = 1;
  1479  000634  8EAB               	bsf	4011,7,c	;volatile
  1480                           
  1481                           ;user.c: 100: SYNC = 0;
  1482  000636  98AC               	bcf	4012,4,c	;volatile
  1483                           
  1484                           ;user.c: 101: TXEN = 1;
  1485  000638  8AAC               	bsf	4012,5,c	;volatile
  1486                           
  1487                           ;user.c: 102: CREN = 1;
  1488  00063A  88AB               	bsf	4011,4,c	;volatile
  1489                           
  1490                           ;user.c: 103: TX9 = 0;
  1491  00063C  9CAC               	bcf	4012,6,c	;volatile
  1492                           
  1493                           ;user.c: 104: RX9 = 0;
  1494  00063E  9CAB               	bcf	4011,6,c	;volatile
  1495                           
  1496                           ;user.c: 105: RCIE = 1;
  1497  000640  8A9D               	bsf	3997,5,c	;volatile
  1498                           
  1499                           ;user.c: 106: TXIE = 0;
  1500  000642  989D               	bcf	3997,4,c	;volatile
  1501                           
  1502                           ;user.c: 108: PR2 = 99;
  1503  000644  0E63               	movlw	99
  1504  000646  6ECB               	movwf	4043,c	;volatile
  1505                           
  1506                           ;user.c: 109: CCP1CONbits.DC1B = 0;
  1507  000648  0ECF               	movlw	-49
  1508  00064A  16BD               	andwf	4029,f,c	;volatile
  1509                           
  1510                           ;user.c: 110: T2CONbits.T2CKPS = 0b00;
  1511  00064C  0EFC               	movlw	-4
  1512  00064E  16CA               	andwf	4042,f,c	;volatile
  1513                           
  1514                           ;user.c: 111: T2CONbits.TMR2ON = 1;
  1515  000650  84CA               	bsf	4042,2,c	;volatile
  1516                           
  1517                           ;user.c: 112: CCP1CONbits.CCP1M = 0b1111;
  1518  000652  80BD               	bsf	4029,0,c	;volatile
  1519  000654  82BD               	bsf	4029,1,c	;volatile
  1520  000656  84BD               	bsf	4029,2,c	;volatile
  1521  000658  86BD               	bsf	4029,3,c	;volatile
  1522  00065A  0012               	return		;funcret
  1523  00065C                     __end_of_InitApp:
  1524                           	opt stack 0
  1525                           tblptru	equ	0xFF8
  1526                           tblptrh	equ	0xFF7
  1527                           tblptrl	equ	0xFF6
  1528                           tablat	equ	0xFF5
  1529                           prodh	equ	0xFF4
  1530                           prodl	equ	0xFF3
  1531                           intcon	equ	0xFF2
  1532                           intcon2	equ	0xFF1
  1533                           intcon3	equ	0xFF0
  1534                           postinc0	equ	0xFEE
  1535                           wreg	equ	0xFE8
  1536                           postdec1	equ	0xFE5
  1537                           fsr1l	equ	0xFE1
  1538                           status	equ	0xFD8
  1539                           
  1540 ;; *************** function _ConfigureOscillator *****************
  1541 ;; Defined at:
  1542 ;;		line 24 in file "system.c"
  1543 ;; Parameters:    Size  Location     Type
  1544 ;;		None
  1545 ;; Auto vars:     Size  Location     Type
  1546 ;;		None
  1547 ;; Return value:  Size  Location     Type
  1548 ;;                  1    wreg      void 
  1549 ;; Registers used:
  1550 ;;		wreg, status,2
  1551 ;; Tracked objects:
  1552 ;;		On entry : 0/0
  1553 ;;		On exit  : 0/0
  1554 ;;		Unchanged: 0/0
  1555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1556 ;;      Params:         0       0       0       0       0       0       0       0       0
  1557 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1558 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1559 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1560 ;;Total ram usage:        0 bytes
  1561 ;; Hardware stack levels used:    1
  1562 ;; Hardware stack levels required when called:    3
  1563 ;; This function calls:
  1564 ;;		Nothing
  1565 ;; This function is called by:
  1566 ;;		_main
  1567 ;; This function uses a non-reentrant model
  1568 ;;
  1569                           
  1570                           	psect	text4
  1571  000746                     __ptext4:
  1572                           	opt stack 0
  1573  000746                     _ConfigureOscillator:
  1574                           	opt stack 27
  1575                           
  1576                           ;system.c: 27: OSCCONbits.IRCF = 0b111;
  1577                           
  1578                           ;incstack = 0
  1579  000746  88D3               	bsf	4051,4,c	;volatile
  1580  000748  8AD3               	bsf	4051,5,c	;volatile
  1581  00074A  8CD3               	bsf	4051,6,c	;volatile
  1582                           
  1583                           ;system.c: 28: OSCCONbits.SCS = 0b11;
  1584  00074C  0E03               	movlw	3
  1585  00074E  12D3               	iorwf	4051,f,c	;volatile
  1586  000750  0012               	return		;funcret
  1587  000752                     __end_of_ConfigureOscillator:
  1588                           	opt stack 0
  1589                           tblptru	equ	0xFF8
  1590                           tblptrh	equ	0xFF7
  1591                           tblptrl	equ	0xFF6
  1592                           tablat	equ	0xFF5
  1593                           prodh	equ	0xFF4
  1594                           prodl	equ	0xFF3
  1595                           intcon	equ	0xFF2
  1596                           intcon2	equ	0xFF1
  1597                           intcon3	equ	0xFF0
  1598                           postinc0	equ	0xFEE
  1599                           wreg	equ	0xFE8
  1600                           postdec1	equ	0xFE5
  1601                           fsr1l	equ	0xFE1
  1602                           status	equ	0xFD8
  1603                           
  1604 ;; *************** function _high_isr *****************
  1605 ;; Defined at:
  1606 ;;		line 72 in file "interrupts.c"
  1607 ;; Parameters:    Size  Location     Type
  1608 ;;		None
  1609 ;; Auto vars:     Size  Location     Type
  1610 ;;		None
  1611 ;; Return value:  Size  Location     Type
  1612 ;;                  1    wreg      void 
  1613 ;; Registers used:
  1614 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1615 ;; Tracked objects:
  1616 ;;		On entry : 0/0
  1617 ;;		On exit  : 0/0
  1618 ;;		Unchanged: 0/0
  1619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1620 ;;      Params:         0       0       0       0       0       0       0       0       0
  1621 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1622 ;;      Temps:         19       0       0       0       0       0       0       0       0
  1623 ;;      Totals:        19       0       0       0       0       0       0       0       0
  1624 ;;Total ram usage:       19 bytes
  1625 ;; Hardware stack levels used:    1
  1626 ;; Hardware stack levels required when called:    2
  1627 ;; This function calls:
  1628 ;;		_mot_3_step_count
  1629 ;;		_trans_Char
  1630 ;; This function is called by:
  1631 ;;		Interrupt level 2
  1632 ;; This function uses a non-reentrant model
  1633 ;;
  1634                           
  1635                           	psect	intcode
  1636  000008                     __pintcode:
  1637                           	opt stack 0
  1638  000008                     _high_isr:
  1639                           	opt stack 27
  1640                           
  1641                           ;incstack = 0
  1642  000008  8254               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  1643  00000A  EDAC  F001         	call	int_func,f	;refresh shadow registers
  1644                           tblptru	equ	0xFF8
  1645                           tblptrh	equ	0xFF7
  1646                           tblptrl	equ	0xFF6
  1647                           tablat	equ	0xFF5
  1648                           prodh	equ	0xFF4
  1649                           prodl	equ	0xFF3
  1650                           intcon	equ	0xFF2
  1651                           intcon2	equ	0xFF1
  1652                           intcon3	equ	0xFF0
  1653                           postinc0	equ	0xFEE
  1654                           wreg	equ	0xFE8
  1655                           postdec1	equ	0xFE5
  1656                           fsr1l	equ	0xFE1
  1657                           status	equ	0xFD8
  1658                           
  1659                           	psect	intcode_body
  1660  000358                     __pintcode_body:
  1661                           	opt stack 27
  1662  000358                     int_func:
  1663                           	opt stack 27
  1664  000358  0006               	pop		; remove dummy address from shadow register refresh
  1665  00035A  CFFA F033          	movff	pclath,??_high_isr+1
  1666  00035E  CFFB F034          	movff	pclatu,??_high_isr+2
  1667  000362  CFE9 F035          	movff	fsr0l,??_high_isr+3
  1668  000366  CFEA F036          	movff	fsr0h,??_high_isr+4
  1669  00036A  CFE1 F037          	movff	fsr1l,??_high_isr+5
  1670  00036E  CFE2 F038          	movff	fsr1h,??_high_isr+6
  1671  000372  CFD9 F039          	movff	fsr2l,??_high_isr+7
  1672  000376  CFDA F03A          	movff	fsr2h,??_high_isr+8
  1673  00037A  CFF3 F03B          	movff	prodl,??_high_isr+9
  1674  00037E  CFF4 F03C          	movff	prodh,??_high_isr+10
  1675  000382  CFF6 F03D          	movff	tblptrl,??_high_isr+11
  1676  000386  CFF7 F03E          	movff	tblptrh,??_high_isr+12
  1677  00038A  CFF8 F03F          	movff	tblptru,??_high_isr+13
  1678  00038E  CFF5 F040          	movff	tablat,??_high_isr+14
  1679  000392  C054  F041         	movff	btemp,??_high_isr+15
  1680  000396  C055  F042         	movff	btemp+1,??_high_isr+16
  1681  00039A  C056  F043         	movff	btemp+2,??_high_isr+17
  1682  00039E  C057  F044         	movff	btemp+3,??_high_isr+18
  1683                           
  1684                           ;interrupts.c: 73: if (INTCONbits.TMR0IF) {
  1685  0003A2  A4F2               	btfss	intcon,2,c	;volatile
  1686  0003A4  D07D               	goto	i2l85
  1687                           
  1688                           ;interrupts.c: 75: INTCONbits.TMR0IF = 0;
  1689  0003A6  94F2               	bcf	intcon,2,c	;volatile
  1690                           
  1691                           ;interrupts.c: 76: TMR0 = 250;
  1692  0003A8  0E00               	movlw	0
  1693  0003AA  6ED7               	movwf	4055,c	;volatile
  1694  0003AC  0EFA               	movlw	250
  1695  0003AE  6ED6               	movwf	4054,c	;volatile
  1696                           
  1697                           ;interrupts.c: 77: MOT_1_count++;
  1698  0003B0  4A11               	infsnz	_MOT_1_count,f,c
  1699  0003B2  2A12               	incf	_MOT_1_count+1,f,c
  1700                           
  1701                           ;interrupts.c: 78: MOT_2_count++;
  1702  0003B4  4A0F               	infsnz	_MOT_2_count,f,c
  1703  0003B6  2A10               	incf	_MOT_2_count+1,f,c
  1704                           
  1705                           ;interrupts.c: 79: MOT_3_count++;
  1706  0003B8  4A0D               	infsnz	_MOT_3_count,f,c
  1707  0003BA  2A0E               	incf	_MOT_3_count+1,f,c
  1708                           
  1709                           ;interrupts.c: 80: MOT_4_count++;
  1710  0003BC  4A0B               	infsnz	_MOT_4_count,f,c
  1711  0003BE  2A0C               	incf	_MOT_4_count+1,f,c
  1712                           
  1713                           ;interrupts.c: 82: if (MOT_1) {
  1714  0003C0  5025               	movf	_MOT_1,w,c
  1715  0003C2  B4D8               	btfsc	status,2,c
  1716  0003C4  D026               	goto	i2l88
  1717                           
  1718                           ;interrupts.c: 83: if (MOT_1_count == count_1) {
  1719  0003C6  504D               	movf	_count_1,w,c
  1720  0003C8  1811               	xorwf	_MOT_1_count,w,c
  1721  0003CA  E123               	bnz	i2l1412
  1722  0003CC  504E               	movf	_count_1+1,w,c
  1723  0003CE  1812               	xorwf	_MOT_1_count+1,w,c
  1724  0003D0  A4D8               	btfss	status,2,c
  1725  0003D2  D01F               	goto	i2l88
  1726                           
  1727                           ;interrupts.c: 84: MOT_1_count = 0;
  1728  0003D4  0E00               	movlw	0
  1729  0003D6  6E12               	movwf	_MOT_1_count+1,c
  1730  0003D8  0E00               	movlw	0
  1731  0003DA  6E11               	movwf	_MOT_1_count,c
  1732                           
  1733                           ;interrupts.c: 85: LATAbits.LA3 = !PORTAbits.RA3;
  1734  0003DC  B680               	btfsc	3968,3,c	;volatile
  1735  0003DE  D003               	goto	i2u66_40
  1736  0003E0  6A32               	clrf	??_high_isr& (0+255),c
  1737  0003E2  2A32               	incf	??_high_isr& (0+255),f,c
  1738  0003E4  D001               	goto	i2u67_48
  1739  0003E6                     i2u66_40:
  1740  0003E6  6A32               	clrf	??_high_isr& (0+255),c
  1741  0003E8                     i2u67_48:
  1742  0003E8  4632               	rlncf	??_high_isr,f,c
  1743  0003EA  4632               	rlncf	??_high_isr,f,c
  1744  0003EC  4632               	rlncf	??_high_isr,f,c
  1745  0003EE  5089               	movf	3977,w,c	;volatile
  1746  0003F0  1832               	xorwf	??_high_isr,w,c
  1747  0003F2  0BF7               	andlw	-9
  1748  0003F4  1832               	xorwf	??_high_isr,w,c
  1749  0003F6  6E89               	movwf	3977,c	;volatile
  1750                           
  1751                           ;interrupts.c: 86: mot_1_steps++;
  1752  0003F8  4A09               	infsnz	_mot_1_steps,f,c
  1753  0003FA  2A0A               	incf	_mot_1_steps+1,f,c
  1754                           
  1755                           ;interrupts.c: 87: if (mot_1_steps == 200) {
  1756  0003FC  0EC8               	movlw	200
  1757  0003FE  1809               	xorwf	_mot_1_steps,w,c
  1758  000400  100A               	iorwf	_mot_1_steps+1,w,c
  1759  000402  A4D8               	btfss	status,2,c
  1760  000404  D006               	goto	i2l88
  1761                           
  1762                           ;interrupts.c: 89: mot_1_steps = 0;
  1763  000406  0E00               	movlw	0
  1764  000408  6E0A               	movwf	_mot_1_steps+1,c
  1765  00040A  0E00               	movlw	0
  1766  00040C  6E09               	movwf	_mot_1_steps,c
  1767                           
  1768                           ;interrupts.c: 90: turns_count++;
  1769  00040E  4A03               	infsnz	_turns_count,f,c
  1770  000410  2A04               	incf	_turns_count+1,f,c
  1771  000412                     i2l88:
  1772  000412                     i2l1412:
  1773                           
  1774                           ;interrupts.c: 91: }
  1775                           ;interrupts.c: 92: }
  1776                           ;interrupts.c: 93: }
  1777                           ;interrupts.c: 100: if (MOT_3) {
  1778  000412  5024               	movf	_MOT_3,w,c
  1779  000414  B4D8               	btfsc	status,2,c
  1780  000416  D09E               	goto	i2l108
  1781                           
  1782                           ;interrupts.c: 101: if (MOT_3_count == count_3) {
  1783  000418  5049               	movf	_count_3,w,c
  1784  00041A  180D               	xorwf	_MOT_3_count,w,c
  1785  00041C  E103               	bnz	i2u70_41
  1786  00041E  504A               	movf	_count_3+1,w,c
  1787  000420  180E               	xorwf	_MOT_3_count+1,w,c
  1788  000422  A4D8               	btfss	status,2,c
  1789  000424                     i2u70_41:
  1790  000424  D097               	goto	i2l108
  1791                           
  1792                           ;interrupts.c: 102: MOT_3_count = 0;
  1793  000426  0E00               	movlw	0
  1794  000428  6E0E               	movwf	_MOT_3_count+1,c
  1795  00042A  0E00               	movlw	0
  1796  00042C  6E0D               	movwf	_MOT_3_count,c
  1797                           
  1798                           ;interrupts.c: 103: LATCbits.LC1 = !PORTCbits.RC1;
  1799  00042E  B282               	btfsc	3970,1,c	;volatile
  1800  000430  D003               	goto	i2u71_40
  1801  000432  6A32               	clrf	??_high_isr& (0+255),c
  1802  000434  2A32               	incf	??_high_isr& (0+255),f,c
  1803  000436  D001               	goto	i2u72_48
  1804  000438                     i2u71_40:
  1805  000438  6A32               	clrf	??_high_isr& (0+255),c
  1806  00043A                     i2u72_48:
  1807  00043A  4632               	rlncf	??_high_isr,f,c
  1808  00043C  508B               	movf	3979,w,c	;volatile
  1809  00043E  1832               	xorwf	??_high_isr,w,c
  1810  000440  0BFD               	andlw	-3
  1811  000442  1832               	xorwf	??_high_isr,w,c
  1812  000444  6E8B               	movwf	3979,c	;volatile
  1813                           
  1814                           ;interrupts.c: 104: mot_3_steps++;
  1815  000446  4A07               	infsnz	_mot_3_steps,f,c
  1816  000448  2A08               	incf	_mot_3_steps+1,f,c
  1817                           
  1818                           ;interrupts.c: 105: if (turns_count == turns) {
  1819  00044A  5051               	movf	_turns,w,c
  1820  00044C  1803               	xorwf	_turns_count,w,c
  1821  00044E  E10B               	bnz	i2l1428
  1822  000450  5052               	movf	_turns+1,w,c
  1823  000452  1804               	xorwf	_turns_count+1,w,c
  1824  000454  A4D8               	btfss	status,2,c
  1825  000456  D007               	goto	i2l91
  1826                           
  1827                           ;interrupts.c: 107: MOT_1 = 0;
  1828  000458  0E00               	movlw	0
  1829  00045A  6E25               	movwf	_MOT_1,c
  1830                           
  1831                           ;interrupts.c: 108: MOT_3 = 0;
  1832  00045C  0E00               	movlw	0
  1833  00045E  6E24               	movwf	_MOT_3,c
  1834                           
  1835                           ;interrupts.c: 109: trans_Char('0');
  1836  000460  0E30               	movlw	48
  1837  000462  ECA9  F003         	call	_trans_Char
  1838  000466                     i2l91:
  1839  000466                     i2l1428:
  1840                           
  1841                           ;interrupts.c: 110: }
  1842                           ;interrupts.c: 111: if (mot_3_steps == mot_3_step_count(length, 1)) {
  1843  000466  C04F  F02C         	movff	_length,mot_3_step_count@l
  1844  00046A  C050  F02D         	movff	_length+1,mot_3_step_count@l+1
  1845  00046E  0E00               	movlw	0
  1846  000470  6E2F               	movwf	mot_3_step_count@ms+1,c
  1847  000472  0E01               	movlw	1
  1848  000474  6E2E               	movwf	mot_3_step_count@ms,c
  1849  000476  EC82  F003         	call	_mot_3_step_count	;wreg free
  1850  00047A  5007               	movf	_mot_3_steps,w,c
  1851  00047C  182C               	xorwf	?_mot_3_step_count,w,c
  1852  00047E  E16A               	bnz	i2l93
  1853  000480  5008               	movf	_mot_3_steps+1,w,c
  1854  000482  182D               	xorwf	?_mot_3_step_count+1,w,c
  1855  000484  A4D8               	btfss	status,2,c
  1856  000486  D066               	goto	i2l108
  1857                           
  1858                           ;interrupts.c: 113: DIR_3 = !DIR_3;
  1859  000488  5023               	movf	_DIR_3,w,c
  1860  00048A  A4D8               	btfss	status,2,c
  1861  00048C  D002               	goto	i2u75_40
  1862  00048E  0E01               	movlw	1
  1863  000490  D001               	goto	i2u76_40
  1864  000492                     i2u75_40:
  1865  000492  0E00               	movlw	0
  1866  000494                     i2u76_40:
  1867  000494  6E23               	movwf	_DIR_3,c
  1868                           
  1869                           ;interrupts.c: 114: mot_3_steps = 0;
  1870  000496  0E00               	movlw	0
  1871  000498  6E08               	movwf	_mot_3_steps+1,c
  1872  00049A  0E00               	movlw	0
  1873  00049C  6E07               	movwf	_mot_3_steps,c
  1874                           
  1875                           ;interrupts.c: 115: }
  1876                           ;interrupts.c: 116: }
  1877                           ;interrupts.c: 117: }
  1878                           ;interrupts.c: 127: } else if (PIR1bits.TMR1IF) {
  1879  00049E  D05A               	goto	i2l108
  1880  0004A0                     i2l85:
  1881  0004A0  A09E               	btfss	3998,0,c	;volatile
  1882  0004A2  D017               	goto	i2l94
  1883                           
  1884                           ;interrupts.c: 129: if(MOT_3) {
  1885  0004A4  5024               	movf	_MOT_3,w,c
  1886  0004A6  B4D8               	btfsc	status,2,c
  1887  0004A8  D00C               	goto	i2l95
  1888                           
  1889                           ;interrupts.c: 130: LATCbits.LC1 = !PORTCbits.RC1;
  1890  0004AA  B282               	btfsc	3970,1,c	;volatile
  1891  0004AC  D003               	goto	i2u79_40
  1892  0004AE  6A32               	clrf	??_high_isr& (0+255),c
  1893  0004B0  2A32               	incf	??_high_isr& (0+255),f,c
  1894  0004B2  D001               	goto	i2u80_48
  1895  0004B4                     i2u79_40:
  1896  0004B4  6A32               	clrf	??_high_isr& (0+255),c
  1897  0004B6                     i2u80_48:
  1898  0004B6  4632               	rlncf	??_high_isr,f,c
  1899  0004B8  508B               	movf	3979,w,c	;volatile
  1900  0004BA  1832               	xorwf	??_high_isr,w,c
  1901  0004BC  0BFD               	andlw	-3
  1902  0004BE  1832               	xorwf	??_high_isr,w,c
  1903  0004C0  6E8B               	movwf	3979,c	;volatile
  1904  0004C2                     i2l95:
  1905                           
  1906                           ;interrupts.c: 131: }
  1907                           ;interrupts.c: 132: PIR1bits.TMR1IF = 0;
  1908  0004C2  909E               	bcf	3998,0,c	;volatile
  1909                           
  1910                           ;interrupts.c: 134: TMR1 = 0xD8F0;
  1911  0004C4  0ED8               	movlw	216
  1912  0004C6  6ECF               	movwf	4047,c	;volatile
  1913  0004C8  0EF0               	movlw	240
  1914  0004CA  6ECE               	movwf	4046,c	;volatile
  1915                           
  1916                           ;interrupts.c: 135: zero_count++;
  1917  0004CC  4A01               	infsnz	_zero_count,f,c
  1918  0004CE  2A02               	incf	_zero_count+1,f,c
  1919                           
  1920                           ;interrupts.c: 137: } else if (PIR1bits.RCIF) {
  1921  0004D0  D041               	goto	i2l108
  1922  0004D2                     i2l94:
  1923  0004D2  AA9E               	btfss	3998,5,c	;volatile
  1924  0004D4  D016               	goto	i2l97
  1925                           
  1926                           ;interrupts.c: 139: PIR1bits.RCIF = 0;
  1927  0004D6  9A9E               	bcf	3998,5,c	;volatile
  1928                           
  1929                           ;interrupts.c: 140: palabra[n] = RCREG;
  1930  0004D8  0E60               	movlw	low _palabra
  1931  0004DA  2417               	addwf	_n,w,c
  1932  0004DC  6ED9               	movwf	fsr2l,c
  1933  0004DE  0E00               	movlw	high _palabra
  1934  0004E0  2018               	addwfc	_n+1,w,c
  1935  0004E2  6EDA               	movwf	fsr2h,c
  1936  0004E4  CFAE FFDF          	movff	4014,indf2	;volatile
  1937                           
  1938                           ;interrupts.c: 141: n++;
  1939  0004E8  4A17               	infsnz	_n,f,c
  1940  0004EA  2A18               	incf	_n+1,f,c
  1941                           
  1942                           ;interrupts.c: 142: if (RCREG == '\n') {
  1943  0004EC  0E0A               	movlw	10
  1944  0004EE  18AE               	xorwf	4014,w,c	;volatile
  1945  0004F0  A4D8               	btfss	status,2,c
  1946  0004F2  D030               	goto	i2l108
  1947                           
  1948                           ;interrupts.c: 145: recibi = 1;
  1949  0004F4  0E01               	movlw	1
  1950  0004F6  6E1F               	movwf	_recibi,c
  1951                           
  1952                           ;interrupts.c: 146: n = 0;
  1953  0004F8  0E00               	movlw	0
  1954  0004FA  6E18               	movwf	_n+1,c
  1955  0004FC  0E00               	movlw	0
  1956  0004FE  6E17               	movwf	_n,c
  1957                           
  1958                           ;interrupts.c: 147: }
  1959                           ;interrupts.c: 148: } else if (PIR1bits.ADIF) {
  1960  000500  D029               	goto	i2l108
  1961  000502                     i2l97:
  1962  000502  AC9E               	btfss	3998,6,c	;volatile
  1963  000504  D006               	goto	i2l100
  1964                           
  1965                           ;interrupts.c: 150: PIR1bits.ADIF = 0;
  1966  000506  9C9E               	bcf	3998,6,c	;volatile
  1967                           
  1968                           ;interrupts.c: 156: ADC_value_press = ADRES;
  1969  000508  CFC3 F013          	movff	4035,_ADC_value_press	;volatile
  1970  00050C  CFC4 F014          	movff	4036,_ADC_value_press+1	;volatile
  1971                           
  1972                           ;interrupts.c: 158: } else if (INTCON3bits.INT1IF) {
  1973  000510  D021               	goto	i2l108
  1974  000512                     i2l100:
  1975  000512  A0F0               	btfss	intcon3,0,c	;volatile
  1976  000514  D009               	goto	i2l102
  1977                           
  1978                           ;interrupts.c: 160: INTCON3bits.INT1IF = 0;
  1979  000516  90F0               	bcf	intcon3,0,c	;volatile
  1980                           
  1981                           ;interrupts.c: 162: if (busy_flag) {
  1982  000518  5022               	movf	_busy_flag,w,c
  1983  00051A  A4D8               	btfss	status,2,c
  1984  00051C  D00B               	goto	i2u89_40
  1985                           
  1986                           ;interrupts.c: 171: DIR_3 = !DIR_3;
  1987                           
  1988                           ;interrupts.c: 169: } else {
  1989                           
  1990                           ;interrupts.c: 167: MOT_4 = 0;
  1991                           
  1992                           ;interrupts.c: 166: MOT_3 = 0;
  1993                           
  1994                           ;interrupts.c: 165: MOT_2 = 0;
  1995                           
  1996                           ;interrupts.c: 164: MOT_1 = 0;
  1997  00051E  5023               	movf	_DIR_3,w,c
  1998  000520  A4D8               	btfss	status,2,c
  1999  000522  D016               	goto	i2u90_40
  2000  000524  0E01               	movlw	1
  2001  000526  D015               	goto	i2u91_40
  2002  000528                     i2l102:
  2003  000528  A2F0               	btfss	intcon3,1,c	;volatile
  2004  00052A  D014               	goto	i2l108
  2005                           
  2006                           ;interrupts.c: 176: INTCON3bits.INT2IF = 0;
  2007  00052C  92F0               	bcf	intcon3,1,c	;volatile
  2008                           
  2009                           ;interrupts.c: 178: if (busy_flag) {
  2010  00052E  5022               	movf	_busy_flag,w,c
  2011  000530  B4D8               	btfsc	status,2,c
  2012  000532  D009               	goto	i2l107
  2013  000534                     i2u89_40:
  2014                           
  2015                           ;interrupts.c: 180: MOT_1 = 0;
  2016  000534  0E00               	movlw	0
  2017  000536  6E25               	movwf	_MOT_1,c
  2018                           
  2019                           ;interrupts.c: 181: MOT_2 = 0;
  2020  000538  0E00               	movlw	0
  2021  00053A  6E21               	movwf	_MOT_2,c
  2022                           
  2023                           ;interrupts.c: 182: MOT_3 = 0;
  2024  00053C  0E00               	movlw	0
  2025  00053E  6E24               	movwf	_MOT_3,c
  2026                           
  2027                           ;interrupts.c: 183: MOT_4 = 0;
  2028  000540  0E00               	movlw	0
  2029  000542  6E20               	movwf	_MOT_4,c
  2030                           
  2031                           ;interrupts.c: 185: } else {
  2032  000544  D007               	goto	i2l108
  2033  000546                     i2l107:
  2034                           
  2035                           ;interrupts.c: 187: DIR_3 = !DIR_3;
  2036  000546  5023               	movf	_DIR_3,w,c
  2037  000548  A4D8               	btfss	status,2,c
  2038  00054A  D002               	goto	i2u90_40
  2039  00054C  0E01               	movlw	1
  2040  00054E  D001               	goto	i2u91_40
  2041  000550                     i2u90_40:
  2042  000550  0E00               	movlw	0
  2043  000552                     i2u91_40:
  2044  000552  6E23               	movwf	_DIR_3,c
  2045  000554                     i2l108:
  2046  000554                     i2l93:
  2047  000554  C044  F057         	movff	??_high_isr+18,btemp+3
  2048  000558  C043  F056         	movff	??_high_isr+17,btemp+2
  2049  00055C  C042  F055         	movff	??_high_isr+16,btemp+1
  2050  000560  C041  F054         	movff	??_high_isr+15,btemp
  2051  000564  C040  FFF5         	movff	??_high_isr+14,tablat
  2052  000568  C03F  FFF8         	movff	??_high_isr+13,tblptru
  2053  00056C  C03E  FFF7         	movff	??_high_isr+12,tblptrh
  2054  000570  C03D  FFF6         	movff	??_high_isr+11,tblptrl
  2055  000574  C03C  FFF4         	movff	??_high_isr+10,prodh
  2056  000578  C03B  FFF3         	movff	??_high_isr+9,prodl
  2057  00057C  C03A  FFDA         	movff	??_high_isr+8,fsr2h
  2058  000580  C039  FFD9         	movff	??_high_isr+7,fsr2l
  2059  000584  C038  FFE2         	movff	??_high_isr+6,fsr1h
  2060  000588  C037  FFE1         	movff	??_high_isr+5,fsr1l
  2061  00058C  C036  FFEA         	movff	??_high_isr+4,fsr0h
  2062  000590  C035  FFE9         	movff	??_high_isr+3,fsr0l
  2063  000594  C034  FFFB         	movff	??_high_isr+2,pclatu
  2064  000598  C033  FFFA         	movff	??_high_isr+1,pclath
  2065  00059C  9254               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  2066  00059E  0011               	retfie		f
  2067  0005A0                     __end_of_high_isr:
  2068                           	opt stack 0
  2069                           pclatu	equ	0xFFB
  2070                           pclath	equ	0xFFA
  2071                           tblptru	equ	0xFF8
  2072                           tblptrh	equ	0xFF7
  2073                           tblptrl	equ	0xFF6
  2074                           tablat	equ	0xFF5
  2075                           prodh	equ	0xFF4
  2076                           prodl	equ	0xFF3
  2077                           intcon	equ	0xFF2
  2078                           intcon2	equ	0xFF1
  2079                           intcon3	equ	0xFF0
  2080                           postinc0	equ	0xFEE
  2081                           fsr0h	equ	0xFEA
  2082                           fsr0l	equ	0xFE9
  2083                           wreg	equ	0xFE8
  2084                           postdec1	equ	0xFE5
  2085                           fsr1h	equ	0xFE2
  2086                           fsr1l	equ	0xFE1
  2087                           indf2	equ	0xFDF
  2088                           fsr2h	equ	0xFDA
  2089                           fsr2l	equ	0xFD9
  2090                           status	equ	0xFD8
  2091                           
  2092 ;; *************** function _trans_Char *****************
  2093 ;; Defined at:
  2094 ;;		line 197 in file "main.c"
  2095 ;; Parameters:    Size  Location     Type
  2096 ;;  out             1    wreg     unsigned char 
  2097 ;; Auto vars:     Size  Location     Type
  2098 ;;  out             1    0[COMRAM] unsigned char 
  2099 ;; Return value:  Size  Location     Type
  2100 ;;                  1    wreg      void 
  2101 ;; Registers used:
  2102 ;;		wreg
  2103 ;; Tracked objects:
  2104 ;;		On entry : 0/0
  2105 ;;		On exit  : 0/0
  2106 ;;		Unchanged: 0/0
  2107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2108 ;;      Params:         0       0       0       0       0       0       0       0       0
  2109 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2110 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2111 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2112 ;;Total ram usage:        1 bytes
  2113 ;; Hardware stack levels used:    1
  2114 ;; This function calls:
  2115 ;;		Nothing
  2116 ;; This function is called by:
  2117 ;;		_high_isr
  2118 ;;		_send_String
  2119 ;; This function uses a non-reentrant model
  2120 ;;
  2121                           
  2122                           	psect	text6
  2123  000752                     __ptext6:
  2124                           	opt stack 0
  2125  000752                     _trans_Char:
  2126                           	opt stack 28
  2127                           
  2128                           ;incstack = 0
  2129                           ;trans_Char@out stored from wreg
  2130  000752  6E26               	movwf	trans_Char@out,c
  2131  000754                     
  2132                           ;main.c: 198: while (TXIF == 0);
  2133  000754  A89E               	btfss	3998,4,c	;volatile
  2134  000756  D7FE               	goto	i2l1252
  2135                           
  2136                           ;main.c: 199: TXREG = out;
  2137  000758  C026  FFAD         	movff	trans_Char@out,4013	;volatile
  2138  00075C  0012               	return		;funcret
  2139  00075E                     __end_of_trans_Char:
  2140                           	opt stack 0
  2141                           pclatu	equ	0xFFB
  2142                           pclath	equ	0xFFA
  2143                           tblptru	equ	0xFF8
  2144                           tblptrh	equ	0xFF7
  2145                           tblptrl	equ	0xFF6
  2146                           tablat	equ	0xFF5
  2147                           prodh	equ	0xFF4
  2148                           prodl	equ	0xFF3
  2149                           intcon	equ	0xFF2
  2150                           intcon2	equ	0xFF1
  2151                           intcon3	equ	0xFF0
  2152                           postinc0	equ	0xFEE
  2153                           fsr0h	equ	0xFEA
  2154                           fsr0l	equ	0xFE9
  2155                           wreg	equ	0xFE8
  2156                           postdec1	equ	0xFE5
  2157                           fsr1h	equ	0xFE2
  2158                           fsr1l	equ	0xFE1
  2159                           indf2	equ	0xFDF
  2160                           fsr2h	equ	0xFDA
  2161                           fsr2l	equ	0xFD9
  2162                           status	equ	0xFD8
  2163                           
  2164 ;; *************** function _mot_3_step_count *****************
  2165 ;; Defined at:
  2166 ;;		line 209 in file "main.c"
  2167 ;; Parameters:    Size  Location     Type
  2168 ;;  l               2    6[COMRAM] unsigned int 
  2169 ;;  ms              2    8[COMRAM] unsigned int 
  2170 ;; Auto vars:     Size  Location     Type
  2171 ;;		None
  2172 ;; Return value:  Size  Location     Type
  2173 ;;                  2    6[COMRAM] unsigned int 
  2174 ;; Registers used:
  2175 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2176 ;; Tracked objects:
  2177 ;;		On entry : 0/0
  2178 ;;		On exit  : 0/0
  2179 ;;		Unchanged: 0/0
  2180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2181 ;;      Params:         4       0       0       0       0       0       0       0       0
  2182 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2183 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2184 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2185 ;;Total ram usage:        6 bytes
  2186 ;; Hardware stack levels used:    1
  2187 ;; Hardware stack levels required when called:    1
  2188 ;; This function calls:
  2189 ;;		i2___wmul
  2190 ;; This function is called by:
  2191 ;;		_high_isr
  2192 ;; This function uses a non-reentrant model
  2193 ;;
  2194                           
  2195                           	psect	text7
  2196  000704                     __ptext7:
  2197                           	opt stack 0
  2198  000704                     _mot_3_step_count:
  2199                           	opt stack 27
  2200                           
  2201                           ;main.c: 211: return (ms * l) / 2;
  2202                           
  2203                           ;incstack = 0
  2204  000704  C02E  F026         	movff	mot_3_step_count@ms,i2___wmul@multiplier
  2205  000708  C02F  F027         	movff	mot_3_step_count@ms+1,i2___wmul@multiplier+1
  2206  00070C  C02C  F028         	movff	mot_3_step_count@l,i2___wmul@multiplicand
  2207  000710  C02D  F029         	movff	mot_3_step_count@l+1,i2___wmul@multiplicand+1
  2208  000714  EC6F  F003         	call	i2___wmul	;wreg free
  2209  000718  90D8               	bcf	status,0,c
  2210  00071A  3027               	rrcf	?i2___wmul+1,w,c
  2211  00071C  6E30               	movwf	??_mot_3_step_count& (0+255),c
  2212  00071E  3026               	rrcf	?i2___wmul,w,c
  2213  000720  6E2C               	movwf	?_mot_3_step_count,c
  2214  000722  C030  F02D         	movff	??_mot_3_step_count,?_mot_3_step_count+1
  2215  000726  0012               	return	
  2216  000728                     __end_of_mot_3_step_count:
  2217                           	opt stack 0
  2218                           pclatu	equ	0xFFB
  2219                           pclath	equ	0xFFA
  2220                           tblptru	equ	0xFF8
  2221                           tblptrh	equ	0xFF7
  2222                           tblptrl	equ	0xFF6
  2223                           tablat	equ	0xFF5
  2224                           prodh	equ	0xFF4
  2225                           prodl	equ	0xFF3
  2226                           intcon	equ	0xFF2
  2227                           intcon2	equ	0xFF1
  2228                           intcon3	equ	0xFF0
  2229                           postinc0	equ	0xFEE
  2230                           fsr0h	equ	0xFEA
  2231                           fsr0l	equ	0xFE9
  2232                           wreg	equ	0xFE8
  2233                           postdec1	equ	0xFE5
  2234                           fsr1h	equ	0xFE2
  2235                           fsr1l	equ	0xFE1
  2236                           indf2	equ	0xFDF
  2237                           fsr2h	equ	0xFDA
  2238                           fsr2l	equ	0xFD9
  2239                           status	equ	0xFD8
  2240                           
  2241 ;; *************** function i2___wmul *****************
  2242 ;; Defined at:
  2243 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
  2244 ;; Parameters:    Size  Location     Type
  2245 ;;  multiplier      2    0[COMRAM] unsigned int 
  2246 ;;  multiplicand    2    2[COMRAM] unsigned int 
  2247 ;; Auto vars:     Size  Location     Type
  2248 ;;  __wmul          2    4[COMRAM] unsigned int 
  2249 ;; Return value:  Size  Location     Type
  2250 ;;                  2    0[COMRAM] unsigned int 
  2251 ;; Registers used:
  2252 ;;		wreg, status,2, status,0, prodl, prodh
  2253 ;; Tracked objects:
  2254 ;;		On entry : 0/0
  2255 ;;		On exit  : 0/0
  2256 ;;		Unchanged: 0/0
  2257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2258 ;;      Params:         4       0       0       0       0       0       0       0       0
  2259 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2260 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2261 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2262 ;;Total ram usage:        6 bytes
  2263 ;; Hardware stack levels used:    1
  2264 ;; This function calls:
  2265 ;;		Nothing
  2266 ;; This function is called by:
  2267 ;;		_mot_3_step_count
  2268 ;; This function uses a non-reentrant model
  2269 ;;
  2270                           
  2271                           	psect	text8
  2272  0006DE                     __ptext8:
  2273                           	opt stack 0
  2274  0006DE                     i2___wmul:
  2275                           	opt stack 27
  2276                           
  2277                           ;incstack = 0
  2278  0006DE  5026               	movf	i2___wmul@multiplier,w,c
  2279  0006E0  0228               	mulwf	i2___wmul@multiplicand,c
  2280  0006E2  CFF3 F02A          	movff	prodl,i2___wmul@product
  2281  0006E6  CFF4 F02B          	movff	prodh,i2___wmul@product+1
  2282  0006EA  5026               	movf	i2___wmul@multiplier,w,c
  2283  0006EC  0229               	mulwf	i2___wmul@multiplicand+1,c
  2284  0006EE  50F3               	movf	prodl,w,c
  2285  0006F0  262B               	addwf	i2___wmul@product+1,f,c
  2286  0006F2  5027               	movf	i2___wmul@multiplier+1,w,c
  2287  0006F4  0228               	mulwf	i2___wmul@multiplicand,c
  2288  0006F6  50F3               	movf	prodl,w,c
  2289  0006F8  262B               	addwf	i2___wmul@product+1,f,c
  2290  0006FA  C02A  F026         	movff	i2___wmul@product,?i2___wmul
  2291  0006FE  C02B  F027         	movff	i2___wmul@product+1,?i2___wmul+1
  2292  000702  0012               	return	
  2293  000704                     __end_ofi2___wmul:
  2294                           	opt stack 0
  2295  0000                     pclatu	equ	0xFFB
  2296                           pclath	equ	0xFFA
  2297                           tblptru	equ	0xFF8
  2298                           tblptrh	equ	0xFF7
  2299                           tblptrl	equ	0xFF6
  2300                           tablat	equ	0xFF5
  2301                           prodh	equ	0xFF4
  2302                           prodl	equ	0xFF3
  2303                           intcon	equ	0xFF2
  2304                           intcon2	equ	0xFF1
  2305                           intcon3	equ	0xFF0
  2306                           postinc0	equ	0xFEE
  2307                           fsr0h	equ	0xFEA
  2308                           fsr0l	equ	0xFE9
  2309                           wreg	equ	0xFE8
  2310                           postdec1	equ	0xFE5
  2311                           fsr1h	equ	0xFE2
  2312                           fsr1l	equ	0xFE1
  2313                           indf2	equ	0xFDF
  2314                           fsr2h	equ	0xFDA
  2315                           fsr2l	equ	0xFD9
  2316                           status	equ	0xFD8
  2317                           pclatu	equ	0xFFB
  2318                           pclath	equ	0xFFA
  2319                           tblptru	equ	0xFF8
  2320                           tblptrh	equ	0xFF7
  2321                           tblptrl	equ	0xFF6
  2322                           tablat	equ	0xFF5
  2323                           prodh	equ	0xFF4
  2324                           prodl	equ	0xFF3
  2325                           intcon	equ	0xFF2
  2326                           intcon2	equ	0xFF1
  2327                           intcon3	equ	0xFF0
  2328                           postinc0	equ	0xFEE
  2329                           fsr0h	equ	0xFEA
  2330                           fsr0l	equ	0xFE9
  2331                           wreg	equ	0xFE8
  2332                           postdec1	equ	0xFE5
  2333                           fsr1h	equ	0xFE2
  2334                           fsr1l	equ	0xFE1
  2335                           indf2	equ	0xFDF
  2336                           fsr2h	equ	0xFDA
  2337                           fsr2l	equ	0xFD9
  2338                           status	equ	0xFD8
  2339                           
  2340                           	psect	rparam
  2341  0000                     pclatu	equ	0xFFB
  2342                           pclath	equ	0xFFA
  2343                           tblptru	equ	0xFF8
  2344                           tblptrh	equ	0xFF7
  2345                           tblptrl	equ	0xFF6
  2346                           tablat	equ	0xFF5
  2347                           prodh	equ	0xFF4
  2348                           prodl	equ	0xFF3
  2349                           intcon	equ	0xFF2
  2350                           intcon2	equ	0xFF1
  2351                           intcon3	equ	0xFF0
  2352                           postinc0	equ	0xFEE
  2353                           fsr0h	equ	0xFEA
  2354                           fsr0l	equ	0xFE9
  2355                           wreg	equ	0xFE8
  2356                           postdec1	equ	0xFE5
  2357                           fsr1h	equ	0xFE2
  2358                           fsr1l	equ	0xFE1
  2359                           indf2	equ	0xFDF
  2360                           fsr2h	equ	0xFDA
  2361                           fsr2l	equ	0xFD9
  2362                           status	equ	0xFD8
  2363                           
  2364                           	psect	temp
  2365  000054                     btemp:
  2366                           	opt stack 0
  2367  000054                     	ds	1
  2368  0000                     int$flags	set	btemp
  2369  0000                     wtemp6	set	btemp+1
  2370                           pclatu	equ	0xFFB
  2371                           pclath	equ	0xFFA
  2372                           tblptru	equ	0xFF8
  2373                           tblptrh	equ	0xFF7
  2374                           tblptrl	equ	0xFF6
  2375                           tablat	equ	0xFF5
  2376                           prodh	equ	0xFF4
  2377                           prodl	equ	0xFF3
  2378                           intcon	equ	0xFF2
  2379                           intcon2	equ	0xFF1
  2380                           intcon3	equ	0xFF0
  2381                           postinc0	equ	0xFEE
  2382                           fsr0h	equ	0xFEA
  2383                           fsr0l	equ	0xFE9
  2384                           wreg	equ	0xFE8
  2385                           postdec1	equ	0xFE5
  2386                           fsr1h	equ	0xFE2
  2387                           fsr1l	equ	0xFE1
  2388                           indf2	equ	0xFDF
  2389                           fsr2h	equ	0xFDA
  2390                           fsr2l	equ	0xFD9
  2391                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        17
    BSS         74
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     31      83
    BANK0           160      8      47
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    _high_isr->_mot_3_step_count
    _mot_3_step_count->i2___wmul

Critical Paths under _main in BANK0

    _main->___wmul

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    2508
                                              6 BANK0      2     2      0
                _ConfigureOscillator
                            _InitApp
                             ___wmul
                          _zero_mark
 ---------------------------------------------------------------------------------
 (1) _zero_mark                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4    2508
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigureOscillator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _high_isr                                            19    19      0     427
                                             12 COMRAM    19    19      0
                   _mot_3_step_count
                         _trans_Char
 ---------------------------------------------------------------------------------
 (3) _trans_Char                                           1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _mot_3_step_count                                     6     2      4     405
                                              6 COMRAM     6     2      4
                           i2___wmul
 ---------------------------------------------------------------------------------
 (4) i2___wmul                                             6     2      4     209
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfigureOscillator
   _InitApp
   ___wmul
   _zero_mark

 _high_isr (ROOT)
   _mot_3_step_count
     i2___wmul
   _trans_Char

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      8      2F       5       29.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     1F      53       1       88.3%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      82      20        0.0%
DATA                 0      0      82       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sat Aug 17 01:09:49 2019

                           _n 0017           ___wmul@multiplicand 0087                   __CFG_BORV$3 000000  
                __CFG_CP0$OFF 000000                  __CFG_CP1$OFF 000000                  __CFG_CP2$OFF 000000  
                __CFG_CP3$OFF 000000                           l207 030E                           l209 0326  
                         l190 00B6                           l192 0288                           l194 02A0  
                         l196 02EC                           l188 001A                           l197 02BE  
                         l189 033E                           l199 02D0                  __CFG_CPB$OFF 000000  
                         _PR2 000FCB                  __CFG_CPD$OFF 000000                           _RX9 007D5E  
                         _TX9 007D66                  __CFG_BOR$OFF 000000                           wreg 000FE8  
                __CFG_LVP$OFF 000000                  __CFG_WDT$OFF 000000                          _BRGH 007D62  
                        _CREN 007D5C                          u1500 0322                          u1308 0062  
                        u1245 0026                          _LATA 000F89                          u1350 029A  
                        u1246 0028                          _LATB 000F8A                          u1255 0030  
                        _LATC 000F8B                          u1520 0338                          u1360 029C  
                        u1256 0032                          u1265 003A                          u1530 033A  
                        u1290 005E                          u1266 003C                          u1275 0044  
                        u1460 0308                          u1276 0046                          u1285 004E  
                        u1470 030A                          u1286 0050                          u1490 0320  
                        u1557 034A                          _RCIE 007CED                          i2l91 0466  
                        i2l93 0554                          i2l85 04A0                          i2l94 04D2  
                        i2l95 04C2                          i2l88 0412                          i2l97 0502  
                        _TMR0 000FD6                          _TMR1 000FCE                          _SPEN 007D5F  
                        _TXIE 007CEC                          _TXIF 007CF4                          _TXEN 007D65  
                        _SYNC 007D64                          _main 0012                          _send 0074  
                        fsr0h 000FEA                          fsr1h 000FE2                          fsr2h 000FDA  
                        fsr0l 000FE9                          indf2 000FDF                          fsr1l 000FE1  
                        fsr2l 000FD9                          btemp 0054                          prodh 000FF4  
                        prodl 000FF3                          start 000E                 __CFG_IESO$OFF 000000  
               __CFG_MCLRE$ON 000000                  ___param_bank 000000               __end_of_InitApp 065C  
               __CFG_PLLDIV$1 000000                __CFG_CCP2MX$ON 000000                         ?_main 0026  
                       _ADRES 000FC3                         _BRG16 007DC3                         _DIR_1 001D  
                       _DIR_2 001C                         _DIR_3 0023                         _DIR_4 001B  
                       i2l100 0512                         i2l102 0528                         i2l107 0546  
                       i2l108 0554                         _RCREG 000FAE                         _MOT_1 0025  
                       _MOT_2 0021                         _MOT_3 0024                         _MOT_4 0020  
                       _SPBRG 000FAF                         _PORTA 000F80                         _PORTB 000F81  
                       _PORTC 000F82                 __CFG_USBDIV$1 000000                         _TXREG 000FAD  
         _ConfigureOscillator 0746                 __CFG_PWRT$OFF 000000                 __CFG_WRT0$OFF 000000  
               __CFG_WRT1$OFF 000000                 __CFG_WRT2$OFF 000000                 __CFG_WRT3$OFF 000000  
              __CFG_EBTR0$OFF 000000                __CFG_FCMEN$OFF 000000                __CFG_EBTR1$OFF 000000  
              __CFG_EBTR2$OFF 000000                __CFG_EBTR3$OFF 000000                 __CFG_WRTB$OFF 000000  
               __CFG_WRTC$OFF 000000                 __CFG_WRTD$OFF 000000                __CFG_EBTRB$OFF 000000  
                       _speed 007D                         _turns 0051                   _turns_count 0003  
                       pclath 000FFA                         tablat 000FF5              __end_ofi2___wmul 0704  
                       status 000FD8                         wtemp6 0055          ?_ConfigureOscillator 0026  
             __initialization 065C                  __end_of_main 0358                        ??_main 008B  
               __activetblptr 000000                        _ADCON1 000FC1                        _ADCON2 000FC0  
                      _CCPR1L 000FBE                        _GODONE 007E11                        i2l1252 0754  
                      i2l1412 0412                        i2l1428 0466                     ??_InitApp 0085  
       ??_ConfigureOscillator 0085                __CFG_XINST$OFF 000000              __end_of_high_isr 05A0  
   __size_of_mot_3_step_count 0024                        ___wmul 06B6                        _enable 0019  
                      _finish 001A                        _length 004F                        _recibi 001F  
                      clear_0 069A                        clear_1 06A6                        _motor1 008D  
                      _motor2 0083                  __pdataCOMRAM 0045                        tblptrh 000FF7  
                      tblptrl 000FF6                        tblptru 000FF8                    __accesstop 0060  
     __end_of__initialization 06AC               __CFG_PBADEN$OFF 000000                 ___rparam_used 000001  
              __pcstackCOMRAM 0026                  __pidataBANK0 075E                     ?i2___wmul 0026  
               trans_Char@out 0026                    __pbssBANK0 0060                       ?___wmul 0085  
                  ??i2___wmul 002A                       i2u70_41 0424                       i2u71_40 0438  
                     i2u80_48 04B6                       i2u72_48 043A                       i2u90_40 0550  
                     i2u66_40 03E6                       i2u91_40 0552                       i2u75_40 0492  
                     i2u76_40 0494                       i2u67_48 03E8                       i2u79_40 04B4  
                     i2u89_40 0534                     ?_high_isr 0026               __CFG_VREGEN$OFF 000000  
          __size_of_zero_mark 000E                       _InitApp 05A0                       __Hparam 0000  
                     __Lparam 0000              _mot_3_step_count 0704               __size_of___wmul 0028  
                     _caliber 0081               __CFG_STVREN$OFF 000000                       __pcinit 065C  
                     __ramtop 0800                       __ptext0 0012                       __ptext1 0738  
                     __ptext2 06B6                       __ptext3 05A0                       __ptext4 0746  
                     __ptext6 0752                       __ptext7 0704                       __ptext8 06DE  
                   _T0CONbits 000FD5                       _count_1 004D                       _count_2 004B  
                     _count_3 0049                       _count_4 0047                     _T1CONbits 000FCD  
                     _palabra 0060                     _T2CONbits 000FCA              _mot_4_step_count 007B  
                  ??_high_isr 0032                __pintcode_body 0358          end_of_initialization 06AC  
                     int_func 0358           i2___wmul@multiplier 0026                       postdec1 000FE5  
                     postinc0 000FEE                     _PORTAbits 000F80                     _PORTCbits 000F82  
           __end_of_zero_mark 0746                     _TRISAbits 000F92                     _TRISBbits 000F93  
                   _TRISCbits 000F94                    _trans_Char 0752   __end_of_ConfigureOscillator 0752  
                 _CCP1CONbits 000FBD                    _zero_count 0001                __end_of___wmul 06DE  
               __pidataCOMRAM 0728              i2___wmul@product 002A           start_initialization 065C  
           __size_ofi2___wmul 0026                      ??___wmul 0089                   __pdataBANK0 008D  
            __CFG_LPT1OSC$OFF 000000                   __pbssCOMRAM 0001                 __pcstackBANK0 0085  
                 ?_trans_Char 0026      __end_of_mot_3_step_count 0728             __size_of_high_isr 0598  
                    ?_InitApp 0026                     __pintcode 0008                     _busy_flag 0022  
              ___wmul@product 0089                      _LATAbits 000F89                      _LATBbits 000F8A  
                    _LATCbits 000F8B                      _IPR1bits 000F9F                      _PIE1bits 000F9D  
                    _RA0state 001E                      _PIR1bits 000F9E                      _RCONbits 000FD0  
            __CFG_WDTPS$32768 000000           __size_of_trans_Char 000C                    _ADCON0bits 000FC2  
           ___wmul@multiplier 0085                      i2___wmul 06DE                      _PWM_duty 0045  
             _ADC_value_press 0013                     _zero_flag 0053                     _zero_mark 0738  
                 _INTCON2bits 000FF1                   _INTCON3bits 000FF0                     copy_data0 0688  
            __size_of_InitApp 00BC                      __Hrparam 0000                      __Lrparam 0000  
       i2___wmul@multiplicand 0028                      _diameter 007F                    ?_zero_mark 0026  
                    _high_isr 0008                 __size_of_main 0346                   _mot_1_steps 0009  
                 _mot_3_steps 0007                   _mot_4_steps 0005  __size_of_ConfigureOscillator 000C  
                    _overflow 0015                      int$flags 0054            mot_3_step_count@ms 002E  
       __CFG_CPUDIV$OSC1_PLL2 000000                    _INTCONbits 000FF2                  ??_trans_Char 0026  
                 _MOT_1_count 0011                   _MOT_2_count 000F                   _MOT_3_count 000D  
                 _MOT_4_count 000B             ?_mot_3_step_count 002C                      intlevel2 0000  
          ??_mot_3_step_count 0030                    _OSCCONbits 000FD3             mot_3_step_count@l 002C  
          __end_of_trans_Char 075E           __CFG_FOSC$INTOSC_EC 000000                   ??_zero_mark 0085  

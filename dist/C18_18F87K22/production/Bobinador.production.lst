

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Wed Aug 14 10:30:04 2019

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F2550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    17                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    18                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    19                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    20                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    21  0000                     
    22                           ; Version 1.45
    23                           ; Generated 16/11/2017 GMT
    24                           ; 
    25                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC18F2550 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56  0000                     
    57                           	psect	idataCOMRAM
    58  0005CE                     __pidataCOMRAM:
    59                           	opt stack 0
    60                           
    61                           ;initializer for _PWM_duty
    62  0005CE  0032               	dw	50
    63                           
    64                           ;initializer for _motor1
    65  0005D0  0001               	dw	1
    66                           
    67                           	psect	nvCOMRAM
    68  000052                     __pnvCOMRAM:
    69                           	opt stack 0
    70  000052                     _MOT_1:
    71                           	opt stack 0
    72  000052                     	ds	1
    73  0000                     _ADRES	set	4035
    74  0000                     _TMR0	set	4054
    75  0000                     _T2CONbits	set	4042
    76  0000                     _CCP1CONbits	set	4029
    77  0000                     _PR2	set	4043
    78  0000                     _SPBRG	set	4015
    79  0000                     _T0CONbits	set	4053
    80  0000                     _INTCON2bits	set	4081
    81  0000                     _RCONbits	set	4048
    82  0000                     _TRISBbits	set	3987
    83  0000                     _TRISCbits	set	3988
    84  0000                     _PIE1bits	set	3997
    85  0000                     _ADCON2	set	4032
    86  0000                     _TRISAbits	set	3986
    87  0000                     _ADCON1	set	4033
    88  0000                     _LATC	set	3979
    89  0000                     _PORTC	set	3970
    90  0000                     _LATB	set	3978
    91  0000                     _PORTB	set	3969
    92  0000                     _LATA	set	3977
    93  0000                     _PORTA	set	3968
    94  0000                     _OSCCONbits	set	4051
    95  0000                     _CCPR1L	set	4030
    96  0000                     _INTCON3bits	set	4080
    97  0000                     _ADCON0bits	set	4034
    98  0000                     _TXREG	set	4013
    99  0000                     _RCREG	set	4014
   100  0000                     _PIR1bits	set	3998
   101  0000                     _PORTBbits	set	3969
   102  0000                     _LATBbits	set	3978
   103  0000                     _PORTCbits	set	3970
   104  0000                     _LATCbits	set	3979
   105  0000                     _PORTAbits	set	3968
   106  0000                     _LATAbits	set	3977
   107  0000                     _INTCONbits	set	4082
   108  0000                     _TXIE	set	31980
   109  0000                     _RCIE	set	31981
   110  0000                     _RX9	set	32094
   111  0000                     _TX9	set	32102
   112  0000                     _CREN	set	32092
   113  0000                     _TXEN	set	32101
   114  0000                     _SYNC	set	32100
   115  0000                     _SPEN	set	32095
   116  0000                     _BRG16	set	32195
   117  0000                     _BRGH	set	32098
   118  0000                     _GODONE	set	32273
   119  0000                     _TXIF	set	31988
   120                           
   121                           ; #config settings
   122  0000                     
   123                           	psect	cinit
   124  000564                     __pcinit:
   125                           	opt stack 0
   126  000564                     start_initialization:
   127                           	opt stack 0
   128  000564                     __initialization:
   129                           	opt stack 0
   130                           
   131                           ; Initialize objects allocated to COMRAM (4 bytes)
   132                           ; load TBLPTR registers with __pidataCOMRAM
   133  000564  0ECE               	movlw	low __pidataCOMRAM
   134  000566  6EF6               	movwf	tblptrl,c
   135  000568  0E05               	movlw	high __pidataCOMRAM
   136  00056A  6EF7               	movwf	tblptrh,c
   137  00056C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   138  00056E  6EF8               	movwf	tblptru,c
   139  000570  EE00  F04E         	lfsr	0,__pdataCOMRAM
   140  000574  EE10 F004          	lfsr	1,4
   141  000578                     copy_data0:
   142  000578  0009               	tblrd		*+
   143  00057A  CFF5 FFEE          	movff	tablat,postinc0
   144  00057E  50E5               	movf	postdec1,w,c
   145  000580  50E1               	movf	fsr1l,w,c
   146  000582  E1FA               	bnz	copy_data0
   147                           
   148                           ; Clear objects allocated to COMRAM (58 bytes)
   149  000584  EE00  F001         	lfsr	0,__pbssCOMRAM
   150  000588  0E3A               	movlw	58
   151  00058A                     clear_0:
   152  00058A  6AEE               	clrf	postinc0,c
   153  00058C  06E8               	decf	wreg,f,c
   154  00058E  E1FD               	bnz	clear_0
   155  000590                     end_of_initialization:
   156                           	opt stack 0
   157  000590                     __end_of__initialization:
   158                           	opt stack 0
   159  000590  9053               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   160  000592  9253               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   161  000594  0100               	movlb	0
   162  000596  EF09  F000         	goto	_main	;jump to C main() function
   163                           tblptru	equ	0xFF8
   164                           tblptrh	equ	0xFF7
   165                           tblptrl	equ	0xFF6
   166                           tablat	equ	0xFF5
   167                           postinc0	equ	0xFEE
   168                           wreg	equ	0xFE8
   169                           postdec1	equ	0xFE5
   170                           fsr1l	equ	0xFE1
   171                           
   172                           	psect	bssCOMRAM
   173  000001                     __pbssCOMRAM:
   174                           	opt stack 0
   175  000001                     _palabra:
   176                           	opt stack 0
   177  000001                     	ds	20
   178  000015                     _speed:
   179                           	opt stack 0
   180  000015                     	ds	2
   181  000017                     _turns:
   182                           	opt stack 0
   183  000017                     	ds	2
   184  000019                     _length:
   185                           	opt stack 0
   186  000019                     	ds	2
   187  00001B                     _diameter:
   188                           	opt stack 0
   189  00001B                     	ds	2
   190  00001D                     _caliber:
   191                           	opt stack 0
   192  00001D                     	ds	2
   193  00001F                     _motor2:
   194                           	opt stack 0
   195  00001F                     	ds	2
   196  000021                     _MOT_4_count:
   197                           	opt stack 0
   198  000021                     	ds	2
   199  000023                     _MOT_3_count:
   200                           	opt stack 0
   201  000023                     	ds	2
   202  000025                     _MOT_2_count:
   203                           	opt stack 0
   204  000025                     	ds	2
   205  000027                     _MOT_1_count:
   206                           	opt stack 0
   207  000027                     	ds	2
   208  000029                     _ADC_value_dist:
   209                           	opt stack 0
   210  000029                     	ds	2
   211  00002B                     _ADC_value_press:
   212                           	opt stack 0
   213  00002B                     	ds	2
   214  00002D                     _overflow:
   215                           	opt stack 0
   216  00002D                     	ds	2
   217  00002F                     _n:
   218                           	opt stack 0
   219  00002F                     	ds	2
   220  000031                     _busy_flag:
   221                           	opt stack 0
   222  000031                     	ds	1
   223  000032                     _DIR_4:
   224                           	opt stack 0
   225  000032                     	ds	1
   226  000033                     _DIR_3:
   227                           	opt stack 0
   228  000033                     	ds	1
   229  000034                     _DIR_2:
   230                           	opt stack 0
   231  000034                     	ds	1
   232  000035                     _DIR_1:
   233                           	opt stack 0
   234  000035                     	ds	1
   235  000036                     _RA0state:
   236                           	opt stack 0
   237  000036                     	ds	1
   238  000037                     _recibi:
   239                           	opt stack 0
   240  000037                     	ds	1
   241  000038                     _MOT_4:
   242                           	opt stack 0
   243  000038                     	ds	1
   244  000039                     _MOT_3:
   245                           	opt stack 0
   246  000039                     	ds	1
   247  00003A                     _MOT_2:
   248                           	opt stack 0
   249  00003A                     	ds	1
   250                           tblptru	equ	0xFF8
   251                           tblptrh	equ	0xFF7
   252                           tblptrl	equ	0xFF6
   253                           tablat	equ	0xFF5
   254                           postinc0	equ	0xFEE
   255                           wreg	equ	0xFE8
   256                           postdec1	equ	0xFE5
   257                           fsr1l	equ	0xFE1
   258                           
   259                           	psect	dataCOMRAM
   260  00004E                     __pdataCOMRAM:
   261                           	opt stack 0
   262  00004E                     _PWM_duty:
   263                           	opt stack 0
   264  00004E                     	ds	2
   265  000050                     _motor1:
   266                           	opt stack 0
   267  000050                     	ds	2
   268                           tblptru	equ	0xFF8
   269                           tblptrh	equ	0xFF7
   270                           tblptrl	equ	0xFF6
   271                           tablat	equ	0xFF5
   272                           postinc0	equ	0xFEE
   273                           wreg	equ	0xFE8
   274                           postdec1	equ	0xFE5
   275                           fsr1l	equ	0xFE1
   276                           
   277                           	psect	cstackBANK0
   278  000060                     __pcstackBANK0:
   279                           	opt stack 0
   280  000060                     ?___wmul:
   281                           	opt stack 0
   282  000060                     ___wmul@multiplier:
   283                           	opt stack 0
   284                           
   285                           ; 2 bytes @ 0x0
   286  000060                     	ds	2
   287  000062                     ___wmul@multiplicand:
   288                           	opt stack 0
   289                           
   290                           ; 2 bytes @ 0x2
   291  000062                     	ds	2
   292  000064                     ___wmul@product:
   293                           	opt stack 0
   294                           
   295                           ; 2 bytes @ 0x4
   296  000064                     	ds	2
   297  000066                     ??_main:
   298                           
   299                           ; 1 bytes @ 0x6
   300  000066                     	ds	2
   301                           tblptru	equ	0xFF8
   302                           tblptrh	equ	0xFF7
   303                           tblptrl	equ	0xFF6
   304                           tablat	equ	0xFF5
   305                           postinc0	equ	0xFEE
   306                           wreg	equ	0xFE8
   307                           postdec1	equ	0xFE5
   308                           fsr1l	equ	0xFE1
   309                           
   310                           	psect	cstackCOMRAM
   311  00003B                     __pcstackCOMRAM:
   312                           	opt stack 0
   313  00003B                     ??_high_isr:
   314  00003B                     
   315                           ; 1 bytes @ 0x0
   316  00003B                     	ds	19
   317                           tblptru	equ	0xFF8
   318                           tblptrh	equ	0xFF7
   319                           tblptrl	equ	0xFF6
   320                           tablat	equ	0xFF5
   321                           postinc0	equ	0xFEE
   322                           wreg	equ	0xFE8
   323                           postdec1	equ	0xFE5
   324                           fsr1l	equ	0xFE1
   325                           
   326 ;;
   327 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   328 ;;
   329 ;; *************** function _main *****************
   330 ;; Defined at:
   331 ;;		line 61 in file "main.c"
   332 ;; Parameters:    Size  Location     Type
   333 ;;		None
   334 ;; Auto vars:     Size  Location     Type
   335 ;;		None
   336 ;; Return value:  Size  Location     Type
   337 ;;                  1    wreg      void 
   338 ;; Registers used:
   339 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   340 ;; Tracked objects:
   341 ;;		On entry : 0/0
   342 ;;		On exit  : 0/0
   343 ;;		Unchanged: 0/0
   344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   345 ;;      Params:         0       0       0       0       0       0       0       0       0
   346 ;;      Locals:         0       0       0       0       0       0       0       0       0
   347 ;;      Temps:          0       2       0       0       0       0       0       0       0
   348 ;;      Totals:         0       2       0       0       0       0       0       0       0
   349 ;;Total ram usage:        2 bytes
   350 ;; Hardware stack levels required when called:    2
   351 ;; This function calls:
   352 ;;		_ConfigureOscillator
   353 ;;		_InitApp
   354 ;;		___wmul
   355 ;; This function is called by:
   356 ;;		Startup code after reset
   357 ;; This function uses a non-reentrant model
   358 ;;
   359                           
   360                           	psect	text0
   361  000012                     __ptext0:
   362                           	opt stack 0
   363  000012                     _main:
   364                           	opt stack 29
   365                           
   366                           ;main.c: 63: ConfigureOscillator();
   367                           
   368                           ;incstack = 0
   369  000012  ECE1  F002         	call	_ConfigureOscillator	;wreg free
   370                           
   371                           ;main.c: 66: InitApp();
   372  000016  EC61  F002         	call	_InitApp	;wreg free
   373  00001A                     
   374                           ;main.c: 70: MOT_1 = 1;
   375  00001A  0E01               	movlw	1
   376  00001C  6E52               	movwf	_MOT_1,c
   377                           
   378                           ;main.c: 71: CCPR1L = PWM_duty;
   379  00001E  C04E  FFBE         	movff	_PWM_duty,4030	;volatile
   380                           
   381                           ;main.c: 73: LATAbits.LA2 = DIR_1;
   382  000022  B035               	btfsc	_DIR_1,0,c
   383  000024  D002               	bra	u775
   384  000026  9489               	bcf	3977,2,c	;volatile
   385  000028  D001               	bra	u776
   386  00002A                     u775:
   387  00002A  8489               	bsf	3977,2,c	;volatile
   388  00002C                     u776:
   389                           
   390                           ;main.c: 74: LATAbits.LA4 = DIR_2;
   391  00002C  B034               	btfsc	_DIR_2,0,c
   392  00002E  D002               	bra	u785
   393  000030  9889               	bcf	3977,4,c	;volatile
   394  000032  D001               	bra	u786
   395  000034                     u785:
   396  000034  8889               	bsf	3977,4,c	;volatile
   397  000036                     u786:
   398                           
   399                           ;main.c: 75: LATCbits.LC0 = DIR_3;
   400  000036  B033               	btfsc	_DIR_3,0,c
   401  000038  D002               	bra	u795
   402  00003A  908B               	bcf	3979,0,c	;volatile
   403  00003C  D001               	bra	u796
   404  00003E                     u795:
   405  00003E  808B               	bsf	3979,0,c	;volatile
   406  000040                     u796:
   407                           
   408                           ;main.c: 76: LATBbits.LB7 = DIR_4;
   409  000040  B032               	btfsc	_DIR_4,0,c
   410  000042  D002               	bra	u805
   411  000044  9E8A               	bcf	3978,7,c	;volatile
   412  000046  D001               	bra	u806
   413  000048                     u805:
   414  000048  8E8A               	bsf	3978,7,c	;volatile
   415  00004A                     u806:
   416                           
   417                           ;main.c: 83: if (recibi == 1) {
   418  00004A  0437               	decf	_recibi,w,c
   419  00004C  A4D8               	btfss	status,2,c
   420  00004E  D11F               	goto	l149
   421                           
   422                           ;main.c: 85: recibi = 0;
   423  000050  0E00               	movlw	0
   424  000052  6E37               	movwf	_recibi,c
   425                           
   426                           ;main.c: 87: if (palabra[0] == 'B') {
   427  000054  0E42               	movlw	66
   428  000056  1801               	xorwf	_palabra,w,c
   429  000058  A4D8               	btfss	status,2,c
   430  00005A  D01C               	goto	l150
   431                           
   432                           ;main.c: 90: PWM_duty = ((palabra[1] - 48) * 10) + ((palabra[2] - 48));
   433  00005C  0ED0               	movlw	208
   434  00005E  2402               	addwf	_palabra+1,w,c
   435  000060  0100               	movlb	0	; () banked
   436  000062  6F60               	movwf	___wmul@multiplier& (0+255),b
   437  000064  6B61               	clrf	(___wmul@multiplier+1)& (0+255),b
   438  000066  0EFF               	movlw	255
   439  000068  2361               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   440  00006A  0E00               	movlw	0
   441  00006C  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
   442  00006E  0E0A               	movlw	10
   443  000070  6F62               	movwf	___wmul@multiplicand& (0+255),b
   444  000072  ECCD  F002         	call	___wmul	;wreg free
   445  000076  5003               	movf	_palabra+2,w,c
   446  000078  0100               	movlb	0	; () banked
   447  00007A  6F66               	movwf	??_main& (0+255),b
   448  00007C  6B67               	clrf	(??_main+1)& (0+255),b
   449  00007E  5160               	movf	?___wmul& (0+255),w,b
   450  000080  2766               	addwf	??_main& (0+255),f,b
   451  000082  5161               	movf	(?___wmul+1)& (0+255),w,b
   452  000084  2367               	addwfc	(??_main+1)& (0+255),f,b
   453  000086  0ED0               	movlw	208
   454  000088  2566               	addwf	??_main& (0+255),w,b
   455  00008A  6E4E               	movwf	_PWM_duty,c
   456  00008C  0EFF               	movlw	255
   457  00008E  2167               	addwfc	(??_main+1)& (0+255),w,b
   458  000090  6E4F               	movwf	_PWM_duty+1,c
   459                           
   460                           ;main.c: 91: } else if (palabra[0] == 'A') {
   461  000092  D7C3               	goto	l148
   462  000094                     l150:
   463                           
   464                           ; BSR set to: 0
   465  000094  0E41               	movlw	65
   466  000096  1801               	xorwf	_palabra,w,c
   467  000098  A4D8               	btfss	status,2,c
   468  00009A  D0E6               	goto	l152
   469                           
   470                           ;main.c: 93: caliber = ((palabra[1] - 48) * 10) + ((palabra[2] - 48));
   471  00009C  0ED0               	movlw	208
   472  00009E  2402               	addwf	_palabra+1,w,c
   473  0000A0  0100               	movlb	0	; () banked
   474  0000A2  6F60               	movwf	___wmul@multiplier& (0+255),b
   475  0000A4  6B61               	clrf	(___wmul@multiplier+1)& (0+255),b
   476  0000A6  0EFF               	movlw	255
   477  0000A8  2361               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   478  0000AA  0E00               	movlw	0
   479  0000AC  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
   480  0000AE  0E0A               	movlw	10
   481  0000B0  6F62               	movwf	___wmul@multiplicand& (0+255),b
   482  0000B2  ECCD  F002         	call	___wmul	;wreg free
   483  0000B6  5003               	movf	_palabra+2,w,c
   484  0000B8  0100               	movlb	0	; () banked
   485  0000BA  6F66               	movwf	??_main& (0+255),b
   486  0000BC  6B67               	clrf	(??_main+1)& (0+255),b
   487  0000BE  5160               	movf	?___wmul& (0+255),w,b
   488  0000C0  2766               	addwf	??_main& (0+255),f,b
   489  0000C2  5161               	movf	(?___wmul+1)& (0+255),w,b
   490  0000C4  2367               	addwfc	(??_main+1)& (0+255),f,b
   491  0000C6  0ED0               	movlw	208
   492  0000C8  2566               	addwf	??_main& (0+255),w,b
   493  0000CA  6E1D               	movwf	_caliber,c
   494  0000CC  0EFF               	movlw	255
   495  0000CE  2167               	addwfc	(??_main+1)& (0+255),w,b
   496  0000D0  6E1E               	movwf	_caliber+1,c
   497                           
   498                           ;main.c: 94: diameter = ((palabra[3] - 48) * 1000) + ((palabra[4] - 48) * 100) + ((palab
      +                          ra[5] - 48) * 10) + ((palabra[6] - 48));
   499  0000D2  0ED0               	movlw	208
   500  0000D4  2404               	addwf	_palabra+3,w,c
   501  0000D6  6F60               	movwf	___wmul@multiplier& (0+255),b
   502  0000D8  6B61               	clrf	(___wmul@multiplier+1)& (0+255),b
   503  0000DA  0EFF               	movlw	255
   504  0000DC  2361               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   505  0000DE  0E03               	movlw	3
   506  0000E0  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
   507  0000E2  0EE8               	movlw	232
   508  0000E4  6F62               	movwf	___wmul@multiplicand& (0+255),b
   509  0000E6  ECCD  F002         	call	___wmul	;wreg free
   510  0000EA  5007               	movf	_palabra+6,w,c
   511  0000EC  0100               	movlb	0	; () banked
   512  0000EE  6F66               	movwf	??_main& (0+255),b
   513  0000F0  6B67               	clrf	(??_main+1)& (0+255),b
   514  0000F2  5160               	movf	?___wmul& (0+255),w,b
   515  0000F4  2766               	addwf	??_main& (0+255),f,b
   516  0000F6  5161               	movf	(?___wmul+1)& (0+255),w,b
   517  0000F8  2367               	addwfc	(??_main+1)& (0+255),f,b
   518  0000FA  0ED0               	movlw	208
   519  0000FC  2405               	addwf	_palabra+4,w,c
   520  0000FE  6F60               	movwf	___wmul@multiplier& (0+255),b
   521  000100  6B61               	clrf	(___wmul@multiplier+1)& (0+255),b
   522  000102  0EFF               	movlw	255
   523  000104  2361               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   524  000106  0E00               	movlw	0
   525  000108  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
   526  00010A  0E64               	movlw	100
   527  00010C  6F62               	movwf	___wmul@multiplicand& (0+255),b
   528  00010E  ECCD  F002         	call	___wmul	;wreg free
   529  000112  0100               	movlb	0	; () banked
   530  000114  5160               	movf	?___wmul& (0+255),w,b
   531  000116  2766               	addwf	??_main& (0+255),f,b
   532  000118  5161               	movf	(?___wmul+1)& (0+255),w,b
   533  00011A  2367               	addwfc	(??_main+1)& (0+255),f,b
   534  00011C  0ED0               	movlw	208
   535  00011E  2406               	addwf	_palabra+5,w,c
   536  000120  6F60               	movwf	___wmul@multiplier& (0+255),b
   537  000122  6B61               	clrf	(___wmul@multiplier+1)& (0+255),b
   538  000124  0EFF               	movlw	255
   539  000126  2361               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   540  000128  0E00               	movlw	0
   541  00012A  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
   542  00012C  0E0A               	movlw	10
   543  00012E  6F62               	movwf	___wmul@multiplicand& (0+255),b
   544  000130  ECCD  F002         	call	___wmul	;wreg free
   545  000134  0100               	movlb	0	; () banked
   546  000136  5160               	movf	?___wmul& (0+255),w,b
   547  000138  2766               	addwf	??_main& (0+255),f,b
   548  00013A  5161               	movf	(?___wmul+1)& (0+255),w,b
   549  00013C  2367               	addwfc	(??_main+1)& (0+255),f,b
   550  00013E  0ED0               	movlw	208
   551  000140  2566               	addwf	??_main& (0+255),w,b
   552  000142  6E1B               	movwf	_diameter,c
   553  000144  0EFF               	movlw	255
   554  000146  2167               	addwfc	(??_main+1)& (0+255),w,b
   555  000148  6E1C               	movwf	_diameter+1,c
   556                           
   557                           ;main.c: 95: length = ((palabra[7] - 48) * 10000) + ((palabra[8] - 48) * 1000) + ((palab
      +                          ra[9] - 48) * 100) + ((palabra[10] - 48) * 10) + ((palabra[11] - 48));
   558  00014A  0ED0               	movlw	208
   559  00014C  2408               	addwf	_palabra+7,w,c
   560  00014E  6F60               	movwf	___wmul@multiplier& (0+255),b
   561  000150  6B61               	clrf	(___wmul@multiplier+1)& (0+255),b
   562  000152  0EFF               	movlw	255
   563  000154  2361               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   564  000156  0E27               	movlw	39
   565  000158  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
   566  00015A  0E10               	movlw	16
   567  00015C  6F62               	movwf	___wmul@multiplicand& (0+255),b
   568  00015E  ECCD  F002         	call	___wmul	;wreg free
   569  000162  500C               	movf	_palabra+11,w,c
   570  000164  0100               	movlb	0	; () banked
   571  000166  6F66               	movwf	??_main& (0+255),b
   572  000168  6B67               	clrf	(??_main+1)& (0+255),b
   573  00016A  5160               	movf	?___wmul& (0+255),w,b
   574  00016C  2766               	addwf	??_main& (0+255),f,b
   575  00016E  5161               	movf	(?___wmul+1)& (0+255),w,b
   576  000170  2367               	addwfc	(??_main+1)& (0+255),f,b
   577  000172  0ED0               	movlw	208
   578  000174  2409               	addwf	_palabra+8,w,c
   579  000176  6F60               	movwf	___wmul@multiplier& (0+255),b
   580  000178  6B61               	clrf	(___wmul@multiplier+1)& (0+255),b
   581  00017A  0EFF               	movlw	255
   582  00017C  2361               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   583  00017E  0E03               	movlw	3
   584  000180  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
   585  000182  0EE8               	movlw	232
   586  000184  6F62               	movwf	___wmul@multiplicand& (0+255),b
   587  000186  ECCD  F002         	call	___wmul	;wreg free
   588  00018A  0100               	movlb	0	; () banked
   589  00018C  5160               	movf	?___wmul& (0+255),w,b
   590  00018E  2766               	addwf	??_main& (0+255),f,b
   591  000190  5161               	movf	(?___wmul+1)& (0+255),w,b
   592  000192  2367               	addwfc	(??_main+1)& (0+255),f,b
   593  000194  0ED0               	movlw	208
   594  000196  240A               	addwf	_palabra+9,w,c
   595  000198  6F60               	movwf	___wmul@multiplier& (0+255),b
   596  00019A  6B61               	clrf	(___wmul@multiplier+1)& (0+255),b
   597  00019C  0EFF               	movlw	255
   598  00019E  2361               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   599  0001A0  0E00               	movlw	0
   600  0001A2  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
   601  0001A4  0E64               	movlw	100
   602  0001A6  6F62               	movwf	___wmul@multiplicand& (0+255),b
   603  0001A8  ECCD  F002         	call	___wmul	;wreg free
   604  0001AC  0100               	movlb	0	; () banked
   605  0001AE  5160               	movf	?___wmul& (0+255),w,b
   606  0001B0  2766               	addwf	??_main& (0+255),f,b
   607  0001B2  5161               	movf	(?___wmul+1)& (0+255),w,b
   608  0001B4  2367               	addwfc	(??_main+1)& (0+255),f,b
   609  0001B6  0ED0               	movlw	208
   610  0001B8  240B               	addwf	_palabra+10,w,c
   611  0001BA  6F60               	movwf	___wmul@multiplier& (0+255),b
   612  0001BC  6B61               	clrf	(___wmul@multiplier+1)& (0+255),b
   613  0001BE  0EFF               	movlw	255
   614  0001C0  2361               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   615  0001C2  0E00               	movlw	0
   616  0001C4  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
   617  0001C6  0E0A               	movlw	10
   618  0001C8  6F62               	movwf	___wmul@multiplicand& (0+255),b
   619  0001CA  ECCD  F002         	call	___wmul	;wreg free
   620  0001CE  0100               	movlb	0	; () banked
   621  0001D0  5160               	movf	?___wmul& (0+255),w,b
   622  0001D2  2766               	addwf	??_main& (0+255),f,b
   623  0001D4  5161               	movf	(?___wmul+1)& (0+255),w,b
   624  0001D6  2367               	addwfc	(??_main+1)& (0+255),f,b
   625  0001D8  0ED0               	movlw	208
   626  0001DA  2566               	addwf	??_main& (0+255),w,b
   627  0001DC  6E19               	movwf	_length,c
   628  0001DE  0EFF               	movlw	255
   629  0001E0  2167               	addwfc	(??_main+1)& (0+255),w,b
   630  0001E2  6E1A               	movwf	_length+1,c
   631                           
   632                           ;main.c: 96: turns = ((palabra[12] - 48) * 1000) + ((palabra[13] - 48) * 100) + ((palabr
      +                          a[14] - 48) * 10) + ((palabra[15] - 48));
   633  0001E4  0ED0               	movlw	208
   634  0001E6  240D               	addwf	_palabra+12,w,c
   635  0001E8  6F60               	movwf	___wmul@multiplier& (0+255),b
   636  0001EA  6B61               	clrf	(___wmul@multiplier+1)& (0+255),b
   637  0001EC  0EFF               	movlw	255
   638  0001EE  2361               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   639  0001F0  0E03               	movlw	3
   640  0001F2  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
   641  0001F4  0EE8               	movlw	232
   642  0001F6  6F62               	movwf	___wmul@multiplicand& (0+255),b
   643  0001F8  ECCD  F002         	call	___wmul	;wreg free
   644  0001FC  5010               	movf	_palabra+15,w,c
   645  0001FE  0100               	movlb	0	; () banked
   646  000200  6F66               	movwf	??_main& (0+255),b
   647  000202  6B67               	clrf	(??_main+1)& (0+255),b
   648  000204  5160               	movf	?___wmul& (0+255),w,b
   649  000206  2766               	addwf	??_main& (0+255),f,b
   650  000208  5161               	movf	(?___wmul+1)& (0+255),w,b
   651  00020A  2367               	addwfc	(??_main+1)& (0+255),f,b
   652  00020C  0ED0               	movlw	208
   653  00020E  240E               	addwf	_palabra+13,w,c
   654  000210  6F60               	movwf	___wmul@multiplier& (0+255),b
   655  000212  6B61               	clrf	(___wmul@multiplier+1)& (0+255),b
   656  000214  0EFF               	movlw	255
   657  000216  2361               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   658  000218  0E00               	movlw	0
   659  00021A  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
   660  00021C  0E64               	movlw	100
   661  00021E  6F62               	movwf	___wmul@multiplicand& (0+255),b
   662  000220  ECCD  F002         	call	___wmul	;wreg free
   663  000224  0100               	movlb	0	; () banked
   664  000226  5160               	movf	?___wmul& (0+255),w,b
   665  000228  2766               	addwf	??_main& (0+255),f,b
   666  00022A  5161               	movf	(?___wmul+1)& (0+255),w,b
   667  00022C  2367               	addwfc	(??_main+1)& (0+255),f,b
   668  00022E  0ED0               	movlw	208
   669  000230  240F               	addwf	_palabra+14,w,c
   670  000232  6F60               	movwf	___wmul@multiplier& (0+255),b
   671  000234  6B61               	clrf	(___wmul@multiplier+1)& (0+255),b
   672  000236  0EFF               	movlw	255
   673  000238  2361               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   674  00023A  0E00               	movlw	0
   675  00023C  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
   676  00023E  0E0A               	movlw	10
   677  000240  6F62               	movwf	___wmul@multiplicand& (0+255),b
   678  000242  ECCD  F002         	call	___wmul	;wreg free
   679  000246  0100               	movlb	0	; () banked
   680  000248  5160               	movf	?___wmul& (0+255),w,b
   681  00024A  2766               	addwf	??_main& (0+255),f,b
   682  00024C  5161               	movf	(?___wmul+1)& (0+255),w,b
   683  00024E  2367               	addwfc	(??_main+1)& (0+255),f,b
   684  000250  0ED0               	movlw	208
   685  000252  2566               	addwf	??_main& (0+255),w,b
   686  000254  6E17               	movwf	_turns,c
   687  000256  0EFF               	movlw	255
   688  000258  2167               	addwfc	(??_main+1)& (0+255),w,b
   689  00025A  6E18               	movwf	_turns+1,c
   690                           
   691                           ; BSR set to: 0
   692                           ;main.c: 97: speed = palabra[15];
   693  00025C  C010  F015         	movff	_palabra+15,_speed
   694  000260  6A16               	clrf	_speed+1,c
   695                           
   696                           ; BSR set to: 0
   697                           ;main.c: 99: busy_flag = 1;
   698  000262  0E01               	movlw	1
   699  000264  6E31               	movwf	_busy_flag,c
   700                           
   701                           ;main.c: 100: } else if (palabra[0] == 'D') {
   702  000266  D6D9               	goto	l148
   703  000268                     l152:
   704                           
   705                           ; BSR set to: 0
   706  000268  0E44               	movlw	68
   707  00026A  1801               	xorwf	_palabra,w,c
   708  00026C  A4D8               	btfss	status,2,c
   709  00026E  D6D5               	goto	l148
   710                           
   711                           ;main.c: 102: if (palabra[1] == '0') {
   712  000270  0E30               	movlw	48
   713  000272  1802               	xorwf	_palabra+1,w,c
   714  000274  A4D8               	btfss	status,2,c
   715  000276  D002               	goto	l155
   716                           
   717                           ;main.c: 104: DIR_3 = 0;
   718  000278  0E00               	movlw	0
   719  00027A  D005               	goto	L1
   720  00027C                     l155:
   721  00027C  0E31               	movlw	49
   722  00027E  1802               	xorwf	_palabra+1,w,c
   723  000280  A4D8               	btfss	status,2,c
   724  000282  D6CB               	goto	l148
   725                           
   726                           ;main.c: 108: DIR_3 = 1;
   727  000284  0E01               	movlw	1
   728  000286                     L1:
   729  000286  6E33               	movwf	_DIR_3,c
   730                           
   731                           ;main.c: 109: MOT_3 = 1;
   732  000288  0E01               	movlw	1
   733  00028A  6E39               	movwf	_MOT_3,c
   734                           
   735                           ;main.c: 114: }
   736                           ;main.c: 116: }
   737                           ;main.c: 119: } else if (GODONE == 0) {
   738                           
   739                           ;main.c: 111: } else if (palabra[1] == '2') {
   740  00028C  D6C6               	goto	l148
   741  00028E                     l149:
   742  00028E  B2C2               	btfsc	4034,1,c	;volatile
   743  000290  D6C4               	goto	l148
   744                           
   745                           ;main.c: 121: GODONE = 1;
   746  000292  82C2               	bsf	4034,1,c	;volatile
   747  000294  D6C2               	goto	l148
   748  000296                     __end_of_main:
   749                           	opt stack 0
   750                           tblptru	equ	0xFF8
   751                           tblptrh	equ	0xFF7
   752                           tblptrl	equ	0xFF6
   753                           tablat	equ	0xFF5
   754                           postinc0	equ	0xFEE
   755                           wreg	equ	0xFE8
   756                           postdec1	equ	0xFE5
   757                           fsr1l	equ	0xFE1
   758                           status	equ	0xFD8
   759                           
   760 ;; *************** function ___wmul *****************
   761 ;; Defined at:
   762 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
   763 ;; Parameters:    Size  Location     Type
   764 ;;  multiplier      2    0[BANK0 ] unsigned int 
   765 ;;  multiplicand    2    2[BANK0 ] unsigned int 
   766 ;; Auto vars:     Size  Location     Type
   767 ;;  product         2    4[BANK0 ] unsigned int 
   768 ;; Return value:  Size  Location     Type
   769 ;;                  2    0[BANK0 ] unsigned int 
   770 ;; Registers used:
   771 ;;		wreg, status,2, status,0, prodl, prodh
   772 ;; Tracked objects:
   773 ;;		On entry : 0/0
   774 ;;		On exit  : 0/0
   775 ;;		Unchanged: 0/0
   776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   777 ;;      Params:         0       4       0       0       0       0       0       0       0
   778 ;;      Locals:         0       2       0       0       0       0       0       0       0
   779 ;;      Temps:          0       0       0       0       0       0       0       0       0
   780 ;;      Totals:         0       6       0       0       0       0       0       0       0
   781 ;;Total ram usage:        6 bytes
   782 ;; Hardware stack levels used:    1
   783 ;; Hardware stack levels required when called:    1
   784 ;; This function calls:
   785 ;;		Nothing
   786 ;; This function is called by:
   787 ;;		_main
   788 ;; This function uses a non-reentrant model
   789 ;;
   790                           
   791                           	psect	text1
   792  00059A                     __ptext1:
   793                           	opt stack 0
   794  00059A                     ___wmul:
   795                           	opt stack 29
   796                           
   797                           ;incstack = 0
   798  00059A  0100               	movlb	0	; () banked
   799  00059C  5160               	movf	___wmul@multiplier& (0+255),w,b
   800  00059E  0362               	mulwf	___wmul@multiplicand& (0+255),b
   801  0005A0  CFF3 F064          	movff	prodl,___wmul@product
   802  0005A4  CFF4 F065          	movff	prodh,___wmul@product+1
   803  0005A8  5160               	movf	___wmul@multiplier& (0+255),w,b
   804  0005AA  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
   805  0005AC  50F3               	movf	prodl,w,c
   806  0005AE  2765               	addwf	(___wmul@product+1)& (0+255),f,b
   807  0005B0  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
   808  0005B2  0362               	mulwf	___wmul@multiplicand& (0+255),b
   809  0005B4  50F3               	movf	prodl,w,c
   810  0005B6  2765               	addwf	(___wmul@product+1)& (0+255),f,b
   811                           
   812                           ; BSR set to: 0
   813  0005B8  C064  F060         	movff	___wmul@product,?___wmul
   814  0005BC  C065  F061         	movff	___wmul@product+1,?___wmul+1
   815  0005C0  0012               	return	
   816  0005C2                     __end_of___wmul:
   817                           	opt stack 0
   818                           tblptru	equ	0xFF8
   819                           tblptrh	equ	0xFF7
   820                           tblptrl	equ	0xFF6
   821                           tablat	equ	0xFF5
   822                           prodh	equ	0xFF4
   823                           prodl	equ	0xFF3
   824                           postinc0	equ	0xFEE
   825                           wreg	equ	0xFE8
   826                           postdec1	equ	0xFE5
   827                           fsr1l	equ	0xFE1
   828                           status	equ	0xFD8
   829                           
   830 ;; *************** function _InitApp *****************
   831 ;; Defined at:
   832 ;;		line 33 in file "user.c"
   833 ;; Parameters:    Size  Location     Type
   834 ;;		None
   835 ;; Auto vars:     Size  Location     Type
   836 ;;		None
   837 ;; Return value:  Size  Location     Type
   838 ;;                  1    wreg      void 
   839 ;; Registers used:
   840 ;;		wreg, status,2
   841 ;; Tracked objects:
   842 ;;		On entry : 0/0
   843 ;;		On exit  : 0/0
   844 ;;		Unchanged: 0/0
   845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   846 ;;      Params:         0       0       0       0       0       0       0       0       0
   847 ;;      Locals:         0       0       0       0       0       0       0       0       0
   848 ;;      Temps:          0       0       0       0       0       0       0       0       0
   849 ;;      Totals:         0       0       0       0       0       0       0       0       0
   850 ;;Total ram usage:        0 bytes
   851 ;; Hardware stack levels used:    1
   852 ;; Hardware stack levels required when called:    1
   853 ;; This function calls:
   854 ;;		Nothing
   855 ;; This function is called by:
   856 ;;		_main
   857 ;; This function uses a non-reentrant model
   858 ;;
   859                           
   860                           	psect	text2
   861  0004C2                     __ptext2:
   862                           	opt stack 0
   863  0004C2                     _InitApp:
   864                           	opt stack 29
   865                           
   866                           ;user.c: 35: PORTA = 0;
   867                           
   868                           ; BSR set to: 0
   869                           ;incstack = 0
   870  0004C2  0E00               	movlw	0
   871  0004C4  6E80               	movwf	3968,c	;volatile
   872                           
   873                           ;user.c: 36: LATA = 0;
   874  0004C6  0E00               	movlw	0
   875  0004C8  6E89               	movwf	3977,c	;volatile
   876                           
   877                           ;user.c: 37: PORTB = 0;
   878  0004CA  0E00               	movlw	0
   879  0004CC  6E81               	movwf	3969,c	;volatile
   880                           
   881                           ;user.c: 38: LATB = 0;
   882  0004CE  0E00               	movlw	0
   883  0004D0  6E8A               	movwf	3978,c	;volatile
   884                           
   885                           ;user.c: 39: PORTC = 0;
   886  0004D2  0E00               	movlw	0
   887  0004D4  6E82               	movwf	3970,c	;volatile
   888                           
   889                           ;user.c: 40: LATC = 0;
   890  0004D6  0E00               	movlw	0
   891  0004D8  6E8B               	movwf	3979,c	;volatile
   892                           
   893                           ;user.c: 42: ADCON1 = 0b1101;
   894  0004DA  0E0D               	movlw	13
   895  0004DC  6EC1               	movwf	4033,c	;volatile
   896                           
   897                           ;user.c: 43: TRISAbits.TRISA0 = 1;
   898  0004DE  8092               	bsf	3986,0,c	;volatile
   899                           
   900                           ;user.c: 44: TRISAbits.TRISA1 = 1;
   901  0004E0  8292               	bsf	3986,1,c	;volatile
   902                           
   903                           ;user.c: 45: ADCON0bits.CHS = 0;
   904  0004E2  94C2               	bcf	4034,2,c	;volatile
   905  0004E4  96C2               	bcf	4034,3,c	;volatile
   906  0004E6  98C2               	bcf	4034,4,c	;volatile
   907  0004E8  9AC2               	bcf	4034,5,c	;volatile
   908                           
   909                           ;user.c: 46: ADCON2 = 0b10101100;
   910  0004EA  0EAC               	movlw	172
   911  0004EC  6EC0               	movwf	4032,c	;volatile
   912                           
   913                           ;user.c: 47: PIE1bits.ADIE = 1;
   914  0004EE  8C9D               	bsf	3997,6,c	;volatile
   915                           
   916                           ;user.c: 48: PIR1bits.ADIF = 0;
   917  0004F0  9C9E               	bcf	3998,6,c	;volatile
   918                           
   919                           ;user.c: 49: ADCON0bits.ADON = 1;
   920  0004F2  80C2               	bsf	4034,0,c	;volatile
   921                           
   922                           ;user.c: 51: TRISAbits.RA2 = 0;
   923  0004F4  9492               	bcf	3986,2,c	;volatile
   924                           
   925                           ;user.c: 52: TRISAbits.RA3 = 0;
   926  0004F6  9692               	bcf	3986,3,c	;volatile
   927                           
   928                           ;user.c: 53: TRISAbits.RA4 = 0;
   929  0004F8  9892               	bcf	3986,4,c	;volatile
   930                           
   931                           ;user.c: 54: TRISAbits.RA5 = 0;
   932  0004FA  9A92               	bcf	3986,5,c	;volatile
   933                           
   934                           ;user.c: 55: TRISCbits.RC0 = 0;
   935  0004FC  9094               	bcf	3988,0,c	;volatile
   936                           
   937                           ;user.c: 56: TRISCbits.RC1 = 0;
   938  0004FE  9294               	bcf	3988,1,c	;volatile
   939                           
   940                           ;user.c: 57: TRISBbits.RB7 = 0;
   941  000500  9E93               	bcf	3987,7,c	;volatile
   942                           
   943                           ;user.c: 58: TRISBbits.RB6 = 0;
   944  000502  9C93               	bcf	3987,6,c	;volatile
   945                           
   946                           ;user.c: 59: TRISCbits.RC2 = 0;
   947  000504  9494               	bcf	3988,2,c	;volatile
   948                           
   949                           ;user.c: 61: RCONbits.IPEN = 0;
   950  000506  9ED0               	bcf	4048,7,c	;volatile
   951                           
   952                           ;user.c: 63: INTCONbits.GIE = 1;
   953  000508  8EF2               	bsf	intcon,7,c	;volatile
   954                           
   955                           ;user.c: 64: INTCONbits.PEIE = 1;
   956  00050A  8CF2               	bsf	intcon,6,c	;volatile
   957                           
   958                           ;user.c: 65: INTCONbits.TMR0IE = 1;
   959  00050C  8AF2               	bsf	intcon,5,c	;volatile
   960                           
   961                           ;user.c: 66: INTCONbits.TMR0IF = 0;
   962  00050E  94F2               	bcf	intcon,2,c	;volatile
   963                           
   964                           ;user.c: 67: INTCON2bits.TMR0IP = 1;
   965  000510  84F1               	bsf	intcon2,2,c	;volatile
   966                           
   967                           ;user.c: 68: T0CONbits.T08BIT = 1;
   968  000512  8CD5               	bsf	4053,6,c	;volatile
   969                           
   970                           ;user.c: 69: T0CONbits.T0CS = 0;
   971  000514  9AD5               	bcf	4053,5,c	;volatile
   972                           
   973                           ;user.c: 70: T0CONbits.PSA = 0;
   974  000516  96D5               	bcf	4053,3,c	;volatile
   975                           
   976                           ;user.c: 71: T0CONbits.T0PS = 0b101;
   977  000518  50D5               	movf	4053,w,c	;volatile
   978  00051A  0BF8               	andlw	-8
   979  00051C  0905               	iorlw	5
   980  00051E  6ED5               	movwf	4053,c	;volatile
   981                           
   982                           ;user.c: 72: TMR0 = 0x6;
   983  000520  0E00               	movlw	0
   984  000522  6ED7               	movwf	4055,c	;volatile
   985  000524  0E06               	movlw	6
   986  000526  6ED6               	movwf	4054,c	;volatile
   987                           
   988                           ;user.c: 74: INTCON3bits.INT1IE = 1;
   989  000528  86F0               	bsf	intcon3,3,c	;volatile
   990                           
   991                           ;user.c: 75: INTCON3bits.INT2IE = 1;
   992  00052A  88F0               	bsf	intcon3,4,c	;volatile
   993                           
   994                           ;user.c: 76: INTCON3bits.INT1IF = 0;
   995  00052C  90F0               	bcf	intcon3,0,c	;volatile
   996                           
   997                           ;user.c: 77: INTCON3bits.INT2IF = 0;
   998  00052E  92F0               	bcf	intcon3,1,c	;volatile
   999                           
  1000                           ;user.c: 79: TRISCbits.RC6 = 0;
  1001  000530  9C94               	bcf	3988,6,c	;volatile
  1002                           
  1003                           ;user.c: 80: TRISCbits.RC7 = 1;
  1004  000532  8E94               	bsf	3988,7,c	;volatile
  1005                           
  1006                           ;user.c: 81: BRGH = 1;
  1007  000534  84AC               	bsf	4012,2,c	;volatile
  1008                           
  1009                           ;user.c: 82: BRG16 = 1;
  1010  000536  86B8               	bsf	4024,3,c	;volatile
  1011                           
  1012                           ;user.c: 83: SPBRG = 207;
  1013  000538  0ECF               	movlw	207
  1014  00053A  6EAF               	movwf	4015,c	;volatile
  1015                           
  1016                           ;user.c: 84: SPEN = 1;
  1017  00053C  8EAB               	bsf	4011,7,c	;volatile
  1018                           
  1019                           ;user.c: 85: SYNC = 0;
  1020  00053E  98AC               	bcf	4012,4,c	;volatile
  1021                           
  1022                           ;user.c: 86: TXEN = 1;
  1023  000540  8AAC               	bsf	4012,5,c	;volatile
  1024                           
  1025                           ;user.c: 87: CREN = 1;
  1026  000542  88AB               	bsf	4011,4,c	;volatile
  1027                           
  1028                           ;user.c: 88: TX9 = 0;
  1029  000544  9CAC               	bcf	4012,6,c	;volatile
  1030                           
  1031                           ;user.c: 89: RX9 = 0;
  1032  000546  9CAB               	bcf	4011,6,c	;volatile
  1033                           
  1034                           ;user.c: 90: RCIE = 1;
  1035  000548  8A9D               	bsf	3997,5,c	;volatile
  1036                           
  1037                           ;user.c: 91: TXIE = 0;
  1038  00054A  989D               	bcf	3997,4,c	;volatile
  1039                           
  1040                           ;user.c: 93: PR2 = 99;
  1041  00054C  0E63               	movlw	99
  1042  00054E  6ECB               	movwf	4043,c	;volatile
  1043                           
  1044                           ;user.c: 94: CCP1CONbits.DC1B = 0;
  1045  000550  0ECF               	movlw	-49
  1046  000552  16BD               	andwf	4029,f,c	;volatile
  1047                           
  1048                           ;user.c: 95: T2CONbits.T2CKPS = 0b00;
  1049  000554  0EFC               	movlw	-4
  1050  000556  16CA               	andwf	4042,f,c	;volatile
  1051                           
  1052                           ;user.c: 96: T2CONbits.TMR2ON = 1;
  1053  000558  84CA               	bsf	4042,2,c	;volatile
  1054                           
  1055                           ;user.c: 97: CCP1CONbits.CCP1M = 0b1111;
  1056  00055A  80BD               	bsf	4029,0,c	;volatile
  1057  00055C  82BD               	bsf	4029,1,c	;volatile
  1058  00055E  84BD               	bsf	4029,2,c	;volatile
  1059  000560  86BD               	bsf	4029,3,c	;volatile
  1060  000562  0012               	return		;funcret
  1061  000564                     __end_of_InitApp:
  1062                           	opt stack 0
  1063                           tblptru	equ	0xFF8
  1064                           tblptrh	equ	0xFF7
  1065                           tblptrl	equ	0xFF6
  1066                           tablat	equ	0xFF5
  1067                           prodh	equ	0xFF4
  1068                           prodl	equ	0xFF3
  1069                           intcon	equ	0xFF2
  1070                           intcon2	equ	0xFF1
  1071                           intcon3	equ	0xFF0
  1072                           postinc0	equ	0xFEE
  1073                           wreg	equ	0xFE8
  1074                           postdec1	equ	0xFE5
  1075                           fsr1l	equ	0xFE1
  1076                           status	equ	0xFD8
  1077                           
  1078 ;; *************** function _ConfigureOscillator *****************
  1079 ;; Defined at:
  1080 ;;		line 24 in file "system.c"
  1081 ;; Parameters:    Size  Location     Type
  1082 ;;		None
  1083 ;; Auto vars:     Size  Location     Type
  1084 ;;		None
  1085 ;; Return value:  Size  Location     Type
  1086 ;;                  1    wreg      void 
  1087 ;; Registers used:
  1088 ;;		wreg, status,2
  1089 ;; Tracked objects:
  1090 ;;		On entry : 0/0
  1091 ;;		On exit  : 0/0
  1092 ;;		Unchanged: 0/0
  1093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1094 ;;      Params:         0       0       0       0       0       0       0       0       0
  1095 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1096 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1097 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1098 ;;Total ram usage:        0 bytes
  1099 ;; Hardware stack levels used:    1
  1100 ;; Hardware stack levels required when called:    1
  1101 ;; This function calls:
  1102 ;;		Nothing
  1103 ;; This function is called by:
  1104 ;;		_main
  1105 ;; This function uses a non-reentrant model
  1106 ;;
  1107                           
  1108                           	psect	text3
  1109  0005C2                     __ptext3:
  1110                           	opt stack 0
  1111  0005C2                     _ConfigureOscillator:
  1112                           	opt stack 29
  1113                           
  1114                           ;system.c: 27: OSCCONbits.IRCF = 0b111;
  1115                           
  1116                           ;incstack = 0
  1117  0005C2  88D3               	bsf	4051,4,c	;volatile
  1118  0005C4  8AD3               	bsf	4051,5,c	;volatile
  1119  0005C6  8CD3               	bsf	4051,6,c	;volatile
  1120                           
  1121                           ;system.c: 28: OSCCONbits.SCS = 0b11;
  1122  0005C8  0E03               	movlw	3
  1123  0005CA  12D3               	iorwf	4051,f,c	;volatile
  1124  0005CC  0012               	return		;funcret
  1125  0005CE                     __end_of_ConfigureOscillator:
  1126                           	opt stack 0
  1127                           tblptru	equ	0xFF8
  1128                           tblptrh	equ	0xFF7
  1129                           tblptrl	equ	0xFF6
  1130                           tablat	equ	0xFF5
  1131                           prodh	equ	0xFF4
  1132                           prodl	equ	0xFF3
  1133                           intcon	equ	0xFF2
  1134                           intcon2	equ	0xFF1
  1135                           intcon3	equ	0xFF0
  1136                           postinc0	equ	0xFEE
  1137                           wreg	equ	0xFE8
  1138                           postdec1	equ	0xFE5
  1139                           fsr1l	equ	0xFE1
  1140                           status	equ	0xFD8
  1141                           
  1142 ;; *************** function _high_isr *****************
  1143 ;; Defined at:
  1144 ;;		line 41 in file "interrupts.c"
  1145 ;; Parameters:    Size  Location     Type
  1146 ;;		None
  1147 ;; Auto vars:     Size  Location     Type
  1148 ;;		None
  1149 ;; Return value:  Size  Location     Type
  1150 ;;                  1    wreg      void 
  1151 ;; Registers used:
  1152 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1153 ;; Tracked objects:
  1154 ;;		On entry : 0/0
  1155 ;;		On exit  : 0/0
  1156 ;;		Unchanged: 0/0
  1157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1158 ;;      Params:         0       0       0       0       0       0       0       0       0
  1159 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1160 ;;      Temps:         19       0       0       0       0       0       0       0       0
  1161 ;;      Totals:        19       0       0       0       0       0       0       0       0
  1162 ;;Total ram usage:       19 bytes
  1163 ;; Hardware stack levels used:    1
  1164 ;; This function calls:
  1165 ;;		Nothing
  1166 ;; This function is called by:
  1167 ;;		Interrupt level 2
  1168 ;; This function uses a non-reentrant model
  1169 ;;
  1170                           
  1171                           	psect	intcode
  1172  000008                     __pintcode:
  1173                           	opt stack 0
  1174  000008                     _high_isr:
  1175                           	opt stack 29
  1176                           
  1177                           ;incstack = 0
  1178  000008  8253               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  1179  00000A  ED4B  F001         	call	int_func,f	;refresh shadow registers
  1180                           tblptru	equ	0xFF8
  1181                           tblptrh	equ	0xFF7
  1182                           tblptrl	equ	0xFF6
  1183                           tablat	equ	0xFF5
  1184                           prodh	equ	0xFF4
  1185                           prodl	equ	0xFF3
  1186                           intcon	equ	0xFF2
  1187                           intcon2	equ	0xFF1
  1188                           intcon3	equ	0xFF0
  1189                           postinc0	equ	0xFEE
  1190                           wreg	equ	0xFE8
  1191                           postdec1	equ	0xFE5
  1192                           fsr1l	equ	0xFE1
  1193                           status	equ	0xFD8
  1194                           
  1195                           	psect	intcode_body
  1196  000296                     __pintcode_body:
  1197                           	opt stack 29
  1198  000296                     int_func:
  1199                           	opt stack 29
  1200  000296  0006               	pop		; remove dummy address from shadow register refresh
  1201  000298  CFFA F03C          	movff	pclath,??_high_isr+1
  1202  00029C  CFFB F03D          	movff	pclatu,??_high_isr+2
  1203  0002A0  CFE9 F03E          	movff	fsr0l,??_high_isr+3
  1204  0002A4  CFEA F03F          	movff	fsr0h,??_high_isr+4
  1205  0002A8  CFE1 F040          	movff	fsr1l,??_high_isr+5
  1206  0002AC  CFE2 F041          	movff	fsr1h,??_high_isr+6
  1207  0002B0  CFD9 F042          	movff	fsr2l,??_high_isr+7
  1208  0002B4  CFDA F043          	movff	fsr2h,??_high_isr+8
  1209  0002B8  CFF3 F044          	movff	prodl,??_high_isr+9
  1210  0002BC  CFF4 F045          	movff	prodh,??_high_isr+10
  1211  0002C0  CFF6 F046          	movff	tblptrl,??_high_isr+11
  1212  0002C4  CFF7 F047          	movff	tblptrh,??_high_isr+12
  1213  0002C8  CFF8 F048          	movff	tblptru,??_high_isr+13
  1214  0002CC  CFF5 F049          	movff	tablat,??_high_isr+14
  1215  0002D0  C053  F04A         	movff	btemp,??_high_isr+15
  1216  0002D4  C054  F04B         	movff	btemp+1,??_high_isr+16
  1217  0002D8  C055  F04C         	movff	btemp+2,??_high_isr+17
  1218  0002DC  C056  F04D         	movff	btemp+3,??_high_isr+18
  1219                           
  1220                           ;interrupts.c: 42: if (INTCONbits.TMR0IF) {
  1221  0002E0  A4F2               	btfss	intcon,2,c	;volatile
  1222  0002E2  D075               	goto	i2l65
  1223                           
  1224                           ;interrupts.c: 44: INTCONbits.TMR0IF = 0;
  1225  0002E4  94F2               	bcf	intcon,2,c	;volatile
  1226                           
  1227                           ;interrupts.c: 45: overflow++;
  1228  0002E6  4A2D               	infsnz	_overflow,f,c
  1229  0002E8  2A2E               	incf	_overflow+1,f,c
  1230                           
  1231                           ;interrupts.c: 46: TMR0 = 200;
  1232  0002EA  0E00               	movlw	0
  1233  0002EC  6ED7               	movwf	4055,c	;volatile
  1234  0002EE  0EC8               	movlw	200
  1235  0002F0  6ED6               	movwf	4054,c	;volatile
  1236                           
  1237                           ;interrupts.c: 47: MOT_1_count++;
  1238  0002F2  4A27               	infsnz	_MOT_1_count,f,c
  1239  0002F4  2A28               	incf	_MOT_1_count+1,f,c
  1240                           
  1241                           ;interrupts.c: 48: MOT_2_count++;
  1242  0002F6  4A25               	infsnz	_MOT_2_count,f,c
  1243  0002F8  2A26               	incf	_MOT_2_count+1,f,c
  1244                           
  1245                           ;interrupts.c: 49: MOT_3_count++;
  1246  0002FA  4A23               	infsnz	_MOT_3_count,f,c
  1247  0002FC  2A24               	incf	_MOT_3_count+1,f,c
  1248                           
  1249                           ;interrupts.c: 50: MOT_4_count++;
  1250  0002FE  4A21               	infsnz	_MOT_4_count,f,c
  1251  000300  2A22               	incf	_MOT_4_count+1,f,c
  1252                           
  1253                           ;interrupts.c: 52: if (MOT_1) {
  1254  000302  5052               	movf	_MOT_1,w,c
  1255  000304  B4D8               	btfsc	status,2,c
  1256  000306  D017               	goto	i2l67
  1257                           
  1258                           ;interrupts.c: 53: if (MOT_1_count == 25) {
  1259  000308  0E19               	movlw	25
  1260  00030A  1827               	xorwf	_MOT_1_count,w,c
  1261  00030C  1028               	iorwf	_MOT_1_count+1,w,c
  1262  00030E  A4D8               	btfss	status,2,c
  1263  000310  D012               	goto	i2l67
  1264                           
  1265                           ;interrupts.c: 54: LATAbits.LA3 = !PORTAbits.RA3;
  1266  000312  B680               	btfsc	3968,3,c	;volatile
  1267  000314  D003               	goto	i2u42_40
  1268  000316  6A3B               	clrf	??_high_isr& (0+255),c
  1269  000318  2A3B               	incf	??_high_isr& (0+255),f,c
  1270  00031A  D001               	goto	i2u43_48
  1271  00031C                     i2u42_40:
  1272  00031C  6A3B               	clrf	??_high_isr& (0+255),c
  1273  00031E                     i2u43_48:
  1274  00031E  463B               	rlncf	??_high_isr,f,c
  1275  000320  463B               	rlncf	??_high_isr,f,c
  1276  000322  463B               	rlncf	??_high_isr,f,c
  1277  000324  5089               	movf	3977,w,c	;volatile
  1278  000326  183B               	xorwf	??_high_isr,w,c
  1279  000328  0BF7               	andlw	-9
  1280  00032A  183B               	xorwf	??_high_isr,w,c
  1281  00032C  6E89               	movwf	3977,c	;volatile
  1282                           
  1283                           ;interrupts.c: 55: MOT_1_count = 0;
  1284  00032E  0E00               	movlw	0
  1285  000330  6E28               	movwf	_MOT_1_count+1,c
  1286  000332  0E00               	movlw	0
  1287  000334  6E27               	movwf	_MOT_1_count,c
  1288  000336                     i2l67:
  1289                           
  1290                           ;interrupts.c: 56: }
  1291                           ;interrupts.c: 57: }
  1292                           ;interrupts.c: 58: if (MOT_2) {
  1293  000336  503A               	movf	_MOT_2,w,c
  1294  000338  B4D8               	btfsc	status,2,c
  1295  00033A  D016               	goto	i2l69
  1296                           
  1297                           ;interrupts.c: 59: if (MOT_2_count == 2) {
  1298  00033C  0E02               	movlw	2
  1299  00033E  1825               	xorwf	_MOT_2_count,w,c
  1300  000340  1026               	iorwf	_MOT_2_count+1,w,c
  1301  000342  A4D8               	btfss	status,2,c
  1302  000344  D011               	goto	i2l69
  1303                           
  1304                           ;interrupts.c: 60: LATAbits.LA5 = !PORTAbits.RA5;
  1305  000346  BA80               	btfsc	3968,5,c	;volatile
  1306  000348  D003               	goto	i2u46_40
  1307  00034A  6A3B               	clrf	??_high_isr& (0+255),c
  1308  00034C  2A3B               	incf	??_high_isr& (0+255),f,c
  1309  00034E  D001               	goto	i2u47_48
  1310  000350                     i2u46_40:
  1311  000350  6A3B               	clrf	??_high_isr& (0+255),c
  1312  000352                     i2u47_48:
  1313  000352  3A3B               	swapf	??_high_isr,f,c
  1314  000354  463B               	rlncf	??_high_isr,f,c
  1315  000356  5089               	movf	3977,w,c	;volatile
  1316  000358  183B               	xorwf	??_high_isr,w,c
  1317  00035A  0BDF               	andlw	-33
  1318  00035C  183B               	xorwf	??_high_isr,w,c
  1319  00035E  6E89               	movwf	3977,c	;volatile
  1320                           
  1321                           ;interrupts.c: 61: MOT_2_count = 0;
  1322  000360  0E00               	movlw	0
  1323  000362  6E26               	movwf	_MOT_2_count+1,c
  1324  000364  0E00               	movlw	0
  1325  000366  6E25               	movwf	_MOT_2_count,c
  1326  000368                     i2l69:
  1327                           
  1328                           ;interrupts.c: 62: }
  1329                           ;interrupts.c: 63: }
  1330                           ;interrupts.c: 64: if (MOT_3) {
  1331  000368  5039               	movf	_MOT_3,w,c
  1332  00036A  B4D8               	btfsc	status,2,c
  1333  00036C  D015               	goto	i2l71
  1334                           
  1335                           ;interrupts.c: 65: if (MOT_3_count == 5) {
  1336  00036E  0E05               	movlw	5
  1337  000370  1823               	xorwf	_MOT_3_count,w,c
  1338  000372  1024               	iorwf	_MOT_3_count+1,w,c
  1339  000374  A4D8               	btfss	status,2,c
  1340  000376  D010               	goto	i2l71
  1341                           
  1342                           ;interrupts.c: 66: LATCbits.LC1 = !PORTCbits.RC1;
  1343  000378  B282               	btfsc	3970,1,c	;volatile
  1344  00037A  D003               	goto	i2u50_40
  1345  00037C  6A3B               	clrf	??_high_isr& (0+255),c
  1346  00037E  2A3B               	incf	??_high_isr& (0+255),f,c
  1347  000380  D001               	goto	i2u51_48
  1348  000382                     i2u50_40:
  1349  000382  6A3B               	clrf	??_high_isr& (0+255),c
  1350  000384                     i2u51_48:
  1351  000384  463B               	rlncf	??_high_isr,f,c
  1352  000386  508B               	movf	3979,w,c	;volatile
  1353  000388  183B               	xorwf	??_high_isr,w,c
  1354  00038A  0BFD               	andlw	-3
  1355  00038C  183B               	xorwf	??_high_isr,w,c
  1356  00038E  6E8B               	movwf	3979,c	;volatile
  1357                           
  1358                           ;interrupts.c: 67: MOT_3_count = 0;
  1359  000390  0E00               	movlw	0
  1360  000392  6E24               	movwf	_MOT_3_count+1,c
  1361  000394  0E00               	movlw	0
  1362  000396  6E23               	movwf	_MOT_3_count,c
  1363  000398                     i2l71:
  1364                           
  1365                           ;interrupts.c: 68: }
  1366                           ;interrupts.c: 69: }
  1367                           ;interrupts.c: 70: if (MOT_4) {
  1368  000398  5038               	movf	_MOT_4,w,c
  1369  00039A  B4D8               	btfsc	status,2,c
  1370  00039C  D06C               	goto	i2l88
  1371                           
  1372                           ;interrupts.c: 71: if (MOT_4_count == 5) {
  1373  00039E  0E05               	movlw	5
  1374  0003A0  1821               	xorwf	_MOT_4_count,w,c
  1375  0003A2  1022               	iorwf	_MOT_4_count+1,w,c
  1376  0003A4  A4D8               	btfss	status,2,c
  1377  0003A6  D067               	goto	i2l88
  1378                           
  1379                           ;interrupts.c: 72: LATBbits.LB6 = !PORTBbits.RB6;
  1380  0003A8  BC81               	btfsc	3969,6,c	;volatile
  1381  0003AA  D003               	goto	i2u54_40
  1382  0003AC  6A3B               	clrf	??_high_isr& (0+255),c
  1383  0003AE  2A3B               	incf	??_high_isr& (0+255),f,c
  1384  0003B0  D001               	goto	i2u55_48
  1385  0003B2                     i2u54_40:
  1386  0003B2  6A3B               	clrf	??_high_isr& (0+255),c
  1387  0003B4                     i2u55_48:
  1388  0003B4  3A3B               	swapf	??_high_isr,f,c
  1389  0003B6  463B               	rlncf	??_high_isr,f,c
  1390  0003B8  463B               	rlncf	??_high_isr,f,c
  1391  0003BA  508A               	movf	3978,w,c	;volatile
  1392  0003BC  183B               	xorwf	??_high_isr,w,c
  1393  0003BE  0BBF               	andlw	-65
  1394  0003C0  183B               	xorwf	??_high_isr,w,c
  1395  0003C2  6E8A               	movwf	3978,c	;volatile
  1396                           
  1397                           ;interrupts.c: 73: MOT_4_count = 0;
  1398  0003C4  0E00               	movlw	0
  1399  0003C6  6E22               	movwf	_MOT_4_count+1,c
  1400  0003C8  0E00               	movlw	0
  1401  0003CA  6E21               	movwf	_MOT_4_count,c
  1402                           
  1403                           ;interrupts.c: 74: }
  1404                           ;interrupts.c: 75: }
  1405                           ;interrupts.c: 77: } else if (PIR1bits.RCIF) {
  1406  0003CC  D054               	goto	i2l88
  1407  0003CE                     i2l65:
  1408  0003CE  AA9E               	btfss	3998,5,c	;volatile
  1409  0003D0  D01A               	goto	i2l75
  1410                           
  1411                           ;interrupts.c: 79: PIR1bits.RCIF = 0;
  1412  0003D2  9A9E               	bcf	3998,5,c	;volatile
  1413                           
  1414                           ;interrupts.c: 80: palabra[n] = RCREG;
  1415  0003D4  0E01               	movlw	low _palabra
  1416  0003D6  242F               	addwf	_n,w,c
  1417  0003D8  6ED9               	movwf	fsr2l,c
  1418  0003DA  0E00               	movlw	high _palabra
  1419  0003DC  2030               	addwfc	_n+1,w,c
  1420  0003DE  6EDA               	movwf	fsr2h,c
  1421  0003E0  CFAE FFDF          	movff	4014,indf2	;volatile
  1422                           
  1423                           ;interrupts.c: 81: n++;
  1424  0003E4  4A2F               	infsnz	_n,f,c
  1425  0003E6  2A30               	incf	_n+1,f,c
  1426                           
  1427                           ;interrupts.c: 82: if (RCREG == '\n') {
  1428  0003E8  0E0A               	movlw	10
  1429  0003EA  18AE               	xorwf	4014,w,c	;volatile
  1430  0003EC  A4D8               	btfss	status,2,c
  1431  0003EE  D043               	goto	i2l88
  1432                           
  1433                           ;interrupts.c: 83: TXREG = palabra[0];
  1434  0003F0  C001  FFAD         	movff	_palabra,4013	;volatile
  1435  0003F4  A89E               	btfss	3998,4,c	;volatile
  1436  0003F6  D7FE               	goto	i2l78
  1437                           
  1438                           ;interrupts.c: 85: recibi = 1;
  1439  0003F8  0E01               	movlw	1
  1440  0003FA  6E37               	movwf	_recibi,c
  1441                           
  1442                           ;interrupts.c: 86: n = 0;
  1443  0003FC  0E00               	movlw	0
  1444  0003FE  6E30               	movwf	_n+1,c
  1445  000400  0E00               	movlw	0
  1446  000402  6E2F               	movwf	_n,c
  1447                           
  1448                           ;interrupts.c: 87: }
  1449                           ;interrupts.c: 88: } else if (PIR1bits.ADIF) {
  1450  000404  D038               	goto	i2l88
  1451  000406                     i2l75:
  1452  000406  AC9E               	btfss	3998,6,c	;volatile
  1453  000408  D030               	goto	i2l81
  1454                           
  1455                           ;interrupts.c: 90: PIR1bits.ADIF = 0;
  1456  00040A  9C9E               	bcf	3998,6,c	;volatile
  1457                           
  1458                           ;interrupts.c: 91: if (ADCON0bits.CHS == 0b0000) {
  1459  00040C  30C2               	rrcf	4034,w,c	;volatile
  1460  00040E  32E8               	rrcf	wreg,f,c
  1461  000410  0B0F               	andlw	15
  1462  000412  0900               	iorlw	0
  1463  000414  A4D8               	btfss	status,2,c
  1464  000416  D005               	goto	i2l82
  1465                           
  1466                           ;interrupts.c: 92: ADC_value_press = ADRES;
  1467  000418  CFC3 F02B          	movff	4035,_ADC_value_press	;volatile
  1468  00041C  CFC4 F02C          	movff	4036,_ADC_value_press+1	;volatile
  1469                           
  1470                           ;interrupts.c: 93: } else if (ADCON0bits.CHS == 0b0001) {
  1471  000420  D00A               	goto	i2l84
  1472  000422                     i2l82:
  1473  000422  30C2               	rrcf	4034,w,c	;volatile
  1474  000424  32E8               	rrcf	wreg,f,c
  1475  000426  0B0F               	andlw	15
  1476  000428  06E8               	decf	wreg,f,c
  1477  00042A  A4D8               	btfss	status,2,c
  1478  00042C  D004               	goto	i2l84
  1479                           
  1480                           ;interrupts.c: 94: ADC_value_dist = ADRES;
  1481  00042E  CFC3 F029          	movff	4035,_ADC_value_dist	;volatile
  1482  000432  CFC4 F02A          	movff	4036,_ADC_value_dist+1	;volatile
  1483  000436                     i2l84:
  1484                           
  1485                           ;interrupts.c: 95: }
  1486                           ;interrupts.c: 96: _delay((unsigned long)((10)*(8000000/4000.0)));
  1487  000436  0E1A               	movlw	26
  1488  000438  6E3B               	movwf	??_high_isr& (0+255),c
  1489  00043A  0EF8               	movlw	248
  1490  00043C                     i2u88_47:
  1491  00043C  2EE8               	decfsz	wreg,f,c
  1492  00043E  D7FE               	bra	i2u88_47
  1493  000440  2E3B               	decfsz	??_high_isr& (0+255),f,c
  1494  000442  D7FC               	bra	i2u88_47
  1495  000444  D000               	nop2	
  1496                           
  1497                           ;interrupts.c: 97: ADCON0bits.CHS = !ADCON0bits.CHS;
  1498  000446  30C2               	rrcf	4034,w,c	;volatile
  1499  000448  32E8               	rrcf	wreg,f,c
  1500  00044A  0B0F               	andlw	15
  1501  00044C  0900               	iorlw	0
  1502  00044E  A4D8               	btfss	status,2,c
  1503  000450  D003               	goto	i2u62_40
  1504  000452  6A3B               	clrf	??_high_isr& (0+255),c
  1505  000454  2A3B               	incf	??_high_isr& (0+255),f,c
  1506  000456  D001               	goto	i2u63_48
  1507  000458                     i2u62_40:
  1508  000458  6A3B               	clrf	??_high_isr& (0+255),c
  1509  00045A                     i2u63_48:
  1510  00045A  463B               	rlncf	??_high_isr,f,c
  1511  00045C  463B               	rlncf	??_high_isr,f,c
  1512  00045E  50C2               	movf	4034,w,c	;volatile
  1513  000460  183B               	xorwf	??_high_isr,w,c
  1514  000462  0BC3               	andlw	-61
  1515  000464  183B               	xorwf	??_high_isr,w,c
  1516  000466  6EC2               	movwf	4034,c	;volatile
  1517                           
  1518                           ;interrupts.c: 99: } else if (INTCON3bits.INT1IF) {
  1519  000468  D006               	goto	i2l88
  1520  00046A                     i2l81:
  1521  00046A  A0F0               	btfss	intcon3,0,c	;volatile
  1522  00046C  D002               	goto	i2l86
  1523                           
  1524                           ;interrupts.c: 101: INTCON3bits.INT1IF = 0;
  1525  00046E  90F0               	bcf	intcon3,0,c	;volatile
  1526                           
  1527                           ;interrupts.c: 103: } else if (INTCON3bits.INT2IF) {
  1528  000470  D002               	goto	i2l88
  1529  000472                     i2l86:
  1530  000472  B2F0               	btfsc	intcon3,1,c	;volatile
  1531                           
  1532                           ;interrupts.c: 105: INTCON3bits.INT2IF = 0;
  1533  000474  92F0               	bcf	intcon3,1,c	;volatile
  1534  000476                     i2l88:
  1535  000476  C04D  F056         	movff	??_high_isr+18,btemp+3
  1536  00047A  C04C  F055         	movff	??_high_isr+17,btemp+2
  1537  00047E  C04B  F054         	movff	??_high_isr+16,btemp+1
  1538  000482  C04A  F053         	movff	??_high_isr+15,btemp
  1539  000486  C049  FFF5         	movff	??_high_isr+14,tablat
  1540  00048A  C048  FFF8         	movff	??_high_isr+13,tblptru
  1541  00048E  C047  FFF7         	movff	??_high_isr+12,tblptrh
  1542  000492  C046  FFF6         	movff	??_high_isr+11,tblptrl
  1543  000496  C045  FFF4         	movff	??_high_isr+10,prodh
  1544  00049A  C044  FFF3         	movff	??_high_isr+9,prodl
  1545  00049E  C043  FFDA         	movff	??_high_isr+8,fsr2h
  1546  0004A2  C042  FFD9         	movff	??_high_isr+7,fsr2l
  1547  0004A6  C041  FFE2         	movff	??_high_isr+6,fsr1h
  1548  0004AA  C040  FFE1         	movff	??_high_isr+5,fsr1l
  1549  0004AE  C03F  FFEA         	movff	??_high_isr+4,fsr0h
  1550  0004B2  C03E  FFE9         	movff	??_high_isr+3,fsr0l
  1551  0004B6  C03D  FFFB         	movff	??_high_isr+2,pclatu
  1552  0004BA  C03C  FFFA         	movff	??_high_isr+1,pclath
  1553  0004BE  9253               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  1554  0004C0  0011               	retfie		f
  1555  0004C2                     __end_of_high_isr:
  1556                           	opt stack 0
  1557  0000                     pclatu	equ	0xFFB
  1558                           pclath	equ	0xFFA
  1559                           tblptru	equ	0xFF8
  1560                           tblptrh	equ	0xFF7
  1561                           tblptrl	equ	0xFF6
  1562                           tablat	equ	0xFF5
  1563                           prodh	equ	0xFF4
  1564                           prodl	equ	0xFF3
  1565                           intcon	equ	0xFF2
  1566                           intcon2	equ	0xFF1
  1567                           intcon3	equ	0xFF0
  1568                           postinc0	equ	0xFEE
  1569                           fsr0h	equ	0xFEA
  1570                           fsr0l	equ	0xFE9
  1571                           wreg	equ	0xFE8
  1572                           postdec1	equ	0xFE5
  1573                           fsr1h	equ	0xFE2
  1574                           fsr1l	equ	0xFE1
  1575                           indf2	equ	0xFDF
  1576                           fsr2h	equ	0xFDA
  1577                           fsr2l	equ	0xFD9
  1578                           status	equ	0xFD8
  1579                           pclatu	equ	0xFFB
  1580                           pclath	equ	0xFFA
  1581                           tblptru	equ	0xFF8
  1582                           tblptrh	equ	0xFF7
  1583                           tblptrl	equ	0xFF6
  1584                           tablat	equ	0xFF5
  1585                           prodh	equ	0xFF4
  1586                           prodl	equ	0xFF3
  1587                           intcon	equ	0xFF2
  1588                           intcon2	equ	0xFF1
  1589                           intcon3	equ	0xFF0
  1590                           postinc0	equ	0xFEE
  1591                           fsr0h	equ	0xFEA
  1592                           fsr0l	equ	0xFE9
  1593                           wreg	equ	0xFE8
  1594                           postdec1	equ	0xFE5
  1595                           fsr1h	equ	0xFE2
  1596                           fsr1l	equ	0xFE1
  1597                           indf2	equ	0xFDF
  1598                           fsr2h	equ	0xFDA
  1599                           fsr2l	equ	0xFD9
  1600                           status	equ	0xFD8
  1601                           
  1602                           	psect	rparam
  1603  0000                     pclatu	equ	0xFFB
  1604                           pclath	equ	0xFFA
  1605                           tblptru	equ	0xFF8
  1606                           tblptrh	equ	0xFF7
  1607                           tblptrl	equ	0xFF6
  1608                           tablat	equ	0xFF5
  1609                           prodh	equ	0xFF4
  1610                           prodl	equ	0xFF3
  1611                           intcon	equ	0xFF2
  1612                           intcon2	equ	0xFF1
  1613                           intcon3	equ	0xFF0
  1614                           postinc0	equ	0xFEE
  1615                           fsr0h	equ	0xFEA
  1616                           fsr0l	equ	0xFE9
  1617                           wreg	equ	0xFE8
  1618                           postdec1	equ	0xFE5
  1619                           fsr1h	equ	0xFE2
  1620                           fsr1l	equ	0xFE1
  1621                           indf2	equ	0xFDF
  1622                           fsr2h	equ	0xFDA
  1623                           fsr2l	equ	0xFD9
  1624                           status	equ	0xFD8
  1625                           
  1626                           	psect	temp
  1627  000053                     btemp:
  1628                           	opt stack 0
  1629  000053                     	ds	1
  1630  0000                     int$flags	set	btemp
  1631  0000                     wtemp6	set	btemp+1
  1632                           pclatu	equ	0xFFB
  1633                           pclath	equ	0xFFA
  1634                           tblptru	equ	0xFF8
  1635                           tblptrh	equ	0xFF7
  1636                           tblptrl	equ	0xFF6
  1637                           tablat	equ	0xFF5
  1638                           prodh	equ	0xFF4
  1639                           prodl	equ	0xFF3
  1640                           intcon	equ	0xFF2
  1641                           intcon2	equ	0xFF1
  1642                           intcon3	equ	0xFF0
  1643                           postinc0	equ	0xFEE
  1644                           fsr0h	equ	0xFEA
  1645                           fsr0l	equ	0xFE9
  1646                           wreg	equ	0xFE8
  1647                           postdec1	equ	0xFE5
  1648                           fsr1h	equ	0xFE2
  1649                           fsr1l	equ	0xFE1
  1650                           indf2	equ	0xFDF
  1651                           fsr2h	equ	0xFDA
  1652                           fsr2l	equ	0xFD9
  1653                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        4
    BSS         58
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     19      82
    BANK0           160      8       8
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->___wmul

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    2392
                                              6 BANK0      2     2      0
                _ConfigureOscillator
                            _InitApp
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4    2392
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigureOscillator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _high_isr                                            19    19      0       0
                                              0 COMRAM    19    19      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfigureOscillator
   _InitApp
   ___wmul

 _high_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      8       8       5        5.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     13      52       1       87.2%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      5A      20        0.0%
DATA                 0      0      5A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Wed Aug 14 10:30:04 2019

                           _n 002F           ___wmul@multiplicand 0062                   __CFG_BORV$3 000000  
                __CFG_CP0$OFF 000000                  __CFG_CP1$OFF 000000                  __CFG_CP2$OFF 000000  
                __CFG_CP3$OFF 000000                           l150 0094                           l152 0268  
                         l155 027C                           l148 001A                           l149 028E  
                __CFG_CPB$OFF 000000                           _PR2 000FCB                  __CFG_CPD$OFF 000000  
                         u805 0048                           u806 004A                           u775 002A  
                         u776 002C                           u785 0034                           _RX9 007D5E  
                         u786 0036                           u795 003E                           u796 0040  
                         _TX9 007D66                  __CFG_BOR$OFF 000000                           wreg 000FE8  
                __CFG_LVP$OFF 000000                  __CFG_WDT$OFF 000000                          _BRGH 007D62  
                        _CREN 007D5C                          _LATA 000F89                          _LATB 000F8A  
                        _LATC 000F8B                          _RCIE 007CED                          i2l71 0398  
                        i2l81 046A                          i2l65 03CE                          i2l82 0422  
                        i2l75 0406                          i2l67 0336                          i2l84 0436  
                        i2l69 0368                          i2l86 0472                          i2l78 03F4  
                        i2l88 0476                          _TMR0 000FD6                          _SPEN 007D5F  
                        _TXIE 007CEC                          _TXIF 007CF4                          _TXEN 007D65  
                        _SYNC 007D64                          _main 0012                          fsr0h 000FEA  
                        fsr1h 000FE2                          fsr2h 000FDA                          fsr0l 000FE9  
                        indf2 000FDF                          fsr1l 000FE1                          fsr2l 000FD9  
                        btemp 0053                          prodh 000FF4                          prodl 000FF3  
                        start 000E                 __CFG_IESO$OFF 000000                 __CFG_MCLRE$ON 000000  
                ___param_bank 000000               __end_of_InitApp 0564                 __CFG_PLLDIV$1 000000  
              __CFG_CCP2MX$ON 000000                         ?_main 003B                         _ADRES 000FC3  
                       _BRG16 007DC3                         _DIR_1 0035                         _DIR_2 0034  
                       _DIR_3 0033                         _DIR_4 0032                         _RCREG 000FAE  
                       _MOT_1 0052                         _MOT_2 003A                         _MOT_3 0039  
                       _MOT_4 0038                         _SPBRG 000FAF                         _PORTA 000F80  
                       _PORTB 000F81                         _PORTC 000F82                 __CFG_USBDIV$1 000000  
                       _TXREG 000FAD           _ConfigureOscillator 05C2                 __CFG_PWRT$OFF 000000  
               __CFG_WRT0$OFF 000000                 __CFG_WRT1$OFF 000000                 __CFG_WRT2$OFF 000000  
               __CFG_WRT3$OFF 000000                __CFG_EBTR0$OFF 000000                __CFG_FCMEN$OFF 000000  
              __CFG_EBTR1$OFF 000000                __CFG_EBTR2$OFF 000000                __CFG_EBTR3$OFF 000000  
               __CFG_WRTB$OFF 000000                 __CFG_WRTC$OFF 000000                 __CFG_WRTD$OFF 000000  
              __CFG_EBTRB$OFF 000000                         _speed 0015                         _turns 0017  
                       pclath 000FFA                         tablat 000FF5                         status 000FD8  
                       wtemp6 0054          ?_ConfigureOscillator 003B               __initialization 0564  
                __end_of_main 0296                        ??_main 0066                 __activetblptr 000000  
                      _ADCON1 000FC1                        _ADCON2 000FC0                        _CCPR1L 000FBE  
                      _GODONE 007E11                     ??_InitApp 0060         ??_ConfigureOscillator 0060  
              __CFG_XINST$OFF 000000              __end_of_high_isr 04C2                        ___wmul 059A  
                      _length 0019                        _recibi 0037                        clear_0 058A  
                      _motor1 0050                        _motor2 001F                  __pdataCOMRAM 004E  
                      tblptrh 000FF7                        tblptrl 000FF6                        tblptru 000FF8  
                  __accesstop 0060       __end_of__initialization 0590               __CFG_PBADEN$OFF 000000  
               ___rparam_used 000001                __pcstackCOMRAM 003B                    __pnvCOMRAM 0052  
                     ?___wmul 0060                       i2u50_40 0382                       i2u42_40 031C  
                     i2u51_48 0384                       i2u43_48 031E                       i2u62_40 0458  
                     i2u54_40 03B2                       i2u46_40 0350                       i2u63_48 045A  
                     i2u55_48 03B4                       i2u47_48 0352                       i2u88_47 043C  
                   ?_high_isr 003B               __CFG_VREGEN$OFF 000000                       _InitApp 04C2  
                     __Hparam 0000                       __Lparam 0000               __size_of___wmul 0028  
                     _caliber 001D               __CFG_STVREN$OFF 000000                       __pcinit 0564  
                     __ramtop 0800                       __ptext0 0012                       __ptext1 059A  
                     __ptext2 04C2                       __ptext3 05C2                     _T0CONbits 000FD5  
                     _palabra 0001                     _T2CONbits 000FCA                    ??_high_isr 003B  
              __pintcode_body 0296          end_of_initialization 0590                       int_func 0296  
                     postdec1 000FE5                       postinc0 000FEE                     _PORTAbits 000F80  
                   _PORTBbits 000F81                     _PORTCbits 000F82                     _TRISAbits 000F92  
                   _TRISBbits 000F93                     _TRISCbits 000F94   __end_of_ConfigureOscillator 05CE  
                 _CCP1CONbits 000FBD                __end_of___wmul 05C2                 __pidataCOMRAM 05CE  
         start_initialization 0564                      ??___wmul 0064              __CFG_LPT1OSC$OFF 000000  
                 __pbssCOMRAM 0001                 __pcstackBANK0 0060             __size_of_high_isr 04BA  
                    ?_InitApp 003B                     __pintcode 0008                     _busy_flag 0031  
              ___wmul@product 0064                      _LATAbits 000F89                      _LATBbits 000F8A  
                    _LATCbits 000F8B                      _PIE1bits 000F9D                      _RA0state 0036  
                    _PIR1bits 000F9E                      _RCONbits 000FD0              __CFG_WDTPS$32768 000000  
                  _ADCON0bits 000FC2             ___wmul@multiplier 0060                      _PWM_duty 004E  
             _ADC_value_press 002B                   _INTCON2bits 000FF1                   _INTCON3bits 000FF0  
                   copy_data0 0578              __size_of_InitApp 00A2                      __Hrparam 0000  
                    __Lrparam 0000                      _diameter 001B                      _high_isr 0008  
               __size_of_main 0284  __size_of_ConfigureOscillator 000C                      _overflow 002D  
                    int$flags 0053                _ADC_value_dist 0029         __CFG_CPUDIV$OSC1_PLL2 000000  
                  _INTCONbits 000FF2                   _MOT_1_count 0027                   _MOT_2_count 0025  
                 _MOT_3_count 0023                   _MOT_4_count 0021                      intlevel2 0000  
                  _OSCCONbits 000FD3           __CFG_FOSC$INTOSC_EC 000000  

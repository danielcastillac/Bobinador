

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Thu Aug 15 20:28:26 2019

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F2550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    18                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    19                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    20                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    21                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    22  0000                     
    23                           ; Version 1.45
    24                           ; Generated 16/11/2017 GMT
    25                           ; 
    26                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC18F2550 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57  0000                     
    58                           	psect	idataCOMRAM
    59  0006A8                     __pidataCOMRAM:
    60                           	opt stack 0
    61                           
    62                           ;initializer for _PWM_duty
    63  0006A8  0032               	dw	50
    64                           
    65                           ;initializer for _motor1
    66  0006AA  0001               	dw	1
    67                           
    68                           ;initializer for _count_4
    69  0006AC  0005               	dw	5
    70                           
    71                           ;initializer for _count_3
    72  0006AE  0005               	dw	5
    73                           
    74                           ;initializer for _count_2
    75  0006B0  0005               	dw	5
    76                           
    77                           ;initializer for _count_1
    78  0006B2  0005               	dw	5
    79                           
    80                           	psect	nvCOMRAM
    81  00004D                     __pnvCOMRAM:
    82                           	opt stack 0
    83  00004D                     _MOT_4:
    84                           	opt stack 0
    85  00004D                     	ds	1
    86  00004E                     _MOT_3:
    87                           	opt stack 0
    88  00004E                     	ds	1
    89  00004F                     _MOT_2:
    90                           	opt stack 0
    91  00004F                     	ds	1
    92  000050                     _MOT_1:
    93                           	opt stack 0
    94  000050                     	ds	1
    95  0000                     _ADRES	set	4035
    96  0000                     _TMR0	set	4054
    97  0000                     _T2CONbits	set	4042
    98  0000                     _CCP1CONbits	set	4029
    99  0000                     _PR2	set	4043
   100  0000                     _SPBRG	set	4015
   101  0000                     _T0CONbits	set	4053
   102  0000                     _INTCON2bits	set	4081
   103  0000                     _RCONbits	set	4048
   104  0000                     _TRISBbits	set	3987
   105  0000                     _TRISCbits	set	3988
   106  0000                     _PIE1bits	set	3997
   107  0000                     _ADCON2	set	4032
   108  0000                     _ADCON0bits	set	4034
   109  0000                     _TRISAbits	set	3986
   110  0000                     _ADCON1	set	4033
   111  0000                     _LATC	set	3979
   112  0000                     _PORTC	set	3970
   113  0000                     _LATB	set	3978
   114  0000                     _PORTB	set	3969
   115  0000                     _LATA	set	3977
   116  0000                     _PORTA	set	3968
   117  0000                     _OSCCONbits	set	4051
   118  0000                     _CCPR1L	set	4030
   119  0000                     _INTCON3bits	set	4080
   120  0000                     _TXREG	set	4013
   121  0000                     _RCREG	set	4014
   122  0000                     _PIR1bits	set	3998
   123  0000                     _PORTBbits	set	3969
   124  0000                     _LATBbits	set	3978
   125  0000                     _PORTCbits	set	3970
   126  0000                     _LATCbits	set	3979
   127  0000                     _PORTAbits	set	3968
   128  0000                     _LATAbits	set	3977
   129  0000                     _INTCONbits	set	4082
   130  0000                     _TXIE	set	31980
   131  0000                     _RCIE	set	31981
   132  0000                     _RX9	set	32094
   133  0000                     _TX9	set	32102
   134  0000                     _CREN	set	32092
   135  0000                     _TXEN	set	32101
   136  0000                     _SYNC	set	32100
   137  0000                     _SPEN	set	32095
   138  0000                     _BRG16	set	32195
   139  0000                     _BRGH	set	32098
   140  0000                     _GODONE	set	32273
   141  0000                     _TXIF	set	31988
   142                           
   143                           ; #config settings
   144  0000                     
   145                           	psect	cinit
   146  00063E                     __pcinit:
   147                           	opt stack 0
   148  00063E                     start_initialization:
   149                           	opt stack 0
   150  00063E                     __initialization:
   151                           	opt stack 0
   152                           
   153                           ; Initialize objects allocated to COMRAM (12 bytes)
   154                           ; load TBLPTR registers with __pidataCOMRAM
   155  00063E  0EA8               	movlw	low __pidataCOMRAM
   156  000640  6EF6               	movwf	tblptrl,c
   157  000642  0E06               	movlw	high __pidataCOMRAM
   158  000644  6EF7               	movwf	tblptrh,c
   159  000646  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   160  000648  6EF8               	movwf	tblptru,c
   161  00064A  EE00  F041         	lfsr	0,__pdataCOMRAM
   162  00064E  EE10 F00C          	lfsr	1,12
   163  000652                     copy_data0:
   164  000652  0009               	tblrd		*+
   165  000654  CFF5 FFEE          	movff	tablat,postinc0
   166  000658  50E5               	movf	postdec1,w,c
   167  00065A  50E1               	movf	fsr1l,w,c
   168  00065C  E1FA               	bnz	copy_data0
   169                           
   170                           ; Clear objects allocated to BANK0 (20 bytes)
   171  00065E  EE00  F060         	lfsr	0,__pbssBANK0
   172  000662  0E14               	movlw	20
   173  000664                     clear_0:
   174  000664  6AEE               	clrf	postinc0,c
   175  000666  06E8               	decf	wreg,f,c
   176  000668  E1FD               	bnz	clear_0
   177                           
   178                           ; Clear objects allocated to COMRAM (45 bytes)
   179  00066A  EE00  F001         	lfsr	0,__pbssCOMRAM
   180  00066E  0E2D               	movlw	45
   181  000670                     clear_1:
   182  000670  6AEE               	clrf	postinc0,c
   183  000672  06E8               	decf	wreg,f,c
   184  000674  E1FD               	bnz	clear_1
   185  000676                     end_of_initialization:
   186                           	opt stack 0
   187  000676                     __end_of__initialization:
   188                           	opt stack 0
   189  000676  9051               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   190  000678  9251               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   191  00067A  0100               	movlb	0
   192  00067C  EF09  F000         	goto	_main	;jump to C main() function
   193                           tblptru	equ	0xFF8
   194                           tblptrh	equ	0xFF7
   195                           tblptrl	equ	0xFF6
   196                           tablat	equ	0xFF5
   197                           postinc0	equ	0xFEE
   198                           wreg	equ	0xFE8
   199                           postdec1	equ	0xFE5
   200                           fsr1l	equ	0xFE1
   201                           
   202                           	psect	bssCOMRAM
   203  000001                     __pbssCOMRAM:
   204                           	opt stack 0
   205  000001                     _send:
   206                           	opt stack 0
   207  000001                     	ds	7
   208  000008                     _mot_4_step_count:
   209                           	opt stack 0
   210  000008                     	ds	2
   211  00000A                     _speed:
   212                           	opt stack 0
   213  00000A                     	ds	2
   214  00000C                     _turns:
   215                           	opt stack 0
   216  00000C                     	ds	2
   217  00000E                     _length:
   218                           	opt stack 0
   219  00000E                     	ds	2
   220  000010                     _diameter:
   221                           	opt stack 0
   222  000010                     	ds	2
   223  000012                     _caliber:
   224                           	opt stack 0
   225  000012                     	ds	2
   226  000014                     _motor2:
   227                           	opt stack 0
   228  000014                     	ds	2
   229  000016                     _mot_4_steps:
   230                           	opt stack 0
   231  000016                     	ds	2
   232  000018                     _MOT_4_count:
   233                           	opt stack 0
   234  000018                     	ds	2
   235  00001A                     _MOT_3_count:
   236                           	opt stack 0
   237  00001A                     	ds	2
   238  00001C                     _MOT_2_count:
   239                           	opt stack 0
   240  00001C                     	ds	2
   241  00001E                     _MOT_1_count:
   242                           	opt stack 0
   243  00001E                     	ds	2
   244  000020                     _ADC_value_press:
   245                           	opt stack 0
   246  000020                     	ds	2
   247  000022                     _overflow:
   248                           	opt stack 0
   249  000022                     	ds	2
   250  000024                     _n:
   251                           	opt stack 0
   252  000024                     	ds	2
   253  000026                     _enable:
   254                           	opt stack 0
   255  000026                     	ds	1
   256  000027                     _busy_flag:
   257                           	opt stack 0
   258  000027                     	ds	1
   259  000028                     _DIR_4:
   260                           	opt stack 0
   261  000028                     	ds	1
   262  000029                     _DIR_2:
   263                           	opt stack 0
   264  000029                     	ds	1
   265  00002A                     _DIR_1:
   266                           	opt stack 0
   267  00002A                     	ds	1
   268  00002B                     _RA0state:
   269                           	opt stack 0
   270  00002B                     	ds	1
   271  00002C                     _recibi:
   272                           	opt stack 0
   273  00002C                     	ds	1
   274  00002D                     _DIR_3:
   275                           	opt stack 0
   276  00002D                     	ds	1
   277                           tblptru	equ	0xFF8
   278                           tblptrh	equ	0xFF7
   279                           tblptrl	equ	0xFF6
   280                           tablat	equ	0xFF5
   281                           postinc0	equ	0xFEE
   282                           wreg	equ	0xFE8
   283                           postdec1	equ	0xFE5
   284                           fsr1l	equ	0xFE1
   285                           
   286                           	psect	dataCOMRAM
   287  000041                     __pdataCOMRAM:
   288                           	opt stack 0
   289  000041                     _PWM_duty:
   290                           	opt stack 0
   291  000041                     	ds	2
   292  000043                     _motor1:
   293                           	opt stack 0
   294  000043                     	ds	2
   295  000045                     _count_4:
   296                           	opt stack 0
   297  000045                     	ds	2
   298  000047                     _count_3:
   299                           	opt stack 0
   300  000047                     	ds	2
   301  000049                     _count_2:
   302                           	opt stack 0
   303  000049                     	ds	2
   304  00004B                     _count_1:
   305                           	opt stack 0
   306  00004B                     	ds	2
   307                           tblptru	equ	0xFF8
   308                           tblptrh	equ	0xFF7
   309                           tblptrl	equ	0xFF6
   310                           tablat	equ	0xFF5
   311                           postinc0	equ	0xFEE
   312                           wreg	equ	0xFE8
   313                           postdec1	equ	0xFE5
   314                           fsr1l	equ	0xFE1
   315                           
   316                           	psect	bssBANK0
   317  000060                     __pbssBANK0:
   318                           	opt stack 0
   319  000060                     _palabra:
   320                           	opt stack 0
   321  000060                     	ds	20
   322                           tblptru	equ	0xFF8
   323                           tblptrh	equ	0xFF7
   324                           tblptrl	equ	0xFF6
   325                           tablat	equ	0xFF5
   326                           postinc0	equ	0xFEE
   327                           wreg	equ	0xFE8
   328                           postdec1	equ	0xFE5
   329                           fsr1l	equ	0xFE1
   330                           
   331                           	psect	cstackBANK0
   332  000074                     __pcstackBANK0:
   333                           	opt stack 0
   334  000074                     ?___wmul:
   335                           	opt stack 0
   336  000074                     ___wmul@multiplier:
   337                           	opt stack 0
   338                           
   339                           ; 2 bytes @ 0x0
   340  000074                     	ds	2
   341  000076                     ___wmul@multiplicand:
   342                           	opt stack 0
   343                           
   344                           ; 2 bytes @ 0x2
   345  000076                     	ds	2
   346  000078                     ___wmul@product:
   347                           	opt stack 0
   348                           
   349                           ; 2 bytes @ 0x4
   350  000078                     	ds	2
   351  00007A                     ??_main:
   352                           
   353                           ; 1 bytes @ 0x6
   354  00007A                     	ds	2
   355                           tblptru	equ	0xFF8
   356                           tblptrh	equ	0xFF7
   357                           tblptrl	equ	0xFF6
   358                           tablat	equ	0xFF5
   359                           postinc0	equ	0xFEE
   360                           wreg	equ	0xFE8
   361                           postdec1	equ	0xFE5
   362                           fsr1l	equ	0xFE1
   363                           
   364                           	psect	cstackCOMRAM
   365  00002E                     __pcstackCOMRAM:
   366                           	opt stack 0
   367  00002E                     ??_high_isr:
   368  00002E                     
   369                           ; 1 bytes @ 0x0
   370  00002E                     	ds	19
   371                           tblptru	equ	0xFF8
   372                           tblptrh	equ	0xFF7
   373                           tblptrl	equ	0xFF6
   374                           tablat	equ	0xFF5
   375                           postinc0	equ	0xFEE
   376                           wreg	equ	0xFE8
   377                           postdec1	equ	0xFE5
   378                           fsr1l	equ	0xFE1
   379                           
   380 ;;
   381 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   382 ;;
   383 ;; *************** function _main *****************
   384 ;; Defined at:
   385 ;;		line 74 in file "main.c"
   386 ;; Parameters:    Size  Location     Type
   387 ;;		None
   388 ;; Auto vars:     Size  Location     Type
   389 ;;		None
   390 ;; Return value:  Size  Location     Type
   391 ;;                  1    wreg      void 
   392 ;; Registers used:
   393 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   394 ;; Tracked objects:
   395 ;;		On entry : 0/0
   396 ;;		On exit  : 0/0
   397 ;;		Unchanged: 0/0
   398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   399 ;;      Params:         0       0       0       0       0       0       0       0       0
   400 ;;      Locals:         0       0       0       0       0       0       0       0       0
   401 ;;      Temps:          0       2       0       0       0       0       0       0       0
   402 ;;      Totals:         0       2       0       0       0       0       0       0       0
   403 ;;Total ram usage:        2 bytes
   404 ;; Hardware stack levels required when called:    2
   405 ;; This function calls:
   406 ;;		_ConfigureOscillator
   407 ;;		_InitApp
   408 ;;		___wmul
   409 ;; This function is called by:
   410 ;;		Startup code after reset
   411 ;; This function uses a non-reentrant model
   412 ;;
   413                           
   414                           	psect	text0
   415  000012                     __ptext0:
   416                           	opt stack 0
   417  000012                     _main:
   418                           	opt stack 29
   419                           
   420                           ;main.c: 76: ConfigureOscillator();
   421                           
   422                           ;incstack = 0
   423  000012  EC5A  F003         	call	_ConfigureOscillator	;wreg free
   424                           
   425                           ;main.c: 79: InitApp();
   426  000016  ECC9  F002         	call	_InitApp	;wreg free
   427                           
   428                           ;main.c: 80: MOT_1 = 1;
   429  00001A  0E01               	movlw	1
   430  00001C  6E50               	movwf	_MOT_1,c
   431                           
   432                           ;main.c: 81: MOT_2 = 1;
   433  00001E  0E01               	movlw	1
   434  000020  6E4F               	movwf	_MOT_2,c
   435                           
   436                           ;main.c: 82: MOT_3 = 1;
   437  000022  0E01               	movlw	1
   438  000024  6E4E               	movwf	_MOT_3,c
   439                           
   440                           ;main.c: 83: MOT_4 = 1;
   441  000026  0E01               	movlw	1
   442  000028  6E4D               	movwf	_MOT_4,c
   443  00002A                     
   444                           ;main.c: 86: CCPR1L = PWM_duty;
   445  00002A  C041  FFBE         	movff	_PWM_duty,4030	;volatile
   446                           
   447                           ;main.c: 88: LATAbits.LA2 = DIR_1;
   448  00002E  B02A               	btfsc	_DIR_1,0,c
   449  000030  D002               	bra	u1265
   450  000032  9489               	bcf	3977,2,c	;volatile
   451  000034  D001               	bra	u1266
   452  000036                     u1265:
   453  000036  8489               	bsf	3977,2,c	;volatile
   454  000038                     u1266:
   455                           
   456                           ;main.c: 89: LATAbits.LA4 = DIR_2;
   457  000038  B029               	btfsc	_DIR_2,0,c
   458  00003A  D002               	bra	u1275
   459  00003C  9889               	bcf	3977,4,c	;volatile
   460  00003E  D001               	bra	u1276
   461  000040                     u1275:
   462  000040  8889               	bsf	3977,4,c	;volatile
   463  000042                     u1276:
   464                           
   465                           ;main.c: 90: LATCbits.LC0 = DIR_3;
   466  000042  B02D               	btfsc	_DIR_3,0,c
   467  000044  D002               	bra	u1285
   468  000046  908B               	bcf	3979,0,c	;volatile
   469  000048  D001               	bra	u1286
   470  00004A                     u1285:
   471  00004A  808B               	bsf	3979,0,c	;volatile
   472  00004C                     u1286:
   473                           
   474                           ;main.c: 91: LATBbits.LB7 = DIR_4;
   475  00004C  B028               	btfsc	_DIR_4,0,c
   476  00004E  D002               	bra	u1295
   477  000050  9E8A               	bcf	3978,7,c	;volatile
   478  000052  D001               	bra	u1296
   479  000054                     u1295:
   480  000054  8E8A               	bsf	3978,7,c	;volatile
   481  000056                     u1296:
   482                           
   483                           ;main.c: 92: LATBbits.LB4 = enable;
   484  000056  B026               	btfsc	_enable,0,c
   485  000058  D002               	bra	u1305
   486  00005A  988A               	bcf	3978,4,c	;volatile
   487  00005C  D001               	bra	u1306
   488  00005E                     u1305:
   489  00005E  888A               	bsf	3978,4,c	;volatile
   490  000060                     u1306:
   491                           
   492                           ;main.c: 93: LATBbits.LB5 = !enable;
   493  000060  5026               	movf	_enable,w,c
   494  000062  A4D8               	btfss	status,2,c
   495  000064  D004               	goto	u1310
   496  000066  0100               	movlb	0	; () banked
   497  000068  6B7A               	clrf	??_main& (0+255),b
   498  00006A  2B7A               	incf	??_main& (0+255),f,b
   499  00006C  D002               	goto	u1328
   500  00006E                     u1310:
   501  00006E  0100               	movlb	0	; () banked
   502  000070  6B7A               	clrf	??_main& (0+255),b
   503  000072                     u1328:
   504  000072  3B7A               	swapf	??_main& (0+255),f,b
   505  000074  477A               	rlncf	??_main& (0+255),f,b
   506  000076  508A               	movf	3978,w,c	;volatile
   507  000078  197A               	xorwf	??_main& (0+255),w,b
   508  00007A  0BDF               	andlw	-33
   509  00007C  197A               	xorwf	??_main& (0+255),w,b
   510  00007E  6E8A               	movwf	3978,c	;volatile
   511                           
   512                           ; BSR set to: 0
   513                           ;main.c: 100: if (recibi == 1) {
   514  000080  042C               	decf	_recibi,w,c
   515  000082  A4D8               	btfss	status,2,c
   516  000084  D174               	goto	l162
   517                           
   518                           ; BSR set to: 0
   519                           ;main.c: 102: recibi = 0;
   520  000086  0E00               	movlw	0
   521  000088  6E2C               	movwf	_recibi,c
   522                           
   523                           ; BSR set to: 0
   524                           ;main.c: 104: if (palabra[0] == 'B') {
   525  00008A  0E42               	movlw	66
   526  00008C  1960               	xorwf	_palabra& (0+255),w,b
   527  00008E  A4D8               	btfss	status,2,c
   528  000090  D01B               	goto	l163
   529                           
   530                           ; BSR set to: 0
   531                           ;main.c: 106: PWM_duty = ((palabra[1] - 48) * 10) + ((palabra[2] - 48));
   532  000092  0ED0               	movlw	208
   533  000094  2561               	addwf	(_palabra+1)& (0+255),w,b
   534  000096  6F74               	movwf	___wmul@multiplier& (0+255),b
   535  000098  6B75               	clrf	(___wmul@multiplier+1)& (0+255),b
   536  00009A  0EFF               	movlw	255
   537  00009C  2375               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   538  00009E  0E00               	movlw	0
   539  0000A0  6F77               	movwf	(___wmul@multiplicand+1)& (0+255),b
   540  0000A2  0E0A               	movlw	10
   541  0000A4  6F76               	movwf	___wmul@multiplicand& (0+255),b
   542  0000A6  EC40  F003         	call	___wmul	;wreg free
   543  0000AA  0100               	movlb	0	; () banked
   544  0000AC  5162               	movf	(_palabra+2)& (0+255),w,b
   545  0000AE  6F7A               	movwf	??_main& (0+255),b
   546  0000B0  6B7B               	clrf	(??_main+1)& (0+255),b
   547  0000B2  5174               	movf	?___wmul& (0+255),w,b
   548  0000B4  277A               	addwf	??_main& (0+255),f,b
   549  0000B6  5175               	movf	(?___wmul+1)& (0+255),w,b
   550  0000B8  237B               	addwfc	(??_main+1)& (0+255),f,b
   551  0000BA  0ED0               	movlw	208
   552  0000BC  257A               	addwf	??_main& (0+255),w,b
   553  0000BE  6E41               	movwf	_PWM_duty,c
   554  0000C0  0EFF               	movlw	255
   555  0000C2  217B               	addwfc	(??_main+1)& (0+255),w,b
   556  0000C4  6E42               	movwf	_PWM_duty+1,c
   557                           
   558                           ;main.c: 107: } else if (palabra[0] == 'A') {
   559  0000C6  D15F               	goto	l188
   560  0000C8                     l163:
   561                           
   562                           ; BSR set to: 0
   563                           
   564                           ; BSR set to: 0
   565  0000C8  0E41               	movlw	65
   566  0000CA  1960               	xorwf	_palabra& (0+255),w,b
   567  0000CC  A4D8               	btfss	status,2,c
   568  0000CE  D0E5               	goto	l165
   569                           
   570                           ; BSR set to: 0
   571                           ;main.c: 109: caliber = ((palabra[1] - 48) * 10) + ((palabra[2] - 48));
   572  0000D0  0ED0               	movlw	208
   573  0000D2  2561               	addwf	(_palabra+1)& (0+255),w,b
   574  0000D4  6F74               	movwf	___wmul@multiplier& (0+255),b
   575  0000D6  6B75               	clrf	(___wmul@multiplier+1)& (0+255),b
   576  0000D8  0EFF               	movlw	255
   577  0000DA  2375               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   578  0000DC  0E00               	movlw	0
   579  0000DE  6F77               	movwf	(___wmul@multiplicand+1)& (0+255),b
   580  0000E0  0E0A               	movlw	10
   581  0000E2  6F76               	movwf	___wmul@multiplicand& (0+255),b
   582  0000E4  EC40  F003         	call	___wmul	;wreg free
   583  0000E8  0100               	movlb	0	; () banked
   584  0000EA  5162               	movf	(_palabra+2)& (0+255),w,b
   585  0000EC  6F7A               	movwf	??_main& (0+255),b
   586  0000EE  6B7B               	clrf	(??_main+1)& (0+255),b
   587  0000F0  5174               	movf	?___wmul& (0+255),w,b
   588  0000F2  277A               	addwf	??_main& (0+255),f,b
   589  0000F4  5175               	movf	(?___wmul+1)& (0+255),w,b
   590  0000F6  237B               	addwfc	(??_main+1)& (0+255),f,b
   591  0000F8  0ED0               	movlw	208
   592  0000FA  257A               	addwf	??_main& (0+255),w,b
   593  0000FC  6E12               	movwf	_caliber,c
   594  0000FE  0EFF               	movlw	255
   595  000100  217B               	addwfc	(??_main+1)& (0+255),w,b
   596  000102  6E13               	movwf	_caliber+1,c
   597                           
   598                           ;main.c: 110: diameter = ((palabra[3] - 48) * 1000) + ((palabra[4] - 48) * 100) + ((pala
      +                          bra[5] - 48) * 10) + ((palabra[6] - 48));
   599  000104  0ED0               	movlw	208
   600  000106  2563               	addwf	(_palabra+3)& (0+255),w,b
   601  000108  6F74               	movwf	___wmul@multiplier& (0+255),b
   602  00010A  6B75               	clrf	(___wmul@multiplier+1)& (0+255),b
   603  00010C  0EFF               	movlw	255
   604  00010E  2375               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   605  000110  0E03               	movlw	3
   606  000112  6F77               	movwf	(___wmul@multiplicand+1)& (0+255),b
   607  000114  0EE8               	movlw	232
   608  000116  6F76               	movwf	___wmul@multiplicand& (0+255),b
   609  000118  EC40  F003         	call	___wmul	;wreg free
   610  00011C  0100               	movlb	0	; () banked
   611  00011E  5166               	movf	(_palabra+6)& (0+255),w,b
   612  000120  6F7A               	movwf	??_main& (0+255),b
   613  000122  6B7B               	clrf	(??_main+1)& (0+255),b
   614  000124  5174               	movf	?___wmul& (0+255),w,b
   615  000126  277A               	addwf	??_main& (0+255),f,b
   616  000128  5175               	movf	(?___wmul+1)& (0+255),w,b
   617  00012A  237B               	addwfc	(??_main+1)& (0+255),f,b
   618  00012C  0ED0               	movlw	208
   619  00012E  2564               	addwf	(_palabra+4)& (0+255),w,b
   620  000130  6F74               	movwf	___wmul@multiplier& (0+255),b
   621  000132  6B75               	clrf	(___wmul@multiplier+1)& (0+255),b
   622  000134  0EFF               	movlw	255
   623  000136  2375               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   624  000138  0E00               	movlw	0
   625  00013A  6F77               	movwf	(___wmul@multiplicand+1)& (0+255),b
   626  00013C  0E64               	movlw	100
   627  00013E  6F76               	movwf	___wmul@multiplicand& (0+255),b
   628  000140  EC40  F003         	call	___wmul	;wreg free
   629  000144  0100               	movlb	0	; () banked
   630  000146  5174               	movf	?___wmul& (0+255),w,b
   631  000148  277A               	addwf	??_main& (0+255),f,b
   632  00014A  5175               	movf	(?___wmul+1)& (0+255),w,b
   633  00014C  237B               	addwfc	(??_main+1)& (0+255),f,b
   634  00014E  0ED0               	movlw	208
   635  000150  2565               	addwf	(_palabra+5)& (0+255),w,b
   636  000152  6F74               	movwf	___wmul@multiplier& (0+255),b
   637  000154  6B75               	clrf	(___wmul@multiplier+1)& (0+255),b
   638  000156  0EFF               	movlw	255
   639  000158  2375               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   640  00015A  0E00               	movlw	0
   641  00015C  6F77               	movwf	(___wmul@multiplicand+1)& (0+255),b
   642  00015E  0E0A               	movlw	10
   643  000160  6F76               	movwf	___wmul@multiplicand& (0+255),b
   644  000162  EC40  F003         	call	___wmul	;wreg free
   645  000166  0100               	movlb	0	; () banked
   646  000168  5174               	movf	?___wmul& (0+255),w,b
   647  00016A  277A               	addwf	??_main& (0+255),f,b
   648  00016C  5175               	movf	(?___wmul+1)& (0+255),w,b
   649  00016E  237B               	addwfc	(??_main+1)& (0+255),f,b
   650  000170  0ED0               	movlw	208
   651  000172  257A               	addwf	??_main& (0+255),w,b
   652  000174  6E10               	movwf	_diameter,c
   653  000176  0EFF               	movlw	255
   654  000178  217B               	addwfc	(??_main+1)& (0+255),w,b
   655  00017A  6E11               	movwf	_diameter+1,c
   656                           
   657                           ;main.c: 111: length = ((palabra[7] - 48) * 10000) + ((palabra[8] - 48) * 1000) + ((pala
      +                          bra[9] - 48) * 100) + ((palabra[10] - 48) * 10) + ((palabra[11] - 48));
   658  00017C  0ED0               	movlw	208
   659  00017E  2567               	addwf	(_palabra+7)& (0+255),w,b
   660  000180  6F74               	movwf	___wmul@multiplier& (0+255),b
   661  000182  6B75               	clrf	(___wmul@multiplier+1)& (0+255),b
   662  000184  0EFF               	movlw	255
   663  000186  2375               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   664  000188  0E27               	movlw	39
   665  00018A  6F77               	movwf	(___wmul@multiplicand+1)& (0+255),b
   666  00018C  0E10               	movlw	16
   667  00018E  6F76               	movwf	___wmul@multiplicand& (0+255),b
   668  000190  EC40  F003         	call	___wmul	;wreg free
   669  000194  0100               	movlb	0	; () banked
   670  000196  516B               	movf	(_palabra+11)& (0+255),w,b
   671  000198  6F7A               	movwf	??_main& (0+255),b
   672  00019A  6B7B               	clrf	(??_main+1)& (0+255),b
   673  00019C  5174               	movf	?___wmul& (0+255),w,b
   674  00019E  277A               	addwf	??_main& (0+255),f,b
   675  0001A0  5175               	movf	(?___wmul+1)& (0+255),w,b
   676  0001A2  237B               	addwfc	(??_main+1)& (0+255),f,b
   677  0001A4  0ED0               	movlw	208
   678  0001A6  2568               	addwf	(_palabra+8)& (0+255),w,b
   679  0001A8  6F74               	movwf	___wmul@multiplier& (0+255),b
   680  0001AA  6B75               	clrf	(___wmul@multiplier+1)& (0+255),b
   681  0001AC  0EFF               	movlw	255
   682  0001AE  2375               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   683  0001B0  0E03               	movlw	3
   684  0001B2  6F77               	movwf	(___wmul@multiplicand+1)& (0+255),b
   685  0001B4  0EE8               	movlw	232
   686  0001B6  6F76               	movwf	___wmul@multiplicand& (0+255),b
   687  0001B8  EC40  F003         	call	___wmul	;wreg free
   688  0001BC  0100               	movlb	0	; () banked
   689  0001BE  5174               	movf	?___wmul& (0+255),w,b
   690  0001C0  277A               	addwf	??_main& (0+255),f,b
   691  0001C2  5175               	movf	(?___wmul+1)& (0+255),w,b
   692  0001C4  237B               	addwfc	(??_main+1)& (0+255),f,b
   693  0001C6  0ED0               	movlw	208
   694  0001C8  2569               	addwf	(_palabra+9)& (0+255),w,b
   695  0001CA  6F74               	movwf	___wmul@multiplier& (0+255),b
   696  0001CC  6B75               	clrf	(___wmul@multiplier+1)& (0+255),b
   697  0001CE  0EFF               	movlw	255
   698  0001D0  2375               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   699  0001D2  0E00               	movlw	0
   700  0001D4  6F77               	movwf	(___wmul@multiplicand+1)& (0+255),b
   701  0001D6  0E64               	movlw	100
   702  0001D8  6F76               	movwf	___wmul@multiplicand& (0+255),b
   703  0001DA  EC40  F003         	call	___wmul	;wreg free
   704  0001DE  0100               	movlb	0	; () banked
   705  0001E0  5174               	movf	?___wmul& (0+255),w,b
   706  0001E2  277A               	addwf	??_main& (0+255),f,b
   707  0001E4  5175               	movf	(?___wmul+1)& (0+255),w,b
   708  0001E6  237B               	addwfc	(??_main+1)& (0+255),f,b
   709  0001E8  0ED0               	movlw	208
   710  0001EA  256A               	addwf	(_palabra+10)& (0+255),w,b
   711  0001EC  6F74               	movwf	___wmul@multiplier& (0+255),b
   712  0001EE  6B75               	clrf	(___wmul@multiplier+1)& (0+255),b
   713  0001F0  0EFF               	movlw	255
   714  0001F2  2375               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   715  0001F4  0E00               	movlw	0
   716  0001F6  6F77               	movwf	(___wmul@multiplicand+1)& (0+255),b
   717  0001F8  0E0A               	movlw	10
   718  0001FA  6F76               	movwf	___wmul@multiplicand& (0+255),b
   719  0001FC  EC40  F003         	call	___wmul	;wreg free
   720  000200  0100               	movlb	0	; () banked
   721  000202  5174               	movf	?___wmul& (0+255),w,b
   722  000204  277A               	addwf	??_main& (0+255),f,b
   723  000206  5175               	movf	(?___wmul+1)& (0+255),w,b
   724  000208  237B               	addwfc	(??_main+1)& (0+255),f,b
   725  00020A  0ED0               	movlw	208
   726  00020C  257A               	addwf	??_main& (0+255),w,b
   727  00020E  6E0E               	movwf	_length,c
   728  000210  0EFF               	movlw	255
   729  000212  217B               	addwfc	(??_main+1)& (0+255),w,b
   730  000214  6E0F               	movwf	_length+1,c
   731                           
   732                           ;main.c: 112: turns = ((palabra[12] - 48) * 1000) + ((palabra[13] - 48) * 100) + ((palab
      +                          ra[14] - 48) * 10) + ((palabra[15] - 48));
   733  000216  0ED0               	movlw	208
   734  000218  256C               	addwf	(_palabra+12)& (0+255),w,b
   735  00021A  6F74               	movwf	___wmul@multiplier& (0+255),b
   736  00021C  6B75               	clrf	(___wmul@multiplier+1)& (0+255),b
   737  00021E  0EFF               	movlw	255
   738  000220  2375               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   739  000222  0E03               	movlw	3
   740  000224  6F77               	movwf	(___wmul@multiplicand+1)& (0+255),b
   741  000226  0EE8               	movlw	232
   742  000228  6F76               	movwf	___wmul@multiplicand& (0+255),b
   743  00022A  EC40  F003         	call	___wmul	;wreg free
   744  00022E  0100               	movlb	0	; () banked
   745  000230  516F               	movf	(_palabra+15)& (0+255),w,b
   746  000232  6F7A               	movwf	??_main& (0+255),b
   747  000234  6B7B               	clrf	(??_main+1)& (0+255),b
   748  000236  5174               	movf	?___wmul& (0+255),w,b
   749  000238  277A               	addwf	??_main& (0+255),f,b
   750  00023A  5175               	movf	(?___wmul+1)& (0+255),w,b
   751  00023C  237B               	addwfc	(??_main+1)& (0+255),f,b
   752  00023E  0ED0               	movlw	208
   753  000240  256D               	addwf	(_palabra+13)& (0+255),w,b
   754  000242  6F74               	movwf	___wmul@multiplier& (0+255),b
   755  000244  6B75               	clrf	(___wmul@multiplier+1)& (0+255),b
   756  000246  0EFF               	movlw	255
   757  000248  2375               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   758  00024A  0E00               	movlw	0
   759  00024C  6F77               	movwf	(___wmul@multiplicand+1)& (0+255),b
   760  00024E  0E64               	movlw	100
   761  000250  6F76               	movwf	___wmul@multiplicand& (0+255),b
   762  000252  EC40  F003         	call	___wmul	;wreg free
   763  000256  0100               	movlb	0	; () banked
   764  000258  5174               	movf	?___wmul& (0+255),w,b
   765  00025A  277A               	addwf	??_main& (0+255),f,b
   766  00025C  5175               	movf	(?___wmul+1)& (0+255),w,b
   767  00025E  237B               	addwfc	(??_main+1)& (0+255),f,b
   768  000260  0ED0               	movlw	208
   769  000262  256E               	addwf	(_palabra+14)& (0+255),w,b
   770  000264  6F74               	movwf	___wmul@multiplier& (0+255),b
   771  000266  6B75               	clrf	(___wmul@multiplier+1)& (0+255),b
   772  000268  0EFF               	movlw	255
   773  00026A  2375               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   774  00026C  0E00               	movlw	0
   775  00026E  6F77               	movwf	(___wmul@multiplicand+1)& (0+255),b
   776  000270  0E0A               	movlw	10
   777  000272  6F76               	movwf	___wmul@multiplicand& (0+255),b
   778  000274  EC40  F003         	call	___wmul	;wreg free
   779  000278  0100               	movlb	0	; () banked
   780  00027A  5174               	movf	?___wmul& (0+255),w,b
   781  00027C  277A               	addwf	??_main& (0+255),f,b
   782  00027E  5175               	movf	(?___wmul+1)& (0+255),w,b
   783  000280  237B               	addwfc	(??_main+1)& (0+255),f,b
   784  000282  0ED0               	movlw	208
   785  000284  257A               	addwf	??_main& (0+255),w,b
   786  000286  6E0C               	movwf	_turns,c
   787  000288  0EFF               	movlw	255
   788  00028A  217B               	addwfc	(??_main+1)& (0+255),w,b
   789  00028C  6E0D               	movwf	_turns+1,c
   790                           
   791                           ; BSR set to: 0
   792                           ;main.c: 113: speed = palabra[15];
   793  00028E  C06F  F00A         	movff	_palabra+15,_speed
   794  000292  6A0B               	clrf	_speed+1,c
   795                           
   796                           ; BSR set to: 0
   797                           ;main.c: 115: busy_flag = 1;
   798  000294  0E01               	movlw	1
   799  000296  6E27               	movwf	_busy_flag,c
   800                           
   801                           ;main.c: 116: } else if (palabra[0] == 'C') {
   802  000298  D076               	goto	l188
   803  00029A                     l165:
   804                           
   805                           ; BSR set to: 0
   806                           
   807                           ; BSR set to: 0
   808  00029A  0E43               	movlw	67
   809  00029C  1960               	xorwf	_palabra& (0+255),w,b
   810  00029E  A4D8               	btfss	status,2,c
   811  0002A0  D008               	goto	l167
   812                           
   813                           ; BSR set to: 0
   814                           ;main.c: 118: enable = !enable;
   815  0002A2  5026               	movf	_enable,w,c
   816  0002A4  A4D8               	btfss	status,2,c
   817  0002A6  D002               	goto	u1370
   818  0002A8  0E01               	movlw	1
   819  0002AA  D001               	goto	u1380
   820  0002AC                     u1370:
   821  0002AC  0E00               	movlw	0
   822  0002AE                     u1380:
   823  0002AE  6E26               	movwf	_enable,c
   824                           
   825                           ;main.c: 119: } else if ((palabra[0] == 'D')) {
   826  0002B0  D06A               	goto	l188
   827  0002B2                     l167:
   828                           
   829                           ; BSR set to: 0
   830                           
   831                           ; BSR set to: 0
   832  0002B2  0E44               	movlw	68
   833  0002B4  1960               	xorwf	_palabra& (0+255),w,b
   834  0002B6  A4D8               	btfss	status,2,c
   835  0002B8  D016               	goto	l169
   836                           
   837                           ; BSR set to: 0
   838                           ;main.c: 121: if (palabra[1] == '0') {
   839  0002BA  0E30               	movlw	48
   840  0002BC  1961               	xorwf	(_palabra+1)& (0+255),w,b
   841  0002BE  A4D8               	btfss	status,2,c
   842  0002C0  D004               	goto	l170
   843                           
   844                           ; BSR set to: 0
   845                           ;main.c: 123: MOT_3 = 1;
   846  0002C2  0E01               	movlw	1
   847  0002C4  6E4E               	movwf	_MOT_3,c
   848                           
   849                           ;main.c: 124: DIR_3 = 0;
   850  0002C6  0E00               	movlw	0
   851  0002C8  D007               	goto	L1
   852  0002CA                     l170:
   853                           
   854                           ; BSR set to: 0
   855                           
   856                           ; BSR set to: 0
   857  0002CA  0E31               	movlw	49
   858  0002CC  1961               	xorwf	(_palabra+1)& (0+255),w,b
   859  0002CE  A4D8               	btfss	status,2,c
   860  0002D0  D005               	goto	l172
   861                           
   862                           ; BSR set to: 0
   863                           ;main.c: 127: MOT_3 = 1;
   864  0002D2  0E01               	movlw	1
   865  0002D4  6E4E               	movwf	_MOT_3,c
   866                           
   867                           ;main.c: 128: DIR_3 = 1;
   868  0002D6  0E01               	movlw	1
   869  0002D8                     L1:
   870  0002D8  6E2D               	movwf	_DIR_3,c
   871                           
   872                           ;main.c: 129: } else if (palabra[1] == '2') {
   873  0002DA  D055               	goto	l188
   874  0002DC                     l172:
   875                           
   876                           ; BSR set to: 0
   877                           
   878                           ; BSR set to: 0
   879  0002DC  0E32               	movlw	50
   880  0002DE  1961               	xorwf	(_palabra+1)& (0+255),w,b
   881  0002E0  A4D8               	btfss	status,2,c
   882  0002E2  D051               	goto	l188
   883  0002E4  D041               	goto	u1580
   884  0002E6                     l169:
   885                           
   886                           ; BSR set to: 0
   887                           
   888                           ; BSR set to: 0
   889  0002E6  0E45               	movlw	69
   890  0002E8  1960               	xorwf	_palabra& (0+255),w,b
   891  0002EA  A4D8               	btfss	status,2,c
   892  0002EC  D018               	goto	l176
   893                           
   894                           ; BSR set to: 0
   895                           ;main.c: 138: if (palabra[1] == '0') {
   896  0002EE  0E30               	movlw	48
   897  0002F0  1961               	xorwf	(_palabra+1)& (0+255),w,b
   898  0002F2  A4D8               	btfss	status,2,c
   899  0002F4  D008               	goto	l177
   900                           
   901                           ; BSR set to: 0
   902                           ;main.c: 139: MOT_4 = !MOT_4;
   903  0002F6  504D               	movf	_MOT_4,w,c
   904  0002F8  A4D8               	btfss	status,2,c
   905  0002FA  D002               	goto	u1450
   906  0002FC  0E01               	movlw	1
   907  0002FE  D001               	goto	u1460
   908  000300                     u1450:
   909  000300  0E00               	movlw	0
   910  000302                     u1460:
   911  000302  6E4D               	movwf	_MOT_4,c
   912                           
   913                           ;main.c: 140: } else if (palabra[1] == '1') {
   914  000304  D040               	goto	l188
   915  000306                     l177:
   916                           
   917                           ; BSR set to: 0
   918                           
   919                           ; BSR set to: 0
   920  000306  0E31               	movlw	49
   921  000308  1961               	xorwf	(_palabra+1)& (0+255),w,b
   922  00030A  A4D8               	btfss	status,2,c
   923  00030C  D03C               	goto	l188
   924                           
   925                           ; BSR set to: 0
   926                           ;main.c: 141: DIR_4 = !DIR_4;
   927  00030E  5028               	movf	_DIR_4,w,c
   928  000310  A4D8               	btfss	status,2,c
   929  000312  D002               	goto	u1480
   930  000314  0E01               	movlw	1
   931  000316  D001               	goto	u1490
   932  000318                     u1480:
   933  000318  0E00               	movlw	0
   934  00031A                     u1490:
   935  00031A  6E28               	movwf	_DIR_4,c
   936                           
   937                           ; BSR set to: 0
   938                           ;main.c: 142: }
   939                           ;main.c: 143: } else if (palabra[0] == 'M') {
   940                           
   941                           ; BSR set to: 0
   942  00031C  D034               	goto	l188
   943  00031E                     l176:
   944                           
   945                           ; BSR set to: 0
   946                           
   947                           ; BSR set to: 0
   948  00031E  0E4D               	movlw	77
   949  000320  1960               	xorwf	_palabra& (0+255),w,b
   950  000322  A4D8               	btfss	status,2,c
   951  000324  D030               	goto	l188
   952                           
   953                           ; BSR set to: 0
   954                           ;main.c: 145: if (palabra[1] == '1') {
   955  000326  0E31               	movlw	49
   956  000328  1961               	xorwf	(_palabra+1)& (0+255),w,b
   957  00032A  A4D8               	btfss	status,2,c
   958  00032C  D008               	goto	l182
   959                           
   960                           ; BSR set to: 0
   961                           ;main.c: 146: MOT_1 = !MOT_1;
   962  00032E  5050               	movf	_MOT_1,w,c
   963  000330  A4D8               	btfss	status,2,c
   964  000332  D002               	goto	u1520
   965  000334  0E01               	movlw	1
   966  000336  D001               	goto	u1530
   967  000338                     u1520:
   968  000338  0E00               	movlw	0
   969  00033A                     u1530:
   970  00033A  6E50               	movwf	_MOT_1,c
   971                           
   972                           ;main.c: 147: } else if (palabra[1] == '2') {
   973  00033C  D024               	goto	l188
   974  00033E                     l182:
   975                           
   976                           ; BSR set to: 0
   977                           
   978                           ; BSR set to: 0
   979  00033E  0E32               	movlw	50
   980  000340  1961               	xorwf	(_palabra+1)& (0+255),w,b
   981  000342  A4D8               	btfss	status,2,c
   982  000344  D008               	goto	l184
   983                           
   984                           ; BSR set to: 0
   985                           ;main.c: 148: MOT_2 = !MOT_2;
   986  000346  504F               	movf	_MOT_2,w,c
   987  000348  A4D8               	btfss	status,2,c
   988  00034A  D002               	goto	u1550
   989  00034C  0E01               	movlw	1
   990  00034E  D001               	goto	u1560
   991  000350                     u1550:
   992  000350  0E00               	movlw	0
   993  000352                     u1560:
   994  000352  6E4F               	movwf	_MOT_2,c
   995                           
   996                           ;main.c: 149: } else if (palabra[1] == '3') {
   997  000354  D018               	goto	l188
   998  000356                     l184:
   999                           
  1000                           ; BSR set to: 0
  1001                           
  1002                           ; BSR set to: 0
  1003  000356  0E33               	movlw	51
  1004  000358  1961               	xorwf	(_palabra+1)& (0+255),w,b
  1005  00035A  A4D8               	btfss	status,2,c
  1006  00035C  D014               	goto	l188
  1007                           
  1008                           ; BSR set to: 0
  1009                           ;main.c: 150: MOT_3 = !MOT_3;
  1010  00035E  504E               	movf	_MOT_3,w,c
  1011  000360  A4D8               	btfss	status,2,c
  1012  000362  D002               	goto	u1580
  1013  000364  0E01               	movlw	1
  1014  000366  D001               	goto	u1590
  1015  000368                     u1580:
  1016  000368  0E00               	movlw	0
  1017  00036A                     u1590:
  1018  00036A  6E4E               	movwf	_MOT_3,c
  1019                           
  1020                           ; BSR set to: 0
  1021                           ;main.c: 151: }
  1022                           ;main.c: 152: }
  1023                           ;main.c: 155: } else if (GODONE == 0) {
  1024                           
  1025                           ; BSR set to: 0
  1026                           
  1027                           ; BSR set to: 0
  1028                           
  1029                           ; BSR set to: 0
  1030                           
  1031                           ; BSR set to: 0
  1032                           
  1033                           ; BSR set to: 0
  1034                           
  1035                           ; BSR set to: 0
  1036                           
  1037                           ; BSR set to: 0
  1038                           
  1039                           ; BSR set to: 0
  1040  00036C  D00C               	goto	l188
  1041  00036E                     l162:
  1042                           
  1043                           ; BSR set to: 0
  1044  00036E  B2C2               	btfsc	4034,1,c	;volatile
  1045  000370  D00A               	goto	l188
  1046                           
  1047                           ; BSR set to: 0
  1048                           ;main.c: 157: _delay((unsigned long)((4)*(8000000/4000.0)));
  1049  000372  0E0B               	movlw	11
  1050  000374  0100               	movlb	0	; () banked
  1051  000376  6F7A               	movwf	??_main& (0+255),b
  1052  000378  0E62               	movlw	98
  1053  00037A                     u1627:
  1054  00037A  2EE8               	decfsz	wreg,f,c
  1055  00037C  D7FE               	bra	u1627
  1056  00037E  2F7A               	decfsz	??_main& (0+255),f,b
  1057  000380  D7FC               	bra	u1627
  1058  000382  F000               	nop	
  1059                           
  1060                           ;main.c: 159: GODONE = 1;
  1061  000384  82C2               	bsf	4034,1,c	;volatile
  1062  000386                     l188:
  1063                           
  1064                           ;main.c: 167: }
  1065                           ;main.c: 169: if (mot_4_steps == mot_4_step_count) {
  1066  000386  5008               	movf	_mot_4_step_count,w,c
  1067  000388  1816               	xorwf	_mot_4_steps,w,c
  1068  00038A  E103               	bnz	u1611
  1069  00038C  5009               	movf	_mot_4_step_count+1,w,c
  1070  00038E  1817               	xorwf	_mot_4_steps+1,w,c
  1071  000390  A4D8               	btfss	status,2,c
  1072  000392                     u1611:
  1073  000392  D64B               	goto	l161
  1074                           
  1075                           ;main.c: 171: MOT_4 = 0;
  1076  000394  0E00               	movlw	0
  1077  000396  D648               	goto	L2
  1078  000398                     __end_of_main:
  1079                           	opt stack 0
  1080                           tblptru	equ	0xFF8
  1081                           tblptrh	equ	0xFF7
  1082                           tblptrl	equ	0xFF6
  1083                           tablat	equ	0xFF5
  1084                           postinc0	equ	0xFEE
  1085                           wreg	equ	0xFE8
  1086                           postdec1	equ	0xFE5
  1087                           fsr1l	equ	0xFE1
  1088                           status	equ	0xFD8
  1089                           
  1090 ;; *************** function ___wmul *****************
  1091 ;; Defined at:
  1092 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
  1093 ;; Parameters:    Size  Location     Type
  1094 ;;  multiplier      2    0[BANK0 ] unsigned int 
  1095 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  1096 ;; Auto vars:     Size  Location     Type
  1097 ;;  product         2    4[BANK0 ] unsigned int 
  1098 ;; Return value:  Size  Location     Type
  1099 ;;                  2    0[BANK0 ] unsigned int 
  1100 ;; Registers used:
  1101 ;;		wreg, status,2, status,0, prodl, prodh
  1102 ;; Tracked objects:
  1103 ;;		On entry : 0/0
  1104 ;;		On exit  : 0/0
  1105 ;;		Unchanged: 0/0
  1106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1107 ;;      Params:         0       4       0       0       0       0       0       0       0
  1108 ;;      Locals:         0       2       0       0       0       0       0       0       0
  1109 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1110 ;;      Totals:         0       6       0       0       0       0       0       0       0
  1111 ;;Total ram usage:        6 bytes
  1112 ;; Hardware stack levels used:    1
  1113 ;; Hardware stack levels required when called:    1
  1114 ;; This function calls:
  1115 ;;		Nothing
  1116 ;; This function is called by:
  1117 ;;		_main
  1118 ;; This function uses a non-reentrant model
  1119 ;;
  1120                           
  1121                           	psect	text1
  1122  000680                     __ptext1:
  1123                           	opt stack 0
  1124  000680                     ___wmul:
  1125                           	opt stack 29
  1126                           
  1127                           ;incstack = 0
  1128  000680  0100               	movlb	0	; () banked
  1129  000682  5174               	movf	___wmul@multiplier& (0+255),w,b
  1130  000684  0376               	mulwf	___wmul@multiplicand& (0+255),b
  1131  000686  CFF3 F078          	movff	prodl,___wmul@product
  1132  00068A  CFF4 F079          	movff	prodh,___wmul@product+1
  1133  00068E  5174               	movf	___wmul@multiplier& (0+255),w,b
  1134  000690  0377               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  1135  000692  50F3               	movf	prodl,w,c
  1136  000694  2779               	addwf	(___wmul@product+1)& (0+255),f,b
  1137  000696  5175               	movf	(___wmul@multiplier+1)& (0+255),w,b
  1138  000698  0376               	mulwf	___wmul@multiplicand& (0+255),b
  1139  00069A  50F3               	movf	prodl,w,c
  1140  00069C  2779               	addwf	(___wmul@product+1)& (0+255),f,b
  1141                           
  1142                           ; BSR set to: 0
  1143  00069E  C078  F074         	movff	___wmul@product,?___wmul
  1144  0006A2  C079  F075         	movff	___wmul@product+1,?___wmul+1
  1145  0006A6  0012               	return	
  1146  0006A8                     __end_of___wmul:
  1147                           	opt stack 0
  1148                           tblptru	equ	0xFF8
  1149                           tblptrh	equ	0xFF7
  1150                           tblptrl	equ	0xFF6
  1151                           tablat	equ	0xFF5
  1152                           prodh	equ	0xFF4
  1153                           prodl	equ	0xFF3
  1154                           postinc0	equ	0xFEE
  1155                           wreg	equ	0xFE8
  1156                           postdec1	equ	0xFE5
  1157                           fsr1l	equ	0xFE1
  1158                           status	equ	0xFD8
  1159                           
  1160 ;; *************** function _InitApp *****************
  1161 ;; Defined at:
  1162 ;;		line 33 in file "user.c"
  1163 ;; Parameters:    Size  Location     Type
  1164 ;;		None
  1165 ;; Auto vars:     Size  Location     Type
  1166 ;;		None
  1167 ;; Return value:  Size  Location     Type
  1168 ;;                  1    wreg      void 
  1169 ;; Registers used:
  1170 ;;		wreg, status,2
  1171 ;; Tracked objects:
  1172 ;;		On entry : 0/0
  1173 ;;		On exit  : 0/0
  1174 ;;		Unchanged: 0/0
  1175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1176 ;;      Params:         0       0       0       0       0       0       0       0       0
  1177 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1178 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1179 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1180 ;;Total ram usage:        0 bytes
  1181 ;; Hardware stack levels used:    1
  1182 ;; Hardware stack levels required when called:    1
  1183 ;; This function calls:
  1184 ;;		Nothing
  1185 ;; This function is called by:
  1186 ;;		_main
  1187 ;; This function uses a non-reentrant model
  1188 ;;
  1189                           
  1190                           	psect	text2
  1191  000592                     __ptext2:
  1192                           	opt stack 0
  1193  000592                     _InitApp:
  1194                           	opt stack 29
  1195                           
  1196                           ;user.c: 35: PORTA = 0;
  1197                           
  1198                           ; BSR set to: 0
  1199                           ;incstack = 0
  1200  000592  0E00               	movlw	0
  1201  000594  6E80               	movwf	3968,c	;volatile
  1202                           
  1203                           ;user.c: 36: LATA = 0;
  1204  000596  0E00               	movlw	0
  1205  000598  6E89               	movwf	3977,c	;volatile
  1206                           
  1207                           ;user.c: 37: PORTB = 0;
  1208  00059A  0E00               	movlw	0
  1209  00059C  6E81               	movwf	3969,c	;volatile
  1210                           
  1211                           ;user.c: 38: LATB = 0;
  1212  00059E  0E00               	movlw	0
  1213  0005A0  6E8A               	movwf	3978,c	;volatile
  1214                           
  1215                           ;user.c: 39: PORTC = 0;
  1216  0005A2  0E00               	movlw	0
  1217  0005A4  6E82               	movwf	3970,c	;volatile
  1218                           
  1219                           ;user.c: 40: LATC = 0;
  1220  0005A6  0E00               	movlw	0
  1221  0005A8  6E8B               	movwf	3979,c	;volatile
  1222                           
  1223                           ;user.c: 42: ADCON1 = 0b1101;
  1224  0005AA  0E0D               	movlw	13
  1225  0005AC  6EC1               	movwf	4033,c	;volatile
  1226                           
  1227                           ;user.c: 43: TRISAbits.TRISA0 = 1;
  1228  0005AE  8092               	bsf	3986,0,c	;volatile
  1229                           
  1230                           ;user.c: 44: ADCON0bits.CHS = 0;
  1231  0005B0  94C2               	bcf	4034,2,c	;volatile
  1232  0005B2  96C2               	bcf	4034,3,c	;volatile
  1233  0005B4  98C2               	bcf	4034,4,c	;volatile
  1234  0005B6  9AC2               	bcf	4034,5,c	;volatile
  1235                           
  1236                           ;user.c: 45: ADCON2 = 0b10101100;
  1237  0005B8  0EAC               	movlw	172
  1238  0005BA  6EC0               	movwf	4032,c	;volatile
  1239                           
  1240                           ;user.c: 46: PIE1bits.ADIE = 1;
  1241  0005BC  8C9D               	bsf	3997,6,c	;volatile
  1242                           
  1243                           ;user.c: 47: PIR1bits.ADIF = 0;
  1244  0005BE  9C9E               	bcf	3998,6,c	;volatile
  1245                           
  1246                           ;user.c: 48: ADCON0bits.ADON = 1;
  1247  0005C0  80C2               	bsf	4034,0,c	;volatile
  1248                           
  1249                           ;user.c: 50: TRISAbits.RA2 = 0;
  1250  0005C2  9492               	bcf	3986,2,c	;volatile
  1251                           
  1252                           ;user.c: 51: TRISAbits.RA3 = 0;
  1253  0005C4  9692               	bcf	3986,3,c	;volatile
  1254                           
  1255                           ;user.c: 52: TRISAbits.RA4 = 0;
  1256  0005C6  9892               	bcf	3986,4,c	;volatile
  1257                           
  1258                           ;user.c: 53: TRISAbits.RA5 = 0;
  1259  0005C8  9A92               	bcf	3986,5,c	;volatile
  1260                           
  1261                           ;user.c: 54: TRISCbits.RC0 = 0;
  1262  0005CA  9094               	bcf	3988,0,c	;volatile
  1263                           
  1264                           ;user.c: 55: TRISCbits.RC1 = 0;
  1265  0005CC  9294               	bcf	3988,1,c	;volatile
  1266                           
  1267                           ;user.c: 56: TRISBbits.RB7 = 0;
  1268  0005CE  9E93               	bcf	3987,7,c	;volatile
  1269                           
  1270                           ;user.c: 57: TRISBbits.RB6 = 0;
  1271  0005D0  9C93               	bcf	3987,6,c	;volatile
  1272                           
  1273                           ;user.c: 58: TRISCbits.RC2 = 0;
  1274  0005D2  9494               	bcf	3988,2,c	;volatile
  1275                           
  1276                           ;user.c: 59: TRISBbits.RB4 = 0;
  1277  0005D4  9893               	bcf	3987,4,c	;volatile
  1278                           
  1279                           ;user.c: 60: TRISBbits.RB5 = 0;
  1280  0005D6  9A93               	bcf	3987,5,c	;volatile
  1281                           
  1282                           ;user.c: 62: RCONbits.IPEN = 0;
  1283  0005D8  9ED0               	bcf	4048,7,c	;volatile
  1284                           
  1285                           ;user.c: 64: INTCONbits.GIE = 1;
  1286  0005DA  8EF2               	bsf	intcon,7,c	;volatile
  1287                           
  1288                           ;user.c: 65: INTCONbits.PEIE = 1;
  1289  0005DC  8CF2               	bsf	intcon,6,c	;volatile
  1290                           
  1291                           ;user.c: 66: INTCONbits.TMR0IE = 1;
  1292  0005DE  8AF2               	bsf	intcon,5,c	;volatile
  1293                           
  1294                           ;user.c: 67: INTCONbits.TMR0IF = 0;
  1295  0005E0  94F2               	bcf	intcon,2,c	;volatile
  1296                           
  1297                           ;user.c: 68: INTCON2bits.TMR0IP = 1;
  1298  0005E2  84F1               	bsf	intcon2,2,c	;volatile
  1299                           
  1300                           ;user.c: 69: T0CONbits.T08BIT = 1;
  1301  0005E4  8CD5               	bsf	4053,6,c	;volatile
  1302                           
  1303                           ;user.c: 70: T0CONbits.T0CS = 0;
  1304  0005E6  9AD5               	bcf	4053,5,c	;volatile
  1305                           
  1306                           ;user.c: 71: T0CONbits.PSA = 0;
  1307  0005E8  96D5               	bcf	4053,3,c	;volatile
  1308                           
  1309                           ;user.c: 72: T0CONbits.T0PS = 0b101;
  1310  0005EA  50D5               	movf	4053,w,c	;volatile
  1311  0005EC  0BF8               	andlw	-8
  1312  0005EE  0905               	iorlw	5
  1313  0005F0  6ED5               	movwf	4053,c	;volatile
  1314                           
  1315                           ;user.c: 73: TMR0 = 0x6;
  1316  0005F2  0E00               	movlw	0
  1317  0005F4  6ED7               	movwf	4055,c	;volatile
  1318  0005F6  0E06               	movlw	6
  1319  0005F8  6ED6               	movwf	4054,c	;volatile
  1320                           
  1321                           ;user.c: 75: TRISBbits.RB1 = 1;
  1322  0005FA  8293               	bsf	3987,1,c	;volatile
  1323                           
  1324                           ;user.c: 76: TRISBbits.RB2 = 1;
  1325  0005FC  8493               	bsf	3987,2,c	;volatile
  1326                           
  1327                           ;user.c: 77: INTCON3bits.INT1IE = 1;
  1328  0005FE  86F0               	bsf	intcon3,3,c	;volatile
  1329                           
  1330                           ;user.c: 78: INTCON3bits.INT2IE = 1;
  1331  000600  88F0               	bsf	intcon3,4,c	;volatile
  1332                           
  1333                           ;user.c: 79: INTCON3bits.INT1IF = 0;
  1334  000602  90F0               	bcf	intcon3,0,c	;volatile
  1335                           
  1336                           ;user.c: 80: INTCON3bits.INT2IF = 0;
  1337  000604  92F0               	bcf	intcon3,1,c	;volatile
  1338                           
  1339                           ;user.c: 81: INTCON2bits.INTEDG1 = 0;
  1340  000606  9AF1               	bcf	intcon2,5,c	;volatile
  1341                           
  1342                           ;user.c: 82: INTCON2bits.INTEDG2 = 0;
  1343  000608  98F1               	bcf	intcon2,4,c	;volatile
  1344                           
  1345                           ;user.c: 84: TRISCbits.RC6 = 0;
  1346  00060A  9C94               	bcf	3988,6,c	;volatile
  1347                           
  1348                           ;user.c: 85: TRISCbits.RC7 = 1;
  1349  00060C  8E94               	bsf	3988,7,c	;volatile
  1350                           
  1351                           ;user.c: 86: BRGH = 1;
  1352  00060E  84AC               	bsf	4012,2,c	;volatile
  1353                           
  1354                           ;user.c: 87: BRG16 = 1;
  1355  000610  86B8               	bsf	4024,3,c	;volatile
  1356                           
  1357                           ;user.c: 88: SPBRG = 207;
  1358  000612  0ECF               	movlw	207
  1359  000614  6EAF               	movwf	4015,c	;volatile
  1360                           
  1361                           ;user.c: 89: SPEN = 1;
  1362  000616  8EAB               	bsf	4011,7,c	;volatile
  1363                           
  1364                           ;user.c: 90: SYNC = 0;
  1365  000618  98AC               	bcf	4012,4,c	;volatile
  1366                           
  1367                           ;user.c: 91: TXEN = 1;
  1368  00061A  8AAC               	bsf	4012,5,c	;volatile
  1369                           
  1370                           ;user.c: 92: CREN = 1;
  1371  00061C  88AB               	bsf	4011,4,c	;volatile
  1372                           
  1373                           ;user.c: 93: TX9 = 0;
  1374  00061E  9CAC               	bcf	4012,6,c	;volatile
  1375                           
  1376                           ;user.c: 94: RX9 = 0;
  1377  000620  9CAB               	bcf	4011,6,c	;volatile
  1378                           
  1379                           ;user.c: 95: RCIE = 1;
  1380  000622  8A9D               	bsf	3997,5,c	;volatile
  1381                           
  1382                           ;user.c: 96: TXIE = 0;
  1383  000624  989D               	bcf	3997,4,c	;volatile
  1384                           
  1385                           ;user.c: 98: PR2 = 99;
  1386  000626  0E63               	movlw	99
  1387  000628  6ECB               	movwf	4043,c	;volatile
  1388                           
  1389                           ;user.c: 99: CCP1CONbits.DC1B = 0;
  1390  00062A  0ECF               	movlw	-49
  1391  00062C  16BD               	andwf	4029,f,c	;volatile
  1392                           
  1393                           ;user.c: 100: T2CONbits.T2CKPS = 0b00;
  1394  00062E  0EFC               	movlw	-4
  1395  000630  16CA               	andwf	4042,f,c	;volatile
  1396                           
  1397                           ;user.c: 101: T2CONbits.TMR2ON = 1;
  1398  000632  84CA               	bsf	4042,2,c	;volatile
  1399                           
  1400                           ;user.c: 102: CCP1CONbits.CCP1M = 0b1111;
  1401  000634  80BD               	bsf	4029,0,c	;volatile
  1402  000636  82BD               	bsf	4029,1,c	;volatile
  1403  000638  84BD               	bsf	4029,2,c	;volatile
  1404  00063A  86BD               	bsf	4029,3,c	;volatile
  1405  00063C  0012               	return		;funcret
  1406  00063E                     __end_of_InitApp:
  1407                           	opt stack 0
  1408                           tblptru	equ	0xFF8
  1409                           tblptrh	equ	0xFF7
  1410                           tblptrl	equ	0xFF6
  1411                           tablat	equ	0xFF5
  1412                           prodh	equ	0xFF4
  1413                           prodl	equ	0xFF3
  1414                           intcon	equ	0xFF2
  1415                           intcon2	equ	0xFF1
  1416                           intcon3	equ	0xFF0
  1417                           postinc0	equ	0xFEE
  1418                           wreg	equ	0xFE8
  1419                           postdec1	equ	0xFE5
  1420                           fsr1l	equ	0xFE1
  1421                           status	equ	0xFD8
  1422                           
  1423 ;; *************** function _ConfigureOscillator *****************
  1424 ;; Defined at:
  1425 ;;		line 24 in file "system.c"
  1426 ;; Parameters:    Size  Location     Type
  1427 ;;		None
  1428 ;; Auto vars:     Size  Location     Type
  1429 ;;		None
  1430 ;; Return value:  Size  Location     Type
  1431 ;;                  1    wreg      void 
  1432 ;; Registers used:
  1433 ;;		wreg, status,2
  1434 ;; Tracked objects:
  1435 ;;		On entry : 0/0
  1436 ;;		On exit  : 0/0
  1437 ;;		Unchanged: 0/0
  1438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1439 ;;      Params:         0       0       0       0       0       0       0       0       0
  1440 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1441 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1442 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1443 ;;Total ram usage:        0 bytes
  1444 ;; Hardware stack levels used:    1
  1445 ;; Hardware stack levels required when called:    1
  1446 ;; This function calls:
  1447 ;;		Nothing
  1448 ;; This function is called by:
  1449 ;;		_main
  1450 ;; This function uses a non-reentrant model
  1451 ;;
  1452                           
  1453                           	psect	text3
  1454  0006B4                     __ptext3:
  1455                           	opt stack 0
  1456  0006B4                     _ConfigureOscillator:
  1457                           	opt stack 29
  1458                           
  1459                           ;system.c: 27: OSCCONbits.IRCF = 0b111;
  1460                           
  1461                           ;incstack = 0
  1462  0006B4  88D3               	bsf	4051,4,c	;volatile
  1463  0006B6  8AD3               	bsf	4051,5,c	;volatile
  1464  0006B8  8CD3               	bsf	4051,6,c	;volatile
  1465                           
  1466                           ;system.c: 28: OSCCONbits.SCS = 0b11;
  1467  0006BA  0E03               	movlw	3
  1468  0006BC  12D3               	iorwf	4051,f,c	;volatile
  1469  0006BE  0012               	return		;funcret
  1470  0006C0                     __end_of_ConfigureOscillator:
  1471                           	opt stack 0
  1472                           tblptru	equ	0xFF8
  1473                           tblptrh	equ	0xFF7
  1474                           tblptrl	equ	0xFF6
  1475                           tablat	equ	0xFF5
  1476                           prodh	equ	0xFF4
  1477                           prodl	equ	0xFF3
  1478                           intcon	equ	0xFF2
  1479                           intcon2	equ	0xFF1
  1480                           intcon3	equ	0xFF0
  1481                           postinc0	equ	0xFEE
  1482                           wreg	equ	0xFE8
  1483                           postdec1	equ	0xFE5
  1484                           fsr1l	equ	0xFE1
  1485                           status	equ	0xFD8
  1486                           
  1487 ;; *************** function _high_isr *****************
  1488 ;; Defined at:
  1489 ;;		line 51 in file "interrupts.c"
  1490 ;; Parameters:    Size  Location     Type
  1491 ;;		None
  1492 ;; Auto vars:     Size  Location     Type
  1493 ;;		None
  1494 ;; Return value:  Size  Location     Type
  1495 ;;                  1    wreg      void 
  1496 ;; Registers used:
  1497 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1498 ;; Tracked objects:
  1499 ;;		On entry : 0/0
  1500 ;;		On exit  : 0/0
  1501 ;;		Unchanged: 0/0
  1502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1503 ;;      Params:         0       0       0       0       0       0       0       0       0
  1504 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1505 ;;      Temps:         19       0       0       0       0       0       0       0       0
  1506 ;;      Totals:        19       0       0       0       0       0       0       0       0
  1507 ;;Total ram usage:       19 bytes
  1508 ;; Hardware stack levels used:    1
  1509 ;; This function calls:
  1510 ;;		Nothing
  1511 ;; This function is called by:
  1512 ;;		Interrupt level 2
  1513 ;; This function uses a non-reentrant model
  1514 ;;
  1515                           
  1516                           	psect	intcode
  1517  000008                     __pintcode:
  1518                           	opt stack 0
  1519  000008                     _high_isr:
  1520                           	opt stack 29
  1521                           
  1522                           ;incstack = 0
  1523  000008  8251               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  1524  00000A  EDCC  F001         	call	int_func,f	;refresh shadow registers
  1525                           tblptru	equ	0xFF8
  1526                           tblptrh	equ	0xFF7
  1527                           tblptrl	equ	0xFF6
  1528                           tablat	equ	0xFF5
  1529                           prodh	equ	0xFF4
  1530                           prodl	equ	0xFF3
  1531                           intcon	equ	0xFF2
  1532                           intcon2	equ	0xFF1
  1533                           intcon3	equ	0xFF0
  1534                           postinc0	equ	0xFEE
  1535                           wreg	equ	0xFE8
  1536                           postdec1	equ	0xFE5
  1537                           fsr1l	equ	0xFE1
  1538                           status	equ	0xFD8
  1539                           
  1540                           	psect	intcode_body
  1541  000398                     __pintcode_body:
  1542                           	opt stack 29
  1543  000398                     int_func:
  1544                           	opt stack 29
  1545  000398  0006               	pop		; remove dummy address from shadow register refresh
  1546  00039A  CFFA F02F          	movff	pclath,??_high_isr+1
  1547  00039E  CFFB F030          	movff	pclatu,??_high_isr+2
  1548  0003A2  CFE9 F031          	movff	fsr0l,??_high_isr+3
  1549  0003A6  CFEA F032          	movff	fsr0h,??_high_isr+4
  1550  0003AA  CFE1 F033          	movff	fsr1l,??_high_isr+5
  1551  0003AE  CFE2 F034          	movff	fsr1h,??_high_isr+6
  1552  0003B2  CFD9 F035          	movff	fsr2l,??_high_isr+7
  1553  0003B6  CFDA F036          	movff	fsr2h,??_high_isr+8
  1554  0003BA  CFF3 F037          	movff	prodl,??_high_isr+9
  1555  0003BE  CFF4 F038          	movff	prodh,??_high_isr+10
  1556  0003C2  CFF6 F039          	movff	tblptrl,??_high_isr+11
  1557  0003C6  CFF7 F03A          	movff	tblptrh,??_high_isr+12
  1558  0003CA  CFF8 F03B          	movff	tblptru,??_high_isr+13
  1559  0003CE  CFF5 F03C          	movff	tablat,??_high_isr+14
  1560  0003D2  C051  F03D         	movff	btemp,??_high_isr+15
  1561  0003D6  C052  F03E         	movff	btemp+1,??_high_isr+16
  1562  0003DA  C053  F03F         	movff	btemp+2,??_high_isr+17
  1563  0003DE  C054  F040         	movff	btemp+3,??_high_isr+18
  1564                           
  1565                           ;interrupts.c: 52: if (INTCONbits.TMR0IF) {
  1566  0003E2  A4F2               	btfss	intcon,2,c	;volatile
  1567  0003E4  D07D               	goto	i2l73
  1568                           
  1569                           ;interrupts.c: 54: INTCONbits.TMR0IF = 0;
  1570  0003E6  94F2               	bcf	intcon,2,c	;volatile
  1571                           
  1572                           ;interrupts.c: 55: TMR0 = 250;
  1573  0003E8  0E00               	movlw	0
  1574  0003EA  6ED7               	movwf	4055,c	;volatile
  1575  0003EC  0EFA               	movlw	250
  1576  0003EE  6ED6               	movwf	4054,c	;volatile
  1577                           
  1578                           ;interrupts.c: 56: MOT_1_count++;
  1579  0003F0  4A1E               	infsnz	_MOT_1_count,f,c
  1580  0003F2  2A1F               	incf	_MOT_1_count+1,f,c
  1581                           
  1582                           ;interrupts.c: 57: MOT_2_count++;
  1583  0003F4  4A1C               	infsnz	_MOT_2_count,f,c
  1584  0003F6  2A1D               	incf	_MOT_2_count+1,f,c
  1585                           
  1586                           ;interrupts.c: 58: MOT_3_count++;
  1587  0003F8  4A1A               	infsnz	_MOT_3_count,f,c
  1588  0003FA  2A1B               	incf	_MOT_3_count+1,f,c
  1589                           
  1590                           ;interrupts.c: 59: MOT_4_count++;
  1591  0003FC  4A18               	infsnz	_MOT_4_count,f,c
  1592  0003FE  2A19               	incf	_MOT_4_count+1,f,c
  1593                           
  1594                           ;interrupts.c: 61: if (MOT_1) {
  1595  000400  5050               	movf	_MOT_1,w,c
  1596  000402  B4D8               	btfsc	status,2,c
  1597  000404  D019               	goto	i2l75
  1598                           
  1599                           ;interrupts.c: 62: if (MOT_1_count == count_1) {
  1600  000406  504B               	movf	_count_1,w,c
  1601  000408  181E               	xorwf	_MOT_1_count,w,c
  1602  00040A  E116               	bnz	i2l1282
  1603  00040C  504C               	movf	_count_1+1,w,c
  1604  00040E  181F               	xorwf	_MOT_1_count+1,w,c
  1605  000410  A4D8               	btfss	status,2,c
  1606  000412  D012               	goto	i2l75
  1607                           
  1608                           ;interrupts.c: 63: LATAbits.LA3 = !PORTAbits.RA3;
  1609  000414  B680               	btfsc	3968,3,c	;volatile
  1610  000416  D003               	goto	i2u66_40
  1611  000418  6A2E               	clrf	??_high_isr& (0+255),c
  1612  00041A  2A2E               	incf	??_high_isr& (0+255),f,c
  1613  00041C  D001               	goto	i2u67_48
  1614  00041E                     i2u66_40:
  1615  00041E  6A2E               	clrf	??_high_isr& (0+255),c
  1616  000420                     i2u67_48:
  1617  000420  462E               	rlncf	??_high_isr,f,c
  1618  000422  462E               	rlncf	??_high_isr,f,c
  1619  000424  462E               	rlncf	??_high_isr,f,c
  1620  000426  5089               	movf	3977,w,c	;volatile
  1621  000428  182E               	xorwf	??_high_isr,w,c
  1622  00042A  0BF7               	andlw	-9
  1623  00042C  182E               	xorwf	??_high_isr,w,c
  1624  00042E  6E89               	movwf	3977,c	;volatile
  1625                           
  1626                           ;interrupts.c: 64: MOT_1_count = 0;
  1627  000430  0E00               	movlw	0
  1628  000432  6E1F               	movwf	_MOT_1_count+1,c
  1629  000434  0E00               	movlw	0
  1630  000436  6E1E               	movwf	_MOT_1_count,c
  1631  000438                     i2l75:
  1632  000438                     i2l1282:
  1633                           
  1634                           ;interrupts.c: 65: }
  1635                           ;interrupts.c: 66: }
  1636                           ;interrupts.c: 67: if (MOT_2) {
  1637  000438  504F               	movf	_MOT_2,w,c
  1638  00043A  B4D8               	btfsc	status,2,c
  1639  00043C  D018               	goto	i2l77
  1640                           
  1641                           ;interrupts.c: 68: if (MOT_2_count == count_2) {
  1642  00043E  5049               	movf	_count_2,w,c
  1643  000440  181C               	xorwf	_MOT_2_count,w,c
  1644  000442  E115               	bnz	i2l1290
  1645  000444  504A               	movf	_count_2+1,w,c
  1646  000446  181D               	xorwf	_MOT_2_count+1,w,c
  1647  000448  A4D8               	btfss	status,2,c
  1648  00044A  D011               	goto	i2l77
  1649                           
  1650                           ;interrupts.c: 69: LATAbits.LA5 = !PORTAbits.RA5;
  1651  00044C  BA80               	btfsc	3968,5,c	;volatile
  1652  00044E  D003               	goto	i2u70_40
  1653  000450  6A2E               	clrf	??_high_isr& (0+255),c
  1654  000452  2A2E               	incf	??_high_isr& (0+255),f,c
  1655  000454  D001               	goto	i2u71_48
  1656  000456                     i2u70_40:
  1657  000456  6A2E               	clrf	??_high_isr& (0+255),c
  1658  000458                     i2u71_48:
  1659  000458  3A2E               	swapf	??_high_isr,f,c
  1660  00045A  462E               	rlncf	??_high_isr,f,c
  1661  00045C  5089               	movf	3977,w,c	;volatile
  1662  00045E  182E               	xorwf	??_high_isr,w,c
  1663  000460  0BDF               	andlw	-33
  1664  000462  182E               	xorwf	??_high_isr,w,c
  1665  000464  6E89               	movwf	3977,c	;volatile
  1666                           
  1667                           ;interrupts.c: 70: MOT_2_count = 0;
  1668  000466  0E00               	movlw	0
  1669  000468  6E1D               	movwf	_MOT_2_count+1,c
  1670  00046A  0E00               	movlw	0
  1671  00046C  6E1C               	movwf	_MOT_2_count,c
  1672  00046E                     i2l77:
  1673  00046E                     i2l1290:
  1674                           
  1675                           ;interrupts.c: 71: }
  1676                           ;interrupts.c: 72: }
  1677                           ;interrupts.c: 73: if (MOT_3) {
  1678  00046E  504E               	movf	_MOT_3,w,c
  1679  000470  B4D8               	btfsc	status,2,c
  1680  000472  D017               	goto	i2l79
  1681                           
  1682                           ;interrupts.c: 74: if (MOT_3_count == count_3) {
  1683  000474  5047               	movf	_count_3,w,c
  1684  000476  181A               	xorwf	_MOT_3_count,w,c
  1685  000478  E114               	bnz	i2l1298
  1686  00047A  5048               	movf	_count_3+1,w,c
  1687  00047C  181B               	xorwf	_MOT_3_count+1,w,c
  1688  00047E  A4D8               	btfss	status,2,c
  1689  000480  D010               	goto	i2l79
  1690                           
  1691                           ;interrupts.c: 75: LATCbits.LC1 = !PORTCbits.RC1;
  1692  000482  B282               	btfsc	3970,1,c	;volatile
  1693  000484  D003               	goto	i2u74_40
  1694  000486  6A2E               	clrf	??_high_isr& (0+255),c
  1695  000488  2A2E               	incf	??_high_isr& (0+255),f,c
  1696  00048A  D001               	goto	i2u75_48
  1697  00048C                     i2u74_40:
  1698  00048C  6A2E               	clrf	??_high_isr& (0+255),c
  1699  00048E                     i2u75_48:
  1700  00048E  462E               	rlncf	??_high_isr,f,c
  1701  000490  508B               	movf	3979,w,c	;volatile
  1702  000492  182E               	xorwf	??_high_isr,w,c
  1703  000494  0BFD               	andlw	-3
  1704  000496  182E               	xorwf	??_high_isr,w,c
  1705  000498  6E8B               	movwf	3979,c	;volatile
  1706                           
  1707                           ;interrupts.c: 76: MOT_3_count = 0;
  1708  00049A  0E00               	movlw	0
  1709  00049C  6E1B               	movwf	_MOT_3_count+1,c
  1710  00049E  0E00               	movlw	0
  1711  0004A0  6E1A               	movwf	_MOT_3_count,c
  1712  0004A2                     i2l79:
  1713  0004A2                     i2l1298:
  1714                           
  1715                           ;interrupts.c: 77: }
  1716                           ;interrupts.c: 78: }
  1717                           ;interrupts.c: 79: if (MOT_4) {
  1718  0004A2  504D               	movf	_MOT_4,w,c
  1719  0004A4  B4D8               	btfsc	status,2,c
  1720  0004A6  D04F               	goto	i2l93
  1721                           
  1722                           ;interrupts.c: 80: if (MOT_4_count == count_4) {
  1723  0004A8  5045               	movf	_count_4,w,c
  1724  0004AA  1818               	xorwf	_MOT_4_count,w,c
  1725  0004AC  E14C               	bnz	i2l94
  1726  0004AE  5046               	movf	_count_4+1,w,c
  1727  0004B0  1819               	xorwf	_MOT_4_count+1,w,c
  1728  0004B2  A4D8               	btfss	status,2,c
  1729  0004B4  D048               	goto	i2l93
  1730                           
  1731                           ;interrupts.c: 81: LATBbits.LB6 = !PORTBbits.RB6;
  1732  0004B6  BC81               	btfsc	3969,6,c	;volatile
  1733  0004B8  D003               	goto	i2u78_40
  1734  0004BA  6A2E               	clrf	??_high_isr& (0+255),c
  1735  0004BC  2A2E               	incf	??_high_isr& (0+255),f,c
  1736  0004BE  D001               	goto	i2u79_48
  1737  0004C0                     i2u78_40:
  1738  0004C0  6A2E               	clrf	??_high_isr& (0+255),c
  1739  0004C2                     i2u79_48:
  1740  0004C2  3A2E               	swapf	??_high_isr,f,c
  1741  0004C4  462E               	rlncf	??_high_isr,f,c
  1742  0004C6  462E               	rlncf	??_high_isr,f,c
  1743  0004C8  508A               	movf	3978,w,c	;volatile
  1744  0004CA  182E               	xorwf	??_high_isr,w,c
  1745  0004CC  0BBF               	andlw	-65
  1746  0004CE  182E               	xorwf	??_high_isr,w,c
  1747  0004D0  6E8A               	movwf	3978,c	;volatile
  1748                           
  1749                           ;interrupts.c: 82: MOT_4_count = 0;
  1750  0004D2  0E00               	movlw	0
  1751  0004D4  6E19               	movwf	_MOT_4_count+1,c
  1752  0004D6  0E00               	movlw	0
  1753  0004D8  6E18               	movwf	_MOT_4_count,c
  1754                           
  1755                           ;interrupts.c: 83: mot_4_steps++;
  1756  0004DA  4A16               	infsnz	_mot_4_steps,f,c
  1757  0004DC  2A17               	incf	_mot_4_steps+1,f,c
  1758                           
  1759                           ;interrupts.c: 84: }
  1760                           ;interrupts.c: 85: }
  1761                           ;interrupts.c: 87: } else if (PIR1bits.RCIF) {
  1762  0004DE  D033               	goto	i2l93
  1763  0004E0                     i2l73:
  1764  0004E0  AA9E               	btfss	3998,5,c	;volatile
  1765  0004E2  D01A               	goto	i2l83
  1766                           
  1767                           ;interrupts.c: 89: PIR1bits.RCIF = 0;
  1768  0004E4  9A9E               	bcf	3998,5,c	;volatile
  1769                           
  1770                           ;interrupts.c: 90: palabra[n] = RCREG;
  1771  0004E6  0E60               	movlw	low _palabra
  1772  0004E8  2424               	addwf	_n,w,c
  1773  0004EA  6ED9               	movwf	fsr2l,c
  1774  0004EC  0E00               	movlw	high _palabra
  1775  0004EE  2025               	addwfc	_n+1,w,c
  1776  0004F0  6EDA               	movwf	fsr2h,c
  1777  0004F2  CFAE FFDF          	movff	4014,indf2	;volatile
  1778                           
  1779                           ;interrupts.c: 91: n++;
  1780  0004F6  4A24               	infsnz	_n,f,c
  1781  0004F8  2A25               	incf	_n+1,f,c
  1782                           
  1783                           ;interrupts.c: 92: if (RCREG == '\n') {
  1784  0004FA  0E0A               	movlw	10
  1785  0004FC  18AE               	xorwf	4014,w,c	;volatile
  1786  0004FE  A4D8               	btfss	status,2,c
  1787  000500  D022               	goto	i2l93
  1788                           
  1789                           ;interrupts.c: 93: TXREG = palabra[0];
  1790  000502  C060  FFAD         	movff	_palabra,4013	;volatile
  1791  000506  A89E               	btfss	3998,4,c	;volatile
  1792  000508  D7FE               	goto	i2l86
  1793                           
  1794                           ;interrupts.c: 95: recibi = 1;
  1795  00050A  0E01               	movlw	1
  1796  00050C  6E2C               	movwf	_recibi,c
  1797                           
  1798                           ;interrupts.c: 96: n = 0;
  1799  00050E  0E00               	movlw	0
  1800  000510  6E25               	movwf	_n+1,c
  1801  000512  0E00               	movlw	0
  1802  000514  6E24               	movwf	_n,c
  1803                           
  1804                           ;interrupts.c: 97: }
  1805                           ;interrupts.c: 98: } else if (PIR1bits.ADIF) {
  1806  000516  D017               	goto	i2l93
  1807  000518                     i2l83:
  1808  000518  AC9E               	btfss	3998,6,c	;volatile
  1809  00051A  D006               	goto	i2l89
  1810                           
  1811                           ;interrupts.c: 100: PIR1bits.ADIF = 0;
  1812  00051C  9C9E               	bcf	3998,6,c	;volatile
  1813                           
  1814                           ;interrupts.c: 106: ADC_value_press = ADRES;
  1815  00051E  CFC3 F020          	movff	4035,_ADC_value_press	;volatile
  1816  000522  CFC4 F021          	movff	4036,_ADC_value_press+1	;volatile
  1817                           
  1818                           ;interrupts.c: 108: } else if (INTCON3bits.INT1IF) {
  1819  000526  D00F               	goto	i2l93
  1820  000528                     i2l89:
  1821  000528  A0F0               	btfss	intcon3,0,c	;volatile
  1822  00052A  D005               	goto	i2l91
  1823                           
  1824                           ;interrupts.c: 110: INTCON3bits.INT1IF = 0;
  1825  00052C  90F0               	bcf	intcon3,0,c	;volatile
  1826  00052E                     i2l1324:
  1827                           
  1828                           ;interrupts.c: 113: DIR_3 = !DIR_3;
  1829  00052E  502D               	movf	_DIR_3,w,c
  1830  000530  A4D8               	btfss	status,2,c
  1831  000532  D007               	goto	i2u88_40
  1832  000534  D004               	goto	i2u88_41
  1833  000536                     i2l91:
  1834  000536  A2F0               	btfss	intcon3,1,c	;volatile
  1835  000538  D006               	goto	i2l93
  1836                           
  1837                           ;interrupts.c: 117: INTCON3bits.INT2IF = 0;
  1838  00053A  92F0               	bcf	intcon3,1,c	;volatile
  1839  00053C  D7F8               	goto	i2l1324
  1840  00053E                     i2u88_41:
  1841  00053E  0E01               	movlw	1
  1842  000540  D001               	goto	i2u89_40
  1843  000542                     i2u88_40:
  1844  000542  0E00               	movlw	0
  1845  000544                     i2u89_40:
  1846  000544  6E2D               	movwf	_DIR_3,c
  1847  000546                     i2l93:
  1848  000546                     i2l94:
  1849  000546  C040  F054         	movff	??_high_isr+18,btemp+3
  1850  00054A  C03F  F053         	movff	??_high_isr+17,btemp+2
  1851  00054E  C03E  F052         	movff	??_high_isr+16,btemp+1
  1852  000552  C03D  F051         	movff	??_high_isr+15,btemp
  1853  000556  C03C  FFF5         	movff	??_high_isr+14,tablat
  1854  00055A  C03B  FFF8         	movff	??_high_isr+13,tblptru
  1855  00055E  C03A  FFF7         	movff	??_high_isr+12,tblptrh
  1856  000562  C039  FFF6         	movff	??_high_isr+11,tblptrl
  1857  000566  C038  FFF4         	movff	??_high_isr+10,prodh
  1858  00056A  C037  FFF3         	movff	??_high_isr+9,prodl
  1859  00056E  C036  FFDA         	movff	??_high_isr+8,fsr2h
  1860  000572  C035  FFD9         	movff	??_high_isr+7,fsr2l
  1861  000576  C034  FFE2         	movff	??_high_isr+6,fsr1h
  1862  00057A  C033  FFE1         	movff	??_high_isr+5,fsr1l
  1863  00057E  C032  FFEA         	movff	??_high_isr+4,fsr0h
  1864  000582  C031  FFE9         	movff	??_high_isr+3,fsr0l
  1865  000586  C030  FFFB         	movff	??_high_isr+2,pclatu
  1866  00058A  C02F  FFFA         	movff	??_high_isr+1,pclath
  1867  00058E  9251               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  1868  000590  0011               	retfie		f
  1869  000592                     __end_of_high_isr:
  1870                           	opt stack 0
  1871  0000                     pclatu	equ	0xFFB
  1872                           pclath	equ	0xFFA
  1873                           tblptru	equ	0xFF8
  1874                           tblptrh	equ	0xFF7
  1875                           tblptrl	equ	0xFF6
  1876                           tablat	equ	0xFF5
  1877                           prodh	equ	0xFF4
  1878                           prodl	equ	0xFF3
  1879                           intcon	equ	0xFF2
  1880                           intcon2	equ	0xFF1
  1881                           intcon3	equ	0xFF0
  1882                           postinc0	equ	0xFEE
  1883                           fsr0h	equ	0xFEA
  1884                           fsr0l	equ	0xFE9
  1885                           wreg	equ	0xFE8
  1886                           postdec1	equ	0xFE5
  1887                           fsr1h	equ	0xFE2
  1888                           fsr1l	equ	0xFE1
  1889                           indf2	equ	0xFDF
  1890                           fsr2h	equ	0xFDA
  1891                           fsr2l	equ	0xFD9
  1892                           status	equ	0xFD8
  1893                           pclatu	equ	0xFFB
  1894                           pclath	equ	0xFFA
  1895                           tblptru	equ	0xFF8
  1896                           tblptrh	equ	0xFF7
  1897                           tblptrl	equ	0xFF6
  1898                           tablat	equ	0xFF5
  1899                           prodh	equ	0xFF4
  1900                           prodl	equ	0xFF3
  1901                           intcon	equ	0xFF2
  1902                           intcon2	equ	0xFF1
  1903                           intcon3	equ	0xFF0
  1904                           postinc0	equ	0xFEE
  1905                           fsr0h	equ	0xFEA
  1906                           fsr0l	equ	0xFE9
  1907                           wreg	equ	0xFE8
  1908                           postdec1	equ	0xFE5
  1909                           fsr1h	equ	0xFE2
  1910                           fsr1l	equ	0xFE1
  1911                           indf2	equ	0xFDF
  1912                           fsr2h	equ	0xFDA
  1913                           fsr2l	equ	0xFD9
  1914                           status	equ	0xFD8
  1915                           
  1916                           	psect	rparam
  1917  0000                     pclatu	equ	0xFFB
  1918                           pclath	equ	0xFFA
  1919                           tblptru	equ	0xFF8
  1920                           tblptrh	equ	0xFF7
  1921                           tblptrl	equ	0xFF6
  1922                           tablat	equ	0xFF5
  1923                           prodh	equ	0xFF4
  1924                           prodl	equ	0xFF3
  1925                           intcon	equ	0xFF2
  1926                           intcon2	equ	0xFF1
  1927                           intcon3	equ	0xFF0
  1928                           postinc0	equ	0xFEE
  1929                           fsr0h	equ	0xFEA
  1930                           fsr0l	equ	0xFE9
  1931                           wreg	equ	0xFE8
  1932                           postdec1	equ	0xFE5
  1933                           fsr1h	equ	0xFE2
  1934                           fsr1l	equ	0xFE1
  1935                           indf2	equ	0xFDF
  1936                           fsr2h	equ	0xFDA
  1937                           fsr2l	equ	0xFD9
  1938                           status	equ	0xFD8
  1939                           
  1940                           	psect	temp
  1941  000051                     btemp:
  1942                           	opt stack 0
  1943  000051                     	ds	1
  1944  0000                     int$flags	set	btemp
  1945  0000                     wtemp6	set	btemp+1
  1946                           pclatu	equ	0xFFB
  1947                           pclath	equ	0xFFA
  1948                           tblptru	equ	0xFF8
  1949                           tblptrh	equ	0xFF7
  1950                           tblptrl	equ	0xFF6
  1951                           tablat	equ	0xFF5
  1952                           prodh	equ	0xFF4
  1953                           prodl	equ	0xFF3
  1954                           intcon	equ	0xFF2
  1955                           intcon2	equ	0xFF1
  1956                           intcon3	equ	0xFF0
  1957                           postinc0	equ	0xFEE
  1958                           fsr0h	equ	0xFEA
  1959                           fsr0l	equ	0xFE9
  1960                           wreg	equ	0xFE8
  1961                           postdec1	equ	0xFE5
  1962                           fsr1h	equ	0xFE2
  1963                           fsr1l	equ	0xFE1
  1964                           indf2	equ	0xFDF
  1965                           fsr2h	equ	0xFDA
  1966                           fsr2l	equ	0xFD9
  1967                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        12
    BSS         65
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     19      80
    BANK0           160      8      28
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->___wmul

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    2392
                                              6 BANK0      2     2      0
                _ConfigureOscillator
                            _InitApp
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4    2392
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigureOscillator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _high_isr                                            19    19      0       0
                                              0 COMRAM    19    19      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfigureOscillator
   _InitApp
   ___wmul

 _high_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      8      1C       5       17.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     13      50       1       85.1%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      6C      20        0.0%
DATA                 0      0      6C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Thu Aug 15 20:28:26 2019

                           _n 0024           ___wmul@multiplicand 0076                   __CFG_BORV$3 000000  
                __CFG_CP0$OFF 000000                  __CFG_CP1$OFF 000000                  __CFG_CP2$OFF 000000  
                __CFG_CP3$OFF 000000                           l161 002A                           l170 02CA  
                         l162 036E                           l163 00C8                           l172 02DC  
                         l165 029A                           l182 033E                           l167 02B2  
                         l184 0356                           l176 031E                           l177 0306  
                         l169 02E6                           l188 0386                  __CFG_CPB$OFF 000000  
                         _PR2 000FCB                  __CFG_CPD$OFF 000000                           _RX9 007D5E  
                         _TX9 007D66                  __CFG_BOR$OFF 000000                           wreg 000FE8  
                __CFG_LVP$OFF 000000                  __CFG_WDT$OFF 000000                          _BRGH 007D62  
                        _CREN 007D5C                          u1310 006E                          u1305 005E  
                        u1306 0060                          _LATA 000F89                          _LATB 000F8A  
                        _LATC 000F8B                          u1520 0338                          u1328 0072  
                        u1265 0036                          u1530 033A                          u1450 0300  
                        u1370 02AC                          u1266 0038                          u1611 0392  
                        u1275 0040                          u1460 0302                          u1380 02AE  
                        u1276 0042                          u1285 004A                          u1550 0350  
                        u1286 004C                          u1295 0054                          u1560 0352  
                        u1480 0318                          u1296 0056                          u1490 031A  
                        u1627 037A                          u1580 0368                          u1590 036A  
                        _RCIE 007CED                          i2l73 04E0                          i2l91 0536  
                        i2l83 0518                          i2l75 0438                          i2l93 0546  
                        i2l77 046E                          i2l86 0506                          i2l94 0546  
                        i2l79 04A2                          i2l89 0528                          _TMR0 000FD6  
                        _SPEN 007D5F                          _TXIE 007CEC                          _TXIF 007CF4  
                        _TXEN 007D65                          _SYNC 007D64                          _main 0012  
                        _send 0001                          fsr0h 000FEA                          fsr1h 000FE2  
                        fsr2h 000FDA                          fsr0l 000FE9                          indf2 000FDF  
                        fsr1l 000FE1                          fsr2l 000FD9                          btemp 0051  
                        prodh 000FF4                          prodl 000FF3                          start 000E  
               __CFG_IESO$OFF 000000                 __CFG_MCLRE$ON 000000                  ___param_bank 000000  
             __end_of_InitApp 063E                 __CFG_PLLDIV$1 000000                __CFG_CCP2MX$ON 000000  
                       ?_main 002E                         _ADRES 000FC3                         _BRG16 007DC3  
                       _DIR_1 002A                         _DIR_2 0029                         _DIR_3 002D  
                       _DIR_4 0028                         _RCREG 000FAE                         _MOT_1 0050  
                       _MOT_2 004F                         _MOT_3 004E                         _MOT_4 004D  
                       _SPBRG 000FAF                         _PORTA 000F80                         _PORTB 000F81  
                       _PORTC 000F82                 __CFG_USBDIV$1 000000                         _TXREG 000FAD  
         _ConfigureOscillator 06B4                 __CFG_PWRT$OFF 000000                 __CFG_WRT0$OFF 000000  
               __CFG_WRT1$OFF 000000                 __CFG_WRT2$OFF 000000                 __CFG_WRT3$OFF 000000  
              __CFG_EBTR0$OFF 000000                __CFG_FCMEN$OFF 000000                __CFG_EBTR1$OFF 000000  
              __CFG_EBTR2$OFF 000000                __CFG_EBTR3$OFF 000000                 __CFG_WRTB$OFF 000000  
               __CFG_WRTC$OFF 000000                 __CFG_WRTD$OFF 000000                __CFG_EBTRB$OFF 000000  
                       _speed 000A                         _turns 000C                         pclath 000FFA  
                       tablat 000FF5                         status 000FD8                         wtemp6 0052  
        ?_ConfigureOscillator 002E               __initialization 063E                  __end_of_main 0398  
                      ??_main 007A                 __activetblptr 000000                        _ADCON1 000FC1  
                      _ADCON2 000FC0                        _CCPR1L 000FBE                        _GODONE 007E11  
                      i2l1324 052E                        i2l1290 046E                        i2l1282 0438  
                      i2l1298 04A2                     ??_InitApp 0074         ??_ConfigureOscillator 0074  
              __CFG_XINST$OFF 000000              __end_of_high_isr 0592                        ___wmul 0680  
                      _enable 0026                        _length 000E                        _recibi 002C  
                      clear_0 0664                        clear_1 0670                        _motor1 0043  
                      _motor2 0014                  __pdataCOMRAM 0041                        tblptrh 000FF7  
                      tblptrl 000FF6                        tblptru 000FF8                    __accesstop 0060  
     __end_of__initialization 0676               __CFG_PBADEN$OFF 000000                 ___rparam_used 000001  
              __pcstackCOMRAM 002E                    __pbssBANK0 0060                    __pnvCOMRAM 004D  
                     ?___wmul 0074                       i2u70_40 0456                       i2u71_48 0458  
                     i2u74_40 048C                       i2u66_40 041E                       i2u75_48 048E  
                     i2u67_48 0420                       i2u78_40 04C0                       i2u88_40 0542  
                     i2u79_48 04C2                       i2u88_41 053E                       i2u89_40 0544  
                   ?_high_isr 002E               __CFG_VREGEN$OFF 000000                       _InitApp 0592  
                     __Hparam 0000                       __Lparam 0000               __size_of___wmul 0028  
                     _caliber 0012               __CFG_STVREN$OFF 000000                       __pcinit 063E  
                     __ramtop 0800                       __ptext0 0012                       __ptext1 0680  
                     __ptext2 0592                       __ptext3 06B4                     _T0CONbits 000FD5  
                     _count_1 004B                       _count_2 0049                       _count_3 0047  
                     _count_4 0045                       _palabra 0060                     _T2CONbits 000FCA  
            _mot_4_step_count 0008                    ??_high_isr 002E                __pintcode_body 0398  
        end_of_initialization 0676                       int_func 0398                       postdec1 000FE5  
                     postinc0 000FEE                     _PORTAbits 000F80                     _PORTBbits 000F81  
                   _PORTCbits 000F82                     _TRISAbits 000F92                     _TRISBbits 000F93  
                   _TRISCbits 000F94   __end_of_ConfigureOscillator 06C0                   _CCP1CONbits 000FBD  
              __end_of___wmul 06A8                 __pidataCOMRAM 06A8           start_initialization 063E  
                    ??___wmul 0078              __CFG_LPT1OSC$OFF 000000                   __pbssCOMRAM 0001  
               __pcstackBANK0 0074             __size_of_high_isr 058A                      ?_InitApp 002E  
                   __pintcode 0008                     _busy_flag 0027                ___wmul@product 0078  
                    _LATAbits 000F89                      _LATBbits 000F8A                      _LATCbits 000F8B  
                    _PIE1bits 000F9D                      _RA0state 002B                      _PIR1bits 000F9E  
                    _RCONbits 000FD0              __CFG_WDTPS$32768 000000                    _ADCON0bits 000FC2  
           ___wmul@multiplier 0074                      _PWM_duty 0041               _ADC_value_press 0020  
                 _INTCON2bits 000FF1                   _INTCON3bits 000FF0                     copy_data0 0652  
            __size_of_InitApp 00AC                      __Hrparam 0000                      __Lrparam 0000  
                    _diameter 0010                      _high_isr 0008                 __size_of_main 0386  
                 _mot_4_steps 0016  __size_of_ConfigureOscillator 000C                      _overflow 0022  
                    int$flags 0051         __CFG_CPUDIV$OSC1_PLL2 000000                    _INTCONbits 000FF2  
                 _MOT_1_count 001E                   _MOT_2_count 001C                   _MOT_3_count 001A  
                 _MOT_4_count 0018                      intlevel2 0000                    _OSCCONbits 000FD3  
         __CFG_FOSC$INTOSC_EC 000000  

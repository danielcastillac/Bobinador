

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Wed Aug 14 17:08:05 2019

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F2550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    18                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    19                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    20                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    21                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    22  0000                     
    23                           ; Version 1.45
    24                           ; Generated 16/11/2017 GMT
    25                           ; 
    26                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC18F2550 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57  0000                     
    58                           	psect	idataCOMRAM
    59  000648                     __pidataCOMRAM:
    60                           	opt stack 0
    61                           
    62                           ;initializer for _PWM_duty
    63  000648  0032               	dw	50
    64                           
    65                           ;initializer for _motor1
    66  00064A  0001               	dw	1
    67                           
    68                           ;initializer for _count_4
    69  00064C  0014               	dw	20
    70                           
    71                           ;initializer for _count_3
    72  00064E  0005               	dw	5
    73                           
    74                           ;initializer for _count_2
    75  000650  0005               	dw	5
    76                           
    77                           ;initializer for _count_1
    78  000652  0005               	dw	5
    79                           
    80                           	psect	nvCOMRAM
    81  000048                     __pnvCOMRAM:
    82                           	opt stack 0
    83  000048                     _MOT_4:
    84                           	opt stack 0
    85  000048                     	ds	1
    86  000049                     _MOT_2:
    87                           	opt stack 0
    88  000049                     	ds	1
    89  00004A                     _MOT_1:
    90                           	opt stack 0
    91  00004A                     	ds	1
    92  0000                     _ADRES	set	4035
    93  0000                     _TMR0	set	4054
    94  0000                     _T2CONbits	set	4042
    95  0000                     _CCP1CONbits	set	4029
    96  0000                     _PR2	set	4043
    97  0000                     _SPBRG	set	4015
    98  0000                     _T0CONbits	set	4053
    99  0000                     _INTCON2bits	set	4081
   100  0000                     _RCONbits	set	4048
   101  0000                     _TRISBbits	set	3987
   102  0000                     _TRISCbits	set	3988
   103  0000                     _PIE1bits	set	3997
   104  0000                     _ADCON2	set	4032
   105  0000                     _TRISAbits	set	3986
   106  0000                     _ADCON1	set	4033
   107  0000                     _LATC	set	3979
   108  0000                     _PORTC	set	3970
   109  0000                     _LATB	set	3978
   110  0000                     _PORTB	set	3969
   111  0000                     _LATA	set	3977
   112  0000                     _PORTA	set	3968
   113  0000                     _OSCCONbits	set	4051
   114  0000                     _CCPR1L	set	4030
   115  0000                     _INTCON3bits	set	4080
   116  0000                     _ADCON0bits	set	4034
   117  0000                     _TXREG	set	4013
   118  0000                     _RCREG	set	4014
   119  0000                     _PIR1bits	set	3998
   120  0000                     _PORTBbits	set	3969
   121  0000                     _LATBbits	set	3978
   122  0000                     _PORTCbits	set	3970
   123  0000                     _LATCbits	set	3979
   124  0000                     _PORTAbits	set	3968
   125  0000                     _LATAbits	set	3977
   126  0000                     _INTCONbits	set	4082
   127  0000                     _TXIE	set	31980
   128  0000                     _RCIE	set	31981
   129  0000                     _RX9	set	32094
   130  0000                     _TX9	set	32102
   131  0000                     _CREN	set	32092
   132  0000                     _TXEN	set	32101
   133  0000                     _SYNC	set	32100
   134  0000                     _SPEN	set	32095
   135  0000                     _BRG16	set	32195
   136  0000                     _BRGH	set	32098
   137  0000                     _GODONE	set	32273
   138  0000                     _TXIF	set	31988
   139                           
   140                           ; #config settings
   141  0000                     
   142                           	psect	cinit
   143  0005DE                     __pcinit:
   144                           	opt stack 0
   145  0005DE                     start_initialization:
   146                           	opt stack 0
   147  0005DE                     __initialization:
   148                           	opt stack 0
   149                           
   150                           ; Initialize objects allocated to COMRAM (12 bytes)
   151                           ; load TBLPTR registers with __pidataCOMRAM
   152  0005DE  0E48               	movlw	low __pidataCOMRAM
   153  0005E0  6EF6               	movwf	tblptrl,c
   154  0005E2  0E06               	movlw	high __pidataCOMRAM
   155  0005E4  6EF7               	movwf	tblptrh,c
   156  0005E6  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   157  0005E8  6EF8               	movwf	tblptru,c
   158  0005EA  EE00  F03C         	lfsr	0,__pdataCOMRAM
   159  0005EE  EE10 F00C          	lfsr	1,12
   160  0005F2                     copy_data0:
   161  0005F2  0009               	tblrd		*+
   162  0005F4  CFF5 FFEE          	movff	tablat,postinc0
   163  0005F8  50E5               	movf	postdec1,w,c
   164  0005FA  50E1               	movf	fsr1l,w,c
   165  0005FC  E1FA               	bnz	copy_data0
   166                           
   167                           ; Clear objects allocated to BANK0 (20 bytes)
   168  0005FE  EE00  F060         	lfsr	0,__pbssBANK0
   169  000602  0E14               	movlw	20
   170  000604                     clear_0:
   171  000604  6AEE               	clrf	postinc0,c
   172  000606  06E8               	decf	wreg,f,c
   173  000608  E1FD               	bnz	clear_0
   174                           
   175                           ; Clear objects allocated to COMRAM (36 bytes)
   176  00060A  EE00  F001         	lfsr	0,__pbssCOMRAM
   177  00060E  0E24               	movlw	36
   178  000610                     clear_1:
   179  000610  6AEE               	clrf	postinc0,c
   180  000612  06E8               	decf	wreg,f,c
   181  000614  E1FD               	bnz	clear_1
   182  000616                     end_of_initialization:
   183                           	opt stack 0
   184  000616                     __end_of__initialization:
   185                           	opt stack 0
   186  000616  904B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   187  000618  924B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   188  00061A  0100               	movlb	0
   189  00061C  EF09  F000         	goto	_main	;jump to C main() function
   190                           tblptru	equ	0xFF8
   191                           tblptrh	equ	0xFF7
   192                           tblptrl	equ	0xFF6
   193                           tablat	equ	0xFF5
   194                           postinc0	equ	0xFEE
   195                           wreg	equ	0xFE8
   196                           postdec1	equ	0xFE5
   197                           fsr1l	equ	0xFE1
   198                           
   199                           	psect	bssCOMRAM
   200  000001                     __pbssCOMRAM:
   201                           	opt stack 0
   202  000001                     _speed:
   203                           	opt stack 0
   204  000001                     	ds	2
   205  000003                     _turns:
   206                           	opt stack 0
   207  000003                     	ds	2
   208  000005                     _length:
   209                           	opt stack 0
   210  000005                     	ds	2
   211  000007                     _diameter:
   212                           	opt stack 0
   213  000007                     	ds	2
   214  000009                     _caliber:
   215                           	opt stack 0
   216  000009                     	ds	2
   217  00000B                     _motor2:
   218                           	opt stack 0
   219  00000B                     	ds	2
   220  00000D                     _MOT_4_count:
   221                           	opt stack 0
   222  00000D                     	ds	2
   223  00000F                     _MOT_3_count:
   224                           	opt stack 0
   225  00000F                     	ds	2
   226  000011                     _MOT_2_count:
   227                           	opt stack 0
   228  000011                     	ds	2
   229  000013                     _MOT_1_count:
   230                           	opt stack 0
   231  000013                     	ds	2
   232  000015                     _ADC_value_dist:
   233                           	opt stack 0
   234  000015                     	ds	2
   235  000017                     _ADC_value_press:
   236                           	opt stack 0
   237  000017                     	ds	2
   238  000019                     _overflow:
   239                           	opt stack 0
   240  000019                     	ds	2
   241  00001B                     _n:
   242                           	opt stack 0
   243  00001B                     	ds	2
   244  00001D                     _busy_flag:
   245                           	opt stack 0
   246  00001D                     	ds	1
   247  00001E                     _DIR_4:
   248                           	opt stack 0
   249  00001E                     	ds	1
   250  00001F                     _DIR_2:
   251                           	opt stack 0
   252  00001F                     	ds	1
   253  000020                     _DIR_1:
   254                           	opt stack 0
   255  000020                     	ds	1
   256  000021                     _RA0state:
   257                           	opt stack 0
   258  000021                     	ds	1
   259  000022                     _recibi:
   260                           	opt stack 0
   261  000022                     	ds	1
   262  000023                     _DIR_3:
   263                           	opt stack 0
   264  000023                     	ds	1
   265  000024                     _MOT_3:
   266                           	opt stack 0
   267  000024                     	ds	1
   268                           tblptru	equ	0xFF8
   269                           tblptrh	equ	0xFF7
   270                           tblptrl	equ	0xFF6
   271                           tablat	equ	0xFF5
   272                           postinc0	equ	0xFEE
   273                           wreg	equ	0xFE8
   274                           postdec1	equ	0xFE5
   275                           fsr1l	equ	0xFE1
   276                           
   277                           	psect	dataCOMRAM
   278  00003C                     __pdataCOMRAM:
   279                           	opt stack 0
   280  00003C                     _PWM_duty:
   281                           	opt stack 0
   282  00003C                     	ds	2
   283  00003E                     _motor1:
   284                           	opt stack 0
   285  00003E                     	ds	2
   286  000040                     _count_4:
   287                           	opt stack 0
   288  000040                     	ds	2
   289  000042                     _count_3:
   290                           	opt stack 0
   291  000042                     	ds	2
   292  000044                     _count_2:
   293                           	opt stack 0
   294  000044                     	ds	2
   295  000046                     _count_1:
   296                           	opt stack 0
   297  000046                     	ds	2
   298                           tblptru	equ	0xFF8
   299                           tblptrh	equ	0xFF7
   300                           tblptrl	equ	0xFF6
   301                           tablat	equ	0xFF5
   302                           postinc0	equ	0xFEE
   303                           wreg	equ	0xFE8
   304                           postdec1	equ	0xFE5
   305                           fsr1l	equ	0xFE1
   306                           
   307                           	psect	bssBANK0
   308  000060                     __pbssBANK0:
   309                           	opt stack 0
   310  000060                     _palabra:
   311                           	opt stack 0
   312  000060                     	ds	20
   313                           tblptru	equ	0xFF8
   314                           tblptrh	equ	0xFF7
   315                           tblptrl	equ	0xFF6
   316                           tablat	equ	0xFF5
   317                           postinc0	equ	0xFEE
   318                           wreg	equ	0xFE8
   319                           postdec1	equ	0xFE5
   320                           fsr1l	equ	0xFE1
   321                           
   322                           	psect	cstackBANK0
   323  000074                     __pcstackBANK0:
   324                           	opt stack 0
   325  000074                     ___wmul@product:
   326                           	opt stack 0
   327                           
   328                           ; 2 bytes @ 0x0
   329  000074                     	ds	2
   330  000076                     ??_main:
   331                           
   332                           ; 1 bytes @ 0x2
   333  000076                     	ds	2
   334                           tblptru	equ	0xFF8
   335                           tblptrh	equ	0xFF7
   336                           tblptrl	equ	0xFF6
   337                           tablat	equ	0xFF5
   338                           postinc0	equ	0xFEE
   339                           wreg	equ	0xFE8
   340                           postdec1	equ	0xFE5
   341                           fsr1l	equ	0xFE1
   342                           
   343                           	psect	cstackCOMRAM
   344  000025                     __pcstackCOMRAM:
   345                           	opt stack 0
   346  000025                     ??_high_isr:
   347  000025                     
   348                           ; 1 bytes @ 0x0
   349  000025                     	ds	19
   350  000038                     ?___wmul:
   351                           	opt stack 0
   352  000038                     ___wmul@multiplier:
   353                           	opt stack 0
   354                           
   355                           ; 2 bytes @ 0x13
   356  000038                     	ds	2
   357  00003A                     ___wmul@multiplicand:
   358                           	opt stack 0
   359                           
   360                           ; 2 bytes @ 0x15
   361  00003A                     	ds	2
   362  00003C                     tblptru	equ	0xFF8
   363                           tblptrh	equ	0xFF7
   364                           tblptrl	equ	0xFF6
   365                           tablat	equ	0xFF5
   366                           postinc0	equ	0xFEE
   367                           wreg	equ	0xFE8
   368                           postdec1	equ	0xFE5
   369                           fsr1l	equ	0xFE1
   370                           
   371                           ; 1 bytes @ 0x17
   372 ;;
   373 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   374 ;;
   375 ;; *************** function _main *****************
   376 ;; Defined at:
   377 ;;		line 69 in file "main.c"
   378 ;; Parameters:    Size  Location     Type
   379 ;;		None
   380 ;; Auto vars:     Size  Location     Type
   381 ;;		None
   382 ;; Return value:  Size  Location     Type
   383 ;;                  1    wreg      void 
   384 ;; Registers used:
   385 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   386 ;; Tracked objects:
   387 ;;		On entry : 0/0
   388 ;;		On exit  : 0/0
   389 ;;		Unchanged: 0/0
   390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   391 ;;      Params:         0       0       0       0       0       0       0       0       0
   392 ;;      Locals:         0       0       0       0       0       0       0       0       0
   393 ;;      Temps:          0       2       0       0       0       0       0       0       0
   394 ;;      Totals:         0       2       0       0       0       0       0       0       0
   395 ;;Total ram usage:        2 bytes
   396 ;; Hardware stack levels required when called:    2
   397 ;; This function calls:
   398 ;;		_ConfigureOscillator
   399 ;;		_InitApp
   400 ;;		___wmul
   401 ;; This function is called by:
   402 ;;		Startup code after reset
   403 ;; This function uses a non-reentrant model
   404 ;;
   405                           
   406                           	psect	text0
   407  000012                     __ptext0:
   408                           	opt stack 0
   409  000012                     _main:
   410                           	opt stack 29
   411                           
   412                           ;main.c: 71: ConfigureOscillator();
   413                           
   414                           ;incstack = 0
   415  000012  EC2A  F003         	call	_ConfigureOscillator	;wreg free
   416                           
   417                           ;main.c: 74: InitApp();
   418  000016  EC9B  F002         	call	_InitApp	;wreg free
   419  00001A                     
   420                           ;main.c: 77: MOT_1 = 1;
   421  00001A  0E01               	movlw	1
   422  00001C  6E4A               	movwf	_MOT_1,c
   423                           
   424                           ;main.c: 78: MOT_2 = 1;
   425  00001E  0E01               	movlw	1
   426  000020  6E49               	movwf	_MOT_2,c
   427                           
   428                           ;main.c: 79: MOT_4 = 1;
   429  000022  0E01               	movlw	1
   430  000024  6E48               	movwf	_MOT_4,c
   431                           
   432                           ;main.c: 81: CCPR1L = PWM_duty;
   433  000026  C03C  FFBE         	movff	_PWM_duty,4030	;volatile
   434                           
   435                           ;main.c: 83: LATAbits.LA2 = DIR_1;
   436  00002A  B020               	btfsc	_DIR_1,0,c
   437  00002C  D002               	bra	u1005
   438  00002E  9489               	bcf	3977,2,c	;volatile
   439  000030  D001               	bra	u1006
   440  000032                     u1005:
   441  000032  8489               	bsf	3977,2,c	;volatile
   442  000034                     u1006:
   443                           
   444                           ;main.c: 84: LATAbits.LA4 = DIR_2;
   445  000034  B01F               	btfsc	_DIR_2,0,c
   446  000036  D002               	bra	u1015
   447  000038  9889               	bcf	3977,4,c	;volatile
   448  00003A  D001               	bra	u1016
   449  00003C                     u1015:
   450  00003C  8889               	bsf	3977,4,c	;volatile
   451  00003E                     u1016:
   452                           
   453                           ;main.c: 85: LATCbits.LC0 = DIR_3;
   454  00003E  B023               	btfsc	_DIR_3,0,c
   455  000040  D002               	bra	u1025
   456  000042  908B               	bcf	3979,0,c	;volatile
   457  000044  D001               	bra	u1026
   458  000046                     u1025:
   459  000046  808B               	bsf	3979,0,c	;volatile
   460  000048                     u1026:
   461                           
   462                           ;main.c: 86: LATBbits.LB7 = DIR_4;
   463  000048  B01E               	btfsc	_DIR_4,0,c
   464  00004A  D002               	bra	u1035
   465  00004C  9E8A               	bcf	3978,7,c	;volatile
   466  00004E  D001               	bra	u1036
   467  000050                     u1035:
   468  000050  8E8A               	bsf	3978,7,c	;volatile
   469  000052                     u1036:
   470                           
   471                           ;main.c: 93: if (recibi == 1) {
   472  000052  0422               	decf	_recibi,w,c
   473  000054  A4D8               	btfss	status,2,c
   474  000056  D143               	goto	l161
   475                           
   476                           ;main.c: 95: recibi = 0;
   477  000058  0E00               	movlw	0
   478  00005A  6E22               	movwf	_recibi,c
   479                           
   480                           ;main.c: 97: if (palabra[0] == 'B') {
   481  00005C  0E42               	movlw	66
   482  00005E  0100               	movlb	0	; () banked
   483  000060  1960               	xorwf	_palabra& (0+255),w,b
   484  000062  A4D8               	btfss	status,2,c
   485  000064  D01B               	goto	l162
   486                           
   487                           ; BSR set to: 0
   488                           ;main.c: 99: PWM_duty = ((palabra[1] - 48) * 10) + ((palabra[2] - 48));
   489  000066  0ED0               	movlw	208
   490  000068  2561               	addwf	(_palabra+1)& (0+255),w,b
   491  00006A  6E38               	movwf	___wmul@multiplier,c
   492  00006C  6A39               	clrf	___wmul@multiplier+1,c
   493  00006E  0EFF               	movlw	255
   494  000070  2239               	addwfc	___wmul@multiplier+1,f,c
   495  000072  0E00               	movlw	0
   496  000074  6E3B               	movwf	___wmul@multiplicand+1,c
   497  000076  0E0A               	movlw	10
   498  000078  6E3A               	movwf	___wmul@multiplicand,c
   499  00007A  EC10  F003         	call	___wmul	;wreg free
   500  00007E  0100               	movlb	0	; () banked
   501  000080  5162               	movf	(_palabra+2)& (0+255),w,b
   502  000082  6F76               	movwf	??_main& (0+255),b
   503  000084  6B77               	clrf	(??_main+1)& (0+255),b
   504  000086  5038               	movf	?___wmul,w,c
   505  000088  2776               	addwf	??_main& (0+255),f,b
   506  00008A  5039               	movf	?___wmul+1,w,c
   507  00008C  2377               	addwfc	(??_main+1)& (0+255),f,b
   508  00008E  0ED0               	movlw	208
   509  000090  2576               	addwf	??_main& (0+255),w,b
   510  000092  6E3C               	movwf	_PWM_duty,c
   511  000094  0EFF               	movlw	255
   512  000096  2177               	addwfc	(??_main+1)& (0+255),w,b
   513  000098  6E3D               	movwf	_PWM_duty+1,c
   514                           
   515                           ;main.c: 100: } else if (palabra[0] == 'A') {
   516  00009A  D7BF               	goto	l160
   517  00009C                     l162:
   518                           
   519                           ; BSR set to: 0
   520                           
   521                           ; BSR set to: 0
   522  00009C  0E41               	movlw	65
   523  00009E  1960               	xorwf	_palabra& (0+255),w,b
   524  0000A0  A4D8               	btfss	status,2,c
   525  0000A2  D0E5               	goto	l164
   526                           
   527                           ; BSR set to: 0
   528                           ;main.c: 102: caliber = ((palabra[1] - 48) * 10) + ((palabra[2] - 48));
   529  0000A4  0ED0               	movlw	208
   530  0000A6  2561               	addwf	(_palabra+1)& (0+255),w,b
   531  0000A8  6E38               	movwf	___wmul@multiplier,c
   532  0000AA  6A39               	clrf	___wmul@multiplier+1,c
   533  0000AC  0EFF               	movlw	255
   534  0000AE  2239               	addwfc	___wmul@multiplier+1,f,c
   535  0000B0  0E00               	movlw	0
   536  0000B2  6E3B               	movwf	___wmul@multiplicand+1,c
   537  0000B4  0E0A               	movlw	10
   538  0000B6  6E3A               	movwf	___wmul@multiplicand,c
   539  0000B8  EC10  F003         	call	___wmul	;wreg free
   540  0000BC  0100               	movlb	0	; () banked
   541  0000BE  5162               	movf	(_palabra+2)& (0+255),w,b
   542  0000C0  6F76               	movwf	??_main& (0+255),b
   543  0000C2  6B77               	clrf	(??_main+1)& (0+255),b
   544  0000C4  5038               	movf	?___wmul,w,c
   545  0000C6  2776               	addwf	??_main& (0+255),f,b
   546  0000C8  5039               	movf	?___wmul+1,w,c
   547  0000CA  2377               	addwfc	(??_main+1)& (0+255),f,b
   548  0000CC  0ED0               	movlw	208
   549  0000CE  2576               	addwf	??_main& (0+255),w,b
   550  0000D0  6E09               	movwf	_caliber,c
   551  0000D2  0EFF               	movlw	255
   552  0000D4  2177               	addwfc	(??_main+1)& (0+255),w,b
   553  0000D6  6E0A               	movwf	_caliber+1,c
   554                           
   555                           ;main.c: 103: diameter = ((palabra[3] - 48) * 1000) + ((palabra[4] - 48) * 100) + ((pala
      +                          bra[5] - 48) * 10) + ((palabra[6] - 48));
   556  0000D8  0ED0               	movlw	208
   557  0000DA  2563               	addwf	(_palabra+3)& (0+255),w,b
   558  0000DC  6E38               	movwf	___wmul@multiplier,c
   559  0000DE  6A39               	clrf	___wmul@multiplier+1,c
   560  0000E0  0EFF               	movlw	255
   561  0000E2  2239               	addwfc	___wmul@multiplier+1,f,c
   562  0000E4  0E03               	movlw	3
   563  0000E6  6E3B               	movwf	___wmul@multiplicand+1,c
   564  0000E8  0EE8               	movlw	232
   565  0000EA  6E3A               	movwf	___wmul@multiplicand,c
   566  0000EC  EC10  F003         	call	___wmul	;wreg free
   567  0000F0  0100               	movlb	0	; () banked
   568  0000F2  5166               	movf	(_palabra+6)& (0+255),w,b
   569  0000F4  6F76               	movwf	??_main& (0+255),b
   570  0000F6  6B77               	clrf	(??_main+1)& (0+255),b
   571  0000F8  5038               	movf	?___wmul,w,c
   572  0000FA  2776               	addwf	??_main& (0+255),f,b
   573  0000FC  5039               	movf	?___wmul+1,w,c
   574  0000FE  2377               	addwfc	(??_main+1)& (0+255),f,b
   575  000100  0ED0               	movlw	208
   576  000102  2564               	addwf	(_palabra+4)& (0+255),w,b
   577  000104  6E38               	movwf	___wmul@multiplier,c
   578  000106  6A39               	clrf	___wmul@multiplier+1,c
   579  000108  0EFF               	movlw	255
   580  00010A  2239               	addwfc	___wmul@multiplier+1,f,c
   581  00010C  0E00               	movlw	0
   582  00010E  6E3B               	movwf	___wmul@multiplicand+1,c
   583  000110  0E64               	movlw	100
   584  000112  6E3A               	movwf	___wmul@multiplicand,c
   585  000114  EC10  F003         	call	___wmul	;wreg free
   586  000118  5038               	movf	?___wmul,w,c
   587  00011A  0100               	movlb	0	; () banked
   588  00011C  2776               	addwf	??_main& (0+255),f,b
   589  00011E  5039               	movf	?___wmul+1,w,c
   590  000120  2377               	addwfc	(??_main+1)& (0+255),f,b
   591  000122  0ED0               	movlw	208
   592  000124  2565               	addwf	(_palabra+5)& (0+255),w,b
   593  000126  6E38               	movwf	___wmul@multiplier,c
   594  000128  6A39               	clrf	___wmul@multiplier+1,c
   595  00012A  0EFF               	movlw	255
   596  00012C  2239               	addwfc	___wmul@multiplier+1,f,c
   597  00012E  0E00               	movlw	0
   598  000130  6E3B               	movwf	___wmul@multiplicand+1,c
   599  000132  0E0A               	movlw	10
   600  000134  6E3A               	movwf	___wmul@multiplicand,c
   601  000136  EC10  F003         	call	___wmul	;wreg free
   602  00013A  5038               	movf	?___wmul,w,c
   603  00013C  0100               	movlb	0	; () banked
   604  00013E  2776               	addwf	??_main& (0+255),f,b
   605  000140  5039               	movf	?___wmul+1,w,c
   606  000142  2377               	addwfc	(??_main+1)& (0+255),f,b
   607  000144  0ED0               	movlw	208
   608  000146  2576               	addwf	??_main& (0+255),w,b
   609  000148  6E07               	movwf	_diameter,c
   610  00014A  0EFF               	movlw	255
   611  00014C  2177               	addwfc	(??_main+1)& (0+255),w,b
   612  00014E  6E08               	movwf	_diameter+1,c
   613                           
   614                           ;main.c: 104: length = ((palabra[7] - 48) * 10000) + ((palabra[8] - 48) * 1000) + ((pala
      +                          bra[9] - 48) * 100) + ((palabra[10] - 48) * 10) + ((palabra[11] - 48));
   615  000150  0ED0               	movlw	208
   616  000152  2567               	addwf	(_palabra+7)& (0+255),w,b
   617  000154  6E38               	movwf	___wmul@multiplier,c
   618  000156  6A39               	clrf	___wmul@multiplier+1,c
   619  000158  0EFF               	movlw	255
   620  00015A  2239               	addwfc	___wmul@multiplier+1,f,c
   621  00015C  0E27               	movlw	39
   622  00015E  6E3B               	movwf	___wmul@multiplicand+1,c
   623  000160  0E10               	movlw	16
   624  000162  6E3A               	movwf	___wmul@multiplicand,c
   625  000164  EC10  F003         	call	___wmul	;wreg free
   626  000168  0100               	movlb	0	; () banked
   627  00016A  516B               	movf	(_palabra+11)& (0+255),w,b
   628  00016C  6F76               	movwf	??_main& (0+255),b
   629  00016E  6B77               	clrf	(??_main+1)& (0+255),b
   630  000170  5038               	movf	?___wmul,w,c
   631  000172  2776               	addwf	??_main& (0+255),f,b
   632  000174  5039               	movf	?___wmul+1,w,c
   633  000176  2377               	addwfc	(??_main+1)& (0+255),f,b
   634  000178  0ED0               	movlw	208
   635  00017A  2568               	addwf	(_palabra+8)& (0+255),w,b
   636  00017C  6E38               	movwf	___wmul@multiplier,c
   637  00017E  6A39               	clrf	___wmul@multiplier+1,c
   638  000180  0EFF               	movlw	255
   639  000182  2239               	addwfc	___wmul@multiplier+1,f,c
   640  000184  0E03               	movlw	3
   641  000186  6E3B               	movwf	___wmul@multiplicand+1,c
   642  000188  0EE8               	movlw	232
   643  00018A  6E3A               	movwf	___wmul@multiplicand,c
   644  00018C  EC10  F003         	call	___wmul	;wreg free
   645  000190  5038               	movf	?___wmul,w,c
   646  000192  0100               	movlb	0	; () banked
   647  000194  2776               	addwf	??_main& (0+255),f,b
   648  000196  5039               	movf	?___wmul+1,w,c
   649  000198  2377               	addwfc	(??_main+1)& (0+255),f,b
   650  00019A  0ED0               	movlw	208
   651  00019C  2569               	addwf	(_palabra+9)& (0+255),w,b
   652  00019E  6E38               	movwf	___wmul@multiplier,c
   653  0001A0  6A39               	clrf	___wmul@multiplier+1,c
   654  0001A2  0EFF               	movlw	255
   655  0001A4  2239               	addwfc	___wmul@multiplier+1,f,c
   656  0001A6  0E00               	movlw	0
   657  0001A8  6E3B               	movwf	___wmul@multiplicand+1,c
   658  0001AA  0E64               	movlw	100
   659  0001AC  6E3A               	movwf	___wmul@multiplicand,c
   660  0001AE  EC10  F003         	call	___wmul	;wreg free
   661  0001B2  5038               	movf	?___wmul,w,c
   662  0001B4  0100               	movlb	0	; () banked
   663  0001B6  2776               	addwf	??_main& (0+255),f,b
   664  0001B8  5039               	movf	?___wmul+1,w,c
   665  0001BA  2377               	addwfc	(??_main+1)& (0+255),f,b
   666  0001BC  0ED0               	movlw	208
   667  0001BE  256A               	addwf	(_palabra+10)& (0+255),w,b
   668  0001C0  6E38               	movwf	___wmul@multiplier,c
   669  0001C2  6A39               	clrf	___wmul@multiplier+1,c
   670  0001C4  0EFF               	movlw	255
   671  0001C6  2239               	addwfc	___wmul@multiplier+1,f,c
   672  0001C8  0E00               	movlw	0
   673  0001CA  6E3B               	movwf	___wmul@multiplicand+1,c
   674  0001CC  0E0A               	movlw	10
   675  0001CE  6E3A               	movwf	___wmul@multiplicand,c
   676  0001D0  EC10  F003         	call	___wmul	;wreg free
   677  0001D4  5038               	movf	?___wmul,w,c
   678  0001D6  0100               	movlb	0	; () banked
   679  0001D8  2776               	addwf	??_main& (0+255),f,b
   680  0001DA  5039               	movf	?___wmul+1,w,c
   681  0001DC  2377               	addwfc	(??_main+1)& (0+255),f,b
   682  0001DE  0ED0               	movlw	208
   683  0001E0  2576               	addwf	??_main& (0+255),w,b
   684  0001E2  6E05               	movwf	_length,c
   685  0001E4  0EFF               	movlw	255
   686  0001E6  2177               	addwfc	(??_main+1)& (0+255),w,b
   687  0001E8  6E06               	movwf	_length+1,c
   688                           
   689                           ;main.c: 105: turns = ((palabra[12] - 48) * 1000) + ((palabra[13] - 48) * 100) + ((palab
      +                          ra[14] - 48) * 10) + ((palabra[15] - 48));
   690  0001EA  0ED0               	movlw	208
   691  0001EC  256C               	addwf	(_palabra+12)& (0+255),w,b
   692  0001EE  6E38               	movwf	___wmul@multiplier,c
   693  0001F0  6A39               	clrf	___wmul@multiplier+1,c
   694  0001F2  0EFF               	movlw	255
   695  0001F4  2239               	addwfc	___wmul@multiplier+1,f,c
   696  0001F6  0E03               	movlw	3
   697  0001F8  6E3B               	movwf	___wmul@multiplicand+1,c
   698  0001FA  0EE8               	movlw	232
   699  0001FC  6E3A               	movwf	___wmul@multiplicand,c
   700  0001FE  EC10  F003         	call	___wmul	;wreg free
   701  000202  0100               	movlb	0	; () banked
   702  000204  516F               	movf	(_palabra+15)& (0+255),w,b
   703  000206  6F76               	movwf	??_main& (0+255),b
   704  000208  6B77               	clrf	(??_main+1)& (0+255),b
   705  00020A  5038               	movf	?___wmul,w,c
   706  00020C  2776               	addwf	??_main& (0+255),f,b
   707  00020E  5039               	movf	?___wmul+1,w,c
   708  000210  2377               	addwfc	(??_main+1)& (0+255),f,b
   709  000212  0ED0               	movlw	208
   710  000214  256D               	addwf	(_palabra+13)& (0+255),w,b
   711  000216  6E38               	movwf	___wmul@multiplier,c
   712  000218  6A39               	clrf	___wmul@multiplier+1,c
   713  00021A  0EFF               	movlw	255
   714  00021C  2239               	addwfc	___wmul@multiplier+1,f,c
   715  00021E  0E00               	movlw	0
   716  000220  6E3B               	movwf	___wmul@multiplicand+1,c
   717  000222  0E64               	movlw	100
   718  000224  6E3A               	movwf	___wmul@multiplicand,c
   719  000226  EC10  F003         	call	___wmul	;wreg free
   720  00022A  5038               	movf	?___wmul,w,c
   721  00022C  0100               	movlb	0	; () banked
   722  00022E  2776               	addwf	??_main& (0+255),f,b
   723  000230  5039               	movf	?___wmul+1,w,c
   724  000232  2377               	addwfc	(??_main+1)& (0+255),f,b
   725  000234  0ED0               	movlw	208
   726  000236  256E               	addwf	(_palabra+14)& (0+255),w,b
   727  000238  6E38               	movwf	___wmul@multiplier,c
   728  00023A  6A39               	clrf	___wmul@multiplier+1,c
   729  00023C  0EFF               	movlw	255
   730  00023E  2239               	addwfc	___wmul@multiplier+1,f,c
   731  000240  0E00               	movlw	0
   732  000242  6E3B               	movwf	___wmul@multiplicand+1,c
   733  000244  0E0A               	movlw	10
   734  000246  6E3A               	movwf	___wmul@multiplicand,c
   735  000248  EC10  F003         	call	___wmul	;wreg free
   736  00024C  5038               	movf	?___wmul,w,c
   737  00024E  0100               	movlb	0	; () banked
   738  000250  2776               	addwf	??_main& (0+255),f,b
   739  000252  5039               	movf	?___wmul+1,w,c
   740  000254  2377               	addwfc	(??_main+1)& (0+255),f,b
   741  000256  0ED0               	movlw	208
   742  000258  2576               	addwf	??_main& (0+255),w,b
   743  00025A  6E03               	movwf	_turns,c
   744  00025C  0EFF               	movlw	255
   745  00025E  2177               	addwfc	(??_main+1)& (0+255),w,b
   746  000260  6E04               	movwf	_turns+1,c
   747                           
   748                           ; BSR set to: 0
   749                           ;main.c: 106: speed = palabra[15];
   750  000262  C06F  F001         	movff	_palabra+15,_speed
   751  000266  6A02               	clrf	_speed+1,c
   752                           
   753                           ; BSR set to: 0
   754                           ;main.c: 108: busy_flag = 1;
   755  000268  0E01               	movlw	1
   756  00026A  6E1D               	movwf	_busy_flag,c
   757                           
   758                           ;main.c: 109: } else if ((palabra[0] == 'D')) {
   759  00026C  D6D6               	goto	l160
   760  00026E                     l164:
   761                           
   762                           ; BSR set to: 0
   763                           
   764                           ; BSR set to: 0
   765  00026E  0E44               	movlw	68
   766  000270  1960               	xorwf	_palabra& (0+255),w,b
   767  000272  A4D8               	btfss	status,2,c
   768  000274  D018               	goto	l166
   769                           
   770                           ; BSR set to: 0
   771                           ;main.c: 111: if (palabra[1] == '0') {
   772  000276  0E30               	movlw	48
   773  000278  1961               	xorwf	(_palabra+1)& (0+255),w,b
   774  00027A  A4D8               	btfss	status,2,c
   775  00027C  D004               	goto	l167
   776                           
   777                           ; BSR set to: 0
   778                           ;main.c: 113: MOT_3 = 1;
   779  00027E  0E01               	movlw	1
   780  000280  6E24               	movwf	_MOT_3,c
   781                           
   782                           ;main.c: 114: DIR_3 = 0;
   783  000282  0E00               	movlw	0
   784  000284  D007               	goto	L1
   785  000286                     l167:
   786                           
   787                           ; BSR set to: 0
   788                           
   789                           ; BSR set to: 0
   790  000286  0E31               	movlw	49
   791  000288  1961               	xorwf	(_palabra+1)& (0+255),w,b
   792  00028A  A4D8               	btfss	status,2,c
   793  00028C  D005               	goto	l169
   794                           
   795                           ; BSR set to: 0
   796                           ;main.c: 117: MOT_3 = 1;
   797  00028E  0E01               	movlw	1
   798  000290  6E24               	movwf	_MOT_3,c
   799                           
   800                           ;main.c: 118: DIR_3 = 1;
   801  000292  0E01               	movlw	1
   802  000294                     L1:
   803  000294  6E23               	movwf	_DIR_3,c
   804                           
   805                           ;main.c: 119: } else if (palabra[1] == '2') {
   806  000296  D6C1               	goto	l160
   807  000298                     l169:
   808                           
   809                           ; BSR set to: 0
   810                           
   811                           ; BSR set to: 0
   812  000298  0E32               	movlw	50
   813  00029A  1961               	xorwf	(_palabra+1)& (0+255),w,b
   814  00029C  A4D8               	btfss	status,2,c
   815  00029E  D6BD               	goto	l160
   816                           
   817                           ; BSR set to: 0
   818                           ;main.c: 120: ;
   819                           ;main.c: 121: MOT_3 = 0;
   820  0002A0  0E00               	movlw	0
   821  0002A2  6E24               	movwf	_MOT_3,c
   822                           
   823                           ; BSR set to: 0
   824                           ;main.c: 122: }
   825                           ;main.c: 124: } else if (palabra[0] == 'E') {
   826                           
   827                           ; BSR set to: 0
   828                           
   829                           ; BSR set to: 0
   830  0002A4  D6BA               	goto	l160
   831  0002A6                     l166:
   832                           
   833                           ; BSR set to: 0
   834                           
   835                           ; BSR set to: 0
   836  0002A6  0E45               	movlw	69
   837  0002A8  1960               	xorwf	_palabra& (0+255),w,b
   838  0002AA  A4D8               	btfss	status,2,c
   839  0002AC  D6B6               	goto	l160
   840                           
   841                           ; BSR set to: 0
   842                           ;main.c: 126: if (palabra[1] == '0') {
   843  0002AE  0E30               	movlw	48
   844  0002B0  1961               	xorwf	(_palabra+1)& (0+255),w,b
   845  0002B2  A4D8               	btfss	status,2,c
   846  0002B4  D008               	goto	l174
   847                           
   848                           ; BSR set to: 0
   849                           ;main.c: 127: MOT_4 = !MOT_4;
   850  0002B6  5048               	movf	_MOT_4,w,c
   851  0002B8  A4D8               	btfss	status,2,c
   852  0002BA  D002               	goto	u1130
   853  0002BC  0E01               	movlw	1
   854  0002BE  D001               	goto	u1140
   855  0002C0                     u1130:
   856  0002C0  0E00               	movlw	0
   857  0002C2                     u1140:
   858  0002C2  6E48               	movwf	_MOT_4,c
   859                           
   860                           ;main.c: 128: } else if (palabra[1] == '1') {
   861  0002C4  D6AA               	goto	l160
   862  0002C6                     l174:
   863                           
   864                           ; BSR set to: 0
   865                           
   866                           ; BSR set to: 0
   867  0002C6  0E31               	movlw	49
   868  0002C8  1961               	xorwf	(_palabra+1)& (0+255),w,b
   869  0002CA  A4D8               	btfss	status,2,c
   870  0002CC  D6A6               	goto	l160
   871                           
   872                           ; BSR set to: 0
   873                           ;main.c: 129: DIR_4 = !DIR_4;
   874  0002CE  501E               	movf	_DIR_4,w,c
   875  0002D0  A4D8               	btfss	status,2,c
   876  0002D2  D002               	goto	u1160
   877  0002D4  0E01               	movlw	1
   878  0002D6  D001               	goto	u1170
   879  0002D8                     u1160:
   880  0002D8  0E00               	movlw	0
   881  0002DA                     u1170:
   882  0002DA  6E1E               	movwf	_DIR_4,c
   883                           
   884                           ; BSR set to: 0
   885                           ;main.c: 130: }
   886                           ;main.c: 131: }
   887                           ;main.c: 134: } else if (GODONE == 0) {
   888                           
   889                           ; BSR set to: 0
   890                           
   891                           ; BSR set to: 0
   892                           
   893                           ; BSR set to: 0
   894                           
   895                           ; BSR set to: 0
   896                           
   897                           ; BSR set to: 0
   898  0002DC  D69E               	goto	l160
   899  0002DE                     l161:
   900  0002DE  B2C2               	btfsc	4034,1,c	;volatile
   901  0002E0  D69C               	goto	l160
   902                           
   903                           ;main.c: 136: _delay((unsigned long)((10)*(8000000/4000.0)));
   904  0002E2  0E1A               	movlw	26
   905  0002E4  0100               	movlb	0	; () banked
   906  0002E6  6F76               	movwf	??_main& (0+255),b
   907  0002E8  0EF8               	movlw	248
   908  0002EA                     u1217:
   909  0002EA  2EE8               	decfsz	wreg,f,c
   910  0002EC  D7FE               	bra	u1217
   911  0002EE  2F76               	decfsz	??_main& (0+255),f,b
   912  0002F0  D7FC               	bra	u1217
   913  0002F2  F000               	nop	
   914                           
   915                           ;main.c: 137: ADCON0bits.CHS = !ADCON0bits.CHS;
   916  0002F4  30C2               	rrcf	4034,w,c	;volatile
   917  0002F6  32E8               	rrcf	wreg,f,c
   918  0002F8  0B0F               	andlw	15
   919  0002FA  0900               	iorlw	0
   920  0002FC  A4D8               	btfss	status,2,c
   921  0002FE  D004               	goto	u1190
   922  000300  0100               	movlb	0	; () banked
   923  000302  6B76               	clrf	??_main& (0+255),b
   924  000304  2B76               	incf	??_main& (0+255),f,b
   925  000306  D002               	goto	u1208
   926  000308                     u1190:
   927  000308  0100               	movlb	0	; () banked
   928  00030A  6B76               	clrf	??_main& (0+255),b
   929  00030C                     u1208:
   930  00030C  4776               	rlncf	??_main& (0+255),f,b
   931  00030E  4776               	rlncf	??_main& (0+255),f,b
   932  000310  50C2               	movf	4034,w,c	;volatile
   933  000312  1976               	xorwf	??_main& (0+255),w,b
   934  000314  0BC3               	andlw	-61
   935  000316  1976               	xorwf	??_main& (0+255),w,b
   936  000318  6EC2               	movwf	4034,c	;volatile
   937                           
   938                           ; BSR set to: 0
   939                           ;main.c: 138: GODONE = 1;
   940  00031A  82C2               	bsf	4034,1,c	;volatile
   941                           
   942                           ; BSR set to: 0
   943                           
   944                           ; BSR set to: 0
   945                           
   946                           ; BSR set to: 0
   947  00031C  D67E               	goto	l160
   948  00031E                     __end_of_main:
   949                           	opt stack 0
   950                           tblptru	equ	0xFF8
   951                           tblptrh	equ	0xFF7
   952                           tblptrl	equ	0xFF6
   953                           tablat	equ	0xFF5
   954                           postinc0	equ	0xFEE
   955                           wreg	equ	0xFE8
   956                           postdec1	equ	0xFE5
   957                           fsr1l	equ	0xFE1
   958                           status	equ	0xFD8
   959                           
   960 ;; *************** function ___wmul *****************
   961 ;; Defined at:
   962 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
   963 ;; Parameters:    Size  Location     Type
   964 ;;  multiplier      2   19[COMRAM] unsigned int 
   965 ;;  multiplicand    2   21[COMRAM] unsigned int 
   966 ;; Auto vars:     Size  Location     Type
   967 ;;  product         2    0[BANK0 ] unsigned int 
   968 ;; Return value:  Size  Location     Type
   969 ;;                  2   19[COMRAM] unsigned int 
   970 ;; Registers used:
   971 ;;		wreg, status,2, status,0, prodl, prodh
   972 ;; Tracked objects:
   973 ;;		On entry : 0/0
   974 ;;		On exit  : 0/0
   975 ;;		Unchanged: 0/0
   976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   977 ;;      Params:         4       0       0       0       0       0       0       0       0
   978 ;;      Locals:         0       2       0       0       0       0       0       0       0
   979 ;;      Temps:          0       0       0       0       0       0       0       0       0
   980 ;;      Totals:         4       2       0       0       0       0       0       0       0
   981 ;;Total ram usage:        6 bytes
   982 ;; Hardware stack levels used:    1
   983 ;; Hardware stack levels required when called:    1
   984 ;; This function calls:
   985 ;;		Nothing
   986 ;; This function is called by:
   987 ;;		_main
   988 ;; This function uses a non-reentrant model
   989 ;;
   990                           
   991                           	psect	text1
   992  000620                     __ptext1:
   993                           	opt stack 0
   994  000620                     ___wmul:
   995                           	opt stack 29
   996                           
   997                           ; BSR set to: 0
   998                           ;incstack = 0
   999  000620  5038               	movf	___wmul@multiplier,w,c
  1000  000622  023A               	mulwf	___wmul@multiplicand,c
  1001  000624  CFF3 F074          	movff	prodl,___wmul@product
  1002  000628  CFF4 F075          	movff	prodh,___wmul@product+1
  1003  00062C  5038               	movf	___wmul@multiplier,w,c
  1004  00062E  023B               	mulwf	___wmul@multiplicand+1,c
  1005  000630  50F3               	movf	prodl,w,c
  1006  000632  0100               	movlb	0	; () banked
  1007  000634  2775               	addwf	(___wmul@product+1)& (0+255),f,b
  1008  000636  5039               	movf	___wmul@multiplier+1,w,c
  1009  000638  023A               	mulwf	___wmul@multiplicand,c
  1010  00063A  50F3               	movf	prodl,w,c
  1011  00063C  2775               	addwf	(___wmul@product+1)& (0+255),f,b
  1012                           
  1013                           ; BSR set to: 0
  1014  00063E  C074  F038         	movff	___wmul@product,?___wmul
  1015  000642  C075  F039         	movff	___wmul@product+1,?___wmul+1
  1016  000646  0012               	return	
  1017  000648                     __end_of___wmul:
  1018                           	opt stack 0
  1019                           tblptru	equ	0xFF8
  1020                           tblptrh	equ	0xFF7
  1021                           tblptrl	equ	0xFF6
  1022                           tablat	equ	0xFF5
  1023                           prodh	equ	0xFF4
  1024                           prodl	equ	0xFF3
  1025                           postinc0	equ	0xFEE
  1026                           wreg	equ	0xFE8
  1027                           postdec1	equ	0xFE5
  1028                           fsr1l	equ	0xFE1
  1029                           status	equ	0xFD8
  1030                           
  1031 ;; *************** function _InitApp *****************
  1032 ;; Defined at:
  1033 ;;		line 33 in file "user.c"
  1034 ;; Parameters:    Size  Location     Type
  1035 ;;		None
  1036 ;; Auto vars:     Size  Location     Type
  1037 ;;		None
  1038 ;; Return value:  Size  Location     Type
  1039 ;;                  1    wreg      void 
  1040 ;; Registers used:
  1041 ;;		wreg, status,2
  1042 ;; Tracked objects:
  1043 ;;		On entry : 0/0
  1044 ;;		On exit  : 0/0
  1045 ;;		Unchanged: 0/0
  1046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1047 ;;      Params:         0       0       0       0       0       0       0       0       0
  1048 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1049 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1050 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1051 ;;Total ram usage:        0 bytes
  1052 ;; Hardware stack levels used:    1
  1053 ;; Hardware stack levels required when called:    1
  1054 ;; This function calls:
  1055 ;;		Nothing
  1056 ;; This function is called by:
  1057 ;;		_main
  1058 ;; This function uses a non-reentrant model
  1059 ;;
  1060                           
  1061                           	psect	text2
  1062  000536                     __ptext2:
  1063                           	opt stack 0
  1064  000536                     _InitApp:
  1065                           	opt stack 29
  1066                           
  1067                           ;user.c: 35: PORTA = 0;
  1068                           
  1069                           ; BSR set to: 0
  1070                           ;incstack = 0
  1071  000536  0E00               	movlw	0
  1072  000538  6E80               	movwf	3968,c	;volatile
  1073                           
  1074                           ;user.c: 36: LATA = 0;
  1075  00053A  0E00               	movlw	0
  1076  00053C  6E89               	movwf	3977,c	;volatile
  1077                           
  1078                           ;user.c: 37: PORTB = 0;
  1079  00053E  0E00               	movlw	0
  1080  000540  6E81               	movwf	3969,c	;volatile
  1081                           
  1082                           ;user.c: 38: LATB = 0;
  1083  000542  0E00               	movlw	0
  1084  000544  6E8A               	movwf	3978,c	;volatile
  1085                           
  1086                           ;user.c: 39: PORTC = 0;
  1087  000546  0E00               	movlw	0
  1088  000548  6E82               	movwf	3970,c	;volatile
  1089                           
  1090                           ;user.c: 40: LATC = 0;
  1091  00054A  0E00               	movlw	0
  1092  00054C  6E8B               	movwf	3979,c	;volatile
  1093                           
  1094                           ;user.c: 42: ADCON1 = 0b1101;
  1095  00054E  0E0D               	movlw	13
  1096  000550  6EC1               	movwf	4033,c	;volatile
  1097                           
  1098                           ;user.c: 43: TRISAbits.TRISA0 = 1;
  1099  000552  8092               	bsf	3986,0,c	;volatile
  1100                           
  1101                           ;user.c: 44: ADCON0bits.CHS = 0;
  1102  000554  94C2               	bcf	4034,2,c	;volatile
  1103  000556  96C2               	bcf	4034,3,c	;volatile
  1104  000558  98C2               	bcf	4034,4,c	;volatile
  1105  00055A  9AC2               	bcf	4034,5,c	;volatile
  1106                           
  1107                           ;user.c: 45: ADCON2 = 0b10101100;
  1108  00055C  0EAC               	movlw	172
  1109  00055E  6EC0               	movwf	4032,c	;volatile
  1110                           
  1111                           ;user.c: 46: PIE1bits.ADIE = 1;
  1112  000560  8C9D               	bsf	3997,6,c	;volatile
  1113                           
  1114                           ;user.c: 47: PIR1bits.ADIF = 0;
  1115  000562  9C9E               	bcf	3998,6,c	;volatile
  1116                           
  1117                           ;user.c: 48: ADCON0bits.ADON = 1;
  1118  000564  80C2               	bsf	4034,0,c	;volatile
  1119                           
  1120                           ;user.c: 50: TRISAbits.RA2 = 0;
  1121  000566  9492               	bcf	3986,2,c	;volatile
  1122                           
  1123                           ;user.c: 51: TRISAbits.RA3 = 0;
  1124  000568  9692               	bcf	3986,3,c	;volatile
  1125                           
  1126                           ;user.c: 52: TRISAbits.RA4 = 0;
  1127  00056A  9892               	bcf	3986,4,c	;volatile
  1128                           
  1129                           ;user.c: 53: TRISAbits.RA5 = 0;
  1130  00056C  9A92               	bcf	3986,5,c	;volatile
  1131                           
  1132                           ;user.c: 54: TRISCbits.RC0 = 0;
  1133  00056E  9094               	bcf	3988,0,c	;volatile
  1134                           
  1135                           ;user.c: 55: TRISCbits.RC1 = 0;
  1136  000570  9294               	bcf	3988,1,c	;volatile
  1137                           
  1138                           ;user.c: 56: TRISBbits.RB7 = 0;
  1139  000572  9E93               	bcf	3987,7,c	;volatile
  1140                           
  1141                           ;user.c: 57: TRISBbits.RB6 = 0;
  1142  000574  9C93               	bcf	3987,6,c	;volatile
  1143                           
  1144                           ;user.c: 58: TRISCbits.RC2 = 0;
  1145  000576  9494               	bcf	3988,2,c	;volatile
  1146                           
  1147                           ;user.c: 60: RCONbits.IPEN = 0;
  1148  000578  9ED0               	bcf	4048,7,c	;volatile
  1149                           
  1150                           ;user.c: 62: INTCONbits.GIE = 1;
  1151  00057A  8EF2               	bsf	intcon,7,c	;volatile
  1152                           
  1153                           ;user.c: 63: INTCONbits.PEIE = 1;
  1154  00057C  8CF2               	bsf	intcon,6,c	;volatile
  1155                           
  1156                           ;user.c: 64: INTCONbits.TMR0IE = 1;
  1157  00057E  8AF2               	bsf	intcon,5,c	;volatile
  1158                           
  1159                           ;user.c: 65: INTCONbits.TMR0IF = 0;
  1160  000580  94F2               	bcf	intcon,2,c	;volatile
  1161                           
  1162                           ;user.c: 66: INTCON2bits.TMR0IP = 1;
  1163  000582  84F1               	bsf	intcon2,2,c	;volatile
  1164                           
  1165                           ;user.c: 67: T0CONbits.T08BIT = 1;
  1166  000584  8CD5               	bsf	4053,6,c	;volatile
  1167                           
  1168                           ;user.c: 68: T0CONbits.T0CS = 0;
  1169  000586  9AD5               	bcf	4053,5,c	;volatile
  1170                           
  1171                           ;user.c: 69: T0CONbits.PSA = 0;
  1172  000588  96D5               	bcf	4053,3,c	;volatile
  1173                           
  1174                           ;user.c: 70: T0CONbits.T0PS = 0b101;
  1175  00058A  50D5               	movf	4053,w,c	;volatile
  1176  00058C  0BF8               	andlw	-8
  1177  00058E  0905               	iorlw	5
  1178  000590  6ED5               	movwf	4053,c	;volatile
  1179                           
  1180                           ;user.c: 71: TMR0 = 0x6;
  1181  000592  0E00               	movlw	0
  1182  000594  6ED7               	movwf	4055,c	;volatile
  1183  000596  0E06               	movlw	6
  1184  000598  6ED6               	movwf	4054,c	;volatile
  1185                           
  1186                           ;user.c: 73: TRISBbits.RB1 = 1;
  1187  00059A  8293               	bsf	3987,1,c	;volatile
  1188                           
  1189                           ;user.c: 74: TRISBbits.RB2 = 1;
  1190  00059C  8493               	bsf	3987,2,c	;volatile
  1191                           
  1192                           ;user.c: 75: INTCON3bits.INT1IE = 1;
  1193  00059E  86F0               	bsf	intcon3,3,c	;volatile
  1194                           
  1195                           ;user.c: 76: INTCON3bits.INT2IE = 1;
  1196  0005A0  88F0               	bsf	intcon3,4,c	;volatile
  1197                           
  1198                           ;user.c: 77: INTCON3bits.INT1IF = 0;
  1199  0005A2  90F0               	bcf	intcon3,0,c	;volatile
  1200                           
  1201                           ;user.c: 78: INTCON3bits.INT2IF = 0;
  1202  0005A4  92F0               	bcf	intcon3,1,c	;volatile
  1203                           
  1204                           ;user.c: 79: INTCON2bits.INTEDG1 = 0;
  1205  0005A6  9AF1               	bcf	intcon2,5,c	;volatile
  1206                           
  1207                           ;user.c: 80: INTCON2bits.INTEDG2 = 0;
  1208  0005A8  98F1               	bcf	intcon2,4,c	;volatile
  1209                           
  1210                           ;user.c: 82: TRISCbits.RC6 = 0;
  1211  0005AA  9C94               	bcf	3988,6,c	;volatile
  1212                           
  1213                           ;user.c: 83: TRISCbits.RC7 = 1;
  1214  0005AC  8E94               	bsf	3988,7,c	;volatile
  1215                           
  1216                           ;user.c: 84: BRGH = 1;
  1217  0005AE  84AC               	bsf	4012,2,c	;volatile
  1218                           
  1219                           ;user.c: 85: BRG16 = 1;
  1220  0005B0  86B8               	bsf	4024,3,c	;volatile
  1221                           
  1222                           ;user.c: 86: SPBRG = 207;
  1223  0005B2  0ECF               	movlw	207
  1224  0005B4  6EAF               	movwf	4015,c	;volatile
  1225                           
  1226                           ;user.c: 87: SPEN = 1;
  1227  0005B6  8EAB               	bsf	4011,7,c	;volatile
  1228                           
  1229                           ;user.c: 88: SYNC = 0;
  1230  0005B8  98AC               	bcf	4012,4,c	;volatile
  1231                           
  1232                           ;user.c: 89: TXEN = 1;
  1233  0005BA  8AAC               	bsf	4012,5,c	;volatile
  1234                           
  1235                           ;user.c: 90: CREN = 1;
  1236  0005BC  88AB               	bsf	4011,4,c	;volatile
  1237                           
  1238                           ;user.c: 91: TX9 = 0;
  1239  0005BE  9CAC               	bcf	4012,6,c	;volatile
  1240                           
  1241                           ;user.c: 92: RX9 = 0;
  1242  0005C0  9CAB               	bcf	4011,6,c	;volatile
  1243                           
  1244                           ;user.c: 93: RCIE = 1;
  1245  0005C2  8A9D               	bsf	3997,5,c	;volatile
  1246                           
  1247                           ;user.c: 94: TXIE = 0;
  1248  0005C4  989D               	bcf	3997,4,c	;volatile
  1249                           
  1250                           ;user.c: 96: PR2 = 99;
  1251  0005C6  0E63               	movlw	99
  1252  0005C8  6ECB               	movwf	4043,c	;volatile
  1253                           
  1254                           ;user.c: 97: CCP1CONbits.DC1B = 0;
  1255  0005CA  0ECF               	movlw	-49
  1256  0005CC  16BD               	andwf	4029,f,c	;volatile
  1257                           
  1258                           ;user.c: 98: T2CONbits.T2CKPS = 0b00;
  1259  0005CE  0EFC               	movlw	-4
  1260  0005D0  16CA               	andwf	4042,f,c	;volatile
  1261                           
  1262                           ;user.c: 99: T2CONbits.TMR2ON = 1;
  1263  0005D2  84CA               	bsf	4042,2,c	;volatile
  1264                           
  1265                           ;user.c: 100: CCP1CONbits.CCP1M = 0b1111;
  1266  0005D4  80BD               	bsf	4029,0,c	;volatile
  1267  0005D6  82BD               	bsf	4029,1,c	;volatile
  1268  0005D8  84BD               	bsf	4029,2,c	;volatile
  1269  0005DA  86BD               	bsf	4029,3,c	;volatile
  1270  0005DC  0012               	return		;funcret
  1271  0005DE                     __end_of_InitApp:
  1272                           	opt stack 0
  1273                           tblptru	equ	0xFF8
  1274                           tblptrh	equ	0xFF7
  1275                           tblptrl	equ	0xFF6
  1276                           tablat	equ	0xFF5
  1277                           prodh	equ	0xFF4
  1278                           prodl	equ	0xFF3
  1279                           intcon	equ	0xFF2
  1280                           intcon2	equ	0xFF1
  1281                           intcon3	equ	0xFF0
  1282                           postinc0	equ	0xFEE
  1283                           wreg	equ	0xFE8
  1284                           postdec1	equ	0xFE5
  1285                           fsr1l	equ	0xFE1
  1286                           status	equ	0xFD8
  1287                           
  1288 ;; *************** function _ConfigureOscillator *****************
  1289 ;; Defined at:
  1290 ;;		line 24 in file "system.c"
  1291 ;; Parameters:    Size  Location     Type
  1292 ;;		None
  1293 ;; Auto vars:     Size  Location     Type
  1294 ;;		None
  1295 ;; Return value:  Size  Location     Type
  1296 ;;                  1    wreg      void 
  1297 ;; Registers used:
  1298 ;;		wreg, status,2
  1299 ;; Tracked objects:
  1300 ;;		On entry : 0/0
  1301 ;;		On exit  : 0/0
  1302 ;;		Unchanged: 0/0
  1303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1304 ;;      Params:         0       0       0       0       0       0       0       0       0
  1305 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1306 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1307 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1308 ;;Total ram usage:        0 bytes
  1309 ;; Hardware stack levels used:    1
  1310 ;; Hardware stack levels required when called:    1
  1311 ;; This function calls:
  1312 ;;		Nothing
  1313 ;; This function is called by:
  1314 ;;		_main
  1315 ;; This function uses a non-reentrant model
  1316 ;;
  1317                           
  1318                           	psect	text3
  1319  000654                     __ptext3:
  1320                           	opt stack 0
  1321  000654                     _ConfigureOscillator:
  1322                           	opt stack 29
  1323                           
  1324                           ;system.c: 27: OSCCONbits.IRCF = 0b111;
  1325                           
  1326                           ;incstack = 0
  1327  000654  88D3               	bsf	4051,4,c	;volatile
  1328  000656  8AD3               	bsf	4051,5,c	;volatile
  1329  000658  8CD3               	bsf	4051,6,c	;volatile
  1330                           
  1331                           ;system.c: 28: OSCCONbits.SCS = 0b11;
  1332  00065A  0E03               	movlw	3
  1333  00065C  12D3               	iorwf	4051,f,c	;volatile
  1334  00065E  0012               	return		;funcret
  1335  000660                     __end_of_ConfigureOscillator:
  1336                           	opt stack 0
  1337                           tblptru	equ	0xFF8
  1338                           tblptrh	equ	0xFF7
  1339                           tblptrl	equ	0xFF6
  1340                           tablat	equ	0xFF5
  1341                           prodh	equ	0xFF4
  1342                           prodl	equ	0xFF3
  1343                           intcon	equ	0xFF2
  1344                           intcon2	equ	0xFF1
  1345                           intcon3	equ	0xFF0
  1346                           postinc0	equ	0xFEE
  1347                           wreg	equ	0xFE8
  1348                           postdec1	equ	0xFE5
  1349                           fsr1l	equ	0xFE1
  1350                           status	equ	0xFD8
  1351                           
  1352 ;; *************** function _high_isr *****************
  1353 ;; Defined at:
  1354 ;;		line 51 in file "interrupts.c"
  1355 ;; Parameters:    Size  Location     Type
  1356 ;;		None
  1357 ;; Auto vars:     Size  Location     Type
  1358 ;;		None
  1359 ;; Return value:  Size  Location     Type
  1360 ;;                  1    wreg      void 
  1361 ;; Registers used:
  1362 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1363 ;; Tracked objects:
  1364 ;;		On entry : 0/0
  1365 ;;		On exit  : 0/0
  1366 ;;		Unchanged: 0/0
  1367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1368 ;;      Params:         0       0       0       0       0       0       0       0       0
  1369 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1370 ;;      Temps:         19       0       0       0       0       0       0       0       0
  1371 ;;      Totals:        19       0       0       0       0       0       0       0       0
  1372 ;;Total ram usage:       19 bytes
  1373 ;; Hardware stack levels used:    1
  1374 ;; This function calls:
  1375 ;;		Nothing
  1376 ;; This function is called by:
  1377 ;;		Interrupt level 2
  1378 ;; This function uses a non-reentrant model
  1379 ;;
  1380                           
  1381                           	psect	intcode
  1382  000008                     __pintcode:
  1383                           	opt stack 0
  1384  000008                     _high_isr:
  1385                           	opt stack 29
  1386                           
  1387                           ;incstack = 0
  1388  000008  824B               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  1389  00000A  ED8F  F001         	call	int_func,f	;refresh shadow registers
  1390                           tblptru	equ	0xFF8
  1391                           tblptrh	equ	0xFF7
  1392                           tblptrl	equ	0xFF6
  1393                           tablat	equ	0xFF5
  1394                           prodh	equ	0xFF4
  1395                           prodl	equ	0xFF3
  1396                           intcon	equ	0xFF2
  1397                           intcon2	equ	0xFF1
  1398                           intcon3	equ	0xFF0
  1399                           postinc0	equ	0xFEE
  1400                           wreg	equ	0xFE8
  1401                           postdec1	equ	0xFE5
  1402                           fsr1l	equ	0xFE1
  1403                           status	equ	0xFD8
  1404                           
  1405                           	psect	intcode_body
  1406  00031E                     __pintcode_body:
  1407                           	opt stack 29
  1408  00031E                     int_func:
  1409                           	opt stack 29
  1410  00031E  0006               	pop		; remove dummy address from shadow register refresh
  1411  000320  CFFA F026          	movff	pclath,??_high_isr+1
  1412  000324  CFFB F027          	movff	pclatu,??_high_isr+2
  1413  000328  CFE9 F028          	movff	fsr0l,??_high_isr+3
  1414  00032C  CFEA F029          	movff	fsr0h,??_high_isr+4
  1415  000330  CFE1 F02A          	movff	fsr1l,??_high_isr+5
  1416  000334  CFE2 F02B          	movff	fsr1h,??_high_isr+6
  1417  000338  CFD9 F02C          	movff	fsr2l,??_high_isr+7
  1418  00033C  CFDA F02D          	movff	fsr2h,??_high_isr+8
  1419  000340  CFF3 F02E          	movff	prodl,??_high_isr+9
  1420  000344  CFF4 F02F          	movff	prodh,??_high_isr+10
  1421  000348  CFF6 F030          	movff	tblptrl,??_high_isr+11
  1422  00034C  CFF7 F031          	movff	tblptrh,??_high_isr+12
  1423  000350  CFF8 F032          	movff	tblptru,??_high_isr+13
  1424  000354  CFF5 F033          	movff	tablat,??_high_isr+14
  1425  000358  C04B  F034         	movff	btemp,??_high_isr+15
  1426  00035C  C04C  F035         	movff	btemp+1,??_high_isr+16
  1427  000360  C04D  F036         	movff	btemp+2,??_high_isr+17
  1428  000364  C04E  F037         	movff	btemp+3,??_high_isr+18
  1429                           
  1430                           ;interrupts.c: 52: if (INTCONbits.TMR0IF) {
  1431  000368  A4F2               	btfss	intcon,2,c	;volatile
  1432  00036A  D07B               	goto	i2l73
  1433                           
  1434                           ;interrupts.c: 54: INTCONbits.TMR0IF = 0;
  1435  00036C  94F2               	bcf	intcon,2,c	;volatile
  1436                           
  1437                           ;interrupts.c: 56: TMR0 = 250;
  1438  00036E  0E00               	movlw	0
  1439  000370  6ED7               	movwf	4055,c	;volatile
  1440  000372  0EFA               	movlw	250
  1441  000374  6ED6               	movwf	4054,c	;volatile
  1442                           
  1443                           ;interrupts.c: 57: MOT_1_count++;
  1444  000376  4A13               	infsnz	_MOT_1_count,f,c
  1445  000378  2A14               	incf	_MOT_1_count+1,f,c
  1446                           
  1447                           ;interrupts.c: 58: MOT_2_count++;
  1448  00037A  4A11               	infsnz	_MOT_2_count,f,c
  1449  00037C  2A12               	incf	_MOT_2_count+1,f,c
  1450                           
  1451                           ;interrupts.c: 59: MOT_3_count++;
  1452  00037E  4A0F               	infsnz	_MOT_3_count,f,c
  1453  000380  2A10               	incf	_MOT_3_count+1,f,c
  1454                           
  1455                           ;interrupts.c: 60: MOT_4_count++;
  1456  000382  4A0D               	infsnz	_MOT_4_count,f,c
  1457  000384  2A0E               	incf	_MOT_4_count+1,f,c
  1458                           
  1459                           ;interrupts.c: 62: if (MOT_1) {
  1460  000386  504A               	movf	_MOT_1,w,c
  1461  000388  B4D8               	btfsc	status,2,c
  1462  00038A  D019               	goto	i2l75
  1463                           
  1464                           ;interrupts.c: 63: if (MOT_1_count == count_1) {
  1465  00038C  5046               	movf	_count_1,w,c
  1466  00038E  1813               	xorwf	_MOT_1_count,w,c
  1467  000390  E116               	bnz	i2l1243
  1468  000392  5047               	movf	_count_1+1,w,c
  1469  000394  1814               	xorwf	_MOT_1_count+1,w,c
  1470  000396  A4D8               	btfss	status,2,c
  1471  000398  D012               	goto	i2l75
  1472                           
  1473                           ;interrupts.c: 64: LATAbits.LA3 = !PORTAbits.RA3;
  1474  00039A  B680               	btfsc	3968,3,c	;volatile
  1475  00039C  D003               	goto	i2u53_40
  1476  00039E  6A25               	clrf	??_high_isr& (0+255),c
  1477  0003A0  2A25               	incf	??_high_isr& (0+255),f,c
  1478  0003A2  D001               	goto	i2u54_48
  1479  0003A4                     i2u53_40:
  1480  0003A4  6A25               	clrf	??_high_isr& (0+255),c
  1481  0003A6                     i2u54_48:
  1482  0003A6  4625               	rlncf	??_high_isr,f,c
  1483  0003A8  4625               	rlncf	??_high_isr,f,c
  1484  0003AA  4625               	rlncf	??_high_isr,f,c
  1485  0003AC  5089               	movf	3977,w,c	;volatile
  1486  0003AE  1825               	xorwf	??_high_isr,w,c
  1487  0003B0  0BF7               	andlw	-9
  1488  0003B2  1825               	xorwf	??_high_isr,w,c
  1489  0003B4  6E89               	movwf	3977,c	;volatile
  1490                           
  1491                           ;interrupts.c: 65: MOT_1_count = 0;
  1492  0003B6  0E00               	movlw	0
  1493  0003B8  6E14               	movwf	_MOT_1_count+1,c
  1494  0003BA  0E00               	movlw	0
  1495  0003BC  6E13               	movwf	_MOT_1_count,c
  1496  0003BE                     i2l75:
  1497  0003BE                     i2l1243:
  1498                           
  1499                           ;interrupts.c: 66: }
  1500                           ;interrupts.c: 67: }
  1501                           ;interrupts.c: 68: if (MOT_2) {
  1502  0003BE  5049               	movf	_MOT_2,w,c
  1503  0003C0  B4D8               	btfsc	status,2,c
  1504  0003C2  D018               	goto	i2l77
  1505                           
  1506                           ;interrupts.c: 69: if (MOT_2_count == count_2) {
  1507  0003C4  5044               	movf	_count_2,w,c
  1508  0003C6  1811               	xorwf	_MOT_2_count,w,c
  1509  0003C8  E115               	bnz	i2l1251
  1510  0003CA  5045               	movf	_count_2+1,w,c
  1511  0003CC  1812               	xorwf	_MOT_2_count+1,w,c
  1512  0003CE  A4D8               	btfss	status,2,c
  1513  0003D0  D011               	goto	i2l77
  1514                           
  1515                           ;interrupts.c: 70: LATAbits.LA5 = !PORTAbits.RA5;
  1516  0003D2  BA80               	btfsc	3968,5,c	;volatile
  1517  0003D4  D003               	goto	i2u57_40
  1518  0003D6  6A25               	clrf	??_high_isr& (0+255),c
  1519  0003D8  2A25               	incf	??_high_isr& (0+255),f,c
  1520  0003DA  D001               	goto	i2u58_48
  1521  0003DC                     i2u57_40:
  1522  0003DC  6A25               	clrf	??_high_isr& (0+255),c
  1523  0003DE                     i2u58_48:
  1524  0003DE  3A25               	swapf	??_high_isr,f,c
  1525  0003E0  4625               	rlncf	??_high_isr,f,c
  1526  0003E2  5089               	movf	3977,w,c	;volatile
  1527  0003E4  1825               	xorwf	??_high_isr,w,c
  1528  0003E6  0BDF               	andlw	-33
  1529  0003E8  1825               	xorwf	??_high_isr,w,c
  1530  0003EA  6E89               	movwf	3977,c	;volatile
  1531                           
  1532                           ;interrupts.c: 71: MOT_2_count = 0;
  1533  0003EC  0E00               	movlw	0
  1534  0003EE  6E12               	movwf	_MOT_2_count+1,c
  1535  0003F0  0E00               	movlw	0
  1536  0003F2  6E11               	movwf	_MOT_2_count,c
  1537  0003F4                     i2l77:
  1538  0003F4                     i2l1251:
  1539                           
  1540                           ;interrupts.c: 72: }
  1541                           ;interrupts.c: 73: }
  1542                           ;interrupts.c: 74: if (MOT_3) {
  1543  0003F4  5024               	movf	_MOT_3,w,c
  1544  0003F6  B4D8               	btfsc	status,2,c
  1545  0003F8  D017               	goto	i2l79
  1546                           
  1547                           ;interrupts.c: 75: if (MOT_3_count == count_3) {
  1548  0003FA  5042               	movf	_count_3,w,c
  1549  0003FC  180F               	xorwf	_MOT_3_count,w,c
  1550  0003FE  E114               	bnz	i2l1259
  1551  000400  5043               	movf	_count_3+1,w,c
  1552  000402  1810               	xorwf	_MOT_3_count+1,w,c
  1553  000404  A4D8               	btfss	status,2,c
  1554  000406  D010               	goto	i2l79
  1555                           
  1556                           ;interrupts.c: 76: LATCbits.LC1 = !PORTCbits.RC1;
  1557  000408  B282               	btfsc	3970,1,c	;volatile
  1558  00040A  D003               	goto	i2u61_40
  1559  00040C  6A25               	clrf	??_high_isr& (0+255),c
  1560  00040E  2A25               	incf	??_high_isr& (0+255),f,c
  1561  000410  D001               	goto	i2u62_48
  1562  000412                     i2u61_40:
  1563  000412  6A25               	clrf	??_high_isr& (0+255),c
  1564  000414                     i2u62_48:
  1565  000414  4625               	rlncf	??_high_isr,f,c
  1566  000416  508B               	movf	3979,w,c	;volatile
  1567  000418  1825               	xorwf	??_high_isr,w,c
  1568  00041A  0BFD               	andlw	-3
  1569  00041C  1825               	xorwf	??_high_isr,w,c
  1570  00041E  6E8B               	movwf	3979,c	;volatile
  1571                           
  1572                           ;interrupts.c: 77: MOT_3_count = 0;
  1573  000420  0E00               	movlw	0
  1574  000422  6E10               	movwf	_MOT_3_count+1,c
  1575  000424  0E00               	movlw	0
  1576  000426  6E0F               	movwf	_MOT_3_count,c
  1577  000428                     i2l79:
  1578  000428                     i2l1259:
  1579                           
  1580                           ;interrupts.c: 78: }
  1581                           ;interrupts.c: 79: }
  1582                           ;interrupts.c: 80: if (MOT_4) {
  1583  000428  5048               	movf	_MOT_4,w,c
  1584  00042A  B4D8               	btfsc	status,2,c
  1585  00042C  D05E               	goto	i2l96
  1586                           
  1587                           ;interrupts.c: 81: if (MOT_4_count == count_4) {
  1588  00042E  5040               	movf	_count_4,w,c
  1589  000430  180D               	xorwf	_MOT_4_count,w,c
  1590  000432  E15B               	bnz	i2l82
  1591  000434  5041               	movf	_count_4+1,w,c
  1592  000436  180E               	xorwf	_MOT_4_count+1,w,c
  1593  000438  A4D8               	btfss	status,2,c
  1594  00043A  D057               	goto	i2l96
  1595                           
  1596                           ;interrupts.c: 82: LATBbits.LB6 = !PORTBbits.RB6;
  1597  00043C  BC81               	btfsc	3969,6,c	;volatile
  1598  00043E  D003               	goto	i2u65_40
  1599  000440  6A25               	clrf	??_high_isr& (0+255),c
  1600  000442  2A25               	incf	??_high_isr& (0+255),f,c
  1601  000444  D001               	goto	i2u66_48
  1602  000446                     i2u65_40:
  1603  000446  6A25               	clrf	??_high_isr& (0+255),c
  1604  000448                     i2u66_48:
  1605  000448  3A25               	swapf	??_high_isr,f,c
  1606  00044A  4625               	rlncf	??_high_isr,f,c
  1607  00044C  4625               	rlncf	??_high_isr,f,c
  1608  00044E  508A               	movf	3978,w,c	;volatile
  1609  000450  1825               	xorwf	??_high_isr,w,c
  1610  000452  0BBF               	andlw	-65
  1611  000454  1825               	xorwf	??_high_isr,w,c
  1612  000456  6E8A               	movwf	3978,c	;volatile
  1613                           
  1614                           ;interrupts.c: 83: MOT_4_count = 0;
  1615  000458  0E00               	movlw	0
  1616  00045A  6E0E               	movwf	_MOT_4_count+1,c
  1617  00045C  0E00               	movlw	0
  1618  00045E  6E0D               	movwf	_MOT_4_count,c
  1619                           
  1620                           ;interrupts.c: 84: }
  1621                           ;interrupts.c: 85: }
  1622                           ;interrupts.c: 87: } else if (PIR1bits.RCIF) {
  1623  000460  D044               	goto	i2l96
  1624  000462                     i2l73:
  1625  000462  AA9E               	btfss	3998,5,c	;volatile
  1626  000464  D01A               	goto	i2l83
  1627                           
  1628                           ;interrupts.c: 89: PIR1bits.RCIF = 0;
  1629  000466  9A9E               	bcf	3998,5,c	;volatile
  1630                           
  1631                           ;interrupts.c: 90: palabra[n] = RCREG;
  1632  000468  0E60               	movlw	low _palabra
  1633  00046A  241B               	addwf	_n,w,c
  1634  00046C  6ED9               	movwf	fsr2l,c
  1635  00046E  0E00               	movlw	high _palabra
  1636  000470  201C               	addwfc	_n+1,w,c
  1637  000472  6EDA               	movwf	fsr2h,c
  1638  000474  CFAE FFDF          	movff	4014,indf2	;volatile
  1639                           
  1640                           ;interrupts.c: 91: n++;
  1641  000478  4A1B               	infsnz	_n,f,c
  1642  00047A  2A1C               	incf	_n+1,f,c
  1643                           
  1644                           ;interrupts.c: 92: if (RCREG == '\n') {
  1645  00047C  0E0A               	movlw	10
  1646  00047E  18AE               	xorwf	4014,w,c	;volatile
  1647  000480  A4D8               	btfss	status,2,c
  1648  000482  D033               	goto	i2l96
  1649                           
  1650                           ;interrupts.c: 93: TXREG = palabra[0];
  1651  000484  C060  FFAD         	movff	_palabra,4013	;volatile
  1652  000488  A89E               	btfss	3998,4,c	;volatile
  1653  00048A  D7FE               	goto	i2l86
  1654                           
  1655                           ;interrupts.c: 95: recibi = 1;
  1656  00048C  0E01               	movlw	1
  1657  00048E  6E22               	movwf	_recibi,c
  1658                           
  1659                           ;interrupts.c: 96: n = 0;
  1660  000490  0E00               	movlw	0
  1661  000492  6E1C               	movwf	_n+1,c
  1662  000494  0E00               	movlw	0
  1663  000496  6E1B               	movwf	_n,c
  1664                           
  1665                           ;interrupts.c: 97: }
  1666                           ;interrupts.c: 98: }
  1667  000498  D028               	goto	i2l96
  1668  00049A                     i2l83:
  1669                           
  1670                           ;interrupts.c: 104: else if (PIR1bits.ADIF) {
  1671  00049A  AC9E               	btfss	3998,6,c	;volatile
  1672  00049C  D017               	goto	i2l89
  1673                           
  1674                           ;interrupts.c: 106: PIR1bits.ADIF = 0;
  1675  00049E  9C9E               	bcf	3998,6,c	;volatile
  1676                           
  1677                           ;interrupts.c: 107: if (ADCON0bits.CHS == 0b0000) {
  1678  0004A0  30C2               	rrcf	4034,w,c	;volatile
  1679  0004A2  32E8               	rrcf	wreg,f,c
  1680  0004A4  0B0F               	andlw	15
  1681  0004A6  0900               	iorlw	0
  1682  0004A8  A4D8               	btfss	status,2,c
  1683  0004AA  D005               	goto	i2l90
  1684                           
  1685                           ;interrupts.c: 108: ADC_value_press = ADRES;
  1686  0004AC  CFC3 F017          	movff	4035,_ADC_value_press	;volatile
  1687  0004B0  CFC4 F018          	movff	4036,_ADC_value_press+1	;volatile
  1688                           
  1689                           ;interrupts.c: 109: } else if (ADCON0bits.CHS == 0b0001) {
  1690  0004B4  D01A               	goto	i2l96
  1691  0004B6                     i2l90:
  1692  0004B6  30C2               	rrcf	4034,w,c	;volatile
  1693  0004B8  32E8               	rrcf	wreg,f,c
  1694  0004BA  0B0F               	andlw	15
  1695  0004BC  06E8               	decf	wreg,f,c
  1696  0004BE  A4D8               	btfss	status,2,c
  1697  0004C0  D014               	goto	i2l96
  1698                           
  1699                           ;interrupts.c: 110: ADC_value_dist = ADRES;
  1700  0004C2  CFC3 F015          	movff	4035,_ADC_value_dist	;volatile
  1701  0004C6  CFC4 F016          	movff	4036,_ADC_value_dist+1	;volatile
  1702                           
  1703                           ;interrupts.c: 111: }
  1704                           ;interrupts.c: 116: } else if (INTCON3bits.INT1IF) {
  1705  0004CA  D00F               	goto	i2l96
  1706  0004CC                     i2l89:
  1707  0004CC  A0F0               	btfss	intcon3,0,c	;volatile
  1708  0004CE  D005               	goto	i2l94
  1709                           
  1710                           ;interrupts.c: 118: INTCON3bits.INT1IF = 0;
  1711  0004D0  90F0               	bcf	intcon3,0,c	;volatile
  1712  0004D2                     i2l1291:
  1713                           
  1714                           ;interrupts.c: 121: DIR_3 = !DIR_3;
  1715  0004D2  5023               	movf	_DIR_3,w,c
  1716  0004D4  A4D8               	btfss	status,2,c
  1717  0004D6  D007               	goto	i2u77_40
  1718  0004D8  D004               	goto	i2u77_41
  1719  0004DA                     i2l94:
  1720  0004DA  A2F0               	btfss	intcon3,1,c	;volatile
  1721  0004DC  D006               	goto	i2l96
  1722                           
  1723                           ;interrupts.c: 125: INTCON3bits.INT2IF = 0;
  1724  0004DE  92F0               	bcf	intcon3,1,c	;volatile
  1725  0004E0  D7F8               	goto	i2l1291
  1726  0004E2                     i2u77_41:
  1727  0004E2  0E01               	movlw	1
  1728  0004E4  D001               	goto	i2u78_40
  1729  0004E6                     i2u77_40:
  1730  0004E6  0E00               	movlw	0
  1731  0004E8                     i2u78_40:
  1732  0004E8  6E23               	movwf	_DIR_3,c
  1733  0004EA                     i2l96:
  1734  0004EA                     i2l82:
  1735  0004EA  C037  F04E         	movff	??_high_isr+18,btemp+3
  1736  0004EE  C036  F04D         	movff	??_high_isr+17,btemp+2
  1737  0004F2  C035  F04C         	movff	??_high_isr+16,btemp+1
  1738  0004F6  C034  F04B         	movff	??_high_isr+15,btemp
  1739  0004FA  C033  FFF5         	movff	??_high_isr+14,tablat
  1740  0004FE  C032  FFF8         	movff	??_high_isr+13,tblptru
  1741  000502  C031  FFF7         	movff	??_high_isr+12,tblptrh
  1742  000506  C030  FFF6         	movff	??_high_isr+11,tblptrl
  1743  00050A  C02F  FFF4         	movff	??_high_isr+10,prodh
  1744  00050E  C02E  FFF3         	movff	??_high_isr+9,prodl
  1745  000512  C02D  FFDA         	movff	??_high_isr+8,fsr2h
  1746  000516  C02C  FFD9         	movff	??_high_isr+7,fsr2l
  1747  00051A  C02B  FFE2         	movff	??_high_isr+6,fsr1h
  1748  00051E  C02A  FFE1         	movff	??_high_isr+5,fsr1l
  1749  000522  C029  FFEA         	movff	??_high_isr+4,fsr0h
  1750  000526  C028  FFE9         	movff	??_high_isr+3,fsr0l
  1751  00052A  C027  FFFB         	movff	??_high_isr+2,pclatu
  1752  00052E  C026  FFFA         	movff	??_high_isr+1,pclath
  1753  000532  924B               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  1754  000534  0011               	retfie		f
  1755  000536                     __end_of_high_isr:
  1756                           	opt stack 0
  1757  0000                     pclatu	equ	0xFFB
  1758                           pclath	equ	0xFFA
  1759                           tblptru	equ	0xFF8
  1760                           tblptrh	equ	0xFF7
  1761                           tblptrl	equ	0xFF6
  1762                           tablat	equ	0xFF5
  1763                           prodh	equ	0xFF4
  1764                           prodl	equ	0xFF3
  1765                           intcon	equ	0xFF2
  1766                           intcon2	equ	0xFF1
  1767                           intcon3	equ	0xFF0
  1768                           postinc0	equ	0xFEE
  1769                           fsr0h	equ	0xFEA
  1770                           fsr0l	equ	0xFE9
  1771                           wreg	equ	0xFE8
  1772                           postdec1	equ	0xFE5
  1773                           fsr1h	equ	0xFE2
  1774                           fsr1l	equ	0xFE1
  1775                           indf2	equ	0xFDF
  1776                           fsr2h	equ	0xFDA
  1777                           fsr2l	equ	0xFD9
  1778                           status	equ	0xFD8
  1779                           pclatu	equ	0xFFB
  1780                           pclath	equ	0xFFA
  1781                           tblptru	equ	0xFF8
  1782                           tblptrh	equ	0xFF7
  1783                           tblptrl	equ	0xFF6
  1784                           tablat	equ	0xFF5
  1785                           prodh	equ	0xFF4
  1786                           prodl	equ	0xFF3
  1787                           intcon	equ	0xFF2
  1788                           intcon2	equ	0xFF1
  1789                           intcon3	equ	0xFF0
  1790                           postinc0	equ	0xFEE
  1791                           fsr0h	equ	0xFEA
  1792                           fsr0l	equ	0xFE9
  1793                           wreg	equ	0xFE8
  1794                           postdec1	equ	0xFE5
  1795                           fsr1h	equ	0xFE2
  1796                           fsr1l	equ	0xFE1
  1797                           indf2	equ	0xFDF
  1798                           fsr2h	equ	0xFDA
  1799                           fsr2l	equ	0xFD9
  1800                           status	equ	0xFD8
  1801                           
  1802                           	psect	rparam
  1803  0000                     pclatu	equ	0xFFB
  1804                           pclath	equ	0xFFA
  1805                           tblptru	equ	0xFF8
  1806                           tblptrh	equ	0xFF7
  1807                           tblptrl	equ	0xFF6
  1808                           tablat	equ	0xFF5
  1809                           prodh	equ	0xFF4
  1810                           prodl	equ	0xFF3
  1811                           intcon	equ	0xFF2
  1812                           intcon2	equ	0xFF1
  1813                           intcon3	equ	0xFF0
  1814                           postinc0	equ	0xFEE
  1815                           fsr0h	equ	0xFEA
  1816                           fsr0l	equ	0xFE9
  1817                           wreg	equ	0xFE8
  1818                           postdec1	equ	0xFE5
  1819                           fsr1h	equ	0xFE2
  1820                           fsr1l	equ	0xFE1
  1821                           indf2	equ	0xFDF
  1822                           fsr2h	equ	0xFDA
  1823                           fsr2l	equ	0xFD9
  1824                           status	equ	0xFD8
  1825                           
  1826                           	psect	temp
  1827  00004B                     btemp:
  1828                           	opt stack 0
  1829  00004B                     	ds	1
  1830  0000                     int$flags	set	btemp
  1831  0000                     wtemp6	set	btemp+1
  1832                           pclatu	equ	0xFFB
  1833                           pclath	equ	0xFFA
  1834                           tblptru	equ	0xFF8
  1835                           tblptrh	equ	0xFF7
  1836                           tblptrl	equ	0xFF6
  1837                           tablat	equ	0xFF5
  1838                           prodh	equ	0xFF4
  1839                           prodl	equ	0xFF3
  1840                           intcon	equ	0xFF2
  1841                           intcon2	equ	0xFF1
  1842                           intcon3	equ	0xFF0
  1843                           postinc0	equ	0xFEE
  1844                           fsr0h	equ	0xFEA
  1845                           fsr0l	equ	0xFE9
  1846                           wreg	equ	0xFE8
  1847                           postdec1	equ	0xFE5
  1848                           fsr1h	equ	0xFE2
  1849                           fsr1l	equ	0xFE1
  1850                           indf2	equ	0xFDF
  1851                           fsr2h	equ	0xFDA
  1852                           fsr2l	equ	0xFD9
  1853                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        12
    BSS         56
    Persistent  3
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     23      74
    BANK0           160      4      24
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->___wmul

Critical Paths under _high_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->___wmul

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    2392
                                              2 BANK0      2     2      0
                _ConfigureOscillator
                            _InitApp
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4    2392
                                             19 COMRAM     4     0      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigureOscillator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _high_isr                                            19    19      0       0
                                              0 COMRAM    19    19      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfigureOscillator
   _InitApp
   ___wmul

 _high_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      4      18       5       15.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     17      4A       1       78.7%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      62      20        0.0%
DATA                 0      0      62       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Wed Aug 14 17:08:05 2019

                           _n 001B           ___wmul@multiplicand 003A                   __CFG_BORV$3 000000  
                __CFG_CP0$OFF 000000                  __CFG_CP1$OFF 000000                  __CFG_CP2$OFF 000000  
                __CFG_CP3$OFF 000000                           l160 001A                           l161 02DE  
                         l162 009C                           l164 026E                           l174 02C6  
                         l166 02A6                           l167 0286                           l169 0298  
                __CFG_CPB$OFF 000000                           _PR2 000FCB                  __CFG_CPD$OFF 000000  
                         _RX9 007D5E                           _TX9 007D66                  __CFG_BOR$OFF 000000  
                         wreg 000FE8                  __CFG_LVP$OFF 000000                  __CFG_WDT$OFF 000000  
                        _BRGH 007D62                          _CREN 007D5C                          u1005 0032  
                        u1006 0034                          u1015 003C                          u1016 003E  
                        u1025 0046                          u1130 02C0                          u1026 0048  
                        u1035 0050                          u1140 02C2                          u1036 0052  
                        u1208 030C                          u1160 02D8                          u1217 02EA  
                        u1170 02DA                          _LATA 000F89                          u1190 0308  
                        _LATB 000F8A                          _LATC 000F8B                          _RCIE 007CED  
                        i2l73 0462                          i2l82 04EA                          i2l90 04B6  
                        i2l83 049A                          i2l75 03BE                          i2l77 03F4  
                        i2l94 04DA                          i2l86 0488                          i2l79 0428  
                        i2l96 04EA                          i2l89 04CC                          _TMR0 000FD6  
                        _SPEN 007D5F                          _TXIE 007CEC                          _TXIF 007CF4  
                        _TXEN 007D65                          _SYNC 007D64                          _main 0012  
                        fsr0h 000FEA                          fsr1h 000FE2                          fsr2h 000FDA  
                        fsr0l 000FE9                          indf2 000FDF                          fsr1l 000FE1  
                        fsr2l 000FD9                          btemp 004B                          prodh 000FF4  
                        prodl 000FF3                          start 000E                 __CFG_IESO$OFF 000000  
               __CFG_MCLRE$ON 000000                  ___param_bank 000000               __end_of_InitApp 05DE  
               __CFG_PLLDIV$1 000000                __CFG_CCP2MX$ON 000000                         ?_main 0025  
                       _ADRES 000FC3                         _BRG16 007DC3                         _DIR_1 0020  
                       _DIR_2 001F                         _DIR_3 0023                         _DIR_4 001E  
                       _RCREG 000FAE                         _MOT_1 004A                         _MOT_2 0049  
                       _MOT_3 0024                         _MOT_4 0048                         _SPBRG 000FAF  
                       _PORTA 000F80                         _PORTB 000F81                         _PORTC 000F82  
               __CFG_USBDIV$1 000000                         _TXREG 000FAD           _ConfigureOscillator 0654  
               __CFG_PWRT$OFF 000000                 __CFG_WRT0$OFF 000000                 __CFG_WRT1$OFF 000000  
               __CFG_WRT2$OFF 000000                 __CFG_WRT3$OFF 000000                __CFG_EBTR0$OFF 000000  
              __CFG_FCMEN$OFF 000000                __CFG_EBTR1$OFF 000000                __CFG_EBTR2$OFF 000000  
              __CFG_EBTR3$OFF 000000                 __CFG_WRTB$OFF 000000                 __CFG_WRTC$OFF 000000  
               __CFG_WRTD$OFF 000000                __CFG_EBTRB$OFF 000000                         _speed 0001  
                       _turns 0003                         pclath 000FFA                         tablat 000FF5  
                       status 000FD8                         wtemp6 004C          ?_ConfigureOscillator 0025  
             __initialization 05DE                  __end_of_main 031E                        ??_main 0076  
               __activetblptr 000000                        _ADCON1 000FC1                        _ADCON2 000FC0  
                      _CCPR1L 000FBE                        _GODONE 007E11                        i2l1251 03F4  
                      i2l1243 03BE                        i2l1291 04D2                        i2l1259 0428  
                   ??_InitApp 0038         ??_ConfigureOscillator 0038                __CFG_XINST$OFF 000000  
            __end_of_high_isr 0536                        ___wmul 0620                        _length 0005  
                      _recibi 0022                        clear_0 0604                        clear_1 0610  
                      _motor1 003E                        _motor2 000B                  __pdataCOMRAM 003C  
                      tblptrh 000FF7                        tblptrl 000FF6                        tblptru 000FF8  
                  __accesstop 0060       __end_of__initialization 0616               __CFG_PBADEN$OFF 000000  
               ___rparam_used 000001                __pcstackCOMRAM 0025                    __pbssBANK0 0060  
                  __pnvCOMRAM 0048                       ?___wmul 0038                       i2u61_40 0412  
                     i2u53_40 03A4                       i2u62_48 0414                       i2u54_48 03A6  
                     i2u65_40 0446                       i2u57_40 03DC                       i2u66_48 0448  
                     i2u58_48 03DE                       i2u77_40 04E6                       i2u77_41 04E2  
                     i2u78_40 04E8                     ?_high_isr 0025               __CFG_VREGEN$OFF 000000  
                     _InitApp 0536                       __Hparam 0000                       __Lparam 0000  
             __size_of___wmul 0028                       _caliber 0009               __CFG_STVREN$OFF 000000  
                     __pcinit 05DE                       __ramtop 0800                       __ptext0 0012  
                     __ptext1 0620                       __ptext2 0536                       __ptext3 0654  
                   _T0CONbits 000FD5                       _count_1 0046                       _count_2 0044  
                     _count_3 0042                       _count_4 0040                       _palabra 0060  
                   _T2CONbits 000FCA                    ??_high_isr 0025                __pintcode_body 031E  
        end_of_initialization 0616                       int_func 031E                       postdec1 000FE5  
                     postinc0 000FEE                     _PORTAbits 000F80                     _PORTBbits 000F81  
                   _PORTCbits 000F82                     _TRISAbits 000F92                     _TRISBbits 000F93  
                   _TRISCbits 000F94   __end_of_ConfigureOscillator 0660                   _CCP1CONbits 000FBD  
              __end_of___wmul 0648                 __pidataCOMRAM 0648           start_initialization 05DE  
                    ??___wmul 003C              __CFG_LPT1OSC$OFF 000000                   __pbssCOMRAM 0001  
               __pcstackBANK0 0074             __size_of_high_isr 052E                      ?_InitApp 0025  
                   __pintcode 0008                     _busy_flag 001D                ___wmul@product 0074  
                    _LATAbits 000F89                      _LATBbits 000F8A                      _LATCbits 000F8B  
                    _PIE1bits 000F9D                      _RA0state 0021                      _PIR1bits 000F9E  
                    _RCONbits 000FD0              __CFG_WDTPS$32768 000000                    _ADCON0bits 000FC2  
           ___wmul@multiplier 0038                      _PWM_duty 003C               _ADC_value_press 0017  
                 _INTCON2bits 000FF1                   _INTCON3bits 000FF0                     copy_data0 05F2  
            __size_of_InitApp 00A8                      __Hrparam 0000                      __Lrparam 0000  
                    _diameter 0007                      _high_isr 0008                 __size_of_main 030C  
__size_of_ConfigureOscillator 000C                      _overflow 0019                      int$flags 004B  
              _ADC_value_dist 0015         __CFG_CPUDIV$OSC1_PLL2 000000                    _INTCONbits 000FF2  
                 _MOT_1_count 0013                   _MOT_2_count 0011                   _MOT_3_count 000F  
                 _MOT_4_count 000D                      intlevel2 0000                    _OSCCONbits 000FD3  
         __CFG_FOSC$INTOSC_EC 000000  

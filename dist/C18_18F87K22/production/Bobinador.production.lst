

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sat Aug 17 16:10:21 2019

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F2550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    22                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    27                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    28                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    29  0000                     
    30                           ; Version 1.45
    31                           ; Generated 16/11/2017 GMT
    32                           ; 
    33                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC18F2550 Definitions
    62                           ; 
    63                           ; SFR Addresses
    64  0000                     
    65                           	psect	idataCOMRAM
    66  000732                     __pidataCOMRAM:
    67                           	opt stack 0
    68                           
    69                           ;initializer for _PWM_duty
    70  000732  0032               	dw	50
    71                           
    72                           ;initializer for _count_4
    73  000734  0005               	dw	5
    74                           
    75                           ;initializer for _count_3
    76  000736  0084               	dw	132
    77                           
    78                           ;initializer for _count_2
    79  000738  0001               	dw	1
    80                           
    81                           ;initializer for _count_1
    82  00073A  0002               	dw	2
    83                           
    84                           ;initializer for _length
    85  00073C  2422               	dw	9250
    86                           
    87                           ;initializer for _turns
    88  00073E  0FA0               	dw	4000
    89                           
    90                           ;initializer for _zero_flag
    91  000740  01                 	db	1
    92                           
    93                           	psect	idataBANK0
    94  000752                     __pidataBANK0:
    95                           	opt stack 0
    96                           
    97                           ;initializer for _motor1
    98  000752  0001               	dw	1
    99  0000                     _ADRES	set	4035
   100  0000                     _TMR1	set	4046
   101  0000                     _TMR0	set	4054
   102  0000                     _T2CONbits	set	4042
   103  0000                     _CCP1CONbits	set	4029
   104  0000                     _PR2	set	4043
   105  0000                     _SPBRG	set	4015
   106  0000                     _IPR1bits	set	3999
   107  0000                     _INTCON2bits	set	4081
   108  0000                     _RCONbits	set	4048
   109  0000                     _TRISBbits	set	3987
   110  0000                     _TRISCbits	set	3988
   111  0000                     _PIE1bits	set	3997
   112  0000                     _ADCON2	set	4032
   113  0000                     _ADCON0bits	set	4034
   114  0000                     _TRISAbits	set	3986
   115  0000                     _ADCON1	set	4033
   116  0000                     _LATC	set	3979
   117  0000                     _PORTC	set	3970
   118  0000                     _LATB	set	3978
   119  0000                     _PORTB	set	3969
   120  0000                     _LATA	set	3977
   121  0000                     _PORTA	set	3968
   122  0000                     _OSCCONbits	set	4051
   123  0000                     _T0CONbits	set	4053
   124  0000                     _T1CONbits	set	4045
   125  0000                     _LATBbits	set	3978
   126  0000                     _CCPR1L	set	4030
   127  0000                     _INTCON3bits	set	4080
   128  0000                     _TXREG	set	4013
   129  0000                     _RCREG	set	4014
   130  0000                     _PIR1bits	set	3998
   131  0000                     _PORTCbits	set	3970
   132  0000                     _LATCbits	set	3979
   133  0000                     _PORTAbits	set	3968
   134  0000                     _LATAbits	set	3977
   135  0000                     _INTCONbits	set	4082
   136  0000                     _TXIE	set	31980
   137  0000                     _RCIE	set	31981
   138  0000                     _RX9	set	32094
   139  0000                     _TX9	set	32102
   140  0000                     _CREN	set	32092
   141  0000                     _TXEN	set	32101
   142  0000                     _SYNC	set	32100
   143  0000                     _SPEN	set	32095
   144  0000                     _BRG16	set	32195
   145  0000                     _BRGH	set	32098
   146  0000                     _GODONE	set	32273
   147  0000                     _TXIF	set	31988
   148                           
   149                           ; #config settings
   150  0000                     
   151                           	psect	cinit
   152  00061A                     __pcinit:
   153                           	opt stack 0
   154  00061A                     start_initialization:
   155                           	opt stack 0
   156  00061A                     __initialization:
   157                           	opt stack 0
   158                           
   159                           ; Initialize objects allocated to BANK0 (2 bytes)
   160                           ; load TBLPTR registers with __pidataBANK0
   161  00061A  0E52               	movlw	low __pidataBANK0
   162  00061C  6EF6               	movwf	tblptrl,c
   163  00061E  0E07               	movlw	high __pidataBANK0
   164  000620  6EF7               	movwf	tblptrh,c
   165  000622  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   166  000624  6EF8               	movwf	tblptru,c
   167  000626  0009               	tblrd		*+	;fetch initializer
   168  000628  CFF5 F089          	movff	tablat,__pdataBANK0
   169  00062C  0009               	tblrd		*+	;fetch initializer
   170  00062E  CFF5 F08A          	movff	tablat,__pdataBANK0+1
   171                           
   172                           ; Initialize objects allocated to COMRAM (15 bytes)
   173                           ; load TBLPTR registers with __pidataCOMRAM
   174  000632  0E32               	movlw	low __pidataCOMRAM
   175  000634  6EF6               	movwf	tblptrl,c
   176  000636  0E07               	movlw	high __pidataCOMRAM
   177  000638  6EF7               	movwf	tblptrh,c
   178  00063A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   179  00063C  6EF8               	movwf	tblptru,c
   180  00063E  EE00  F044         	lfsr	0,__pdataCOMRAM
   181  000642  EE10 F00F          	lfsr	1,15
   182  000646                     copy_data0:
   183  000646  0009               	tblrd		*+
   184  000648  CFF5 FFEE          	movff	tablat,postinc0
   185  00064C  50E5               	movf	postdec1,w,c
   186  00064E  50E1               	movf	fsr1l,w,c
   187  000650  E1FA               	bnz	copy_data0
   188                           
   189                           ; Clear objects allocated to BANK0 (33 bytes)
   190  000652  EE00  F060         	lfsr	0,__pbssBANK0
   191  000656  0E21               	movlw	33
   192  000658                     clear_0:
   193  000658  6AEE               	clrf	postinc0,c
   194  00065A  06E8               	decf	wreg,f,c
   195  00065C  E1FD               	bnz	clear_0
   196                           
   197                           ; Clear objects allocated to COMRAM (36 bytes)
   198  00065E  EE00  F001         	lfsr	0,__pbssCOMRAM
   199  000662  0E24               	movlw	36
   200  000664                     clear_1:
   201  000664  6AEE               	clrf	postinc0,c
   202  000666  06E8               	decf	wreg,f,c
   203  000668  E1FD               	bnz	clear_1
   204  00066A                     end_of_initialization:
   205                           	opt stack 0
   206  00066A                     __end_of__initialization:
   207                           	opt stack 0
   208  00066A  9053               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   209  00066C  9253               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   210  00066E  0100               	movlb	0
   211  000670  EF09  F000         	goto	_main	;jump to C main() function
   212                           tblptru	equ	0xFF8
   213                           tblptrh	equ	0xFF7
   214                           tblptrl	equ	0xFF6
   215                           tablat	equ	0xFF5
   216                           postinc0	equ	0xFEE
   217                           wreg	equ	0xFE8
   218                           postdec1	equ	0xFE5
   219                           fsr1l	equ	0xFE1
   220                           
   221                           	psect	bssCOMRAM
   222  000001                     __pbssCOMRAM:
   223                           	opt stack 0
   224  000001                     _turns_count:
   225                           	opt stack 0
   226  000001                     	ds	2
   227  000003                     _mot_4_steps:
   228                           	opt stack 0
   229  000003                     	ds	2
   230  000005                     _mot_3_steps:
   231                           	opt stack 0
   232  000005                     	ds	2
   233  000007                     _mot_1_steps:
   234                           	opt stack 0
   235  000007                     	ds	2
   236  000009                     _MOT_4_count:
   237                           	opt stack 0
   238  000009                     	ds	2
   239  00000B                     _MOT_3_count:
   240                           	opt stack 0
   241  00000B                     	ds	2
   242  00000D                     _MOT_2_count:
   243                           	opt stack 0
   244  00000D                     	ds	2
   245  00000F                     _MOT_1_count:
   246                           	opt stack 0
   247  00000F                     	ds	2
   248  000011                     _ADC_value_press:
   249                           	opt stack 0
   250  000011                     	ds	2
   251  000013                     _overflow:
   252                           	opt stack 0
   253  000013                     	ds	2
   254  000015                     _n:
   255                           	opt stack 0
   256  000015                     	ds	2
   257  000017                     _enable:
   258                           	opt stack 0
   259  000017                     	ds	1
   260  000018                     _finish_flag:
   261                           	opt stack 0
   262  000018                     	ds	1
   263  000019                     _param_flag:
   264                           	opt stack 0
   265  000019                     	ds	1
   266  00001A                     _DIR_4:
   267                           	opt stack 0
   268  00001A                     	ds	1
   269  00001B                     _DIR_2:
   270                           	opt stack 0
   271  00001B                     	ds	1
   272  00001C                     _DIR_1:
   273                           	opt stack 0
   274  00001C                     	ds	1
   275  00001D                     _RA0state:
   276                           	opt stack 0
   277  00001D                     	ds	1
   278  00001E                     _recibi:
   279                           	opt stack 0
   280  00001E                     	ds	1
   281  00001F                     _MOT_4:
   282                           	opt stack 0
   283  00001F                     	ds	1
   284  000020                     _winding:
   285                           	opt stack 0
   286  000020                     	ds	1
   287  000021                     _MOT_2:
   288                           	opt stack 0
   289  000021                     	ds	1
   290  000022                     _DIR_3:
   291                           	opt stack 0
   292  000022                     	ds	1
   293  000023                     _MOT_3:
   294                           	opt stack 0
   295  000023                     	ds	1
   296  000024                     _MOT_1:
   297                           	opt stack 0
   298  000024                     	ds	1
   299                           tblptru	equ	0xFF8
   300                           tblptrh	equ	0xFF7
   301                           tblptrl	equ	0xFF6
   302                           tablat	equ	0xFF5
   303                           postinc0	equ	0xFEE
   304                           wreg	equ	0xFE8
   305                           postdec1	equ	0xFE5
   306                           fsr1l	equ	0xFE1
   307                           
   308                           	psect	dataCOMRAM
   309  000044                     __pdataCOMRAM:
   310                           	opt stack 0
   311  000044                     _PWM_duty:
   312                           	opt stack 0
   313  000044                     	ds	2
   314  000046                     _count_4:
   315                           	opt stack 0
   316  000046                     	ds	2
   317  000048                     _count_3:
   318                           	opt stack 0
   319  000048                     	ds	2
   320  00004A                     _count_2:
   321                           	opt stack 0
   322  00004A                     	ds	2
   323  00004C                     _count_1:
   324                           	opt stack 0
   325  00004C                     	ds	2
   326  00004E                     _length:
   327                           	opt stack 0
   328  00004E                     	ds	2
   329  000050                     _turns:
   330                           	opt stack 0
   331  000050                     	ds	2
   332  000052                     _zero_flag:
   333                           	opt stack 0
   334  000052                     	ds	1
   335                           tblptru	equ	0xFF8
   336                           tblptrh	equ	0xFF7
   337                           tblptrl	equ	0xFF6
   338                           tablat	equ	0xFF5
   339                           postinc0	equ	0xFEE
   340                           wreg	equ	0xFE8
   341                           postdec1	equ	0xFE5
   342                           fsr1l	equ	0xFE1
   343                           
   344                           	psect	bssBANK0
   345  000060                     __pbssBANK0:
   346                           	opt stack 0
   347  000060                     _palabra:
   348                           	opt stack 0
   349  000060                     	ds	20
   350  000074                     _send:
   351                           	opt stack 0
   352  000074                     	ds	7
   353  00007B                     _mot_4_step_count:
   354                           	opt stack 0
   355  00007B                     	ds	2
   356  00007D                     _caliber:
   357                           	opt stack 0
   358  00007D                     	ds	2
   359  00007F                     _motor2:
   360                           	opt stack 0
   361  00007F                     	ds	2
   362                           tblptru	equ	0xFF8
   363                           tblptrh	equ	0xFF7
   364                           tblptrl	equ	0xFF6
   365                           tablat	equ	0xFF5
   366                           postinc0	equ	0xFEE
   367                           wreg	equ	0xFE8
   368                           postdec1	equ	0xFE5
   369                           fsr1l	equ	0xFE1
   370                           
   371                           	psect	dataBANK0
   372  000089                     __pdataBANK0:
   373                           	opt stack 0
   374  000089                     _motor1:
   375                           	opt stack 0
   376  000089                     	ds	2
   377                           tblptru	equ	0xFF8
   378                           tblptrh	equ	0xFF7
   379                           tblptrl	equ	0xFF6
   380                           tablat	equ	0xFF5
   381                           postinc0	equ	0xFEE
   382                           wreg	equ	0xFE8
   383                           postdec1	equ	0xFE5
   384                           fsr1l	equ	0xFE1
   385                           
   386                           	psect	cstackBANK0
   387  000081                     __pcstackBANK0:
   388                           	opt stack 0
   389  000081                     ?___wmul:
   390                           	opt stack 0
   391  000081                     ___wmul@multiplier:
   392                           	opt stack 0
   393                           
   394                           ; 2 bytes @ 0x0
   395  000081                     	ds	2
   396  000083                     ___wmul@multiplicand:
   397                           	opt stack 0
   398                           
   399                           ; 2 bytes @ 0x2
   400  000083                     	ds	2
   401  000085                     ___wmul@product:
   402                           	opt stack 0
   403                           
   404                           ; 2 bytes @ 0x4
   405  000085                     	ds	2
   406  000087                     ??_main:
   407                           
   408                           ; 1 bytes @ 0x6
   409  000087                     	ds	2
   410                           tblptru	equ	0xFF8
   411                           tblptrh	equ	0xFF7
   412                           tblptrl	equ	0xFF6
   413                           tablat	equ	0xFF5
   414                           postinc0	equ	0xFEE
   415                           wreg	equ	0xFE8
   416                           postdec1	equ	0xFE5
   417                           fsr1l	equ	0xFE1
   418                           
   419                           	psect	cstackCOMRAM
   420  000025                     __pcstackCOMRAM:
   421                           	opt stack 0
   422  000025                     ?i2___wmul:
   423                           	opt stack 0
   424  000025                     i2___wmul@multiplier:
   425                           	opt stack 0
   426                           
   427                           ; 2 bytes @ 0x0
   428  000025                     	ds	2
   429  000027                     i2___wmul@multiplicand:
   430                           	opt stack 0
   431                           
   432                           ; 2 bytes @ 0x2
   433  000027                     	ds	2
   434  000029                     i2___wmul@product:
   435                           	opt stack 0
   436                           
   437                           ; 2 bytes @ 0x4
   438  000029                     	ds	2
   439  00002B                     ?_mot_3_step_count:
   440                           	opt stack 0
   441  00002B                     mot_3_step_count@l:
   442                           	opt stack 0
   443                           
   444                           ; 2 bytes @ 0x6
   445  00002B                     	ds	2
   446  00002D                     mot_3_step_count@ms:
   447                           	opt stack 0
   448                           
   449                           ; 2 bytes @ 0x8
   450  00002D                     	ds	2
   451  00002F                     ??_mot_3_step_count:
   452                           
   453                           ; 1 bytes @ 0xA
   454  00002F                     	ds	2
   455  000031                     ??_high_isr:
   456                           
   457                           ; 1 bytes @ 0xC
   458  000031                     	ds	19
   459                           tblptru	equ	0xFF8
   460                           tblptrh	equ	0xFF7
   461                           tblptrl	equ	0xFF6
   462                           tablat	equ	0xFF5
   463                           postinc0	equ	0xFEE
   464                           wreg	equ	0xFE8
   465                           postdec1	equ	0xFE5
   466                           fsr1l	equ	0xFE1
   467                           
   468 ;;
   469 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   470 ;;
   471 ;; *************** function _main *****************
   472 ;; Defined at:
   473 ;;		line 81 in file "main.c"
   474 ;; Parameters:    Size  Location     Type
   475 ;;		None
   476 ;; Auto vars:     Size  Location     Type
   477 ;;		None
   478 ;; Return value:  Size  Location     Type
   479 ;;                  1    wreg      void 
   480 ;; Registers used:
   481 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   482 ;; Tracked objects:
   483 ;;		On entry : 0/0
   484 ;;		On exit  : 0/0
   485 ;;		Unchanged: 0/0
   486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   487 ;;      Params:         0       0       0       0       0       0       0       0       0
   488 ;;      Locals:         0       0       0       0       0       0       0       0       0
   489 ;;      Temps:          0       2       0       0       0       0       0       0       0
   490 ;;      Totals:         0       2       0       0       0       0       0       0       0
   491 ;;Total ram usage:        2 bytes
   492 ;; Hardware stack levels required when called:    4
   493 ;; This function calls:
   494 ;;		_ConfigureOscillator
   495 ;;		_InitApp
   496 ;;		___wmul
   497 ;;		_reset
   498 ;;		_unwind
   499 ;;		_zero_mark
   500 ;; This function is called by:
   501 ;;		Startup code after reset
   502 ;; This function uses a non-reentrant model
   503 ;;
   504                           
   505                           	psect	text0
   506  000012                     __ptext0:
   507                           	opt stack 0
   508  000012                     _main:
   509                           	opt stack 27
   510                           
   511                           ;main.c: 83: ConfigureOscillator();
   512                           
   513                           ;incstack = 0
   514  000012  ECA1  F003         	call	_ConfigureOscillator	;wreg free
   515                           
   516                           ;main.c: 86: InitApp();
   517  000016  ECAF  F002         	call	_InitApp	;wreg free
   518  00001A                     
   519                           ;main.c: 89: CCPR1L = PWM_duty;
   520  00001A  C044  FFBE         	movff	_PWM_duty,4030	;volatile
   521                           
   522                           ;main.c: 91: LATAbits.LA2 = DIR_1;
   523  00001E  B01C               	btfsc	_DIR_1,0,c
   524  000020  D002               	bra	u1425
   525  000022  9489               	bcf	3977,2,c	;volatile
   526  000024  D001               	bra	u1426
   527  000026                     u1425:
   528  000026  8489               	bsf	3977,2,c	;volatile
   529  000028                     u1426:
   530                           
   531                           ;main.c: 92: LATAbits.LA4 = DIR_2;
   532  000028  B01B               	btfsc	_DIR_2,0,c
   533  00002A  D002               	bra	u1435
   534  00002C  9889               	bcf	3977,4,c	;volatile
   535  00002E  D001               	bra	u1436
   536  000030                     u1435:
   537  000030  8889               	bsf	3977,4,c	;volatile
   538  000032                     u1436:
   539                           
   540                           ;main.c: 93: LATCbits.LC0 = DIR_3;
   541  000032  B022               	btfsc	_DIR_3,0,c
   542  000034  D002               	bra	u1445
   543  000036  908B               	bcf	3979,0,c	;volatile
   544  000038  D001               	bra	u1446
   545  00003A                     u1445:
   546  00003A  808B               	bsf	3979,0,c	;volatile
   547  00003C                     u1446:
   548                           
   549                           ;main.c: 94: LATBbits.LB7 = DIR_4;
   550  00003C  B01A               	btfsc	_DIR_4,0,c
   551  00003E  D002               	bra	u1455
   552  000040  9E8A               	bcf	3978,7,c	;volatile
   553  000042  D001               	bra	u1456
   554  000044                     u1455:
   555  000044  8E8A               	bsf	3978,7,c	;volatile
   556  000046                     u1456:
   557                           
   558                           ;main.c: 95: LATBbits.LB5 = enable;
   559  000046  B017               	btfsc	_enable,0,c
   560  000048  D002               	bra	u1465
   561  00004A  9A8A               	bcf	3978,5,c	;volatile
   562  00004C  D001               	bra	u1466
   563  00004E                     u1465:
   564  00004E  8A8A               	bsf	3978,5,c	;volatile
   565  000050                     u1466:
   566                           
   567                           ;main.c: 96: LATBbits.LB4 = !enable;
   568  000050  5017               	movf	_enable,w,c
   569  000052  A4D8               	btfss	status,2,c
   570  000054  D004               	goto	u1470
   571  000056  0100               	movlb	0	; () banked
   572  000058  6B87               	clrf	??_main& (0+255),b
   573  00005A  2B87               	incf	??_main& (0+255),f,b
   574  00005C  D002               	goto	u1488
   575  00005E                     u1470:
   576  00005E  0100               	movlb	0	; () banked
   577  000060  6B87               	clrf	??_main& (0+255),b
   578  000062                     u1488:
   579  000062  3B87               	swapf	??_main& (0+255),f,b
   580  000064  508A               	movf	3978,w,c	;volatile
   581  000066  1987               	xorwf	??_main& (0+255),w,b
   582  000068  0BEF               	andlw	-17
   583  00006A  1987               	xorwf	??_main& (0+255),w,b
   584  00006C  6E8A               	movwf	3978,c	;volatile
   585                           
   586                           ; BSR set to: 0
   587                           ;main.c: 98: if (recibi == 1) {
   588  00006E  041E               	decf	_recibi,w,c
   589  000070  A4D8               	btfss	status,2,c
   590  000072  D138               	goto	l197
   591                           
   592                           ; BSR set to: 0
   593                           ;main.c: 100: recibi = 0;
   594  000074  0E00               	movlw	0
   595  000076  6E1E               	movwf	_recibi,c
   596                           
   597                           ; BSR set to: 0
   598                           ;main.c: 102: if (palabra[0] == 'A') {
   599  000078  0E41               	movlw	65
   600  00007A  1960               	xorwf	_palabra& (0+255),w,b
   601  00007C  A4D8               	btfss	status,2,c
   602  00007E  D0A6               	goto	l198
   603                           
   604                           ; BSR set to: 0
   605                           ;main.c: 104: caliber = ((palabra[1] - 48) * 10) + ((palabra[2] - 48));
   606  000080  0ED0               	movlw	208
   607  000082  2561               	addwf	(_palabra+1)& (0+255),w,b
   608  000084  6F81               	movwf	___wmul@multiplier& (0+255),b
   609  000086  6B82               	clrf	(___wmul@multiplier+1)& (0+255),b
   610  000088  0EFF               	movlw	255
   611  00008A  2382               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   612  00008C  0E00               	movlw	0
   613  00008E  6F84               	movwf	(___wmul@multiplicand+1)& (0+255),b
   614  000090  0E0A               	movlw	10
   615  000092  6F83               	movwf	___wmul@multiplicand& (0+255),b
   616  000094  EC3A  F003         	call	___wmul	;wreg free
   617  000098  0100               	movlb	0	; () banked
   618  00009A  5162               	movf	(_palabra+2)& (0+255),w,b
   619  00009C  6F87               	movwf	??_main& (0+255),b
   620  00009E  6B88               	clrf	(??_main+1)& (0+255),b
   621  0000A0  5181               	movf	?___wmul& (0+255),w,b
   622  0000A2  2787               	addwf	??_main& (0+255),f,b
   623  0000A4  5182               	movf	(?___wmul+1)& (0+255),w,b
   624  0000A6  2388               	addwfc	(??_main+1)& (0+255),f,b
   625  0000A8  0ED0               	movlw	208
   626  0000AA  2587               	addwf	??_main& (0+255),w,b
   627  0000AC  6F7D               	movwf	_caliber& (0+255),b
   628  0000AE  0EFF               	movlw	255
   629  0000B0  2188               	addwfc	(??_main+1)& (0+255),w,b
   630  0000B2  6F7E               	movwf	(_caliber+1)& (0+255),b
   631                           
   632                           ;main.c: 105: length = ((palabra[3] - 48) * 10000) + ((palabra[4] - 48) * 1000) + ((pala
      +                          bra[5] - 48) * 100) + ((palabra[6] - 48) * 10) + ((palabra[7] - 48));
   633  0000B4  0ED0               	movlw	208
   634  0000B6  2563               	addwf	(_palabra+3)& (0+255),w,b
   635  0000B8  6F81               	movwf	___wmul@multiplier& (0+255),b
   636  0000BA  6B82               	clrf	(___wmul@multiplier+1)& (0+255),b
   637  0000BC  0EFF               	movlw	255
   638  0000BE  2382               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   639  0000C0  0E27               	movlw	39
   640  0000C2  6F84               	movwf	(___wmul@multiplicand+1)& (0+255),b
   641  0000C4  0E10               	movlw	16
   642  0000C6  6F83               	movwf	___wmul@multiplicand& (0+255),b
   643  0000C8  EC3A  F003         	call	___wmul	;wreg free
   644  0000CC  0100               	movlb	0	; () banked
   645  0000CE  5167               	movf	(_palabra+7)& (0+255),w,b
   646  0000D0  6F87               	movwf	??_main& (0+255),b
   647  0000D2  6B88               	clrf	(??_main+1)& (0+255),b
   648  0000D4  5181               	movf	?___wmul& (0+255),w,b
   649  0000D6  2787               	addwf	??_main& (0+255),f,b
   650  0000D8  5182               	movf	(?___wmul+1)& (0+255),w,b
   651  0000DA  2388               	addwfc	(??_main+1)& (0+255),f,b
   652  0000DC  0ED0               	movlw	208
   653  0000DE  2564               	addwf	(_palabra+4)& (0+255),w,b
   654  0000E0  6F81               	movwf	___wmul@multiplier& (0+255),b
   655  0000E2  6B82               	clrf	(___wmul@multiplier+1)& (0+255),b
   656  0000E4  0EFF               	movlw	255
   657  0000E6  2382               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   658  0000E8  0E03               	movlw	3
   659  0000EA  6F84               	movwf	(___wmul@multiplicand+1)& (0+255),b
   660  0000EC  0EE8               	movlw	232
   661  0000EE  6F83               	movwf	___wmul@multiplicand& (0+255),b
   662  0000F0  EC3A  F003         	call	___wmul	;wreg free
   663  0000F4  0100               	movlb	0	; () banked
   664  0000F6  5181               	movf	?___wmul& (0+255),w,b
   665  0000F8  2787               	addwf	??_main& (0+255),f,b
   666  0000FA  5182               	movf	(?___wmul+1)& (0+255),w,b
   667  0000FC  2388               	addwfc	(??_main+1)& (0+255),f,b
   668  0000FE  0ED0               	movlw	208
   669  000100  2565               	addwf	(_palabra+5)& (0+255),w,b
   670  000102  6F81               	movwf	___wmul@multiplier& (0+255),b
   671  000104  6B82               	clrf	(___wmul@multiplier+1)& (0+255),b
   672  000106  0EFF               	movlw	255
   673  000108  2382               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   674  00010A  0E00               	movlw	0
   675  00010C  6F84               	movwf	(___wmul@multiplicand+1)& (0+255),b
   676  00010E  0E64               	movlw	100
   677  000110  6F83               	movwf	___wmul@multiplicand& (0+255),b
   678  000112  EC3A  F003         	call	___wmul	;wreg free
   679  000116  0100               	movlb	0	; () banked
   680  000118  5181               	movf	?___wmul& (0+255),w,b
   681  00011A  2787               	addwf	??_main& (0+255),f,b
   682  00011C  5182               	movf	(?___wmul+1)& (0+255),w,b
   683  00011E  2388               	addwfc	(??_main+1)& (0+255),f,b
   684  000120  0ED0               	movlw	208
   685  000122  2566               	addwf	(_palabra+6)& (0+255),w,b
   686  000124  6F81               	movwf	___wmul@multiplier& (0+255),b
   687  000126  6B82               	clrf	(___wmul@multiplier+1)& (0+255),b
   688  000128  0EFF               	movlw	255
   689  00012A  2382               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   690  00012C  0E00               	movlw	0
   691  00012E  6F84               	movwf	(___wmul@multiplicand+1)& (0+255),b
   692  000130  0E0A               	movlw	10
   693  000132  6F83               	movwf	___wmul@multiplicand& (0+255),b
   694  000134  EC3A  F003         	call	___wmul	;wreg free
   695  000138  0100               	movlb	0	; () banked
   696  00013A  5181               	movf	?___wmul& (0+255),w,b
   697  00013C  2787               	addwf	??_main& (0+255),f,b
   698  00013E  5182               	movf	(?___wmul+1)& (0+255),w,b
   699  000140  2388               	addwfc	(??_main+1)& (0+255),f,b
   700  000142  0ED0               	movlw	208
   701  000144  2587               	addwf	??_main& (0+255),w,b
   702  000146  6E4E               	movwf	_length,c
   703  000148  0EFF               	movlw	255
   704  00014A  2188               	addwfc	(??_main+1)& (0+255),w,b
   705  00014C  6E4F               	movwf	_length+1,c
   706                           
   707                           ;main.c: 106: turns = ((palabra[8] - 48) * 1000) + ((palabra[9] - 48) * 100) + ((palabra
      +                          [10] - 48) * 10) + ((palabra[11] - 48));
   708  00014E  0ED0               	movlw	208
   709  000150  2568               	addwf	(_palabra+8)& (0+255),w,b
   710  000152  6F81               	movwf	___wmul@multiplier& (0+255),b
   711  000154  6B82               	clrf	(___wmul@multiplier+1)& (0+255),b
   712  000156  0EFF               	movlw	255
   713  000158  2382               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   714  00015A  0E03               	movlw	3
   715  00015C  6F84               	movwf	(___wmul@multiplicand+1)& (0+255),b
   716  00015E  0EE8               	movlw	232
   717  000160  6F83               	movwf	___wmul@multiplicand& (0+255),b
   718  000162  EC3A  F003         	call	___wmul	;wreg free
   719  000166  0100               	movlb	0	; () banked
   720  000168  516B               	movf	(_palabra+11)& (0+255),w,b
   721  00016A  6F87               	movwf	??_main& (0+255),b
   722  00016C  6B88               	clrf	(??_main+1)& (0+255),b
   723  00016E  5181               	movf	?___wmul& (0+255),w,b
   724  000170  2787               	addwf	??_main& (0+255),f,b
   725  000172  5182               	movf	(?___wmul+1)& (0+255),w,b
   726  000174  2388               	addwfc	(??_main+1)& (0+255),f,b
   727  000176  0ED0               	movlw	208
   728  000178  2569               	addwf	(_palabra+9)& (0+255),w,b
   729  00017A  6F81               	movwf	___wmul@multiplier& (0+255),b
   730  00017C  6B82               	clrf	(___wmul@multiplier+1)& (0+255),b
   731  00017E  0EFF               	movlw	255
   732  000180  2382               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   733  000182  0E00               	movlw	0
   734  000184  6F84               	movwf	(___wmul@multiplicand+1)& (0+255),b
   735  000186  0E64               	movlw	100
   736  000188  6F83               	movwf	___wmul@multiplicand& (0+255),b
   737  00018A  EC3A  F003         	call	___wmul	;wreg free
   738  00018E  0100               	movlb	0	; () banked
   739  000190  5181               	movf	?___wmul& (0+255),w,b
   740  000192  2787               	addwf	??_main& (0+255),f,b
   741  000194  5182               	movf	(?___wmul+1)& (0+255),w,b
   742  000196  2388               	addwfc	(??_main+1)& (0+255),f,b
   743  000198  0ED0               	movlw	208
   744  00019A  256A               	addwf	(_palabra+10)& (0+255),w,b
   745  00019C  6F81               	movwf	___wmul@multiplier& (0+255),b
   746  00019E  6B82               	clrf	(___wmul@multiplier+1)& (0+255),b
   747  0001A0  0EFF               	movlw	255
   748  0001A2  2382               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   749  0001A4  0E00               	movlw	0
   750  0001A6  6F84               	movwf	(___wmul@multiplicand+1)& (0+255),b
   751  0001A8  0E0A               	movlw	10
   752  0001AA  6F83               	movwf	___wmul@multiplicand& (0+255),b
   753  0001AC  EC3A  F003         	call	___wmul	;wreg free
   754  0001B0  0100               	movlb	0	; () banked
   755  0001B2  5181               	movf	?___wmul& (0+255),w,b
   756  0001B4  2787               	addwf	??_main& (0+255),f,b
   757  0001B6  5182               	movf	(?___wmul+1)& (0+255),w,b
   758  0001B8  2388               	addwfc	(??_main+1)& (0+255),f,b
   759  0001BA  0ED0               	movlw	208
   760  0001BC  2587               	addwf	??_main& (0+255),w,b
   761  0001BE  6E50               	movwf	_turns,c
   762  0001C0  0EFF               	movlw	255
   763  0001C2  2188               	addwfc	(??_main+1)& (0+255),w,b
   764  0001C4  6E51               	movwf	_turns+1,c
   765                           
   766                           ; BSR set to: 0
   767                           ;main.c: 108: param_flag = 1;
   768  0001C6  0E01               	movlw	1
   769  0001C8  6E19               	movwf	_param_flag,c
   770                           
   771                           ;main.c: 109: } else if (palabra[0] == 'B') {
   772  0001CA  D727               	goto	l196
   773  0001CC                     l198:
   774                           
   775                           ; BSR set to: 0
   776                           
   777                           ; BSR set to: 0
   778  0001CC  0E42               	movlw	66
   779  0001CE  1960               	xorwf	_palabra& (0+255),w,b
   780  0001D0  A4D8               	btfss	status,2,c
   781  0001D2  D01B               	goto	l200
   782                           
   783                           ; BSR set to: 0
   784                           ;main.c: 111: PWM_duty = ((palabra[1] - 48) * 10) + ((palabra[2] - 48));
   785  0001D4  0ED0               	movlw	208
   786  0001D6  2561               	addwf	(_palabra+1)& (0+255),w,b
   787  0001D8  6F81               	movwf	___wmul@multiplier& (0+255),b
   788  0001DA  6B82               	clrf	(___wmul@multiplier+1)& (0+255),b
   789  0001DC  0EFF               	movlw	255
   790  0001DE  2382               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   791  0001E0  0E00               	movlw	0
   792  0001E2  6F84               	movwf	(___wmul@multiplicand+1)& (0+255),b
   793  0001E4  0E0A               	movlw	10
   794  0001E6  6F83               	movwf	___wmul@multiplicand& (0+255),b
   795  0001E8  EC3A  F003         	call	___wmul	;wreg free
   796  0001EC  0100               	movlb	0	; () banked
   797  0001EE  5162               	movf	(_palabra+2)& (0+255),w,b
   798  0001F0  6F87               	movwf	??_main& (0+255),b
   799  0001F2  6B88               	clrf	(??_main+1)& (0+255),b
   800  0001F4  5181               	movf	?___wmul& (0+255),w,b
   801  0001F6  2787               	addwf	??_main& (0+255),f,b
   802  0001F8  5182               	movf	(?___wmul+1)& (0+255),w,b
   803  0001FA  2388               	addwfc	(??_main+1)& (0+255),f,b
   804  0001FC  0ED0               	movlw	208
   805  0001FE  2587               	addwf	??_main& (0+255),w,b
   806  000200  6E44               	movwf	_PWM_duty,c
   807  000202  0EFF               	movlw	255
   808  000204  2188               	addwfc	(??_main+1)& (0+255),w,b
   809  000206  6E45               	movwf	_PWM_duty+1,c
   810                           
   811                           ;main.c: 112: } else if ((palabra[0] == 'D') && (zero_flag)) {
   812  000208  D708               	goto	l196
   813  00020A                     l200:
   814                           
   815                           ; BSR set to: 0
   816                           
   817                           ; BSR set to: 0
   818  00020A  0E44               	movlw	68
   819  00020C  1960               	xorwf	_palabra& (0+255),w,b
   820  00020E  A4D8               	btfss	status,2,c
   821  000210  D025               	goto	l202
   822                           
   823                           ; BSR set to: 0
   824  000212  5052               	movf	_zero_flag,w,c
   825  000214  B4D8               	btfsc	status,2,c
   826  000216  D022               	goto	l202
   827                           
   828                           ; BSR set to: 0
   829                           ;main.c: 114: if (palabra[1] == '0') {
   830  000218  0E30               	movlw	48
   831  00021A  1961               	xorwf	(_palabra+1)& (0+255),w,b
   832  00021C  A4D8               	btfss	status,2,c
   833  00021E  D004               	goto	l203
   834                           
   835                           ; BSR set to: 0
   836                           ;main.c: 116: MOT_3 = 1;
   837  000220  0E01               	movlw	1
   838  000222  6E23               	movwf	_MOT_3,c
   839                           
   840                           ;main.c: 117: DIR_3 = 0;
   841  000224  0E00               	movlw	0
   842  000226  D007               	goto	L1
   843  000228                     l203:
   844                           
   845                           ; BSR set to: 0
   846                           
   847                           ; BSR set to: 0
   848  000228  0E31               	movlw	49
   849  00022A  1961               	xorwf	(_palabra+1)& (0+255),w,b
   850  00022C  A4D8               	btfss	status,2,c
   851  00022E  D005               	goto	l205
   852                           
   853                           ; BSR set to: 0
   854                           ;main.c: 120: MOT_3 = 1;
   855  000230  0E01               	movlw	1
   856  000232  6E23               	movwf	_MOT_3,c
   857                           
   858                           ;main.c: 121: DIR_3 = 1;
   859  000234  0E01               	movlw	1
   860  000236                     L1:
   861  000236  6E22               	movwf	_DIR_3,c
   862                           
   863                           ;main.c: 122: } else if (palabra[1] == '2') {
   864  000238  D6F0               	goto	l196
   865  00023A                     l205:
   866                           
   867                           ; BSR set to: 0
   868                           
   869                           ; BSR set to: 0
   870  00023A  0E32               	movlw	50
   871  00023C  1961               	xorwf	(_palabra+1)& (0+255),w,b
   872  00023E  B4D8               	btfsc	status,2,c
   873  000240  D033               	goto	u1680
   874                           
   875                           ; BSR set to: 0
   876                           
   877                           ; BSR set to: 0
   878                           
   879                           ;main.c: 125: } else if (palabra[1] == '3') {
   880                           
   881                           ; BSR set to: 0
   882                           ;main.c: 124: MOT_3 = 0;
   883  000242  0E33               	movlw	51
   884  000244  1961               	xorwf	(_palabra+1)& (0+255),w,b
   885  000246  A4D8               	btfss	status,2,c
   886  000248  D6E8               	goto	l196
   887                           
   888                           ; BSR set to: 0
   889                           ;main.c: 127: if ((MOT_3 == 0) && (param_flag)) {
   890  00024A  5023               	movf	_MOT_3,w,c
   891  00024C  A4D8               	btfss	status,2,c
   892  00024E  D6E5               	goto	l196
   893                           
   894                           ; BSR set to: 0
   895  000250  5019               	movf	_param_flag,w,c
   896  000252  B4D8               	btfsc	status,2,c
   897  000254  D6E2               	goto	l196
   898                           
   899                           ; BSR set to: 0
   900                           ;main.c: 129: zero_mark();
   901  000256  EC81  F003         	call	_zero_mark	;wreg free
   902                           
   903                           ;main.c: 130: }
   904                           ;main.c: 131: }
   905                           ;main.c: 134: } else if (palabra[0] == 'M') {
   906  00025A  D6DF               	goto	l196
   907  00025C                     l202:
   908  00025C  0E4D               	movlw	77
   909  00025E  0100               	movlb	0	; () banked
   910  000260  1960               	xorwf	_palabra& (0+255),w,b
   911  000262  A4D8               	btfss	status,2,c
   912  000264  D024               	goto	l212
   913                           
   914                           ; BSR set to: 0
   915                           ;main.c: 136: if (palabra[1] == '1') {
   916  000266  0E31               	movlw	49
   917  000268  1961               	xorwf	(_palabra+1)& (0+255),w,b
   918  00026A  A4D8               	btfss	status,2,c
   919  00026C  D008               	goto	l213
   920                           
   921                           ; BSR set to: 0
   922                           ;main.c: 137: MOT_1 = !MOT_1;
   923  00026E  5024               	movf	_MOT_1,w,c
   924  000270  A4D8               	btfss	status,2,c
   925  000272  D002               	goto	u1620
   926  000274  0E01               	movlw	1
   927  000276  D001               	goto	u1630
   928  000278                     u1620:
   929  000278  0E00               	movlw	0
   930  00027A                     u1630:
   931  00027A  6E24               	movwf	_MOT_1,c
   932                           
   933                           ;main.c: 138: } else if (palabra[1] == '2') {
   934  00027C  D6CE               	goto	l196
   935  00027E                     l213:
   936                           
   937                           ; BSR set to: 0
   938                           
   939                           ; BSR set to: 0
   940  00027E  0E32               	movlw	50
   941  000280  1961               	xorwf	(_palabra+1)& (0+255),w,b
   942  000282  A4D8               	btfss	status,2,c
   943  000284  D008               	goto	l215
   944                           
   945                           ; BSR set to: 0
   946                           ;main.c: 139: MOT_2 = !MOT_2;
   947  000286  5021               	movf	_MOT_2,w,c
   948  000288  A4D8               	btfss	status,2,c
   949  00028A  D002               	goto	u1650
   950  00028C  0E01               	movlw	1
   951  00028E  D001               	goto	u1660
   952  000290                     u1650:
   953  000290  0E00               	movlw	0
   954  000292                     u1660:
   955  000292  6E21               	movwf	_MOT_2,c
   956                           
   957                           ;main.c: 140: } else if (palabra[1] == '3') {
   958  000294  D6C2               	goto	l196
   959  000296                     l215:
   960                           
   961                           ; BSR set to: 0
   962                           
   963                           ; BSR set to: 0
   964  000296  0E33               	movlw	51
   965  000298  1961               	xorwf	(_palabra+1)& (0+255),w,b
   966  00029A  A4D8               	btfss	status,2,c
   967  00029C  D6BE               	goto	l196
   968                           
   969                           ; BSR set to: 0
   970                           ;main.c: 141: MOT_3 = !MOT_3;
   971  00029E  5023               	movf	_MOT_3,w,c
   972  0002A0  A4D8               	btfss	status,2,c
   973  0002A2  D002               	goto	u1680
   974  0002A4  0E01               	movlw	1
   975  0002A6  D001               	goto	u1690
   976  0002A8                     u1680:
   977  0002A8  0E00               	movlw	0
   978  0002AA                     u1690:
   979  0002AA  6E23               	movwf	_MOT_3,c
   980                           
   981                           ; BSR set to: 0
   982                           ;main.c: 142: }
   983                           ;main.c: 143: } else if (palabra[0] == 'N') {
   984                           
   985                           ; BSR set to: 0
   986                           
   987                           ; BSR set to: 0
   988  0002AC  D6B6               	goto	l196
   989  0002AE                     l212:
   990                           
   991                           ; BSR set to: 0
   992                           
   993                           ; BSR set to: 0
   994  0002AE  0E4E               	movlw	78
   995  0002B0  1960               	xorwf	_palabra& (0+255),w,b
   996  0002B2  A4D8               	btfss	status,2,c
   997  0002B4  D008               	goto	l219
   998                           
   999                           ; BSR set to: 0
  1000                           ;main.c: 145: enable = !enable;
  1001  0002B6  5017               	movf	_enable,w,c
  1002  0002B8  A4D8               	btfss	status,2,c
  1003  0002BA  D002               	goto	u1710
  1004  0002BC  0E01               	movlw	1
  1005  0002BE  D001               	goto	u1720
  1006  0002C0                     u1710:
  1007  0002C0  0E00               	movlw	0
  1008  0002C2                     u1720:
  1009  0002C2  6E17               	movwf	_enable,c
  1010                           
  1011                           ;main.c: 146: } else if (palabra[0] == 'W') {
  1012  0002C4  D6AA               	goto	l196
  1013  0002C6                     l219:
  1014                           
  1015                           ; BSR set to: 0
  1016                           
  1017                           ; BSR set to: 0
  1018  0002C6  0E57               	movlw	87
  1019  0002C8  1960               	xorwf	_palabra& (0+255),w,b
  1020  0002CA  A4D8               	btfss	status,2,c
  1021  0002CC  D003               	goto	l221
  1022                           
  1023                           ; BSR set to: 0
  1024                           ;main.c: 148: unwind();
  1025  0002CE  EC73  F003         	call	_unwind	;wreg free
  1026                           
  1027                           ;main.c: 149: } else if (palabra[0] == 'R') {
  1028  0002D2  D6A3               	goto	l196
  1029  0002D4                     l221:
  1030  0002D4  0E52               	movlw	82
  1031  0002D6  0100               	movlb	0	; () banked
  1032  0002D8  1960               	xorwf	_palabra& (0+255),w,b
  1033  0002DA  A4D8               	btfss	status,2,c
  1034  0002DC  D69E               	goto	l196
  1035                           
  1036                           ; BSR set to: 0
  1037                           ;main.c: 150: reset();
  1038  0002DE  ECA7  F003         	call	_reset	;wreg free
  1039                           
  1040                           ;main.c: 151: }
  1041                           ;main.c: 153: } else if (GODONE == 0) {
  1042  0002E2  D69B               	goto	l196
  1043  0002E4                     l197:
  1044                           
  1045                           ; BSR set to: 0
  1046  0002E4  B2C2               	btfsc	4034,1,c	;volatile
  1047  0002E6  D699               	goto	l196
  1048                           
  1049                           ; BSR set to: 0
  1050                           ;main.c: 155: _delay((unsigned long)((4)*(8000000/4000.0)));
  1051  0002E8  0E0B               	movlw	11
  1052  0002EA  0100               	movlb	0	; () banked
  1053  0002EC  6F87               	movwf	??_main& (0+255),b
  1054  0002EE  0E62               	movlw	98
  1055  0002F0                     u1767:
  1056  0002F0  2EE8               	decfsz	wreg,f,c
  1057  0002F2  D7FE               	bra	u1767
  1058  0002F4  2F87               	decfsz	??_main& (0+255),f,b
  1059  0002F6  D7FC               	bra	u1767
  1060  0002F8  F000               	nop	
  1061                           
  1062                           ;main.c: 157: GODONE = 1;
  1063  0002FA  82C2               	bsf	4034,1,c	;volatile
  1064  0002FC  D68E               	goto	l196
  1065  0002FE                     __end_of_main:
  1066                           	opt stack 0
  1067                           tblptru	equ	0xFF8
  1068                           tblptrh	equ	0xFF7
  1069                           tblptrl	equ	0xFF6
  1070                           tablat	equ	0xFF5
  1071                           postinc0	equ	0xFEE
  1072                           wreg	equ	0xFE8
  1073                           postdec1	equ	0xFE5
  1074                           fsr1l	equ	0xFE1
  1075                           status	equ	0xFD8
  1076                           
  1077 ;; *************** function _zero_mark *****************
  1078 ;; Defined at:
  1079 ;;		line 182 in file "main.c"
  1080 ;; Parameters:    Size  Location     Type
  1081 ;;		None
  1082 ;; Auto vars:     Size  Location     Type
  1083 ;;		None
  1084 ;; Return value:  Size  Location     Type
  1085 ;;                  1    wreg      void 
  1086 ;; Registers used:
  1087 ;;		wreg, status,2
  1088 ;; Tracked objects:
  1089 ;;		On entry : 0/0
  1090 ;;		On exit  : 0/0
  1091 ;;		Unchanged: 0/0
  1092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1093 ;;      Params:         0       0       0       0       0       0       0       0       0
  1094 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1095 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1096 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1097 ;;Total ram usage:        0 bytes
  1098 ;; Hardware stack levels used:    1
  1099 ;; Hardware stack levels required when called:    3
  1100 ;; This function calls:
  1101 ;;		Nothing
  1102 ;; This function is called by:
  1103 ;;		_main
  1104 ;; This function uses a non-reentrant model
  1105 ;;
  1106                           
  1107                           	psect	text1
  1108  000702                     __ptext1:
  1109                           	opt stack 0
  1110  000702                     _zero_mark:
  1111                           	opt stack 27
  1112                           
  1113                           ;main.c: 184: DIR_3 = 1;
  1114                           
  1115                           ;incstack = 0
  1116  000702  0E01               	movlw	1
  1117  000704  6E22               	movwf	_DIR_3,c
  1118                           
  1119                           ;main.c: 185: T1CONbits.TMR1ON = 0;
  1120  000706  90CD               	bcf	4045,0,c	;volatile
  1121                           
  1122                           ;main.c: 186: T0CONbits.TMR0ON = 1;
  1123  000708  8ED5               	bsf	4053,7,c	;volatile
  1124                           
  1125                           ;main.c: 187: zero_flag = 0;
  1126  00070A  0E00               	movlw	0
  1127  00070C  6E52               	movwf	_zero_flag,c
  1128                           
  1129                           ;main.c: 188: winding = 1;
  1130  00070E  0E01               	movlw	1
  1131  000710  6E20               	movwf	_winding,c
  1132                           
  1133                           ;main.c: 189: MOT_1 = 1;
  1134  000712  0E01               	movlw	1
  1135  000714  6E24               	movwf	_MOT_1,c
  1136                           
  1137                           ;main.c: 190: MOT_3 = 1;
  1138  000716  0E01               	movlw	1
  1139  000718  6E23               	movwf	_MOT_3,c
  1140  00071A  0012               	return		;funcret
  1141  00071C                     __end_of_zero_mark:
  1142                           	opt stack 0
  1143                           tblptru	equ	0xFF8
  1144                           tblptrh	equ	0xFF7
  1145                           tblptrl	equ	0xFF6
  1146                           tablat	equ	0xFF5
  1147                           postinc0	equ	0xFEE
  1148                           wreg	equ	0xFE8
  1149                           postdec1	equ	0xFE5
  1150                           fsr1l	equ	0xFE1
  1151                           status	equ	0xFD8
  1152                           
  1153 ;; *************** function _unwind *****************
  1154 ;; Defined at:
  1155 ;;		line 197 in file "main.c"
  1156 ;; Parameters:    Size  Location     Type
  1157 ;;		None
  1158 ;; Auto vars:     Size  Location     Type
  1159 ;;		None
  1160 ;; Return value:  Size  Location     Type
  1161 ;;                  1    wreg      void 
  1162 ;; Registers used:
  1163 ;;		wreg, status,2
  1164 ;; Tracked objects:
  1165 ;;		On entry : 0/0
  1166 ;;		On exit  : 0/0
  1167 ;;		Unchanged: 0/0
  1168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1169 ;;      Params:         0       0       0       0       0       0       0       0       0
  1170 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1171 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1172 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1173 ;;Total ram usage:        0 bytes
  1174 ;; Hardware stack levels used:    1
  1175 ;; Hardware stack levels required when called:    3
  1176 ;; This function calls:
  1177 ;;		Nothing
  1178 ;; This function is called by:
  1179 ;;		_main
  1180 ;; This function uses a non-reentrant model
  1181 ;;
  1182                           
  1183                           	psect	text2
  1184  0006E6                     __ptext2:
  1185                           	opt stack 0
  1186  0006E6                     _unwind:
  1187                           	opt stack 27
  1188                           
  1189                           ;main.c: 199: enable = !enable;
  1190                           
  1191                           ;incstack = 0
  1192  0006E6  5017               	movf	_enable,w,c
  1193  0006E8  A4D8               	btfss	status,2,c
  1194  0006EA  D002               	goto	u1400
  1195  0006EC  0E01               	movlw	1
  1196  0006EE  D001               	goto	u1410
  1197  0006F0                     u1400:
  1198  0006F0  0E00               	movlw	0
  1199  0006F2                     u1410:
  1200  0006F2  6E17               	movwf	_enable,c
  1201                           
  1202                           ;main.c: 200: T1CONbits.TMR1ON = 1;
  1203  0006F4  80CD               	bsf	4045,0,c	;volatile
  1204                           
  1205                           ;main.c: 201: T0CONbits.TMR0ON = 0;
  1206  0006F6  9ED5               	bcf	4053,7,c	;volatile
  1207                           
  1208                           ;main.c: 202: MOT_3 = 0;
  1209  0006F8  0E00               	movlw	0
  1210  0006FA  6E23               	movwf	_MOT_3,c
  1211                           
  1212                           ;main.c: 203: MOT_2 = 1;
  1213  0006FC  0E01               	movlw	1
  1214  0006FE  6E21               	movwf	_MOT_2,c
  1215  000700  0012               	return		;funcret
  1216  000702                     __end_of_unwind:
  1217                           	opt stack 0
  1218                           tblptru	equ	0xFF8
  1219                           tblptrh	equ	0xFF7
  1220                           tblptrl	equ	0xFF6
  1221                           tablat	equ	0xFF5
  1222                           postinc0	equ	0xFEE
  1223                           wreg	equ	0xFE8
  1224                           postdec1	equ	0xFE5
  1225                           fsr1l	equ	0xFE1
  1226                           status	equ	0xFD8
  1227                           
  1228 ;; *************** function _reset *****************
  1229 ;; Defined at:
  1230 ;;		line 215 in file "main.c"
  1231 ;; Parameters:    Size  Location     Type
  1232 ;;		None
  1233 ;; Auto vars:     Size  Location     Type
  1234 ;;		None
  1235 ;; Return value:  Size  Location     Type
  1236 ;;                  1    wreg      void 
  1237 ;; Registers used:
  1238 ;;		None
  1239 ;; Tracked objects:
  1240 ;;		On entry : 0/0
  1241 ;;		On exit  : 0/0
  1242 ;;		Unchanged: 0/0
  1243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1244 ;;      Params:         0       0       0       0       0       0       0       0       0
  1245 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1246 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1247 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1248 ;;Total ram usage:        0 bytes
  1249 ;; Hardware stack levels used:    1
  1250 ;; Hardware stack levels required when called:    3
  1251 ;; This function calls:
  1252 ;;		Nothing
  1253 ;; This function is called by:
  1254 ;;		_main
  1255 ;; This function uses a non-reentrant model
  1256 ;;
  1257                           
  1258                           	psect	text3
  1259  00074E                     __ptext3:
  1260                           	opt stack 0
  1261  00074E                     _reset:
  1262                           	opt stack 27
  1263                           
  1264                           ;incstack = 0
  1265  00074E  00FF               	reset		;# 
  1266  000750  0012               	return		;funcret
  1267  000752                     __end_of_reset:
  1268                           	opt stack 0
  1269                           tblptru	equ	0xFF8
  1270                           tblptrh	equ	0xFF7
  1271                           tblptrl	equ	0xFF6
  1272                           tablat	equ	0xFF5
  1273                           postinc0	equ	0xFEE
  1274                           wreg	equ	0xFE8
  1275                           postdec1	equ	0xFE5
  1276                           fsr1l	equ	0xFE1
  1277                           status	equ	0xFD8
  1278                           
  1279 ;; *************** function ___wmul *****************
  1280 ;; Defined at:
  1281 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
  1282 ;; Parameters:    Size  Location     Type
  1283 ;;  multiplier      2    0[BANK0 ] unsigned int 
  1284 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  1285 ;; Auto vars:     Size  Location     Type
  1286 ;;  product         2    4[BANK0 ] unsigned int 
  1287 ;; Return value:  Size  Location     Type
  1288 ;;                  2    0[BANK0 ] unsigned int 
  1289 ;; Registers used:
  1290 ;;		wreg, status,2, status,0, prodl, prodh
  1291 ;; Tracked objects:
  1292 ;;		On entry : 0/0
  1293 ;;		On exit  : 0/0
  1294 ;;		Unchanged: 0/0
  1295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1296 ;;      Params:         0       4       0       0       0       0       0       0       0
  1297 ;;      Locals:         0       2       0       0       0       0       0       0       0
  1298 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1299 ;;      Totals:         0       6       0       0       0       0       0       0       0
  1300 ;;Total ram usage:        6 bytes
  1301 ;; Hardware stack levels used:    1
  1302 ;; Hardware stack levels required when called:    3
  1303 ;; This function calls:
  1304 ;;		Nothing
  1305 ;; This function is called by:
  1306 ;;		_main
  1307 ;; This function uses a non-reentrant model
  1308 ;;
  1309                           
  1310                           	psect	text4
  1311  000674                     __ptext4:
  1312                           	opt stack 0
  1313  000674                     ___wmul:
  1314                           	opt stack 27
  1315                           
  1316                           ;incstack = 0
  1317  000674  0100               	movlb	0	; () banked
  1318  000676  5181               	movf	___wmul@multiplier& (0+255),w,b
  1319  000678  0383               	mulwf	___wmul@multiplicand& (0+255),b
  1320  00067A  CFF3 F085          	movff	prodl,___wmul@product
  1321  00067E  CFF4 F086          	movff	prodh,___wmul@product+1
  1322  000682  5181               	movf	___wmul@multiplier& (0+255),w,b
  1323  000684  0384               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  1324  000686  50F3               	movf	prodl,w,c
  1325  000688  2786               	addwf	(___wmul@product+1)& (0+255),f,b
  1326  00068A  5182               	movf	(___wmul@multiplier+1)& (0+255),w,b
  1327  00068C  0383               	mulwf	___wmul@multiplicand& (0+255),b
  1328  00068E  50F3               	movf	prodl,w,c
  1329  000690  2786               	addwf	(___wmul@product+1)& (0+255),f,b
  1330                           
  1331                           ; BSR set to: 0
  1332  000692  C085  F081         	movff	___wmul@product,?___wmul
  1333  000696  C086  F082         	movff	___wmul@product+1,?___wmul+1
  1334  00069A  0012               	return	
  1335  00069C                     __end_of___wmul:
  1336                           	opt stack 0
  1337                           tblptru	equ	0xFF8
  1338                           tblptrh	equ	0xFF7
  1339                           tblptrl	equ	0xFF6
  1340                           tablat	equ	0xFF5
  1341                           prodh	equ	0xFF4
  1342                           prodl	equ	0xFF3
  1343                           postinc0	equ	0xFEE
  1344                           wreg	equ	0xFE8
  1345                           postdec1	equ	0xFE5
  1346                           fsr1l	equ	0xFE1
  1347                           status	equ	0xFD8
  1348                           
  1349 ;; *************** function _InitApp *****************
  1350 ;; Defined at:
  1351 ;;		line 33 in file "user.c"
  1352 ;; Parameters:    Size  Location     Type
  1353 ;;		None
  1354 ;; Auto vars:     Size  Location     Type
  1355 ;;		None
  1356 ;; Return value:  Size  Location     Type
  1357 ;;                  1    wreg      void 
  1358 ;; Registers used:
  1359 ;;		wreg, status,2
  1360 ;; Tracked objects:
  1361 ;;		On entry : 0/0
  1362 ;;		On exit  : 0/0
  1363 ;;		Unchanged: 0/0
  1364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1365 ;;      Params:         0       0       0       0       0       0       0       0       0
  1366 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1367 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1368 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1369 ;;Total ram usage:        0 bytes
  1370 ;; Hardware stack levels used:    1
  1371 ;; Hardware stack levels required when called:    3
  1372 ;; This function calls:
  1373 ;;		Nothing
  1374 ;; This function is called by:
  1375 ;;		_main
  1376 ;; This function uses a non-reentrant model
  1377 ;;
  1378                           
  1379                           	psect	text5
  1380  00055E                     __ptext5:
  1381                           	opt stack 0
  1382  00055E                     _InitApp:
  1383                           	opt stack 27
  1384                           
  1385                           ;user.c: 35: PORTA = 0;
  1386                           
  1387                           ; BSR set to: 0
  1388                           ;incstack = 0
  1389  00055E  0E00               	movlw	0
  1390  000560  6E80               	movwf	3968,c	;volatile
  1391                           
  1392                           ;user.c: 36: LATA = 0;
  1393  000562  0E00               	movlw	0
  1394  000564  6E89               	movwf	3977,c	;volatile
  1395                           
  1396                           ;user.c: 37: PORTB = 0;
  1397  000566  0E00               	movlw	0
  1398  000568  6E81               	movwf	3969,c	;volatile
  1399                           
  1400                           ;user.c: 38: LATB = 0;
  1401  00056A  0E00               	movlw	0
  1402  00056C  6E8A               	movwf	3978,c	;volatile
  1403                           
  1404                           ;user.c: 39: PORTC = 0;
  1405  00056E  0E00               	movlw	0
  1406  000570  6E82               	movwf	3970,c	;volatile
  1407                           
  1408                           ;user.c: 40: LATC = 0;
  1409  000572  0E00               	movlw	0
  1410  000574  6E8B               	movwf	3979,c	;volatile
  1411                           
  1412                           ;user.c: 42: ADCON1 = 0b1101;
  1413  000576  0E0D               	movlw	13
  1414  000578  6EC1               	movwf	4033,c	;volatile
  1415                           
  1416                           ;user.c: 43: TRISAbits.TRISA0 = 1;
  1417  00057A  8092               	bsf	3986,0,c	;volatile
  1418                           
  1419                           ;user.c: 44: ADCON0bits.CHS = 0;
  1420  00057C  94C2               	bcf	4034,2,c	;volatile
  1421  00057E  96C2               	bcf	4034,3,c	;volatile
  1422  000580  98C2               	bcf	4034,4,c	;volatile
  1423  000582  9AC2               	bcf	4034,5,c	;volatile
  1424                           
  1425                           ;user.c: 45: ADCON2 = 0b10101100;
  1426  000584  0EAC               	movlw	172
  1427  000586  6EC0               	movwf	4032,c	;volatile
  1428                           
  1429                           ;user.c: 46: PIE1bits.ADIE = 1;
  1430  000588  8C9D               	bsf	3997,6,c	;volatile
  1431                           
  1432                           ;user.c: 47: PIR1bits.ADIF = 0;
  1433  00058A  9C9E               	bcf	3998,6,c	;volatile
  1434                           
  1435                           ;user.c: 48: ADCON0bits.ADON = 1;
  1436  00058C  80C2               	bsf	4034,0,c	;volatile
  1437                           
  1438                           ;user.c: 50: TRISAbits.RA2 = 0;
  1439  00058E  9492               	bcf	3986,2,c	;volatile
  1440                           
  1441                           ;user.c: 51: TRISAbits.RA3 = 0;
  1442  000590  9692               	bcf	3986,3,c	;volatile
  1443                           
  1444                           ;user.c: 52: TRISAbits.RA4 = 0;
  1445  000592  9892               	bcf	3986,4,c	;volatile
  1446                           
  1447                           ;user.c: 53: TRISAbits.RA5 = 0;
  1448  000594  9A92               	bcf	3986,5,c	;volatile
  1449                           
  1450                           ;user.c: 54: TRISCbits.RC0 = 0;
  1451  000596  9094               	bcf	3988,0,c	;volatile
  1452                           
  1453                           ;user.c: 55: TRISCbits.RC1 = 0;
  1454  000598  9294               	bcf	3988,1,c	;volatile
  1455                           
  1456                           ;user.c: 56: TRISBbits.RB7 = 0;
  1457  00059A  9E93               	bcf	3987,7,c	;volatile
  1458                           
  1459                           ;user.c: 57: TRISBbits.RB6 = 0;
  1460  00059C  9C93               	bcf	3987,6,c	;volatile
  1461                           
  1462                           ;user.c: 58: TRISCbits.RC2 = 0;
  1463  00059E  9494               	bcf	3988,2,c	;volatile
  1464                           
  1465                           ;user.c: 59: TRISBbits.RB4 = 0;
  1466  0005A0  9893               	bcf	3987,4,c	;volatile
  1467                           
  1468                           ;user.c: 60: TRISBbits.RB5 = 0;
  1469  0005A2  9A93               	bcf	3987,5,c	;volatile
  1470                           
  1471                           ;user.c: 62: RCONbits.IPEN = 0;
  1472  0005A4  9ED0               	bcf	4048,7,c	;volatile
  1473                           
  1474                           ;user.c: 64: INTCONbits.GIE = 1;
  1475  0005A6  8EF2               	bsf	intcon,7,c	;volatile
  1476                           
  1477                           ;user.c: 65: INTCONbits.PEIE = 1;
  1478  0005A8  8CF2               	bsf	intcon,6,c	;volatile
  1479                           
  1480                           ;user.c: 66: INTCONbits.TMR0IE = 1;
  1481  0005AA  8AF2               	bsf	intcon,5,c	;volatile
  1482                           
  1483                           ;user.c: 67: INTCONbits.TMR0IF = 0;
  1484  0005AC  94F2               	bcf	intcon,2,c	;volatile
  1485                           
  1486                           ;user.c: 68: INTCON2bits.TMR0IP = 1;
  1487  0005AE  84F1               	bsf	intcon2,2,c	;volatile
  1488                           
  1489                           ;user.c: 69: T0CONbits.T08BIT = 1;
  1490  0005B0  8CD5               	bsf	4053,6,c	;volatile
  1491                           
  1492                           ;user.c: 70: T0CONbits.T0CS = 0;
  1493  0005B2  9AD5               	bcf	4053,5,c	;volatile
  1494                           
  1495                           ;user.c: 71: T0CONbits.PSA = 0;
  1496  0005B4  96D5               	bcf	4053,3,c	;volatile
  1497                           
  1498                           ;user.c: 72: T0CONbits.T0PS = 0b101;
  1499  0005B6  50D5               	movf	4053,w,c	;volatile
  1500  0005B8  0BF8               	andlw	-8
  1501  0005BA  0905               	iorlw	5
  1502  0005BC  6ED5               	movwf	4053,c	;volatile
  1503                           
  1504                           ;user.c: 73: T0CONbits.TMR0ON = 0;
  1505  0005BE  9ED5               	bcf	4053,7,c	;volatile
  1506                           
  1507                           ;user.c: 74: TMR0 = 0x6;
  1508  0005C0  0E00               	movlw	0
  1509  0005C2  6ED7               	movwf	4055,c	;volatile
  1510  0005C4  0E06               	movlw	6
  1511  0005C6  6ED6               	movwf	4054,c	;volatile
  1512                           
  1513                           ;user.c: 76: PIE1bits.TMR1IE = 1;
  1514  0005C8  809D               	bsf	3997,0,c	;volatile
  1515                           
  1516                           ;user.c: 77: PIR1bits.TMR1IF = 0;
  1517  0005CA  909E               	bcf	3998,0,c	;volatile
  1518                           
  1519                           ;user.c: 78: IPR1bits.TMR1IP = 1;
  1520  0005CC  809F               	bsf	3999,0,c	;volatile
  1521                           
  1522                           ;user.c: 79: T1CONbits.TMR1CS = 0;
  1523  0005CE  92CD               	bcf	4045,1,c	;volatile
  1524                           
  1525                           ;user.c: 80: T1CONbits.T1CKPS = 0b00;
  1526  0005D0  0ECF               	movlw	-49
  1527  0005D2  16CD               	andwf	4045,f,c	;volatile
  1528                           
  1529                           ;user.c: 81: T1CONbits.TMR1ON = 1;
  1530  0005D4  80CD               	bsf	4045,0,c	;volatile
  1531                           
  1532                           ;user.c: 85: TRISBbits.RB1 = 1;
  1533  0005D6  8293               	bsf	3987,1,c	;volatile
  1534                           
  1535                           ;user.c: 86: TRISBbits.RB2 = 1;
  1536  0005D8  8493               	bsf	3987,2,c	;volatile
  1537                           
  1538                           ;user.c: 87: INTCON3bits.INT1IE = 1;
  1539  0005DA  86F0               	bsf	intcon3,3,c	;volatile
  1540                           
  1541                           ;user.c: 88: INTCON3bits.INT2IE = 1;
  1542  0005DC  88F0               	bsf	intcon3,4,c	;volatile
  1543                           
  1544                           ;user.c: 89: INTCON3bits.INT1IF = 0;
  1545  0005DE  90F0               	bcf	intcon3,0,c	;volatile
  1546                           
  1547                           ;user.c: 90: INTCON3bits.INT2IF = 0;
  1548  0005E0  92F0               	bcf	intcon3,1,c	;volatile
  1549                           
  1550                           ;user.c: 91: INTCON2bits.INTEDG1 = 0;
  1551  0005E2  9AF1               	bcf	intcon2,5,c	;volatile
  1552                           
  1553                           ;user.c: 92: INTCON2bits.INTEDG2 = 0;
  1554  0005E4  98F1               	bcf	intcon2,4,c	;volatile
  1555                           
  1556                           ;user.c: 94: TRISCbits.RC6 = 0;
  1557  0005E6  9C94               	bcf	3988,6,c	;volatile
  1558                           
  1559                           ;user.c: 95: TRISCbits.RC7 = 1;
  1560  0005E8  8E94               	bsf	3988,7,c	;volatile
  1561                           
  1562                           ;user.c: 96: BRGH = 1;
  1563  0005EA  84AC               	bsf	4012,2,c	;volatile
  1564                           
  1565                           ;user.c: 97: BRG16 = 1;
  1566  0005EC  86B8               	bsf	4024,3,c	;volatile
  1567                           
  1568                           ;user.c: 98: SPBRG = 207;
  1569  0005EE  0ECF               	movlw	207
  1570  0005F0  6EAF               	movwf	4015,c	;volatile
  1571                           
  1572                           ;user.c: 99: SPEN = 1;
  1573  0005F2  8EAB               	bsf	4011,7,c	;volatile
  1574                           
  1575                           ;user.c: 100: SYNC = 0;
  1576  0005F4  98AC               	bcf	4012,4,c	;volatile
  1577                           
  1578                           ;user.c: 101: TXEN = 1;
  1579  0005F6  8AAC               	bsf	4012,5,c	;volatile
  1580                           
  1581                           ;user.c: 102: CREN = 1;
  1582  0005F8  88AB               	bsf	4011,4,c	;volatile
  1583                           
  1584                           ;user.c: 103: TX9 = 0;
  1585  0005FA  9CAC               	bcf	4012,6,c	;volatile
  1586                           
  1587                           ;user.c: 104: RX9 = 0;
  1588  0005FC  9CAB               	bcf	4011,6,c	;volatile
  1589                           
  1590                           ;user.c: 105: RCIE = 1;
  1591  0005FE  8A9D               	bsf	3997,5,c	;volatile
  1592                           
  1593                           ;user.c: 106: TXIE = 0;
  1594  000600  989D               	bcf	3997,4,c	;volatile
  1595                           
  1596                           ;user.c: 108: PR2 = 99;
  1597  000602  0E63               	movlw	99
  1598  000604  6ECB               	movwf	4043,c	;volatile
  1599                           
  1600                           ;user.c: 109: CCP1CONbits.DC1B = 0;
  1601  000606  0ECF               	movlw	-49
  1602  000608  16BD               	andwf	4029,f,c	;volatile
  1603                           
  1604                           ;user.c: 110: T2CONbits.T2CKPS = 0b00;
  1605  00060A  0EFC               	movlw	-4
  1606  00060C  16CA               	andwf	4042,f,c	;volatile
  1607                           
  1608                           ;user.c: 111: T2CONbits.TMR2ON = 1;
  1609  00060E  84CA               	bsf	4042,2,c	;volatile
  1610                           
  1611                           ;user.c: 112: CCP1CONbits.CCP1M = 0b1111;
  1612  000610  80BD               	bsf	4029,0,c	;volatile
  1613  000612  82BD               	bsf	4029,1,c	;volatile
  1614  000614  84BD               	bsf	4029,2,c	;volatile
  1615  000616  86BD               	bsf	4029,3,c	;volatile
  1616  000618  0012               	return		;funcret
  1617  00061A                     __end_of_InitApp:
  1618                           	opt stack 0
  1619                           tblptru	equ	0xFF8
  1620                           tblptrh	equ	0xFF7
  1621                           tblptrl	equ	0xFF6
  1622                           tablat	equ	0xFF5
  1623                           prodh	equ	0xFF4
  1624                           prodl	equ	0xFF3
  1625                           intcon	equ	0xFF2
  1626                           intcon2	equ	0xFF1
  1627                           intcon3	equ	0xFF0
  1628                           postinc0	equ	0xFEE
  1629                           wreg	equ	0xFE8
  1630                           postdec1	equ	0xFE5
  1631                           fsr1l	equ	0xFE1
  1632                           status	equ	0xFD8
  1633                           
  1634 ;; *************** function _ConfigureOscillator *****************
  1635 ;; Defined at:
  1636 ;;		line 24 in file "system.c"
  1637 ;; Parameters:    Size  Location     Type
  1638 ;;		None
  1639 ;; Auto vars:     Size  Location     Type
  1640 ;;		None
  1641 ;; Return value:  Size  Location     Type
  1642 ;;                  1    wreg      void 
  1643 ;; Registers used:
  1644 ;;		wreg, status,2
  1645 ;; Tracked objects:
  1646 ;;		On entry : 0/0
  1647 ;;		On exit  : 0/0
  1648 ;;		Unchanged: 0/0
  1649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1650 ;;      Params:         0       0       0       0       0       0       0       0       0
  1651 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1652 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1653 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1654 ;;Total ram usage:        0 bytes
  1655 ;; Hardware stack levels used:    1
  1656 ;; Hardware stack levels required when called:    3
  1657 ;; This function calls:
  1658 ;;		Nothing
  1659 ;; This function is called by:
  1660 ;;		_main
  1661 ;; This function uses a non-reentrant model
  1662 ;;
  1663                           
  1664                           	psect	text6
  1665  000742                     __ptext6:
  1666                           	opt stack 0
  1667  000742                     _ConfigureOscillator:
  1668                           	opt stack 27
  1669                           
  1670                           ;system.c: 27: OSCCONbits.IRCF = 0b111;
  1671                           
  1672                           ;incstack = 0
  1673  000742  88D3               	bsf	4051,4,c	;volatile
  1674  000744  8AD3               	bsf	4051,5,c	;volatile
  1675  000746  8CD3               	bsf	4051,6,c	;volatile
  1676                           
  1677                           ;system.c: 28: OSCCONbits.SCS = 0b11;
  1678  000748  0E03               	movlw	3
  1679  00074A  12D3               	iorwf	4051,f,c	;volatile
  1680  00074C  0012               	return		;funcret
  1681  00074E                     __end_of_ConfigureOscillator:
  1682                           	opt stack 0
  1683                           tblptru	equ	0xFF8
  1684                           tblptrh	equ	0xFF7
  1685                           tblptrl	equ	0xFF6
  1686                           tablat	equ	0xFF5
  1687                           prodh	equ	0xFF4
  1688                           prodl	equ	0xFF3
  1689                           intcon	equ	0xFF2
  1690                           intcon2	equ	0xFF1
  1691                           intcon3	equ	0xFF0
  1692                           postinc0	equ	0xFEE
  1693                           wreg	equ	0xFE8
  1694                           postdec1	equ	0xFE5
  1695                           fsr1l	equ	0xFE1
  1696                           status	equ	0xFD8
  1697                           
  1698 ;; *************** function _high_isr *****************
  1699 ;; Defined at:
  1700 ;;		line 66 in file "interrupts.c"
  1701 ;; Parameters:    Size  Location     Type
  1702 ;;		None
  1703 ;; Auto vars:     Size  Location     Type
  1704 ;;		None
  1705 ;; Return value:  Size  Location     Type
  1706 ;;                  1    wreg      void 
  1707 ;; Registers used:
  1708 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1709 ;; Tracked objects:
  1710 ;;		On entry : 0/0
  1711 ;;		On exit  : 0/0
  1712 ;;		Unchanged: 0/0
  1713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1714 ;;      Params:         0       0       0       0       0       0       0       0       0
  1715 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1716 ;;      Temps:         19       0       0       0       0       0       0       0       0
  1717 ;;      Totals:        19       0       0       0       0       0       0       0       0
  1718 ;;Total ram usage:       19 bytes
  1719 ;; Hardware stack levels used:    1
  1720 ;; Hardware stack levels required when called:    2
  1721 ;; This function calls:
  1722 ;;		_finish
  1723 ;;		_mot_3_step_count
  1724 ;; This function is called by:
  1725 ;;		Interrupt level 2
  1726 ;; This function uses a non-reentrant model
  1727 ;;
  1728                           
  1729                           	psect	intcode
  1730  000008                     __pintcode:
  1731                           	opt stack 0
  1732  000008                     _high_isr:
  1733                           	opt stack 27
  1734                           
  1735                           ;incstack = 0
  1736  000008  8253               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  1737  00000A  ED7F  F001         	call	int_func,f	;refresh shadow registers
  1738                           tblptru	equ	0xFF8
  1739                           tblptrh	equ	0xFF7
  1740                           tblptrl	equ	0xFF6
  1741                           tablat	equ	0xFF5
  1742                           prodh	equ	0xFF4
  1743                           prodl	equ	0xFF3
  1744                           intcon	equ	0xFF2
  1745                           intcon2	equ	0xFF1
  1746                           intcon3	equ	0xFF0
  1747                           postinc0	equ	0xFEE
  1748                           wreg	equ	0xFE8
  1749                           postdec1	equ	0xFE5
  1750                           fsr1l	equ	0xFE1
  1751                           status	equ	0xFD8
  1752                           
  1753                           	psect	intcode_body
  1754  0002FE                     __pintcode_body:
  1755                           	opt stack 27
  1756  0002FE                     int_func:
  1757                           	opt stack 27
  1758  0002FE  0006               	pop		; remove dummy address from shadow register refresh
  1759  000300  CFFA F032          	movff	pclath,??_high_isr+1
  1760  000304  CFFB F033          	movff	pclatu,??_high_isr+2
  1761  000308  CFE9 F034          	movff	fsr0l,??_high_isr+3
  1762  00030C  CFEA F035          	movff	fsr0h,??_high_isr+4
  1763  000310  CFE1 F036          	movff	fsr1l,??_high_isr+5
  1764  000314  CFE2 F037          	movff	fsr1h,??_high_isr+6
  1765  000318  CFD9 F038          	movff	fsr2l,??_high_isr+7
  1766  00031C  CFDA F039          	movff	fsr2h,??_high_isr+8
  1767  000320  CFF3 F03A          	movff	prodl,??_high_isr+9
  1768  000324  CFF4 F03B          	movff	prodh,??_high_isr+10
  1769  000328  CFF6 F03C          	movff	tblptrl,??_high_isr+11
  1770  00032C  CFF7 F03D          	movff	tblptrh,??_high_isr+12
  1771  000330  CFF8 F03E          	movff	tblptru,??_high_isr+13
  1772  000334  CFF5 F03F          	movff	tablat,??_high_isr+14
  1773  000338  C053  F040         	movff	btemp,??_high_isr+15
  1774  00033C  C054  F041         	movff	btemp+1,??_high_isr+16
  1775  000340  C055  F042         	movff	btemp+2,??_high_isr+17
  1776  000344  C056  F043         	movff	btemp+3,??_high_isr+18
  1777                           
  1778                           ;interrupts.c: 67: if (INTCONbits.TMR0IF) {
  1779  000348  A4F2               	btfss	intcon,2,c	;volatile
  1780  00034A  D077               	goto	i2l87
  1781                           
  1782                           ;interrupts.c: 69: INTCONbits.TMR0IF = 0;
  1783  00034C  94F2               	bcf	intcon,2,c	;volatile
  1784                           
  1785                           ;interrupts.c: 70: TMR0 = 250;
  1786  00034E  0E00               	movlw	0
  1787  000350  6ED7               	movwf	4055,c	;volatile
  1788  000352  0EFA               	movlw	250
  1789  000354  6ED6               	movwf	4054,c	;volatile
  1790                           
  1791                           ;interrupts.c: 71: MOT_1_count++;
  1792  000356  4A0F               	infsnz	_MOT_1_count,f,c
  1793  000358  2A10               	incf	_MOT_1_count+1,f,c
  1794                           
  1795                           ;interrupts.c: 72: MOT_2_count++;
  1796  00035A  4A0D               	infsnz	_MOT_2_count,f,c
  1797  00035C  2A0E               	incf	_MOT_2_count+1,f,c
  1798                           
  1799                           ;interrupts.c: 73: MOT_3_count++;
  1800  00035E  4A0B               	infsnz	_MOT_3_count,f,c
  1801  000360  2A0C               	incf	_MOT_3_count+1,f,c
  1802                           
  1803                           ;interrupts.c: 74: MOT_4_count++;
  1804  000362  4A09               	infsnz	_MOT_4_count,f,c
  1805  000364  2A0A               	incf	_MOT_4_count+1,f,c
  1806                           
  1807                           ;interrupts.c: 76: if (MOT_1) {
  1808  000366  5024               	movf	_MOT_1,w,c
  1809  000368  B4D8               	btfsc	status,2,c
  1810  00036A  D02E               	goto	i2l91
  1811                           
  1812                           ;interrupts.c: 78: if (MOT_1_count == count_1) {
  1813  00036C  504C               	movf	_count_1,w,c
  1814  00036E  180F               	xorwf	_MOT_1_count,w,c
  1815  000370  E12B               	bnz	i2l1477
  1816  000372  504D               	movf	_count_1+1,w,c
  1817  000374  1810               	xorwf	_MOT_1_count+1,w,c
  1818  000376  A4D8               	btfss	status,2,c
  1819  000378  D027               	goto	i2l91
  1820                           
  1821                           ;interrupts.c: 79: MOT_1_count = 0;
  1822  00037A  0E00               	movlw	0
  1823  00037C  6E10               	movwf	_MOT_1_count+1,c
  1824  00037E  0E00               	movlw	0
  1825  000380  6E0F               	movwf	_MOT_1_count,c
  1826                           
  1827                           ;interrupts.c: 80: LATAbits.LA3 = !PORTAbits.RA3;
  1828  000382  B680               	btfsc	3968,3,c	;volatile
  1829  000384  D003               	goto	i2u76_40
  1830  000386  6A31               	clrf	??_high_isr& (0+255),c
  1831  000388  2A31               	incf	??_high_isr& (0+255),f,c
  1832  00038A  D001               	goto	i2u77_48
  1833  00038C                     i2u76_40:
  1834  00038C  6A31               	clrf	??_high_isr& (0+255),c
  1835  00038E                     i2u77_48:
  1836  00038E  4631               	rlncf	??_high_isr,f,c
  1837  000390  4631               	rlncf	??_high_isr,f,c
  1838  000392  4631               	rlncf	??_high_isr,f,c
  1839  000394  5089               	movf	3977,w,c	;volatile
  1840  000396  1831               	xorwf	??_high_isr,w,c
  1841  000398  0BF7               	andlw	-9
  1842  00039A  1831               	xorwf	??_high_isr,w,c
  1843  00039C  6E89               	movwf	3977,c	;volatile
  1844                           
  1845                           ;interrupts.c: 81: mot_1_steps++;
  1846  00039E  4A07               	infsnz	_mot_1_steps,f,c
  1847  0003A0  2A08               	incf	_mot_1_steps+1,f,c
  1848                           
  1849                           ;interrupts.c: 82: if (mot_1_steps == 200) {
  1850  0003A2  0EC8               	movlw	200
  1851  0003A4  1807               	xorwf	_mot_1_steps,w,c
  1852  0003A6  1008               	iorwf	_mot_1_steps+1,w,c
  1853  0003A8  A4D8               	btfss	status,2,c
  1854  0003AA  D006               	goto	i2l90
  1855                           
  1856                           ;interrupts.c: 84: mot_1_steps = 0;
  1857  0003AC  0E00               	movlw	0
  1858  0003AE  6E08               	movwf	_mot_1_steps+1,c
  1859  0003B0  0E00               	movlw	0
  1860  0003B2  6E07               	movwf	_mot_1_steps,c
  1861                           
  1862                           ;interrupts.c: 85: turns_count++;
  1863  0003B4  4A01               	infsnz	_turns_count,f,c
  1864  0003B6  2A02               	incf	_turns_count+1,f,c
  1865  0003B8                     i2l90:
  1866                           
  1867                           ;interrupts.c: 86: }
  1868                           ;interrupts.c: 87: if (turns_count == turns) {
  1869  0003B8  5050               	movf	_turns,w,c
  1870  0003BA  1801               	xorwf	_turns_count,w,c
  1871  0003BC  E105               	bnz	i2l1477
  1872  0003BE  5051               	movf	_turns+1,w,c
  1873  0003C0  1802               	xorwf	_turns_count+1,w,c
  1874  0003C2  B4D8               	btfsc	status,2,c
  1875                           
  1876                           ;interrupts.c: 89: finish();
  1877  0003C4  EC8E  F003         	call	_finish	;wreg free
  1878  0003C8                     i2l91:
  1879  0003C8                     i2l1477:
  1880                           
  1881                           ;interrupts.c: 90: }
  1882                           ;interrupts.c: 91: }
  1883                           ;interrupts.c: 92: }
  1884                           ;interrupts.c: 94: if (MOT_3) {
  1885  0003C8  5023               	movf	_MOT_3,w,c
  1886  0003CA  B4D8               	btfsc	status,2,c
  1887  0003CC  D0A2               	goto	i2l114
  1888                           
  1889                           ;interrupts.c: 96: if (MOT_3_count == count_3) {
  1890  0003CE  5048               	movf	_count_3,w,c
  1891  0003D0  180B               	xorwf	_MOT_3_count,w,c
  1892  0003D2  E103               	bnz	i2u81_41
  1893  0003D4  5049               	movf	_count_3+1,w,c
  1894  0003D6  180C               	xorwf	_MOT_3_count+1,w,c
  1895  0003D8  A4D8               	btfss	status,2,c
  1896  0003DA                     i2u81_41:
  1897  0003DA  D09B               	goto	i2l114
  1898                           
  1899                           ;interrupts.c: 97: MOT_3_count = 0;
  1900  0003DC  0E00               	movlw	0
  1901  0003DE  6E0C               	movwf	_MOT_3_count+1,c
  1902  0003E0  0E00               	movlw	0
  1903  0003E2  6E0B               	movwf	_MOT_3_count,c
  1904                           
  1905                           ;interrupts.c: 98: LATCbits.LC1 = !PORTCbits.RC1;
  1906  0003E4  B282               	btfsc	3970,1,c	;volatile
  1907  0003E6  D003               	goto	i2u82_40
  1908  0003E8  6A31               	clrf	??_high_isr& (0+255),c
  1909  0003EA  2A31               	incf	??_high_isr& (0+255),f,c
  1910  0003EC  D001               	goto	i2u83_48
  1911  0003EE                     i2u82_40:
  1912  0003EE  6A31               	clrf	??_high_isr& (0+255),c
  1913  0003F0                     i2u83_48:
  1914  0003F0  4631               	rlncf	??_high_isr,f,c
  1915  0003F2  508B               	movf	3979,w,c	;volatile
  1916  0003F4  1831               	xorwf	??_high_isr,w,c
  1917  0003F6  0BFD               	andlw	-3
  1918  0003F8  1831               	xorwf	??_high_isr,w,c
  1919  0003FA  6E8B               	movwf	3979,c	;volatile
  1920                           
  1921                           ;interrupts.c: 99: mot_3_steps++;
  1922  0003FC  4A05               	infsnz	_mot_3_steps,f,c
  1923  0003FE  2A06               	incf	_mot_3_steps+1,f,c
  1924                           
  1925                           ;interrupts.c: 101: if (mot_3_steps == mot_3_step_count(length, 1)) {
  1926  000400  C04E  F02B         	movff	_length,mot_3_step_count@l
  1927  000404  C04F  F02C         	movff	_length+1,mot_3_step_count@l+1
  1928  000408  0E00               	movlw	0
  1929  00040A  6E2E               	movwf	mot_3_step_count@ms+1,c
  1930  00040C  0E01               	movlw	1
  1931  00040E  6E2D               	movwf	mot_3_step_count@ms,c
  1932  000410  EC61  F003         	call	_mot_3_step_count	;wreg free
  1933  000414  5005               	movf	_mot_3_steps,w,c
  1934  000416  182B               	xorwf	?_mot_3_step_count,w,c
  1935  000418  E17C               	bnz	i2l114
  1936  00041A  5006               	movf	_mot_3_steps+1,w,c
  1937  00041C  182C               	xorwf	?_mot_3_step_count+1,w,c
  1938  00041E  A4D8               	btfss	status,2,c
  1939  000420  D078               	goto	i2l114
  1940                           
  1941                           ;interrupts.c: 103: DIR_3 = !DIR_3;
  1942  000422  5022               	movf	_DIR_3,w,c
  1943  000424  A4D8               	btfss	status,2,c
  1944  000426  D002               	goto	i2u85_40
  1945  000428  0E01               	movlw	1
  1946  00042A  D001               	goto	i2u86_40
  1947  00042C                     i2u85_40:
  1948  00042C  0E00               	movlw	0
  1949  00042E                     i2u86_40:
  1950  00042E  6E22               	movwf	_DIR_3,c
  1951                           
  1952                           ;interrupts.c: 104: mot_3_steps = 0;
  1953  000430  0E00               	movlw	0
  1954  000432  6E06               	movwf	_mot_3_steps+1,c
  1955  000434  0E00               	movlw	0
  1956  000436  6E05               	movwf	_mot_3_steps,c
  1957                           
  1958                           ;interrupts.c: 105: }
  1959                           ;interrupts.c: 106: }
  1960                           ;interrupts.c: 107: }
  1961                           ;interrupts.c: 117: } else if (PIR1bits.TMR1IF) {
  1962  000438  D06C               	goto	i2l114
  1963  00043A                     i2l87:
  1964  00043A  A09E               	btfss	3998,0,c	;volatile
  1965  00043C  D025               	goto	i2l96
  1966                           
  1967                           ;interrupts.c: 119: PIR1bits.TMR1IF = 0;
  1968  00043E  909E               	bcf	3998,0,c	;volatile
  1969                           
  1970                           ;interrupts.c: 120: TMR1 = 0xD8F0;
  1971  000440  0ED8               	movlw	216
  1972  000442  6ECF               	movwf	4047,c	;volatile
  1973  000444  0EF0               	movlw	240
  1974  000446  6ECE               	movwf	4046,c	;volatile
  1975                           
  1976                           ;interrupts.c: 121: if (MOT_3) {
  1977  000448  5023               	movf	_MOT_3,w,c
  1978  00044A  B4D8               	btfsc	status,2,c
  1979  00044C  D00C               	goto	i2l97
  1980                           
  1981                           ;interrupts.c: 123: LATCbits.LC1 = !PORTCbits.RC1;
  1982  00044E  B282               	btfsc	3970,1,c	;volatile
  1983  000450  D003               	goto	i2u89_40
  1984  000452  6A31               	clrf	??_high_isr& (0+255),c
  1985  000454  2A31               	incf	??_high_isr& (0+255),f,c
  1986  000456  D001               	goto	i2u90_48
  1987  000458                     i2u89_40:
  1988  000458  6A31               	clrf	??_high_isr& (0+255),c
  1989  00045A                     i2u90_48:
  1990  00045A  4631               	rlncf	??_high_isr,f,c
  1991  00045C  508B               	movf	3979,w,c	;volatile
  1992  00045E  1831               	xorwf	??_high_isr,w,c
  1993  000460  0BFD               	andlw	-3
  1994  000462  1831               	xorwf	??_high_isr,w,c
  1995  000464  6E8B               	movwf	3979,c	;volatile
  1996  000466                     i2l97:
  1997                           
  1998                           ;interrupts.c: 124: }
  1999                           ;interrupts.c: 128: if (MOT_2) {
  2000  000466  5021               	movf	_MOT_2,w,c
  2001  000468  B4D8               	btfsc	status,2,c
  2002  00046A  D053               	goto	i2l114
  2003                           
  2004                           ;interrupts.c: 130: LATAbits.LA5 = !PORTAbits.RA5;
  2005  00046C  BA80               	btfsc	3968,5,c	;volatile
  2006  00046E  D003               	goto	i2u92_40
  2007  000470  6A31               	clrf	??_high_isr& (0+255),c
  2008  000472  2A31               	incf	??_high_isr& (0+255),f,c
  2009  000474  D001               	goto	i2u93_48
  2010  000476                     i2u92_40:
  2011  000476  6A31               	clrf	??_high_isr& (0+255),c
  2012  000478                     i2u93_48:
  2013  000478  3A31               	swapf	??_high_isr,f,c
  2014  00047A  4631               	rlncf	??_high_isr,f,c
  2015  00047C  5089               	movf	3977,w,c	;volatile
  2016  00047E  1831               	xorwf	??_high_isr,w,c
  2017  000480  0BDF               	andlw	-33
  2018  000482  1831               	xorwf	??_high_isr,w,c
  2019  000484  6E89               	movwf	3977,c	;volatile
  2020                           
  2021                           ;interrupts.c: 131: }
  2022                           ;interrupts.c: 135: } else if (PIR1bits.RCIF) {
  2023  000486  D045               	goto	i2l114
  2024  000488                     i2l96:
  2025  000488  AA9E               	btfss	3998,5,c	;volatile
  2026  00048A  D01A               	goto	i2l100
  2027                           
  2028                           ;interrupts.c: 137: PIR1bits.RCIF = 0;
  2029  00048C  9A9E               	bcf	3998,5,c	;volatile
  2030                           
  2031                           ;interrupts.c: 138: palabra[n] = RCREG;
  2032  00048E  0E60               	movlw	low _palabra
  2033  000490  2415               	addwf	_n,w,c
  2034  000492  6ED9               	movwf	fsr2l,c
  2035  000494  0E00               	movlw	high _palabra
  2036  000496  2016               	addwfc	_n+1,w,c
  2037  000498  6EDA               	movwf	fsr2h,c
  2038  00049A  CFAE FFDF          	movff	4014,indf2	;volatile
  2039                           
  2040                           ;interrupts.c: 139: n++;
  2041  00049E  4A15               	infsnz	_n,f,c
  2042  0004A0  2A16               	incf	_n+1,f,c
  2043                           
  2044                           ;interrupts.c: 140: if (RCREG == '\n') {
  2045  0004A2  0E0A               	movlw	10
  2046  0004A4  18AE               	xorwf	4014,w,c	;volatile
  2047  0004A6  A4D8               	btfss	status,2,c
  2048  0004A8  D034               	goto	i2l114
  2049                           
  2050                           ;interrupts.c: 141: TXREG = palabra[0];
  2051  0004AA  C060  FFAD         	movff	_palabra,4013	;volatile
  2052  0004AE  A89E               	btfss	3998,4,c	;volatile
  2053  0004B0  D7FE               	goto	i2l103
  2054                           
  2055                           ;interrupts.c: 143: recibi = 1;
  2056  0004B2  0E01               	movlw	1
  2057  0004B4  6E1E               	movwf	_recibi,c
  2058                           
  2059                           ;interrupts.c: 144: n = 0;
  2060  0004B6  0E00               	movlw	0
  2061  0004B8  6E16               	movwf	_n+1,c
  2062  0004BA  0E00               	movlw	0
  2063  0004BC  6E15               	movwf	_n,c
  2064                           
  2065                           ;interrupts.c: 145: }
  2066                           ;interrupts.c: 146: } else if (PIR1bits.ADIF) {
  2067  0004BE  D029               	goto	i2l114
  2068  0004C0                     i2l100:
  2069  0004C0  AC9E               	btfss	3998,6,c	;volatile
  2070  0004C2  D006               	goto	i2l106
  2071                           
  2072                           ;interrupts.c: 148: PIR1bits.ADIF = 0;
  2073  0004C4  9C9E               	bcf	3998,6,c	;volatile
  2074                           
  2075                           ;interrupts.c: 154: ADC_value_press = ADRES;
  2076  0004C6  CFC3 F011          	movff	4035,_ADC_value_press	;volatile
  2077  0004CA  CFC4 F012          	movff	4036,_ADC_value_press+1	;volatile
  2078                           
  2079                           ;interrupts.c: 156: } else if (INTCON3bits.INT1IF) {
  2080  0004CE  D021               	goto	i2l114
  2081  0004D0                     i2l106:
  2082  0004D0  A0F0               	btfss	intcon3,0,c	;volatile
  2083  0004D2  D009               	goto	i2l108
  2084                           
  2085                           ;interrupts.c: 158: INTCON3bits.INT1IF = 0;
  2086  0004D4  90F0               	bcf	intcon3,0,c	;volatile
  2087                           
  2088                           ;interrupts.c: 160: if (winding) {
  2089  0004D6  5020               	movf	_winding,w,c
  2090  0004D8  A4D8               	btfss	status,2,c
  2091  0004DA  D00B               	goto	i2u103_40
  2092                           
  2093                           ;interrupts.c: 169: DIR_3 = !DIR_3;
  2094                           
  2095                           ;interrupts.c: 167: } else {
  2096                           
  2097                           ;interrupts.c: 165: MOT_4 = 0;
  2098                           
  2099                           ;interrupts.c: 164: MOT_3 = 0;
  2100                           
  2101                           ;interrupts.c: 163: MOT_2 = 0;
  2102                           
  2103                           ;interrupts.c: 162: MOT_1 = 0;
  2104  0004DC  5022               	movf	_DIR_3,w,c
  2105  0004DE  A4D8               	btfss	status,2,c
  2106  0004E0  D016               	goto	i2u104_40
  2107  0004E2  0E01               	movlw	1
  2108  0004E4  D015               	goto	i2u105_40
  2109  0004E6                     i2l108:
  2110  0004E6  A2F0               	btfss	intcon3,1,c	;volatile
  2111  0004E8  D014               	goto	i2l114
  2112                           
  2113                           ;interrupts.c: 174: INTCON3bits.INT2IF = 0;
  2114  0004EA  92F0               	bcf	intcon3,1,c	;volatile
  2115                           
  2116                           ;interrupts.c: 176: if (winding) {
  2117  0004EC  5020               	movf	_winding,w,c
  2118  0004EE  B4D8               	btfsc	status,2,c
  2119  0004F0  D009               	goto	i2l113
  2120  0004F2                     i2u103_40:
  2121                           
  2122                           ;interrupts.c: 178: MOT_1 = 0;
  2123  0004F2  0E00               	movlw	0
  2124  0004F4  6E24               	movwf	_MOT_1,c
  2125                           
  2126                           ;interrupts.c: 179: MOT_2 = 0;
  2127  0004F6  0E00               	movlw	0
  2128  0004F8  6E21               	movwf	_MOT_2,c
  2129                           
  2130                           ;interrupts.c: 180: MOT_3 = 0;
  2131  0004FA  0E00               	movlw	0
  2132  0004FC  6E23               	movwf	_MOT_3,c
  2133                           
  2134                           ;interrupts.c: 181: MOT_4 = 0;
  2135  0004FE  0E00               	movlw	0
  2136  000500  6E1F               	movwf	_MOT_4,c
  2137                           
  2138                           ;interrupts.c: 183: } else {
  2139  000502  D007               	goto	i2l114
  2140  000504                     i2l113:
  2141                           
  2142                           ;interrupts.c: 185: DIR_3 = !DIR_3;
  2143  000504  5022               	movf	_DIR_3,w,c
  2144  000506  A4D8               	btfss	status,2,c
  2145  000508  D002               	goto	i2u104_40
  2146  00050A  0E01               	movlw	1
  2147  00050C  D001               	goto	i2u105_40
  2148  00050E                     i2u104_40:
  2149  00050E  0E00               	movlw	0
  2150  000510                     i2u105_40:
  2151  000510  6E22               	movwf	_DIR_3,c
  2152  000512                     i2l114:
  2153  000512  C043  F056         	movff	??_high_isr+18,btemp+3
  2154  000516  C042  F055         	movff	??_high_isr+17,btemp+2
  2155  00051A  C041  F054         	movff	??_high_isr+16,btemp+1
  2156  00051E  C040  F053         	movff	??_high_isr+15,btemp
  2157  000522  C03F  FFF5         	movff	??_high_isr+14,tablat
  2158  000526  C03E  FFF8         	movff	??_high_isr+13,tblptru
  2159  00052A  C03D  FFF7         	movff	??_high_isr+12,tblptrh
  2160  00052E  C03C  FFF6         	movff	??_high_isr+11,tblptrl
  2161  000532  C03B  FFF4         	movff	??_high_isr+10,prodh
  2162  000536  C03A  FFF3         	movff	??_high_isr+9,prodl
  2163  00053A  C039  FFDA         	movff	??_high_isr+8,fsr2h
  2164  00053E  C038  FFD9         	movff	??_high_isr+7,fsr2l
  2165  000542  C037  FFE2         	movff	??_high_isr+6,fsr1h
  2166  000546  C036  FFE1         	movff	??_high_isr+5,fsr1l
  2167  00054A  C035  FFEA         	movff	??_high_isr+4,fsr0h
  2168  00054E  C034  FFE9         	movff	??_high_isr+3,fsr0l
  2169  000552  C033  FFFB         	movff	??_high_isr+2,pclatu
  2170  000556  C032  FFFA         	movff	??_high_isr+1,pclath
  2171  00055A  9253               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  2172  00055C  0011               	retfie		f
  2173  00055E                     __end_of_high_isr:
  2174                           	opt stack 0
  2175                           pclatu	equ	0xFFB
  2176                           pclath	equ	0xFFA
  2177                           tblptru	equ	0xFF8
  2178                           tblptrh	equ	0xFF7
  2179                           tblptrl	equ	0xFF6
  2180                           tablat	equ	0xFF5
  2181                           prodh	equ	0xFF4
  2182                           prodl	equ	0xFF3
  2183                           intcon	equ	0xFF2
  2184                           intcon2	equ	0xFF1
  2185                           intcon3	equ	0xFF0
  2186                           postinc0	equ	0xFEE
  2187                           fsr0h	equ	0xFEA
  2188                           fsr0l	equ	0xFE9
  2189                           wreg	equ	0xFE8
  2190                           postdec1	equ	0xFE5
  2191                           fsr1h	equ	0xFE2
  2192                           fsr1l	equ	0xFE1
  2193                           indf2	equ	0xFDF
  2194                           fsr2h	equ	0xFDA
  2195                           fsr2l	equ	0xFD9
  2196                           status	equ	0xFD8
  2197                           
  2198 ;; *************** function _mot_3_step_count *****************
  2199 ;; Defined at:
  2200 ;;		line 177 in file "main.c"
  2201 ;; Parameters:    Size  Location     Type
  2202 ;;  l               2    6[COMRAM] unsigned int 
  2203 ;;  ms              2    8[COMRAM] unsigned int 
  2204 ;; Auto vars:     Size  Location     Type
  2205 ;;		None
  2206 ;; Return value:  Size  Location     Type
  2207 ;;                  2    6[COMRAM] unsigned int 
  2208 ;; Registers used:
  2209 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2210 ;; Tracked objects:
  2211 ;;		On entry : 0/0
  2212 ;;		On exit  : 0/0
  2213 ;;		Unchanged: 0/0
  2214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2215 ;;      Params:         4       0       0       0       0       0       0       0       0
  2216 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2217 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2218 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2219 ;;Total ram usage:        6 bytes
  2220 ;; Hardware stack levels used:    1
  2221 ;; Hardware stack levels required when called:    1
  2222 ;; This function calls:
  2223 ;;		i2___wmul
  2224 ;; This function is called by:
  2225 ;;		_high_isr
  2226 ;; This function uses a non-reentrant model
  2227 ;;
  2228                           
  2229                           	psect	text8
  2230  0006C2                     __ptext8:
  2231                           	opt stack 0
  2232  0006C2                     _mot_3_step_count:
  2233                           	opt stack 27
  2234                           
  2235                           ;main.c: 179: return (ms * l) / 2;
  2236                           
  2237                           ;incstack = 0
  2238  0006C2  C02D  F025         	movff	mot_3_step_count@ms,i2___wmul@multiplier
  2239  0006C6  C02E  F026         	movff	mot_3_step_count@ms+1,i2___wmul@multiplier+1
  2240  0006CA  C02B  F027         	movff	mot_3_step_count@l,i2___wmul@multiplicand
  2241  0006CE  C02C  F028         	movff	mot_3_step_count@l+1,i2___wmul@multiplicand+1
  2242  0006D2  EC4E  F003         	call	i2___wmul	;wreg free
  2243  0006D6  90D8               	bcf	status,0,c
  2244  0006D8  3026               	rrcf	?i2___wmul+1,w,c
  2245  0006DA  6E2F               	movwf	??_mot_3_step_count& (0+255),c
  2246  0006DC  3025               	rrcf	?i2___wmul,w,c
  2247  0006DE  6E2B               	movwf	?_mot_3_step_count,c
  2248  0006E0  C02F  F02C         	movff	??_mot_3_step_count,?_mot_3_step_count+1
  2249  0006E4  0012               	return	
  2250  0006E6                     __end_of_mot_3_step_count:
  2251                           	opt stack 0
  2252                           pclatu	equ	0xFFB
  2253                           pclath	equ	0xFFA
  2254                           tblptru	equ	0xFF8
  2255                           tblptrh	equ	0xFF7
  2256                           tblptrl	equ	0xFF6
  2257                           tablat	equ	0xFF5
  2258                           prodh	equ	0xFF4
  2259                           prodl	equ	0xFF3
  2260                           intcon	equ	0xFF2
  2261                           intcon2	equ	0xFF1
  2262                           intcon3	equ	0xFF0
  2263                           postinc0	equ	0xFEE
  2264                           fsr0h	equ	0xFEA
  2265                           fsr0l	equ	0xFE9
  2266                           wreg	equ	0xFE8
  2267                           postdec1	equ	0xFE5
  2268                           fsr1h	equ	0xFE2
  2269                           fsr1l	equ	0xFE1
  2270                           indf2	equ	0xFDF
  2271                           fsr2h	equ	0xFDA
  2272                           fsr2l	equ	0xFD9
  2273                           status	equ	0xFD8
  2274                           
  2275 ;; *************** function i2___wmul *****************
  2276 ;; Defined at:
  2277 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
  2278 ;; Parameters:    Size  Location     Type
  2279 ;;  multiplier      2    0[COMRAM] unsigned int 
  2280 ;;  multiplicand    2    2[COMRAM] unsigned int 
  2281 ;; Auto vars:     Size  Location     Type
  2282 ;;  __wmul          2    4[COMRAM] unsigned int 
  2283 ;; Return value:  Size  Location     Type
  2284 ;;                  2    0[COMRAM] unsigned int 
  2285 ;; Registers used:
  2286 ;;		wreg, status,2, status,0, prodl, prodh
  2287 ;; Tracked objects:
  2288 ;;		On entry : 0/0
  2289 ;;		On exit  : 0/0
  2290 ;;		Unchanged: 0/0
  2291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2292 ;;      Params:         4       0       0       0       0       0       0       0       0
  2293 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2294 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2295 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2296 ;;Total ram usage:        6 bytes
  2297 ;; Hardware stack levels used:    1
  2298 ;; This function calls:
  2299 ;;		Nothing
  2300 ;; This function is called by:
  2301 ;;		_mot_3_step_count
  2302 ;; This function uses a non-reentrant model
  2303 ;;
  2304                           
  2305                           	psect	text9
  2306  00069C                     __ptext9:
  2307                           	opt stack 0
  2308  00069C                     i2___wmul:
  2309                           	opt stack 27
  2310                           
  2311                           ;incstack = 0
  2312  00069C  5025               	movf	i2___wmul@multiplier,w,c
  2313  00069E  0227               	mulwf	i2___wmul@multiplicand,c
  2314  0006A0  CFF3 F029          	movff	prodl,i2___wmul@product
  2315  0006A4  CFF4 F02A          	movff	prodh,i2___wmul@product+1
  2316  0006A8  5025               	movf	i2___wmul@multiplier,w,c
  2317  0006AA  0228               	mulwf	i2___wmul@multiplicand+1,c
  2318  0006AC  50F3               	movf	prodl,w,c
  2319  0006AE  262A               	addwf	i2___wmul@product+1,f,c
  2320  0006B0  5026               	movf	i2___wmul@multiplier+1,w,c
  2321  0006B2  0227               	mulwf	i2___wmul@multiplicand,c
  2322  0006B4  50F3               	movf	prodl,w,c
  2323  0006B6  262A               	addwf	i2___wmul@product+1,f,c
  2324  0006B8  C029  F025         	movff	i2___wmul@product,?i2___wmul
  2325  0006BC  C02A  F026         	movff	i2___wmul@product+1,?i2___wmul+1
  2326  0006C0  0012               	return	
  2327  0006C2                     __end_ofi2___wmul:
  2328                           	opt stack 0
  2329                           pclatu	equ	0xFFB
  2330                           pclath	equ	0xFFA
  2331                           tblptru	equ	0xFF8
  2332                           tblptrh	equ	0xFF7
  2333                           tblptrl	equ	0xFF6
  2334                           tablat	equ	0xFF5
  2335                           prodh	equ	0xFF4
  2336                           prodl	equ	0xFF3
  2337                           intcon	equ	0xFF2
  2338                           intcon2	equ	0xFF1
  2339                           intcon3	equ	0xFF0
  2340                           postinc0	equ	0xFEE
  2341                           fsr0h	equ	0xFEA
  2342                           fsr0l	equ	0xFE9
  2343                           wreg	equ	0xFE8
  2344                           postdec1	equ	0xFE5
  2345                           fsr1h	equ	0xFE2
  2346                           fsr1l	equ	0xFE1
  2347                           indf2	equ	0xFDF
  2348                           fsr2h	equ	0xFDA
  2349                           fsr2l	equ	0xFD9
  2350                           status	equ	0xFD8
  2351                           
  2352 ;; *************** function _finish *****************
  2353 ;; Defined at:
  2354 ;;		line 206 in file "main.c"
  2355 ;; Parameters:    Size  Location     Type
  2356 ;;		None
  2357 ;; Auto vars:     Size  Location     Type
  2358 ;;		None
  2359 ;; Return value:  Size  Location     Type
  2360 ;;                  1    wreg      void 
  2361 ;; Registers used:
  2362 ;;		wreg, status,2
  2363 ;; Tracked objects:
  2364 ;;		On entry : 0/0
  2365 ;;		On exit  : 0/0
  2366 ;;		Unchanged: 0/0
  2367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2368 ;;      Params:         0       0       0       0       0       0       0       0       0
  2369 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2370 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2371 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2372 ;;Total ram usage:        0 bytes
  2373 ;; Hardware stack levels used:    1
  2374 ;; This function calls:
  2375 ;;		Nothing
  2376 ;; This function is called by:
  2377 ;;		_high_isr
  2378 ;; This function uses a non-reentrant model
  2379 ;;
  2380                           
  2381                           	psect	text10
  2382  00071C                     __ptext10:
  2383                           	opt stack 0
  2384  00071C                     _finish:
  2385                           	opt stack 28
  2386                           
  2387                           ;main.c: 208: T1CONbits.TMR1ON = 1;
  2388                           
  2389                           ;incstack = 0
  2390  00071C  80CD               	bsf	4045,0,c	;volatile
  2391                           
  2392                           ;main.c: 209: T0CONbits.TMR0ON = 0;
  2393  00071E  9ED5               	bcf	4053,7,c	;volatile
  2394                           
  2395                           ;main.c: 210: MOT_1 = MOT_3 = 0;
  2396  000720  0E00               	movlw	0
  2397  000722  6E23               	movwf	_MOT_3,c
  2398  000724  C023  F024         	movff	_MOT_3,_MOT_1
  2399                           
  2400                           ;main.c: 211: winding = 0;
  2401  000728  0E00               	movlw	0
  2402  00072A  6E20               	movwf	_winding,c
  2403                           
  2404                           ;main.c: 212: finish_flag = 1;
  2405  00072C  0E01               	movlw	1
  2406  00072E  6E18               	movwf	_finish_flag,c
  2407  000730  0012               	return		;funcret
  2408  000732                     __end_of_finish:
  2409                           	opt stack 0
  2410  0000                     pclatu	equ	0xFFB
  2411                           pclath	equ	0xFFA
  2412                           tblptru	equ	0xFF8
  2413                           tblptrh	equ	0xFF7
  2414                           tblptrl	equ	0xFF6
  2415                           tablat	equ	0xFF5
  2416                           prodh	equ	0xFF4
  2417                           prodl	equ	0xFF3
  2418                           intcon	equ	0xFF2
  2419                           intcon2	equ	0xFF1
  2420                           intcon3	equ	0xFF0
  2421                           postinc0	equ	0xFEE
  2422                           fsr0h	equ	0xFEA
  2423                           fsr0l	equ	0xFE9
  2424                           wreg	equ	0xFE8
  2425                           postdec1	equ	0xFE5
  2426                           fsr1h	equ	0xFE2
  2427                           fsr1l	equ	0xFE1
  2428                           indf2	equ	0xFDF
  2429                           fsr2h	equ	0xFDA
  2430                           fsr2l	equ	0xFD9
  2431                           status	equ	0xFD8
  2432                           pclatu	equ	0xFFB
  2433                           pclath	equ	0xFFA
  2434                           tblptru	equ	0xFF8
  2435                           tblptrh	equ	0xFF7
  2436                           tblptrl	equ	0xFF6
  2437                           tablat	equ	0xFF5
  2438                           prodh	equ	0xFF4
  2439                           prodl	equ	0xFF3
  2440                           intcon	equ	0xFF2
  2441                           intcon2	equ	0xFF1
  2442                           intcon3	equ	0xFF0
  2443                           postinc0	equ	0xFEE
  2444                           fsr0h	equ	0xFEA
  2445                           fsr0l	equ	0xFE9
  2446                           wreg	equ	0xFE8
  2447                           postdec1	equ	0xFE5
  2448                           fsr1h	equ	0xFE2
  2449                           fsr1l	equ	0xFE1
  2450                           indf2	equ	0xFDF
  2451                           fsr2h	equ	0xFDA
  2452                           fsr2l	equ	0xFD9
  2453                           status	equ	0xFD8
  2454                           
  2455                           	psect	rparam
  2456  0000                     pclatu	equ	0xFFB
  2457                           pclath	equ	0xFFA
  2458                           tblptru	equ	0xFF8
  2459                           tblptrh	equ	0xFF7
  2460                           tblptrl	equ	0xFF6
  2461                           tablat	equ	0xFF5
  2462                           prodh	equ	0xFF4
  2463                           prodl	equ	0xFF3
  2464                           intcon	equ	0xFF2
  2465                           intcon2	equ	0xFF1
  2466                           intcon3	equ	0xFF0
  2467                           postinc0	equ	0xFEE
  2468                           fsr0h	equ	0xFEA
  2469                           fsr0l	equ	0xFE9
  2470                           wreg	equ	0xFE8
  2471                           postdec1	equ	0xFE5
  2472                           fsr1h	equ	0xFE2
  2473                           fsr1l	equ	0xFE1
  2474                           indf2	equ	0xFDF
  2475                           fsr2h	equ	0xFDA
  2476                           fsr2l	equ	0xFD9
  2477                           status	equ	0xFD8
  2478                           
  2479                           	psect	temp
  2480  000053                     btemp:
  2481                           	opt stack 0
  2482  000053                     	ds	1
  2483  0000                     int$flags	set	btemp
  2484  0000                     wtemp6	set	btemp+1
  2485                           pclatu	equ	0xFFB
  2486                           pclath	equ	0xFFA
  2487                           tblptru	equ	0xFF8
  2488                           tblptrh	equ	0xFF7
  2489                           tblptrl	equ	0xFF6
  2490                           tablat	equ	0xFF5
  2491                           prodh	equ	0xFF4
  2492                           prodl	equ	0xFF3
  2493                           intcon	equ	0xFF2
  2494                           intcon2	equ	0xFF1
  2495                           intcon3	equ	0xFF0
  2496                           postinc0	equ	0xFEE
  2497                           fsr0h	equ	0xFEA
  2498                           fsr0l	equ	0xFE9
  2499                           wreg	equ	0xFE8
  2500                           postdec1	equ	0xFE5
  2501                           fsr1h	equ	0xFE2
  2502                           fsr1l	equ	0xFE1
  2503                           indf2	equ	0xFDF
  2504                           fsr2h	equ	0xFDA
  2505                           fsr2l	equ	0xFD9
  2506                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        17
    BSS         69
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     31      82
    BANK0           160      8      43
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    _high_isr->_mot_3_step_count
    _mot_3_step_count->i2___wmul

Critical Paths under _main in BANK0

    _main->___wmul

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    1968
                                              6 BANK0      2     2      0
                _ConfigureOscillator
                            _InitApp
                             ___wmul
                              _reset
                             _unwind
                          _zero_mark
 ---------------------------------------------------------------------------------
 (1) _zero_mark                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _unwind                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _reset                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4    1968
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigureOscillator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _high_isr                                            19    19      0     405
                                             12 COMRAM    19    19      0
                             _finish
                   _mot_3_step_count
 ---------------------------------------------------------------------------------
 (3) _mot_3_step_count                                     6     2      4     405
                                              6 COMRAM     6     2      4
                           i2___wmul
 ---------------------------------------------------------------------------------
 (4) i2___wmul                                             6     2      4     209
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _finish                                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfigureOscillator
   _InitApp
   ___wmul
   _reset
   _unwind
   _zero_mark

 _high_isr (ROOT)
   _finish
   _mot_3_step_count
     i2___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      8      2B       5       26.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     1F      52       1       87.2%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      7D      20        0.0%
DATA                 0      0      7D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sat Aug 17 16:10:21 2019

                           _n 0015           ___wmul@multiplicand 0083                   __CFG_BORV$3 000000  
                __CFG_CP0$OFF 000000                  __CFG_CP1$OFF 000000                  __CFG_CP2$OFF 000000  
                __CFG_CP3$OFF 000000                           l200 020A                           l202 025C  
                         l203 0228                           l212 02AE                           l221 02D4  
                         l213 027E                           l205 023A                           l215 0296  
                         l219 02C6                           l196 001A                           l197 02E4  
                         l198 01CC                  __CFG_CPB$OFF 000000                           _PR2 000FCB  
                __CFG_CPD$OFF 000000                           _RX9 007D5E                           _TX9 007D66  
                __CFG_BOR$OFF 000000                           wreg 000FE8                  __CFG_LVP$OFF 000000  
                __CFG_WDT$OFF 000000                          _BRGH 007D62                          _CREN 007D5C  
                        u1400 06F0                          u1410 06F2                          _LATA 000F89  
                        _LATB 000F8A                          _LATC 000F8B                          u1425 0026  
                        u1426 0028                          u1435 0030                          u1620 0278  
                        u1436 0032                          u1445 003A                          u1710 02C0  
                        u1630 027A                          u1470 005E                          u1446 003C  
                        u1455 0044                          u1720 02C2                          u1456 0046  
                        u1465 004E                          u1650 0290                          u1466 0050  
                        u1660 0292                          u1680 02A8                          u1488 0062  
                        u1690 02AA                          u1767 02F0                          _RCIE 007CED  
                        i2l90 03B8                          i2l91 03C8                          i2l87 043A  
                        i2l96 0488                          i2l97 0466                          _TMR0 000FD6  
                        _TMR1 000FCE                          _SPEN 007D5F                          _TXIE 007CEC  
                        _TXIF 007CF4                          _TXEN 007D65                          _SYNC 007D64  
                        _main 0012                          _send 0074                          fsr0h 000FEA  
                        fsr1h 000FE2                          fsr2h 000FDA                          fsr0l 000FE9  
                        indf2 000FDF                          fsr1l 000FE1                          fsr2l 000FD9  
                        btemp 0053                          prodh 000FF4                          prodl 000FF3  
                        start 000E                 __CFG_IESO$OFF 000000                 __CFG_MCLRE$ON 000000  
                ___param_bank 000000               __end_of_InitApp 061A                 __CFG_PLLDIV$1 000000  
              __CFG_CCP2MX$ON 000000                         ?_main 0025                         _ADRES 000FC3  
                       _BRG16 007DC3                         _DIR_1 001C                         _DIR_2 001B  
                       _DIR_3 0022                         _DIR_4 001A                         i2l100 04C0  
                       i2l103 04AE                         i2l113 0504                         i2l114 0512  
                       i2l106 04D0                         i2l108 04E6                         _RCREG 000FAE  
                       _MOT_1 0024                         _MOT_2 0021                         _MOT_3 0023  
                       _MOT_4 001F                         _SPBRG 000FAF                         _PORTA 000F80  
                       _PORTB 000F81                         _PORTC 000F82                 __CFG_USBDIV$1 000000  
                       _TXREG 000FAD           _ConfigureOscillator 0742                 __CFG_PWRT$OFF 000000  
               __CFG_WRT0$OFF 000000                 __CFG_WRT1$OFF 000000                 __CFG_WRT2$OFF 000000  
               __CFG_WRT3$OFF 000000                __CFG_EBTR0$OFF 000000                __CFG_FCMEN$OFF 000000  
              __CFG_EBTR1$OFF 000000                __CFG_EBTR2$OFF 000000                __CFG_EBTR3$OFF 000000  
               __CFG_WRTB$OFF 000000                 __CFG_WRTC$OFF 000000                 __CFG_WRTD$OFF 000000  
              __CFG_EBTRB$OFF 000000                         _reset 074E                         _turns 0050  
                 _turns_count 0001                         pclath 000FFA                         tablat 000FF5  
            __end_ofi2___wmul 06C2                         status 000FD8                         wtemp6 0054  
        ?_ConfigureOscillator 0025               __initialization 061A                  __end_of_main 02FE  
                      ??_main 0087                 __activetblptr 000000                        _ADCON1 000FC1  
                      _ADCON2 000FC0                        _CCPR1L 000FBE                        ?_reset 0025  
                      _GODONE 007E11                        i2l1477 03C8                     ??_InitApp 0081  
       ??_ConfigureOscillator 0081                __CFG_XINST$OFF 000000              __end_of_high_isr 055E  
   __size_of_mot_3_step_count 0024                        ___wmul 0674                        _enable 0017  
                      _finish 071C                        _length 004E                        _recibi 001E  
                      clear_0 0658                        clear_1 0664                        _motor1 0089  
                      _motor2 007F                        _unwind 06E6                  __pdataCOMRAM 0044  
                      tblptrh 000FF7                        tblptrl 000FF6                        tblptru 000FF8  
                  __accesstop 0060       __end_of__initialization 066A               __CFG_PBADEN$OFF 000000  
               ___rparam_used 000001                __pcstackCOMRAM 0025                  __pidataBANK0 0752  
               __end_of_reset 0752                     ?i2___wmul 0025                       ??_reset 0081  
                  __pbssBANK0 0060                       ?___wmul 0081                       ?_finish 0025  
                     ?_unwind 0025                    ??i2___wmul 0029                       i2u81_41 03DA  
                     i2u82_40 03EE                       i2u90_48 045A                       i2u92_40 0476  
                     i2u83_48 03F0                       i2u76_40 038C                       i2u85_40 042C  
                     i2u93_48 0478                       i2u86_40 042E                       i2u77_48 038E  
                     i2u89_40 0458                     ?_high_isr 0025               __CFG_VREGEN$OFF 000000  
          __size_of_zero_mark 001A                       _InitApp 055E                       __Hparam 0000  
                     __Lparam 0000              _mot_3_step_count 06C2               __size_of___wmul 0028  
                     _caliber 007D               __size_of_finish 0016               __CFG_STVREN$OFF 000000  
                     __pcinit 061A                       __ramtop 0800                       __ptext0 0012  
                     __ptext1 0702                       __ptext2 06E6                       __ptext3 074E  
                     __ptext4 0674                       __ptext5 055E                       __ptext6 0742  
                     __ptext8 06C2                       __ptext9 069C                    _param_flag 0019  
                   _T0CONbits 000FD5                       _count_1 004C                       _count_2 004A  
                     _count_3 0048                       _count_4 0046               __size_of_unwind 001C  
                   _T1CONbits 000FCD                       _palabra 0060                     _T2CONbits 000FCA  
                     _winding 0020              _mot_4_step_count 007B                    ??_high_isr 0031  
              __pintcode_body 02FE          end_of_initialization 066A                       int_func 02FE  
         i2___wmul@multiplier 0025                       postdec1 000FE5                       postinc0 000FEE  
                   _PORTAbits 000F80                     _PORTCbits 000F82             __end_of_zero_mark 071C  
                   _TRISAbits 000F92                     _TRISBbits 000F93                     _TRISCbits 000F94  
 __end_of_ConfigureOscillator 074E                   _CCP1CONbits 000FBD                __end_of___wmul 069C  
               __pidataCOMRAM 0732                __end_of_finish 0732              i2___wmul@product 0029  
              __end_of_unwind 0702           start_initialization 061A             __size_ofi2___wmul 0026  
                    ??___wmul 0085                      ??_finish 0025                   __pdataBANK0 0089  
            __CFG_LPT1OSC$OFF 000000                      ??_unwind 0081                   __pbssCOMRAM 0001  
               __pcstackBANK0 0081      __end_of_mot_3_step_count 06E6             __size_of_high_isr 0556  
                    ?_InitApp 0025                     __pintcode 0008                __size_of_reset 0004  
              ___wmul@product 0085                      _LATAbits 000F89                      _LATBbits 000F8A  
                    _LATCbits 000F8B                      _IPR1bits 000F9F                      _PIE1bits 000F9D  
                    _RA0state 001D                      i2u103_40 04F2                      i2u104_40 050E  
                    i2u105_40 0510                      _PIR1bits 000F9E                      _RCONbits 000FD0  
            __CFG_WDTPS$32768 000000                   _finish_flag 0018                    _ADCON0bits 000FC2  
           ___wmul@multiplier 0081                      i2___wmul 069C                      _PWM_duty 0044  
             _ADC_value_press 0011                     _zero_flag 0052                     _zero_mark 0702  
                 _INTCON2bits 000FF1                   _INTCON3bits 000FF0                     copy_data0 0646  
            __size_of_InitApp 00BC                      __Hrparam 0000                      __Lrparam 0000  
       i2___wmul@multiplicand 0027                    ?_zero_mark 0025                      __ptext10 071C  
                    _high_isr 0008                 __size_of_main 02EC                   _mot_1_steps 0007  
                 _mot_3_steps 0005                   _mot_4_steps 0003  __size_of_ConfigureOscillator 000C  
                    _overflow 0013                      int$flags 0053            mot_3_step_count@ms 002D  
       __CFG_CPUDIV$OSC1_PLL2 000000                    _INTCONbits 000FF2                   _MOT_1_count 000F  
                 _MOT_2_count 000D                   _MOT_3_count 000B                   _MOT_4_count 0009  
           ?_mot_3_step_count 002B                      intlevel2 0000            ??_mot_3_step_count 002F  
                  _OSCCONbits 000FD3             mot_3_step_count@l 002B           __CFG_FOSC$INTOSC_EC 000000  
                 ??_zero_mark 0081  

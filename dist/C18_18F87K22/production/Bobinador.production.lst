

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sun Aug 25 18:56:30 2019

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F2550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    25                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    30                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    31                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    32  0000                     
    33                           ; Version 1.45
    34                           ; Generated 16/11/2017 GMT
    35                           ; 
    36                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution.
    50                           ; 
    51                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    52                           ;        software without specific prior written permission.
    53                           ; 
    54                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    55                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    56                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    57                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    58                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    59                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    60                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    61                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    62                           ; 
    63                           ; 
    64                           ; Code-generator required, PIC18F2550 Definitions
    65                           ; 
    66                           ; SFR Addresses
    67  0000                     
    68                           	psect	idataCOMRAM
    69  00095A                     __pidataCOMRAM:
    70                           	opt stack 0
    71                           
    72                           ;initializer for _PWM_duty
    73  00095A  0032               	dw	50
    74                           
    75                           ;initializer for _count_3
    76  00095C  0084               	dw	132
    77                           
    78                           ;initializer for _count_1
    79  00095E  0002               	dw	2
    80                           
    81                           ;initializer for _length
    82  000960  2422               	dw	9250
    83                           
    84                           ;initializer for _turns
    85  000962  0FA0               	dw	4000
    86                           
    87                           ;initializer for _zero_flag
    88  000964  01                 	db	1
    89                           
    90                           ;initializer for _MOT_4
    91  000965  01                 	db	1
    92                           
    93                           	psect	idataBANK0
    94  000972                     __pidataBANK0:
    95                           	opt stack 0
    96                           
    97                           ;initializer for _motor1
    98  000972  0001               	dw	1
    99                           
   100                           ;initializer for _count_4
   101  000974  0005               	dw	5
   102                           
   103                           ;initializer for _count_2
   104  000976  0001               	dw	1
   105  0000                     _ADRES	set	4035
   106  0000                     _TMR1	set	4046
   107  0000                     _TMR0	set	4054
   108  0000                     _T2CONbits	set	4042
   109  0000                     _CCP1CONbits	set	4029
   110  0000                     _PR2	set	4043
   111  0000                     _SPBRG	set	4015
   112  0000                     _IPR1bits	set	3999
   113  0000                     _INTCON2bits	set	4081
   114  0000                     _RCONbits	set	4048
   115  0000                     _TRISBbits	set	3987
   116  0000                     _TRISCbits	set	3988
   117  0000                     _PIE1bits	set	3997
   118  0000                     _ADCON2	set	4032
   119  0000                     _ADCON0bits	set	4034
   120  0000                     _TRISAbits	set	3986
   121  0000                     _ADCON1	set	4033
   122  0000                     _LATC	set	3979
   123  0000                     _PORTC	set	3970
   124  0000                     _LATB	set	3978
   125  0000                     _PORTB	set	3969
   126  0000                     _LATA	set	3977
   127  0000                     _PORTA	set	3968
   128  0000                     _OSCCONbits	set	4051
   129  0000                     _T0CONbits	set	4053
   130  0000                     _T1CONbits	set	4045
   131  0000                     _CCPR1L	set	4030
   132  0000                     _INTCON3bits	set	4080
   133  0000                     _TXREG	set	4013
   134  0000                     _RCREG	set	4014
   135  0000                     _PORTBbits	set	3969
   136  0000                     _LATBbits	set	3978
   137  0000                     _PIR1bits	set	3998
   138  0000                     _PORTCbits	set	3970
   139  0000                     _LATCbits	set	3979
   140  0000                     _PORTAbits	set	3968
   141  0000                     _LATAbits	set	3977
   142  0000                     _INTCONbits	set	4082
   143  0000                     _TXIE	set	31980
   144  0000                     _RCIE	set	31981
   145  0000                     _RX9	set	32094
   146  0000                     _TX9	set	32102
   147  0000                     _CREN	set	32092
   148  0000                     _TXEN	set	32101
   149  0000                     _SYNC	set	32100
   150  0000                     _SPEN	set	32095
   151  0000                     _BRG16	set	32195
   152  0000                     _BRGH	set	32098
   153  0000                     _GODONE	set	32273
   154  0000                     _TXIF	set	31988
   155                           
   156                           ; #config settings
   157  0000                     
   158                           	psect	cinit
   159  0007A4                     __pcinit:
   160                           	opt stack 0
   161  0007A4                     start_initialization:
   162                           	opt stack 0
   163  0007A4                     __initialization:
   164                           	opt stack 0
   165                           
   166                           ; Initialize objects allocated to BANK0 (6 bytes)
   167                           ; load TBLPTR registers with __pidataBANK0
   168  0007A4  0E72               	movlw	low __pidataBANK0
   169  0007A6  6EF6               	movwf	tblptrl,c
   170  0007A8  0E09               	movlw	high __pidataBANK0
   171  0007AA  6EF7               	movwf	tblptrh,c
   172  0007AC  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   173  0007AE  6EF8               	movwf	tblptru,c
   174  0007B0  EE00  F08B         	lfsr	0,__pdataBANK0
   175  0007B4  EE10 F006          	lfsr	1,6
   176  0007B8                     copy_data0:
   177  0007B8  0009               	tblrd		*+
   178  0007BA  CFF5 FFEE          	movff	tablat,postinc0
   179  0007BE  50E5               	movf	postdec1,w,c
   180  0007C0  50E1               	movf	fsr1l,w,c
   181  0007C2  E1FA               	bnz	copy_data0
   182                           
   183                           ; Initialize objects allocated to COMRAM (12 bytes)
   184                           ; load TBLPTR registers with __pidataCOMRAM
   185  0007C4  0E5A               	movlw	low __pidataCOMRAM
   186  0007C6  6EF6               	movwf	tblptrl,c
   187  0007C8  0E09               	movlw	high __pidataCOMRAM
   188  0007CA  6EF7               	movwf	tblptrh,c
   189  0007CC  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   190  0007CE  6EF8               	movwf	tblptru,c
   191  0007D0  EE00  F048         	lfsr	0,__pdataCOMRAM
   192  0007D4  EE10 F00C          	lfsr	1,12
   193  0007D8                     copy_data1:
   194  0007D8  0009               	tblrd		*+
   195  0007DA  CFF5 FFEE          	movff	tablat,postinc0
   196  0007DE  50E5               	movf	postdec1,w,c
   197  0007E0  50E1               	movf	fsr1l,w,c
   198  0007E2  E1FA               	bnz	copy_data1
   199                           
   200                           ; Clear objects allocated to BANK0 (35 bytes)
   201  0007E4  EE00  F060         	lfsr	0,__pbssBANK0
   202  0007E8  0E23               	movlw	35
   203  0007EA                     clear_0:
   204  0007EA  6AEE               	clrf	postinc0,c
   205  0007EC  06E8               	decf	wreg,f,c
   206  0007EE  E1FD               	bnz	clear_0
   207                           
   208                           ; Clear objects allocated to COMRAM (39 bytes)
   209  0007F0  EE00  F001         	lfsr	0,__pbssCOMRAM
   210  0007F4  0E27               	movlw	39
   211  0007F6                     clear_1:
   212  0007F6  6AEE               	clrf	postinc0,c
   213  0007F8  06E8               	decf	wreg,f,c
   214  0007FA  E1FD               	bnz	clear_1
   215  0007FC                     end_of_initialization:
   216                           	opt stack 0
   217  0007FC                     __end_of__initialization:
   218                           	opt stack 0
   219  0007FC  9054               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   220  0007FE  9254               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   221  000800  0E00               	movlw	low (__Lmediumconst shr (0+16))
   222  000802  6EF8               	movwf	tblptru,c
   223  000804  0100               	movlb	0
   224  000806  EF09  F000         	goto	_main	;jump to C main() function
   225                           tblptru	equ	0xFF8
   226                           tblptrh	equ	0xFF7
   227                           tblptrl	equ	0xFF6
   228                           tablat	equ	0xFF5
   229                           postinc0	equ	0xFEE
   230                           wreg	equ	0xFE8
   231                           postdec1	equ	0xFE5
   232                           fsr1l	equ	0xFE1
   233                           
   234                           	psect	bssCOMRAM
   235  000001                     __pbssCOMRAM:
   236                           	opt stack 0
   237  000001                     _caliber:
   238                           	opt stack 0
   239  000001                     	ds	2
   240  000003                     _turns_count:
   241                           	opt stack 0
   242  000003                     	ds	2
   243  000005                     _mot_4_steps:
   244                           	opt stack 0
   245  000005                     	ds	2
   246  000007                     _mot_3_steps:
   247                           	opt stack 0
   248  000007                     	ds	2
   249  000009                     _mot_1_steps:
   250                           	opt stack 0
   251  000009                     	ds	2
   252  00000B                     _MOT_3_count:
   253                           	opt stack 0
   254  00000B                     	ds	2
   255  00000D                     _MOT_1_count:
   256                           	opt stack 0
   257  00000D                     	ds	2
   258  00000F                     _ADC_value_press:
   259                           	opt stack 0
   260  00000F                     	ds	2
   261  000011                     _overflow:
   262                           	opt stack 0
   263  000011                     	ds	2
   264  000013                     _n:
   265                           	opt stack 0
   266  000013                     	ds	2
   267  000015                     _ADC_previous_value:
   268                           	opt stack 0
   269  000015                     	ds	2
   270  000017                     _steps_4:
   271                           	opt stack 0
   272  000017                     	ds	2
   273  000019                     _unwind_flag:
   274                           	opt stack 0
   275  000019                     	ds	1
   276  00001A                     _enable:
   277                           	opt stack 0
   278  00001A                     	ds	1
   279  00001B                     _finish_flag:
   280                           	opt stack 0
   281  00001B                     	ds	1
   282  00001C                     _param_flag:
   283                           	opt stack 0
   284  00001C                     	ds	1
   285  00001D                     _DIR_4:
   286                           	opt stack 0
   287  00001D                     	ds	1
   288  00001E                     _DIR_2:
   289                           	opt stack 0
   290  00001E                     	ds	1
   291  00001F                     _DIR_1:
   292                           	opt stack 0
   293  00001F                     	ds	1
   294  000020                     _RA0state:
   295                           	opt stack 0
   296  000020                     	ds	1
   297  000021                     _recibi:
   298                           	opt stack 0
   299  000021                     	ds	1
   300  000022                     _winding:
   301                           	opt stack 0
   302  000022                     	ds	1
   303  000023                     _move_4:
   304                           	opt stack 0
   305  000023                     	ds	1
   306  000024                     _MOT_2:
   307                           	opt stack 0
   308  000024                     	ds	1
   309  000025                     _DIR_3:
   310                           	opt stack 0
   311  000025                     	ds	1
   312  000026                     _MOT_3:
   313                           	opt stack 0
   314  000026                     	ds	1
   315  000027                     _MOT_1:
   316                           	opt stack 0
   317  000027                     	ds	1
   318                           tblptru	equ	0xFF8
   319                           tblptrh	equ	0xFF7
   320                           tblptrl	equ	0xFF6
   321                           tablat	equ	0xFF5
   322                           postinc0	equ	0xFEE
   323                           wreg	equ	0xFE8
   324                           postdec1	equ	0xFE5
   325                           fsr1l	equ	0xFE1
   326                           
   327                           	psect	dataCOMRAM
   328  000048                     __pdataCOMRAM:
   329                           	opt stack 0
   330  000048                     _PWM_duty:
   331                           	opt stack 0
   332  000048                     	ds	2
   333  00004A                     _count_3:
   334                           	opt stack 0
   335  00004A                     	ds	2
   336  00004C                     _count_1:
   337                           	opt stack 0
   338  00004C                     	ds	2
   339  00004E                     _length:
   340                           	opt stack 0
   341  00004E                     	ds	2
   342  000050                     _turns:
   343                           	opt stack 0
   344  000050                     	ds	2
   345  000052                     _zero_flag:
   346                           	opt stack 0
   347  000052                     	ds	1
   348  000053                     _MOT_4:
   349                           	opt stack 0
   350  000053                     	ds	1
   351                           tblptru	equ	0xFF8
   352                           tblptrh	equ	0xFF7
   353                           tblptrl	equ	0xFF6
   354                           tablat	equ	0xFF5
   355                           postinc0	equ	0xFEE
   356                           wreg	equ	0xFE8
   357                           postdec1	equ	0xFE5
   358                           fsr1l	equ	0xFE1
   359                           
   360                           	psect	bssBANK0
   361  000060                     __pbssBANK0:
   362                           	opt stack 0
   363  000060                     _palabra:
   364                           	opt stack 0
   365  000060                     	ds	20
   366  000074                     _send:
   367                           	opt stack 0
   368  000074                     	ds	7
   369  00007B                     _mot_4_step_count:
   370                           	opt stack 0
   371  00007B                     	ds	2
   372  00007D                     _motor2:
   373                           	opt stack 0
   374  00007D                     	ds	2
   375  00007F                     _MOT_4_count:
   376                           	opt stack 0
   377  00007F                     	ds	2
   378  000081                     _MOT_2_count:
   379                           	opt stack 0
   380  000081                     	ds	2
   381                           tblptru	equ	0xFF8
   382                           tblptrh	equ	0xFF7
   383                           tblptrl	equ	0xFF6
   384                           tablat	equ	0xFF5
   385                           postinc0	equ	0xFEE
   386                           wreg	equ	0xFE8
   387                           postdec1	equ	0xFE5
   388                           fsr1l	equ	0xFE1
   389                           
   390                           	psect	dataBANK0
   391  00008B                     __pdataBANK0:
   392                           	opt stack 0
   393  00008B                     _motor1:
   394                           	opt stack 0
   395  00008B                     	ds	2
   396  00008D                     _count_4:
   397                           	opt stack 0
   398  00008D                     	ds	2
   399  00008F                     _count_2:
   400                           	opt stack 0
   401  00008F                     	ds	2
   402                           tblptru	equ	0xFF8
   403                           tblptrh	equ	0xFF7
   404                           tblptrl	equ	0xFF6
   405                           tablat	equ	0xFF5
   406                           postinc0	equ	0xFEE
   407                           wreg	equ	0xFE8
   408                           postdec1	equ	0xFE5
   409                           fsr1l	equ	0xFE1
   410                           
   411                           	psect	cstackBANK0
   412  000083                     __pcstackBANK0:
   413                           	opt stack 0
   414  000083                     ?___wmul:
   415                           	opt stack 0
   416  000083                     trans_Char@out:
   417                           	opt stack 0
   418  000083                     speed_select@var:
   419                           	opt stack 0
   420  000083                     ___wmul@multiplier:
   421                           	opt stack 0
   422                           
   423                           ; 2 bytes @ 0x0
   424  000083                     	ds	2
   425  000085                     ??_speed_select:
   426  000085                     ___wmul@multiplicand:
   427                           	opt stack 0
   428                           
   429                           ; 2 bytes @ 0x2
   430  000085                     	ds	2
   431  000087                     ___wmul@product:
   432                           	opt stack 0
   433                           
   434                           ; 2 bytes @ 0x4
   435  000087                     	ds	2
   436  000089                     ??_main:
   437                           
   438                           ; 1 bytes @ 0x6
   439  000089                     	ds	2
   440                           tblptru	equ	0xFF8
   441                           tblptrh	equ	0xFF7
   442                           tblptrl	equ	0xFF6
   443                           tablat	equ	0xFF5
   444                           postinc0	equ	0xFEE
   445                           wreg	equ	0xFE8
   446                           postdec1	equ	0xFE5
   447                           fsr1l	equ	0xFE1
   448                           
   449                           	psect	cstackCOMRAM
   450  000028                     __pcstackCOMRAM:
   451                           	opt stack 0
   452  000028                     ?i2___wmul:
   453                           	opt stack 0
   454  000028                     i2___wmul@multiplier:
   455                           	opt stack 0
   456                           
   457                           ; 2 bytes @ 0x0
   458  000028                     	ds	2
   459  00002A                     i2___wmul@multiplicand:
   460                           	opt stack 0
   461                           
   462                           ; 2 bytes @ 0x2
   463  00002A                     	ds	2
   464  00002C                     i2___wmul@product:
   465                           	opt stack 0
   466                           
   467                           ; 2 bytes @ 0x4
   468  00002C                     	ds	2
   469  00002E                     ?_mot_3_step_count:
   470                           	opt stack 0
   471  00002E                     mot_3_step_count@l:
   472                           	opt stack 0
   473                           
   474                           ; 2 bytes @ 0x6
   475  00002E                     	ds	2
   476  000030                     mot_3_step_count@ms:
   477                           	opt stack 0
   478                           
   479                           ; 2 bytes @ 0x8
   480  000030                     	ds	2
   481  000032                     ??_mot_3_step_count:
   482                           
   483                           ; 1 bytes @ 0xA
   484  000032                     	ds	2
   485  000034                     ??_high_isr:
   486                           
   487                           ; 1 bytes @ 0xC
   488  000034                     	ds	20
   489                           tblptru	equ	0xFF8
   490                           tblptrh	equ	0xFF7
   491                           tblptrl	equ	0xFF6
   492                           tablat	equ	0xFF5
   493                           postinc0	equ	0xFEE
   494                           wreg	equ	0xFE8
   495                           postdec1	equ	0xFE5
   496                           fsr1l	equ	0xFE1
   497                           
   498 ;;
   499 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   500 ;;
   501 ;; *************** function _main *****************
   502 ;; Defined at:
   503 ;;		line 90 in file "main.c"
   504 ;; Parameters:    Size  Location     Type
   505 ;;		None
   506 ;; Auto vars:     Size  Location     Type
   507 ;;		None
   508 ;; Return value:  Size  Location     Type
   509 ;;                  1    wreg      void 
   510 ;; Registers used:
   511 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   512 ;; Tracked objects:
   513 ;;		On entry : 0/0
   514 ;;		On exit  : 0/0
   515 ;;		Unchanged: 0/0
   516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   517 ;;      Params:         0       0       0       0       0       0       0       0       0
   518 ;;      Locals:         0       0       0       0       0       0       0       0       0
   519 ;;      Temps:          0       2       0       0       0       0       0       0       0
   520 ;;      Totals:         0       2       0       0       0       0       0       0       0
   521 ;;Total ram usage:        2 bytes
   522 ;; Hardware stack levels required when called:    4
   523 ;; This function calls:
   524 ;;		_ConfigureOscillator
   525 ;;		_InitApp
   526 ;;		___wmul
   527 ;;		_finish
   528 ;;		_reset
   529 ;;		_speed_select
   530 ;;		_trans_Char
   531 ;;		_unwind
   532 ;;		_zero_mark
   533 ;; This function is called by:
   534 ;;		Startup code after reset
   535 ;; This function uses a non-reentrant model
   536 ;;
   537                           
   538                           	psect	text0
   539  000012                     __ptext0:
   540                           	opt stack 0
   541  000012                     _main:
   542                           	opt stack 27
   543                           
   544                           ;main.c: 92: ConfigureOscillator();
   545                           
   546                           ;incstack = 0
   547  000012  ECB3  F004         	call	_ConfigureOscillator	;wreg free
   548                           
   549                           ;main.c: 95: InitApp();
   550  000016  EC74  F003         	call	_InitApp	;wreg free
   551  00001A                     
   552                           ;main.c: 98: CCPR1L = PWM_duty;
   553  00001A  C048  FFBE         	movff	_PWM_duty,4030	;volatile
   554                           
   555                           ;main.c: 100: LATAbits.LA2 = DIR_1;
   556  00001E  B01F               	btfsc	_DIR_1,0,c
   557  000020  D002               	bra	u1815
   558  000022  9489               	bcf	3977,2,c	;volatile
   559  000024  D001               	bra	u1816
   560  000026                     u1815:
   561  000026  8489               	bsf	3977,2,c	;volatile
   562  000028                     u1816:
   563                           
   564                           ;main.c: 101: LATAbits.LA4 = DIR_2;
   565  000028  B01E               	btfsc	_DIR_2,0,c
   566  00002A  D002               	bra	u1825
   567  00002C  9889               	bcf	3977,4,c	;volatile
   568  00002E  D001               	bra	u1826
   569  000030                     u1825:
   570  000030  8889               	bsf	3977,4,c	;volatile
   571  000032                     u1826:
   572                           
   573                           ;main.c: 102: LATCbits.LC0 = DIR_3;
   574  000032  B025               	btfsc	_DIR_3,0,c
   575  000034  D002               	bra	u1835
   576  000036  908B               	bcf	3979,0,c	;volatile
   577  000038  D001               	bra	u1836
   578  00003A                     u1835:
   579  00003A  808B               	bsf	3979,0,c	;volatile
   580  00003C                     u1836:
   581                           
   582                           ;main.c: 103: LATBbits.LB7 = DIR_4;
   583  00003C  B01D               	btfsc	_DIR_4,0,c
   584  00003E  D002               	bra	u1845
   585  000040  9E8A               	bcf	3978,7,c	;volatile
   586  000042  D001               	bra	u1846
   587  000044                     u1845:
   588  000044  8E8A               	bsf	3978,7,c	;volatile
   589  000046                     u1846:
   590                           
   591                           ;main.c: 104: LATBbits.LB5 = enable;
   592  000046  B01A               	btfsc	_enable,0,c
   593  000048  D002               	bra	u1855
   594  00004A  9A8A               	bcf	3978,5,c	;volatile
   595  00004C  D001               	bra	u1856
   596  00004E                     u1855:
   597  00004E  8A8A               	bsf	3978,5,c	;volatile
   598  000050                     u1856:
   599                           
   600                           ;main.c: 105: LATBbits.LB4 = !enable;
   601  000050  501A               	movf	_enable,w,c
   602  000052  A4D8               	btfss	status,2,c
   603  000054  D004               	goto	u1860
   604  000056  0100               	movlb	0	; () banked
   605  000058  6B89               	clrf	??_main& (0+255),b
   606  00005A  2B89               	incf	??_main& (0+255),f,b
   607  00005C  D002               	goto	u1878
   608  00005E                     u1860:
   609  00005E  0100               	movlb	0	; () banked
   610  000060  6B89               	clrf	??_main& (0+255),b
   611  000062                     u1878:
   612  000062  3B89               	swapf	??_main& (0+255),f,b
   613  000064  508A               	movf	3978,w,c	;volatile
   614  000066  1989               	xorwf	??_main& (0+255),w,b
   615  000068  0BEF               	andlw	-17
   616  00006A  1989               	xorwf	??_main& (0+255),w,b
   617  00006C  6E8A               	movwf	3978,c	;volatile
   618                           
   619                           ; BSR set to: 0
   620                           ;main.c: 107: if (recibi == 1) {
   621  00006E  0421               	decf	_recibi,w,c
   622  000070  A4D8               	btfss	status,2,c
   623  000072  D1C4               	goto	l228
   624                           
   625                           ; BSR set to: 0
   626                           ;main.c: 109: recibi = 0;
   627  000074  0E00               	movlw	0
   628  000076  6E21               	movwf	_recibi,c
   629                           
   630                           ; BSR set to: 0
   631                           ;main.c: 111: if (palabra[0] == 'A') {
   632  000078  0E41               	movlw	65
   633  00007A  1960               	xorwf	_palabra& (0+255),w,b
   634  00007C  A4D8               	btfss	status,2,c
   635  00007E  D09B               	goto	l229
   636                           
   637                           ; BSR set to: 0
   638                           ;main.c: 113: caliber = ((palabra[1] - 48) * 10) + ((palabra[2] - 48));
   639  000080  0ED0               	movlw	208
   640  000082  2561               	addwf	(_palabra+1)& (0+255),w,b
   641  000084  6F83               	movwf	___wmul@multiplier& (0+255),b
   642  000086  6B84               	clrf	(___wmul@multiplier+1)& (0+255),b
   643  000088  0EFF               	movlw	255
   644  00008A  2384               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   645  00008C  0E00               	movlw	0
   646  00008E  6F86               	movwf	(___wmul@multiplicand+1)& (0+255),b
   647  000090  0E0A               	movlw	10
   648  000092  6F85               	movwf	___wmul@multiplicand& (0+255),b
   649  000094  EC2E  F004         	call	___wmul	;wreg free
   650  000098  0100               	movlb	0	; () banked
   651  00009A  5162               	movf	(_palabra+2)& (0+255),w,b
   652  00009C  6F89               	movwf	??_main& (0+255),b
   653  00009E  6B8A               	clrf	(??_main+1)& (0+255),b
   654  0000A0  5183               	movf	?___wmul& (0+255),w,b
   655  0000A2  2789               	addwf	??_main& (0+255),f,b
   656  0000A4  5184               	movf	(?___wmul+1)& (0+255),w,b
   657  0000A6  238A               	addwfc	(??_main+1)& (0+255),f,b
   658  0000A8  0ED0               	movlw	208
   659  0000AA  2589               	addwf	??_main& (0+255),w,b
   660  0000AC  6E01               	movwf	_caliber,c
   661  0000AE  0EFF               	movlw	255
   662  0000B0  218A               	addwfc	(??_main+1)& (0+255),w,b
   663  0000B2  6E02               	movwf	_caliber+1,c
   664                           
   665                           ;main.c: 114: length = ((palabra[3] - 48) * 1000) + ((palabra[4] - 48) * 100) + ((palabr
      +                          a[5] - 48) * 10) + ((palabra[6] - 48));
   666  0000B4  0ED0               	movlw	208
   667  0000B6  2563               	addwf	(_palabra+3)& (0+255),w,b
   668  0000B8  6F83               	movwf	___wmul@multiplier& (0+255),b
   669  0000BA  6B84               	clrf	(___wmul@multiplier+1)& (0+255),b
   670  0000BC  0EFF               	movlw	255
   671  0000BE  2384               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   672  0000C0  0E03               	movlw	3
   673  0000C2  6F86               	movwf	(___wmul@multiplicand+1)& (0+255),b
   674  0000C4  0EE8               	movlw	232
   675  0000C6  6F85               	movwf	___wmul@multiplicand& (0+255),b
   676  0000C8  EC2E  F004         	call	___wmul	;wreg free
   677  0000CC  0100               	movlb	0	; () banked
   678  0000CE  5166               	movf	(_palabra+6)& (0+255),w,b
   679  0000D0  6F89               	movwf	??_main& (0+255),b
   680  0000D2  6B8A               	clrf	(??_main+1)& (0+255),b
   681  0000D4  5183               	movf	?___wmul& (0+255),w,b
   682  0000D6  2789               	addwf	??_main& (0+255),f,b
   683  0000D8  5184               	movf	(?___wmul+1)& (0+255),w,b
   684  0000DA  238A               	addwfc	(??_main+1)& (0+255),f,b
   685  0000DC  0ED0               	movlw	208
   686  0000DE  2564               	addwf	(_palabra+4)& (0+255),w,b
   687  0000E0  6F83               	movwf	___wmul@multiplier& (0+255),b
   688  0000E2  6B84               	clrf	(___wmul@multiplier+1)& (0+255),b
   689  0000E4  0EFF               	movlw	255
   690  0000E6  2384               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   691  0000E8  0E00               	movlw	0
   692  0000EA  6F86               	movwf	(___wmul@multiplicand+1)& (0+255),b
   693  0000EC  0E64               	movlw	100
   694  0000EE  6F85               	movwf	___wmul@multiplicand& (0+255),b
   695  0000F0  EC2E  F004         	call	___wmul	;wreg free
   696  0000F4  0100               	movlb	0	; () banked
   697  0000F6  5183               	movf	?___wmul& (0+255),w,b
   698  0000F8  2789               	addwf	??_main& (0+255),f,b
   699  0000FA  5184               	movf	(?___wmul+1)& (0+255),w,b
   700  0000FC  238A               	addwfc	(??_main+1)& (0+255),f,b
   701  0000FE  0ED0               	movlw	208
   702  000100  2565               	addwf	(_palabra+5)& (0+255),w,b
   703  000102  6F83               	movwf	___wmul@multiplier& (0+255),b
   704  000104  6B84               	clrf	(___wmul@multiplier+1)& (0+255),b
   705  000106  0EFF               	movlw	255
   706  000108  2384               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   707  00010A  0E00               	movlw	0
   708  00010C  6F86               	movwf	(___wmul@multiplicand+1)& (0+255),b
   709  00010E  0E0A               	movlw	10
   710  000110  6F85               	movwf	___wmul@multiplicand& (0+255),b
   711  000112  EC2E  F004         	call	___wmul	;wreg free
   712  000116  0100               	movlb	0	; () banked
   713  000118  5183               	movf	?___wmul& (0+255),w,b
   714  00011A  2789               	addwf	??_main& (0+255),f,b
   715  00011C  5184               	movf	(?___wmul+1)& (0+255),w,b
   716  00011E  238A               	addwfc	(??_main+1)& (0+255),f,b
   717  000120  0ED0               	movlw	208
   718  000122  2589               	addwf	??_main& (0+255),w,b
   719  000124  6E4E               	movwf	_length,c
   720  000126  0EFF               	movlw	255
   721  000128  218A               	addwfc	(??_main+1)& (0+255),w,b
   722  00012A  6E4F               	movwf	_length+1,c
   723                           
   724                           ;main.c: 115: turns = ((palabra[7] - 48) * 1000) + ((palabra[8] - 48) * 100) + ((palabra
      +                          [9] - 48) * 10) + ((palabra[10] - 48));
   725  00012C  0ED0               	movlw	208
   726  00012E  2567               	addwf	(_palabra+7)& (0+255),w,b
   727  000130  6F83               	movwf	___wmul@multiplier& (0+255),b
   728  000132  6B84               	clrf	(___wmul@multiplier+1)& (0+255),b
   729  000134  0EFF               	movlw	255
   730  000136  2384               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   731  000138  0E03               	movlw	3
   732  00013A  6F86               	movwf	(___wmul@multiplicand+1)& (0+255),b
   733  00013C  0EE8               	movlw	232
   734  00013E  6F85               	movwf	___wmul@multiplicand& (0+255),b
   735  000140  EC2E  F004         	call	___wmul	;wreg free
   736  000144  0100               	movlb	0	; () banked
   737  000146  516A               	movf	(_palabra+10)& (0+255),w,b
   738  000148  6F89               	movwf	??_main& (0+255),b
   739  00014A  6B8A               	clrf	(??_main+1)& (0+255),b
   740  00014C  5183               	movf	?___wmul& (0+255),w,b
   741  00014E  2789               	addwf	??_main& (0+255),f,b
   742  000150  5184               	movf	(?___wmul+1)& (0+255),w,b
   743  000152  238A               	addwfc	(??_main+1)& (0+255),f,b
   744  000154  0ED0               	movlw	208
   745  000156  2568               	addwf	(_palabra+8)& (0+255),w,b
   746  000158  6F83               	movwf	___wmul@multiplier& (0+255),b
   747  00015A  6B84               	clrf	(___wmul@multiplier+1)& (0+255),b
   748  00015C  0EFF               	movlw	255
   749  00015E  2384               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   750  000160  0E00               	movlw	0
   751  000162  6F86               	movwf	(___wmul@multiplicand+1)& (0+255),b
   752  000164  0E64               	movlw	100
   753  000166  6F85               	movwf	___wmul@multiplicand& (0+255),b
   754  000168  EC2E  F004         	call	___wmul	;wreg free
   755  00016C  0100               	movlb	0	; () banked
   756  00016E  5183               	movf	?___wmul& (0+255),w,b
   757  000170  2789               	addwf	??_main& (0+255),f,b
   758  000172  5184               	movf	(?___wmul+1)& (0+255),w,b
   759  000174  238A               	addwfc	(??_main+1)& (0+255),f,b
   760  000176  0ED0               	movlw	208
   761  000178  2569               	addwf	(_palabra+9)& (0+255),w,b
   762  00017A  6F83               	movwf	___wmul@multiplier& (0+255),b
   763  00017C  6B84               	clrf	(___wmul@multiplier+1)& (0+255),b
   764  00017E  0EFF               	movlw	255
   765  000180  2384               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   766  000182  0E00               	movlw	0
   767  000184  6F86               	movwf	(___wmul@multiplicand+1)& (0+255),b
   768  000186  0E0A               	movlw	10
   769  000188  6F85               	movwf	___wmul@multiplicand& (0+255),b
   770  00018A  EC2E  F004         	call	___wmul	;wreg free
   771  00018E  0100               	movlb	0	; () banked
   772  000190  5183               	movf	?___wmul& (0+255),w,b
   773  000192  2789               	addwf	??_main& (0+255),f,b
   774  000194  5184               	movf	(?___wmul+1)& (0+255),w,b
   775  000196  238A               	addwfc	(??_main+1)& (0+255),f,b
   776  000198  0ED0               	movlw	208
   777  00019A  2589               	addwf	??_main& (0+255),w,b
   778  00019C  6E50               	movwf	_turns,c
   779  00019E  0EFF               	movlw	255
   780  0001A0  218A               	addwfc	(??_main+1)& (0+255),w,b
   781  0001A2  6E51               	movwf	_turns+1,c
   782                           
   783                           ; BSR set to: 0
   784                           ;main.c: 117: param_flag = 1;
   785  0001A4  0E01               	movlw	1
   786  0001A6  6E1C               	movwf	_param_flag,c
   787                           
   788                           ; BSR set to: 0
   789                           ;main.c: 118: speed_select(caliber);
   790  0001A8  C001  F083         	movff	_caliber,speed_select@var
   791  0001AC  C002  F084         	movff	_caliber+1,speed_select@var+1
   792  0001B0  EC05  F004         	call	_speed_select	;wreg free
   793                           
   794                           ;main.c: 119: } else if (palabra[0] == 'B') {
   795  0001B4  D732               	goto	l227
   796  0001B6                     l229:
   797  0001B6  0E42               	movlw	66
   798  0001B8  0100               	movlb	0	; () banked
   799  0001BA  1960               	xorwf	_palabra& (0+255),w,b
   800  0001BC  A4D8               	btfss	status,2,c
   801  0001BE  D01B               	goto	l231
   802                           
   803                           ; BSR set to: 0
   804                           ;main.c: 121: PWM_duty = ((palabra[1] - 48) * 10) + ((palabra[2] - 48));
   805  0001C0  0ED0               	movlw	208
   806  0001C2  2561               	addwf	(_palabra+1)& (0+255),w,b
   807  0001C4  6F83               	movwf	___wmul@multiplier& (0+255),b
   808  0001C6  6B84               	clrf	(___wmul@multiplier+1)& (0+255),b
   809  0001C8  0EFF               	movlw	255
   810  0001CA  2384               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   811  0001CC  0E00               	movlw	0
   812  0001CE  6F86               	movwf	(___wmul@multiplicand+1)& (0+255),b
   813  0001D0  0E0A               	movlw	10
   814  0001D2  6F85               	movwf	___wmul@multiplicand& (0+255),b
   815  0001D4  EC2E  F004         	call	___wmul	;wreg free
   816  0001D8  0100               	movlb	0	; () banked
   817  0001DA  5162               	movf	(_palabra+2)& (0+255),w,b
   818  0001DC  6F89               	movwf	??_main& (0+255),b
   819  0001DE  6B8A               	clrf	(??_main+1)& (0+255),b
   820  0001E0  5183               	movf	?___wmul& (0+255),w,b
   821  0001E2  2789               	addwf	??_main& (0+255),f,b
   822  0001E4  5184               	movf	(?___wmul+1)& (0+255),w,b
   823  0001E6  238A               	addwfc	(??_main+1)& (0+255),f,b
   824  0001E8  0ED0               	movlw	208
   825  0001EA  2589               	addwf	??_main& (0+255),w,b
   826  0001EC  6E48               	movwf	_PWM_duty,c
   827  0001EE  0EFF               	movlw	255
   828  0001F0  218A               	addwfc	(??_main+1)& (0+255),w,b
   829  0001F2  6E49               	movwf	_PWM_duty+1,c
   830                           
   831                           ;main.c: 122: } else if ((palabra[0] == 'D') && (zero_flag)) {
   832  0001F4  D712               	goto	l227
   833  0001F6                     l231:
   834                           
   835                           ; BSR set to: 0
   836                           
   837                           ; BSR set to: 0
   838  0001F6  0E44               	movlw	68
   839  0001F8  1960               	xorwf	_palabra& (0+255),w,b
   840  0001FA  A4D8               	btfss	status,2,c
   841  0001FC  D020               	goto	l233
   842                           
   843                           ; BSR set to: 0
   844  0001FE  5052               	movf	_zero_flag,w,c
   845  000200  B4D8               	btfsc	status,2,c
   846  000202  D01D               	goto	l233
   847                           
   848                           ; BSR set to: 0
   849                           ;main.c: 124: if (palabra[1] == '0') {
   850  000204  0E30               	movlw	48
   851  000206  1961               	xorwf	(_palabra+1)& (0+255),w,b
   852  000208  A4D8               	btfss	status,2,c
   853  00020A  D004               	goto	l234
   854  00020C                     u1930:
   855                           
   856                           ; BSR set to: 0
   857                           ;main.c: 126: MOT_3 = 1;
   858  00020C  0E01               	movlw	1
   859  00020E  6E26               	movwf	_MOT_3,c
   860                           
   861                           ;main.c: 127: DIR_3 = 0;
   862  000210  0E00               	movlw	0
   863  000212  D038               	goto	L3
   864  000214                     l234:
   865                           
   866                           ; BSR set to: 0
   867                           
   868                           ; BSR set to: 0
   869  000214  0E31               	movlw	49
   870  000216  1961               	xorwf	(_palabra+1)& (0+255),w,b
   871  000218  B4D8               	btfsc	status,2,c
   872  00021A  D031               	goto	L6
   873                           
   874                           ; BSR set to: 0
   875                           
   876                           ; BSR set to: 0
   877                           
   878                           ;main.c: 132: } else if (palabra[1] == '2') {
   879                           
   880                           ;main.c: 131: DIR_3 = 1;
   881                           
   882                           ; BSR set to: 0
   883                           ;main.c: 130: MOT_3 = 1;
   884  00021C  0E32               	movlw	50
   885  00021E  1961               	xorwf	(_palabra+1)& (0+255),w,b
   886  000220  B4D8               	btfsc	status,2,c
   887  000222  D06D               	goto	u2170
   888                           
   889                           ; BSR set to: 0
   890                           
   891                           ; BSR set to: 0
   892                           
   893                           ;main.c: 135: } else if (palabra[1] == '3') {
   894                           
   895                           ; BSR set to: 0
   896                           ;main.c: 134: MOT_3 = 0;
   897  000224  0E33               	movlw	51
   898  000226  1961               	xorwf	(_palabra+1)& (0+255),w,b
   899  000228  A4D8               	btfss	status,2,c
   900  00022A  D6F7               	goto	l227
   901                           
   902                           ; BSR set to: 0
   903                           ;main.c: 137: if ((MOT_3 == 0) && (param_flag)) {
   904  00022C  5026               	movf	_MOT_3,w,c
   905  00022E  A4D8               	btfss	status,2,c
   906  000230  D6F4               	goto	l227
   907                           
   908                           ; BSR set to: 0
   909  000232  501C               	movf	_param_flag,w,c
   910  000234  B4D8               	btfsc	status,2,c
   911  000236  D6F1               	goto	l227
   912                           
   913                           ; BSR set to: 0
   914                           ;main.c: 139: zero_mark();
   915  000238  EC99  F004         	call	_zero_mark	;wreg free
   916                           
   917                           ;main.c: 140: }
   918                           ;main.c: 141: }
   919                           ;main.c: 142: } else if (palabra[0] == 'Q') {
   920  00023C  D6EE               	goto	l227
   921  00023E                     l233:
   922  00023E  0E51               	movlw	81
   923  000240  0100               	movlb	0	; () banked
   924  000242  1960               	xorwf	_palabra& (0+255),w,b
   925  000244  A4D8               	btfss	status,2,c
   926  000246  D00B               	goto	l243
   927                           
   928                           ; BSR set to: 0
   929                           ;main.c: 144: if (winding) {
   930  000248  5022               	movf	_winding,w,c
   931  00024A  B4D8               	btfsc	status,2,c
   932  00024C  D004               	goto	l244
   933                           
   934                           ; BSR set to: 0
   935                           ;main.c: 145: trans_Char('N');
   936  00024E  0E4E               	movlw	78
   937  000250  ECA6  F004         	call	_trans_Char
   938                           
   939                           ;main.c: 146: } else {
   940  000254  D6E2               	goto	l227
   941  000256                     l244:
   942                           
   943                           ;main.c: 147: trans_Char('Y');
   944  000256  0E59               	movlw	89
   945  000258  ECA6  F004         	call	_trans_Char
   946                           
   947                           ;main.c: 148: }
   948                           ;main.c: 149: }
   949  00025C  D6DE               	goto	l227
   950  00025E                     l243:
   951                           
   952                           ;main.c: 150: else if ((palabra[0] == 'D') && (unwind_flag)) {
   953  00025E  0E44               	movlw	68
   954  000260  0100               	movlb	0	; () banked
   955  000262  1960               	xorwf	_palabra& (0+255),w,b
   956  000264  A4D8               	btfss	status,2,c
   957  000266  D01B               	goto	l247
   958                           
   959                           ; BSR set to: 0
   960  000268  5019               	movf	_unwind_flag,w,c
   961  00026A  B4D8               	btfsc	status,2,c
   962  00026C  D018               	goto	l247
   963                           
   964                           ; BSR set to: 0
   965                           ;main.c: 152: if (palabra[1] == '0') {
   966  00026E  0E30               	movlw	48
   967  000270  1961               	xorwf	(_palabra+1)& (0+255),w,b
   968  000272  B4D8               	btfsc	status,2,c
   969  000274  D7CB               	goto	u1930
   970                           
   971                           ; BSR set to: 0
   972                           
   973                           ; BSR set to: 0
   974                           
   975                           ;main.c: 156: } else if (palabra[1] == '1') {
   976                           
   977                           ;main.c: 155: DIR_3 = 0;
   978                           
   979                           ; BSR set to: 0
   980                           ;main.c: 154: MOT_3 = 1;
   981  000276  0E31               	movlw	49
   982  000278  1961               	xorwf	(_palabra+1)& (0+255),w,b
   983  00027A  A4D8               	btfss	status,2,c
   984  00027C  D005               	goto	l250
   985  00027E                     L6:
   986                           
   987                           ; BSR set to: 0
   988                           ;main.c: 158: MOT_3 = 1;
   989  00027E  0E01               	movlw	1
   990  000280  6E26               	movwf	_MOT_3,c
   991                           
   992                           ;main.c: 159: DIR_3 = 1;
   993  000282  0E01               	movlw	1
   994  000284                     L3:
   995  000284  6E25               	movwf	_DIR_3,c
   996                           
   997                           ;main.c: 160: } else if (palabra[1] == '2') {
   998  000286  D6C9               	goto	l227
   999  000288                     l250:
  1000                           
  1001                           ; BSR set to: 0
  1002                           
  1003                           ; BSR set to: 0
  1004  000288  0E32               	movlw	50
  1005  00028A  1961               	xorwf	(_palabra+1)& (0+255),w,b
  1006  00028C  B4D8               	btfsc	status,2,c
  1007  00028E  D037               	goto	u2170
  1008                           
  1009                           ; BSR set to: 0
  1010                           
  1011                           ; BSR set to: 0
  1012                           
  1013                           ;main.c: 163: } else if (palabra[1] == '3') {
  1014                           
  1015                           ; BSR set to: 0
  1016                           ;main.c: 162: MOT_3 = 0;
  1017  000290  0E33               	movlw	51
  1018  000292  1961               	xorwf	(_palabra+1)& (0+255),w,b
  1019  000294  A4D8               	btfss	status,2,c
  1020  000296  D6C1               	goto	l227
  1021                           
  1022                           ; BSR set to: 0
  1023                           ;main.c: 166: MOT_3 = 0;
  1024  000298  0E00               	movlw	0
  1025  00029A  6E26               	movwf	_MOT_3,c
  1026  00029C  D024               	goto	u2140
  1027  00029E                     l247:
  1028                           
  1029                           ; BSR set to: 0
  1030                           
  1031                           ; BSR set to: 0
  1032  00029E  0E46               	movlw	70
  1033  0002A0  1960               	xorwf	_palabra& (0+255),w,b
  1034  0002A2  A4D8               	btfss	status,2,c
  1035  0002A4  D006               	goto	l256
  1036                           
  1037                           ; BSR set to: 0
  1038                           ;main.c: 171: if (winding) {
  1039  0002A6  5022               	movf	_winding,w,c
  1040  0002A8  B4D8               	btfsc	status,2,c
  1041  0002AA  D6B7               	goto	l227
  1042                           
  1043                           ; BSR set to: 0
  1044                           ;main.c: 172: finish();
  1045  0002AC  EC67  F004         	call	_finish	;wreg free
  1046                           
  1047                           ;main.c: 173: }
  1048                           ;main.c: 174: }
  1049  0002B0  D6B4               	goto	l227
  1050  0002B2                     l256:
  1051                           
  1052                           ;main.c: 176: else if (palabra[0] == 'M') {
  1053  0002B2  0E4D               	movlw	77
  1054  0002B4  0100               	movlb	0	; () banked
  1055  0002B6  1960               	xorwf	_palabra& (0+255),w,b
  1056  0002B8  A4D8               	btfss	status,2,c
  1057  0002BA  D024               	goto	l259
  1058                           
  1059                           ; BSR set to: 0
  1060                           ;main.c: 178: if (palabra[1] == '1') {
  1061  0002BC  0E31               	movlw	49
  1062  0002BE  1961               	xorwf	(_palabra+1)& (0+255),w,b
  1063  0002C0  A4D8               	btfss	status,2,c
  1064  0002C2  D008               	goto	l260
  1065                           
  1066                           ; BSR set to: 0
  1067                           ;main.c: 179: MOT_1 = !MOT_1;
  1068  0002C4  5027               	movf	_MOT_1,w,c
  1069  0002C6  A4D8               	btfss	status,2,c
  1070  0002C8  D002               	goto	u2110
  1071  0002CA  0E01               	movlw	1
  1072  0002CC  D001               	goto	u2120
  1073  0002CE                     u2110:
  1074  0002CE  0E00               	movlw	0
  1075  0002D0                     u2120:
  1076  0002D0  6E27               	movwf	_MOT_1,c
  1077                           
  1078                           ;main.c: 180: } else if (palabra[1] == '2') {
  1079  0002D2  D6A3               	goto	l227
  1080  0002D4                     l260:
  1081                           
  1082                           ; BSR set to: 0
  1083                           
  1084                           ; BSR set to: 0
  1085  0002D4  0E32               	movlw	50
  1086  0002D6  1961               	xorwf	(_palabra+1)& (0+255),w,b
  1087  0002D8  A4D8               	btfss	status,2,c
  1088  0002DA  D008               	goto	l262
  1089                           
  1090                           ; BSR set to: 0
  1091                           ;main.c: 181: MOT_2 = !MOT_2;
  1092  0002DC  5024               	movf	_MOT_2,w,c
  1093  0002DE  A4D8               	btfss	status,2,c
  1094  0002E0  D002               	goto	u2140
  1095  0002E2  0E01               	movlw	1
  1096  0002E4  D001               	goto	u2150
  1097  0002E6                     u2140:
  1098  0002E6  0E00               	movlw	0
  1099  0002E8                     u2150:
  1100  0002E8  6E24               	movwf	_MOT_2,c
  1101                           
  1102                           ;main.c: 182: } else if (palabra[1] == '3') {
  1103  0002EA  D697               	goto	l227
  1104  0002EC                     l262:
  1105                           
  1106                           ; BSR set to: 0
  1107                           
  1108                           ; BSR set to: 0
  1109  0002EC  0E33               	movlw	51
  1110  0002EE  1961               	xorwf	(_palabra+1)& (0+255),w,b
  1111  0002F0  A4D8               	btfss	status,2,c
  1112  0002F2  D693               	goto	l227
  1113                           
  1114                           ; BSR set to: 0
  1115                           ;main.c: 183: MOT_3 = !MOT_3;
  1116  0002F4  5026               	movf	_MOT_3,w,c
  1117  0002F6  A4D8               	btfss	status,2,c
  1118  0002F8  D002               	goto	u2170
  1119  0002FA  0E01               	movlw	1
  1120  0002FC  D001               	goto	u2180
  1121  0002FE                     u2170:
  1122  0002FE  0E00               	movlw	0
  1123  000300                     u2180:
  1124  000300  6E26               	movwf	_MOT_3,c
  1125                           
  1126                           ; BSR set to: 0
  1127                           ;main.c: 184: }
  1128                           ;main.c: 185: } else if (palabra[0] == 'N') {
  1129                           
  1130                           ; BSR set to: 0
  1131                           
  1132                           ; BSR set to: 0
  1133  000302  D68B               	goto	l227
  1134  000304                     l259:
  1135                           
  1136                           ; BSR set to: 0
  1137                           
  1138                           ; BSR set to: 0
  1139  000304  0E4E               	movlw	78
  1140  000306  1960               	xorwf	_palabra& (0+255),w,b
  1141  000308  A4D8               	btfss	status,2,c
  1142  00030A  D008               	goto	l266
  1143                           
  1144                           ; BSR set to: 0
  1145                           ;main.c: 187: enable = !enable;
  1146  00030C  501A               	movf	_enable,w,c
  1147  00030E  A4D8               	btfss	status,2,c
  1148  000310  D002               	goto	u2200
  1149  000312  0E01               	movlw	1
  1150  000314  D001               	goto	u2210
  1151  000316                     u2200:
  1152  000316  0E00               	movlw	0
  1153  000318                     u2210:
  1154  000318  6E1A               	movwf	_enable,c
  1155                           
  1156                           ;main.c: 188: } else if (palabra[0] == 'W') {
  1157  00031A  D67F               	goto	l227
  1158  00031C                     l266:
  1159                           
  1160                           ; BSR set to: 0
  1161                           
  1162                           ; BSR set to: 0
  1163  00031C  0E57               	movlw	87
  1164  00031E  1960               	xorwf	_palabra& (0+255),w,b
  1165  000320  A4D8               	btfss	status,2,c
  1166  000322  D003               	goto	l268
  1167                           
  1168                           ; BSR set to: 0
  1169                           ;main.c: 190: unwind();
  1170  000324  EC89  F004         	call	_unwind	;wreg free
  1171                           
  1172                           ;main.c: 191: } else if (palabra[0] == 'R') {
  1173  000328  D678               	goto	l227
  1174  00032A                     l268:
  1175  00032A  0E52               	movlw	82
  1176  00032C  0100               	movlb	0	; () banked
  1177  00032E  1960               	xorwf	_palabra& (0+255),w,b
  1178  000330  A4D8               	btfss	status,2,c
  1179  000332  D003               	goto	l270
  1180                           
  1181                           ; BSR set to: 0
  1182                           ;main.c: 192: reset();
  1183  000334  ECBC  F004         	call	_reset	;wreg free
  1184                           
  1185                           ;main.c: 193: } else if (palabra[0] == 'E') {
  1186  000338  D670               	goto	l227
  1187  00033A                     l270:
  1188  00033A  0E45               	movlw	69
  1189  00033C  0100               	movlb	0	; () banked
  1190  00033E  1960               	xorwf	_palabra& (0+255),w,b
  1191  000340  A4D8               	btfss	status,2,c
  1192  000342  D66B               	goto	l227
  1193                           
  1194                           ; BSR set to: 0
  1195                           ;main.c: 194: if (palabra[1] == 'D') {
  1196  000344  0E44               	movlw	68
  1197  000346  1961               	xorwf	(_palabra+1)& (0+255),w,b
  1198  000348  A4D8               	btfss	status,2,c
  1199  00034A  D026               	goto	l273
  1200                           
  1201                           ; BSR set to: 0
  1202                           ;main.c: 196: DIR_4 = 1;
  1203  00034C  0E01               	movlw	1
  1204  00034E  6E1D               	movwf	_DIR_4,c
  1205                           
  1206                           ; BSR set to: 0
  1207                           ;main.c: 197: steps_4 = ((palabra[2] - 48) * 100) + ((palabra[3] - 48) * 10) + ((palabra
      +                          [4] - 48));
  1208  000350  0ED0               	movlw	208
  1209  000352  2562               	addwf	(_palabra+2)& (0+255),w,b
  1210  000354  6F83               	movwf	___wmul@multiplier& (0+255),b
  1211  000356  6B84               	clrf	(___wmul@multiplier+1)& (0+255),b
  1212  000358  0EFF               	movlw	255
  1213  00035A  2384               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
  1214  00035C  0E00               	movlw	0
  1215  00035E  6F86               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1216  000360  0E64               	movlw	100
  1217  000362  6F85               	movwf	___wmul@multiplicand& (0+255),b
  1218  000364  EC2E  F004         	call	___wmul	;wreg free
  1219  000368  0100               	movlb	0	; () banked
  1220  00036A  5164               	movf	(_palabra+4)& (0+255),w,b
  1221  00036C  6F89               	movwf	??_main& (0+255),b
  1222  00036E  6B8A               	clrf	(??_main+1)& (0+255),b
  1223  000370  5183               	movf	?___wmul& (0+255),w,b
  1224  000372  2789               	addwf	??_main& (0+255),f,b
  1225  000374  5184               	movf	(?___wmul+1)& (0+255),w,b
  1226  000376  238A               	addwfc	(??_main+1)& (0+255),f,b
  1227  000378  0ED0               	movlw	208
  1228  00037A  2563               	addwf	(_palabra+3)& (0+255),w,b
  1229  00037C  6F83               	movwf	___wmul@multiplier& (0+255),b
  1230  00037E  6B84               	clrf	(___wmul@multiplier+1)& (0+255),b
  1231  000380  0EFF               	movlw	255
  1232  000382  2384               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
  1233  000384  0E00               	movlw	0
  1234  000386  6F86               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1235  000388  0E0A               	movlw	10
  1236  00038A  6F85               	movwf	___wmul@multiplicand& (0+255),b
  1237  00038C  EC2E  F004         	call	___wmul	;wreg free
  1238  000390  D029               	goto	L4
  1239  000392                     l2171:
  1240                           
  1241                           ; BSR set to: 0
  1242                           ;main.c: 198: move_4 = 1;
  1243  000392  0E01               	movlw	1
  1244  000394  6E23               	movwf	_move_4,c
  1245                           
  1246                           ;main.c: 199: } else if (palabra[1] == 'I') {
  1247  000396  D641               	goto	l227
  1248  000398                     l273:
  1249                           
  1250                           ; BSR set to: 0
  1251                           
  1252                           ; BSR set to: 0
  1253  000398  0E49               	movlw	73
  1254  00039A  1961               	xorwf	(_palabra+1)& (0+255),w,b
  1255  00039C  A4D8               	btfss	status,2,c
  1256  00039E  D63D               	goto	l227
  1257                           
  1258                           ; BSR set to: 0
  1259                           ;main.c: 201: DIR_4 = 0;
  1260  0003A0  0E00               	movlw	0
  1261  0003A2  6E1D               	movwf	_DIR_4,c
  1262                           
  1263                           ; BSR set to: 0
  1264                           ;main.c: 202: steps_4 = ((palabra[2] - 48) * 100) + ((palabra[3] - 48) * 10) + ((palabra
      +                          [4] - 48));
  1265  0003A4  0ED0               	movlw	208
  1266  0003A6  2562               	addwf	(_palabra+2)& (0+255),w,b
  1267  0003A8  6F83               	movwf	___wmul@multiplier& (0+255),b
  1268  0003AA  6B84               	clrf	(___wmul@multiplier+1)& (0+255),b
  1269  0003AC  0EFF               	movlw	255
  1270  0003AE  2384               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
  1271  0003B0  0E00               	movlw	0
  1272  0003B2  6F86               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1273  0003B4  0E64               	movlw	100
  1274  0003B6  6F85               	movwf	___wmul@multiplicand& (0+255),b
  1275  0003B8  EC2E  F004         	call	___wmul	;wreg free
  1276  0003BC  0100               	movlb	0	; () banked
  1277  0003BE  5164               	movf	(_palabra+4)& (0+255),w,b
  1278  0003C0  6F89               	movwf	??_main& (0+255),b
  1279  0003C2  6B8A               	clrf	(??_main+1)& (0+255),b
  1280  0003C4  5183               	movf	?___wmul& (0+255),w,b
  1281  0003C6  2789               	addwf	??_main& (0+255),f,b
  1282  0003C8  5184               	movf	(?___wmul+1)& (0+255),w,b
  1283  0003CA  238A               	addwfc	(??_main+1)& (0+255),f,b
  1284  0003CC  0ED0               	movlw	208
  1285  0003CE  2563               	addwf	(_palabra+3)& (0+255),w,b
  1286  0003D0  6F83               	movwf	___wmul@multiplier& (0+255),b
  1287  0003D2  6B84               	clrf	(___wmul@multiplier+1)& (0+255),b
  1288  0003D4  0EFF               	movlw	255
  1289  0003D6  2384               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
  1290  0003D8  0E00               	movlw	0
  1291  0003DA  6F86               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1292  0003DC  0E0A               	movlw	10
  1293  0003DE  6F85               	movwf	___wmul@multiplicand& (0+255),b
  1294  0003E0  EC2E  F004         	call	___wmul	;wreg free
  1295  0003E4                     L4:
  1296  0003E4  0100               	movlb	0	; () banked
  1297  0003E6  5183               	movf	?___wmul& (0+255),w,b
  1298  0003E8  2789               	addwf	??_main& (0+255),f,b
  1299  0003EA  5184               	movf	(?___wmul+1)& (0+255),w,b
  1300  0003EC  238A               	addwfc	(??_main+1)& (0+255),f,b
  1301  0003EE  0ED0               	movlw	208
  1302  0003F0  2589               	addwf	??_main& (0+255),w,b
  1303  0003F2  6E17               	movwf	_steps_4,c
  1304  0003F4  0EFF               	movlw	255
  1305  0003F6  218A               	addwfc	(??_main+1)& (0+255),w,b
  1306  0003F8  6E18               	movwf	_steps_4+1,c
  1307  0003FA  D7CB               	goto	l2171
  1308  0003FC                     l228:
  1309                           
  1310                           ; BSR set to: 0
  1311  0003FC  B2C2               	btfsc	4034,1,c	;volatile
  1312  0003FE  D60D               	goto	l227
  1313                           
  1314                           ; BSR set to: 0
  1315                           ;main.c: 210: _delay((unsigned long)((4)*(8000000/4000.0)));
  1316  000400  0E0B               	movlw	11
  1317  000402  0100               	movlb	0	; () banked
  1318  000404  6F89               	movwf	??_main& (0+255),b
  1319  000406  0E62               	movlw	98
  1320  000408                     u2297:
  1321  000408  2EE8               	decfsz	wreg,f,c
  1322  00040A  D7FE               	bra	u2297
  1323  00040C  2F89               	decfsz	??_main& (0+255),f,b
  1324  00040E  D7FC               	bra	u2297
  1325  000410  F000               	nop	
  1326                           
  1327                           ;main.c: 212: GODONE = 1;
  1328  000412  82C2               	bsf	4034,1,c	;volatile
  1329  000414  D602               	goto	l227
  1330  000416                     __end_of_main:
  1331                           	opt stack 0
  1332                           tblptru	equ	0xFF8
  1333                           tblptrh	equ	0xFF7
  1334                           tblptrl	equ	0xFF6
  1335                           tablat	equ	0xFF5
  1336                           postinc0	equ	0xFEE
  1337                           wreg	equ	0xFE8
  1338                           postdec1	equ	0xFE5
  1339                           fsr1l	equ	0xFE1
  1340                           status	equ	0xFD8
  1341                           
  1342 ;; *************** function _zero_mark *****************
  1343 ;; Defined at:
  1344 ;;		line 250 in file "main.c"
  1345 ;; Parameters:    Size  Location     Type
  1346 ;;		None
  1347 ;; Auto vars:     Size  Location     Type
  1348 ;;		None
  1349 ;; Return value:  Size  Location     Type
  1350 ;;                  1    wreg      void 
  1351 ;; Registers used:
  1352 ;;		wreg, status,2
  1353 ;; Tracked objects:
  1354 ;;		On entry : 0/0
  1355 ;;		On exit  : 0/0
  1356 ;;		Unchanged: 0/0
  1357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1358 ;;      Params:         0       0       0       0       0       0       0       0       0
  1359 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1360 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1361 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1362 ;;Total ram usage:        0 bytes
  1363 ;; Hardware stack levels used:    1
  1364 ;; Hardware stack levels required when called:    3
  1365 ;; This function calls:
  1366 ;;		Nothing
  1367 ;; This function is called by:
  1368 ;;		_main
  1369 ;; This function uses a non-reentrant model
  1370 ;;
  1371                           
  1372                           	psect	text1
  1373  000932                     __ptext1:
  1374                           	opt stack 0
  1375  000932                     _zero_mark:
  1376                           	opt stack 27
  1377                           
  1378                           ;main.c: 252: DIR_3 = 1;
  1379                           
  1380                           ;incstack = 0
  1381  000932  0E01               	movlw	1
  1382  000934  6E25               	movwf	_DIR_3,c
  1383                           
  1384                           ;main.c: 253: T1CONbits.TMR1ON = 0;
  1385  000936  90CD               	bcf	4045,0,c	;volatile
  1386                           
  1387                           ;main.c: 254: T0CONbits.TMR0ON = 1;
  1388  000938  8ED5               	bsf	4053,7,c	;volatile
  1389                           
  1390                           ;main.c: 255: zero_flag = 0;
  1391  00093A  0E00               	movlw	0
  1392  00093C  6E52               	movwf	_zero_flag,c
  1393                           
  1394                           ;main.c: 256: winding = 1;
  1395  00093E  0E01               	movlw	1
  1396  000940  6E22               	movwf	_winding,c
  1397                           
  1398                           ;main.c: 257: MOT_1 = 1;
  1399  000942  0E01               	movlw	1
  1400  000944  6E27               	movwf	_MOT_1,c
  1401                           
  1402                           ;main.c: 258: MOT_3 = 1;
  1403  000946  0E01               	movlw	1
  1404  000948  6E26               	movwf	_MOT_3,c
  1405  00094A  0012               	return		;funcret
  1406  00094C                     __end_of_zero_mark:
  1407                           	opt stack 0
  1408                           tblptru	equ	0xFF8
  1409                           tblptrh	equ	0xFF7
  1410                           tblptrl	equ	0xFF6
  1411                           tablat	equ	0xFF5
  1412                           postinc0	equ	0xFEE
  1413                           wreg	equ	0xFE8
  1414                           postdec1	equ	0xFE5
  1415                           fsr1l	equ	0xFE1
  1416                           status	equ	0xFD8
  1417                           
  1418 ;; *************** function _unwind *****************
  1419 ;; Defined at:
  1420 ;;		line 267 in file "main.c"
  1421 ;; Parameters:    Size  Location     Type
  1422 ;;		None
  1423 ;; Auto vars:     Size  Location     Type
  1424 ;;		None
  1425 ;; Return value:  Size  Location     Type
  1426 ;;                  1    wreg      void 
  1427 ;; Registers used:
  1428 ;;		wreg, status,2
  1429 ;; Tracked objects:
  1430 ;;		On entry : 0/0
  1431 ;;		On exit  : 0/0
  1432 ;;		Unchanged: 0/0
  1433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1434 ;;      Params:         0       0       0       0       0       0       0       0       0
  1435 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1436 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1437 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1438 ;;Total ram usage:        0 bytes
  1439 ;; Hardware stack levels used:    1
  1440 ;; Hardware stack levels required when called:    3
  1441 ;; This function calls:
  1442 ;;		Nothing
  1443 ;; This function is called by:
  1444 ;;		_main
  1445 ;; This function uses a non-reentrant model
  1446 ;;
  1447                           
  1448                           	psect	text2
  1449  000912                     __ptext2:
  1450                           	opt stack 0
  1451  000912                     _unwind:
  1452                           	opt stack 27
  1453                           
  1454                           ;main.c: 269: enable = !enable;
  1455                           
  1456                           ;incstack = 0
  1457  000912  501A               	movf	_enable,w,c
  1458  000914  A4D8               	btfss	status,2,c
  1459  000916  D002               	goto	u1790
  1460  000918  0E01               	movlw	1
  1461  00091A  D001               	goto	u1800
  1462  00091C                     u1790:
  1463  00091C  0E00               	movlw	0
  1464  00091E                     u1800:
  1465  00091E  6E1A               	movwf	_enable,c
  1466                           
  1467                           ;main.c: 270: T1CONbits.TMR1ON = 1;
  1468  000920  80CD               	bsf	4045,0,c	;volatile
  1469                           
  1470                           ;main.c: 271: T0CONbits.TMR0ON = 0;
  1471  000922  9ED5               	bcf	4053,7,c	;volatile
  1472                           
  1473                           ;main.c: 272: MOT_3 = 0;
  1474  000924  0E00               	movlw	0
  1475  000926  6E26               	movwf	_MOT_3,c
  1476                           
  1477                           ;main.c: 273: MOT_2 = 1;
  1478  000928  0E01               	movlw	1
  1479  00092A  6E24               	movwf	_MOT_2,c
  1480                           
  1481                           ;main.c: 274: unwind_flag = 1;
  1482  00092C  0E01               	movlw	1
  1483  00092E  6E19               	movwf	_unwind_flag,c
  1484  000930  0012               	return		;funcret
  1485  000932                     __end_of_unwind:
  1486                           	opt stack 0
  1487                           tblptru	equ	0xFF8
  1488                           tblptrh	equ	0xFF7
  1489                           tblptrl	equ	0xFF6
  1490                           tablat	equ	0xFF5
  1491                           postinc0	equ	0xFEE
  1492                           wreg	equ	0xFE8
  1493                           postdec1	equ	0xFE5
  1494                           fsr1l	equ	0xFE1
  1495                           status	equ	0xFD8
  1496                           
  1497 ;; *************** function _trans_Char *****************
  1498 ;; Defined at:
  1499 ;;		line 233 in file "main.c"
  1500 ;; Parameters:    Size  Location     Type
  1501 ;;  out             1    wreg     unsigned char 
  1502 ;; Auto vars:     Size  Location     Type
  1503 ;;  out             1    0[BANK0 ] unsigned char 
  1504 ;; Return value:  Size  Location     Type
  1505 ;;                  1    wreg      void 
  1506 ;; Registers used:
  1507 ;;		wreg
  1508 ;; Tracked objects:
  1509 ;;		On entry : 0/0
  1510 ;;		On exit  : 0/0
  1511 ;;		Unchanged: 0/0
  1512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1513 ;;      Params:         0       0       0       0       0       0       0       0       0
  1514 ;;      Locals:         0       1       0       0       0       0       0       0       0
  1515 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1516 ;;      Totals:         0       1       0       0       0       0       0       0       0
  1517 ;;Total ram usage:        1 bytes
  1518 ;; Hardware stack levels used:    1
  1519 ;; Hardware stack levels required when called:    3
  1520 ;; This function calls:
  1521 ;;		Nothing
  1522 ;; This function is called by:
  1523 ;;		_main
  1524 ;;		_send_String
  1525 ;; This function uses a non-reentrant model
  1526 ;;
  1527                           
  1528                           	psect	text3
  1529  00094C                     __ptext3:
  1530                           	opt stack 0
  1531  00094C                     _trans_Char:
  1532                           	opt stack 27
  1533                           
  1534                           ;incstack = 0
  1535                           ;trans_Char@out stored from wreg
  1536  00094C  0100               	movlb	0	; () banked
  1537  00094E  6F83               	movwf	trans_Char@out& (0+255),b
  1538  000950                     
  1539                           ;main.c: 234: while (TXIF == 0);
  1540  000950  A89E               	btfss	3998,4,c	;volatile
  1541  000952  D7FE               	goto	l2029
  1542                           
  1543                           ;main.c: 235: TXREG = out;
  1544  000954  C083  FFAD         	movff	trans_Char@out,4013	;volatile
  1545  000958  0012               	return		;funcret
  1546  00095A                     __end_of_trans_Char:
  1547                           	opt stack 0
  1548                           tblptru	equ	0xFF8
  1549                           tblptrh	equ	0xFF7
  1550                           tblptrl	equ	0xFF6
  1551                           tablat	equ	0xFF5
  1552                           postinc0	equ	0xFEE
  1553                           wreg	equ	0xFE8
  1554                           postdec1	equ	0xFE5
  1555                           fsr1l	equ	0xFE1
  1556                           status	equ	0xFD8
  1557                           
  1558 ;; *************** function _speed_select *****************
  1559 ;; Defined at:
  1560 ;;		line 296 in file "main.c"
  1561 ;; Parameters:    Size  Location     Type
  1562 ;;  var             2    0[BANK0 ] unsigned int 
  1563 ;; Auto vars:     Size  Location     Type
  1564 ;;		None
  1565 ;; Return value:  Size  Location     Type
  1566 ;;                  1    wreg      void 
  1567 ;; Registers used:
  1568 ;;		wreg, status,2, status,0
  1569 ;; Tracked objects:
  1570 ;;		On entry : 0/0
  1571 ;;		On exit  : 0/0
  1572 ;;		Unchanged: 0/0
  1573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1574 ;;      Params:         0       2       0       0       0       0       0       0       0
  1575 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1576 ;;      Temps:          0       2       0       0       0       0       0       0       0
  1577 ;;      Totals:         0       4       0       0       0       0       0       0       0
  1578 ;;Total ram usage:        4 bytes
  1579 ;; Hardware stack levels used:    1
  1580 ;; Hardware stack levels required when called:    3
  1581 ;; This function calls:
  1582 ;;		Nothing
  1583 ;; This function is called by:
  1584 ;;		_main
  1585 ;; This function uses a non-reentrant model
  1586 ;;
  1587                           
  1588                           	psect	text4
  1589  00080A                     __ptext4:
  1590                           	opt stack 0
  1591  00080A                     _speed_select:
  1592                           	opt stack 27
  1593                           
  1594                           ;main.c: 298: MOT_4 = 1;
  1595                           
  1596                           ;incstack = 0
  1597  00080A  0E01               	movlw	1
  1598  00080C  6E53               	movwf	_MOT_4,c
  1599                           
  1600                           ;main.c: 299: DIR_4 = 0;
  1601  00080E  0E00               	movlw	0
  1602  000810  6E1D               	movwf	_DIR_4,c
  1603                           
  1604                           ;main.c: 300: switch (var) {
  1605  000812  D011               	goto	l310
  1606  000814                     
  1607                           ;main.c: 303: count_1 = 2;
  1608  000814  0E00               	movlw	0
  1609  000816  6E4D               	movwf	_count_1+1,c
  1610  000818  0E02               	movlw	2
  1611  00081A  6E4C               	movwf	_count_1,c
  1612                           
  1613                           ;main.c: 304: count_3 = 132;
  1614  00081C  0E00               	movlw	0
  1615  00081E  6E4B               	movwf	_count_3+1,c
  1616  000820  0E84               	movlw	132
  1617  000822  6E4A               	movwf	_count_3,c
  1618                           
  1619                           ;main.c: 305: steps_4 = 200;
  1620  000824  0E00               	movlw	0
  1621  000826  6E18               	movwf	_steps_4+1,c
  1622  000828  0EC8               	movlw	200
  1623  00082A  D003               	goto	L5
  1624  00082C                     
  1625                           ;main.c: 310: steps_4 = 400;
  1626  00082C  0E01               	movlw	1
  1627  00082E  6E18               	movwf	_steps_4+1,c
  1628  000830  0E90               	movlw	144
  1629  000832                     L5:
  1630  000832  6E17               	movwf	_steps_4,c
  1631                           
  1632                           ;main.c: 311: }
  1633  000834  D010               	goto	l312
  1634  000836                     l310:
  1635  000836  C083  F085         	movff	speed_select@var,??_speed_select
  1636  00083A  C084  F086         	movff	speed_select@var+1,??_speed_select+1
  1637                           
  1638                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1639                           ; Switch size 1, requested type "space"
  1640                           ; Number of cases is 1, Range of values is 0 to 0
  1641                           ; switch strategies available:
  1642                           ; Name         Instructions Cycles
  1643                           ; simple_byte            4     3 (average)
  1644                           ;	Chosen strategy is simple_byte
  1645  00083E  0100               	movlb	0	; () banked
  1646  000840  5186               	movf	(??_speed_select+1)& (0+255),w,b
  1647  000842  0A00               	xorlw	0	; case 0
  1648  000844  A4D8               	btfss	status,2,c
  1649  000846  D007               	goto	l312
  1650                           
  1651                           ; BSR set to: 0
  1652                           ; Switch size 1, requested type "space"
  1653                           ; Number of cases is 2, Range of values is 25 to 33
  1654                           ; switch strategies available:
  1655                           ; Name         Instructions Cycles
  1656                           ; simple_byte            7     4 (average)
  1657                           ;	Chosen strategy is simple_byte
  1658  000848  5185               	movf	??_speed_select& (0+255),w,b
  1659  00084A  0A19               	xorlw	25	; case 25
  1660  00084C  B4D8               	btfsc	status,2,c
  1661  00084E  D7E2               	goto	l311
  1662  000850  0A38               	xorlw	56	; case 33
  1663  000852  B4D8               	btfsc	status,2,c
  1664  000854  D7EB               	goto	l313
  1665  000856                     l312:
  1666                           
  1667                           ;main.c: 312: move_4 = 1;
  1668                           
  1669                           ; BSR set to: 0
  1670  000856  0E01               	movlw	1
  1671  000858  6E23               	movwf	_move_4,c
  1672  00085A  0012               	return		;funcret
  1673  00085C                     __end_of_speed_select:
  1674                           	opt stack 0
  1675                           tblptru	equ	0xFF8
  1676                           tblptrh	equ	0xFF7
  1677                           tblptrl	equ	0xFF6
  1678                           tablat	equ	0xFF5
  1679                           postinc0	equ	0xFEE
  1680                           wreg	equ	0xFE8
  1681                           postdec1	equ	0xFE5
  1682                           fsr1l	equ	0xFE1
  1683                           status	equ	0xFD8
  1684                           
  1685 ;; *************** function _reset *****************
  1686 ;; Defined at:
  1687 ;;		line 290 in file "main.c"
  1688 ;; Parameters:    Size  Location     Type
  1689 ;;		None
  1690 ;; Auto vars:     Size  Location     Type
  1691 ;;		None
  1692 ;; Return value:  Size  Location     Type
  1693 ;;                  1    wreg      void 
  1694 ;; Registers used:
  1695 ;;		None
  1696 ;; Tracked objects:
  1697 ;;		On entry : 0/0
  1698 ;;		On exit  : 0/0
  1699 ;;		Unchanged: 0/0
  1700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1701 ;;      Params:         0       0       0       0       0       0       0       0       0
  1702 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1703 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1704 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1705 ;;Total ram usage:        0 bytes
  1706 ;; Hardware stack levels used:    1
  1707 ;; Hardware stack levels required when called:    3
  1708 ;; This function calls:
  1709 ;;		Nothing
  1710 ;; This function is called by:
  1711 ;;		_main
  1712 ;; This function uses a non-reentrant model
  1713 ;;
  1714                           
  1715                           	psect	text5
  1716  000978                     __ptext5:
  1717                           	opt stack 0
  1718  000978                     _reset:
  1719                           	opt stack 27
  1720                           
  1721                           ;incstack = 0
  1722  000978  00FF               	reset		;# 
  1723  00097A  0012               	return		;funcret
  1724  00097C                     __end_of_reset:
  1725                           	opt stack 0
  1726                           tblptru	equ	0xFF8
  1727                           tblptrh	equ	0xFF7
  1728                           tblptrl	equ	0xFF6
  1729                           tablat	equ	0xFF5
  1730                           postinc0	equ	0xFEE
  1731                           wreg	equ	0xFE8
  1732                           postdec1	equ	0xFE5
  1733                           fsr1l	equ	0xFE1
  1734                           status	equ	0xFD8
  1735                           
  1736 ;; *************** function _finish *****************
  1737 ;; Defined at:
  1738 ;;		line 277 in file "main.c"
  1739 ;; Parameters:    Size  Location     Type
  1740 ;;		None
  1741 ;; Auto vars:     Size  Location     Type
  1742 ;;		None
  1743 ;; Return value:  Size  Location     Type
  1744 ;;                  1    wreg      void 
  1745 ;; Registers used:
  1746 ;;		wreg, status,2
  1747 ;; Tracked objects:
  1748 ;;		On entry : 0/0
  1749 ;;		On exit  : 0/0
  1750 ;;		Unchanged: 0/0
  1751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1752 ;;      Params:         0       0       0       0       0       0       0       0       0
  1753 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1754 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1755 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1756 ;;Total ram usage:        0 bytes
  1757 ;; Hardware stack levels used:    1
  1758 ;; Hardware stack levels required when called:    3
  1759 ;; This function calls:
  1760 ;;		Nothing
  1761 ;; This function is called by:
  1762 ;;		_main
  1763 ;; This function uses a non-reentrant model
  1764 ;;
  1765                           
  1766                           	psect	text6
  1767  0008CE                     __ptext6:
  1768                           	opt stack 0
  1769  0008CE                     _finish:
  1770                           	opt stack 27
  1771                           
  1772                           ;main.c: 279: T1CONbits.TMR1ON = 1;
  1773                           
  1774                           ;incstack = 0
  1775  0008CE  80CD               	bsf	4045,0,c	;volatile
  1776                           
  1777                           ;main.c: 280: T0CONbits.TMR0ON = 0;
  1778  0008D0  9ED5               	bcf	4053,7,c	;volatile
  1779                           
  1780                           ;main.c: 281: MOT_1 = MOT_3 = 0;
  1781  0008D2  0E00               	movlw	0
  1782  0008D4  6E26               	movwf	_MOT_3,c
  1783  0008D6  C026  F027         	movff	_MOT_3,_MOT_1
  1784                           
  1785                           ;main.c: 282: winding = 0;
  1786  0008DA  0E00               	movlw	0
  1787  0008DC  6E22               	movwf	_winding,c
  1788                           
  1789                           ;main.c: 283: MOT_4 = 1;
  1790  0008DE  0E01               	movlw	1
  1791  0008E0  6E53               	movwf	_MOT_4,c
  1792                           
  1793                           ;main.c: 284: DIR_4 = 1;
  1794  0008E2  0E01               	movlw	1
  1795  0008E4  6E1D               	movwf	_DIR_4,c
  1796                           
  1797                           ;main.c: 285: move_4 = 1;
  1798  0008E6  0E01               	movlw	1
  1799  0008E8  6E23               	movwf	_move_4,c
  1800                           
  1801                           ;main.c: 287: finish_flag = 1;
  1802  0008EA  0E01               	movlw	1
  1803  0008EC  6E1B               	movwf	_finish_flag,c
  1804  0008EE  0012               	return		;funcret
  1805  0008F0                     __end_of_finish:
  1806                           	opt stack 0
  1807                           tblptru	equ	0xFF8
  1808                           tblptrh	equ	0xFF7
  1809                           tblptrl	equ	0xFF6
  1810                           tablat	equ	0xFF5
  1811                           postinc0	equ	0xFEE
  1812                           wreg	equ	0xFE8
  1813                           postdec1	equ	0xFE5
  1814                           fsr1l	equ	0xFE1
  1815                           status	equ	0xFD8
  1816                           
  1817 ;; *************** function ___wmul *****************
  1818 ;; Defined at:
  1819 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
  1820 ;; Parameters:    Size  Location     Type
  1821 ;;  multiplier      2    0[BANK0 ] unsigned int 
  1822 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  1823 ;; Auto vars:     Size  Location     Type
  1824 ;;  product         2    4[BANK0 ] unsigned int 
  1825 ;; Return value:  Size  Location     Type
  1826 ;;                  2    0[BANK0 ] unsigned int 
  1827 ;; Registers used:
  1828 ;;		wreg, status,2, status,0, prodl, prodh
  1829 ;; Tracked objects:
  1830 ;;		On entry : 0/0
  1831 ;;		On exit  : 0/0
  1832 ;;		Unchanged: 0/0
  1833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1834 ;;      Params:         0       4       0       0       0       0       0       0       0
  1835 ;;      Locals:         0       2       0       0       0       0       0       0       0
  1836 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1837 ;;      Totals:         0       6       0       0       0       0       0       0       0
  1838 ;;Total ram usage:        6 bytes
  1839 ;; Hardware stack levels used:    1
  1840 ;; Hardware stack levels required when called:    3
  1841 ;; This function calls:
  1842 ;;		Nothing
  1843 ;; This function is called by:
  1844 ;;		_main
  1845 ;; This function uses a non-reentrant model
  1846 ;;
  1847                           
  1848                           	psect	text7
  1849  00085C                     __ptext7:
  1850                           	opt stack 0
  1851  00085C                     ___wmul:
  1852                           	opt stack 27
  1853                           
  1854                           ;incstack = 0
  1855  00085C  0100               	movlb	0	; () banked
  1856  00085E  5183               	movf	___wmul@multiplier& (0+255),w,b
  1857  000860  0385               	mulwf	___wmul@multiplicand& (0+255),b
  1858  000862  CFF3 F087          	movff	prodl,___wmul@product
  1859  000866  CFF4 F088          	movff	prodh,___wmul@product+1
  1860  00086A  5183               	movf	___wmul@multiplier& (0+255),w,b
  1861  00086C  0386               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  1862  00086E  50F3               	movf	prodl,w,c
  1863  000870  2788               	addwf	(___wmul@product+1)& (0+255),f,b
  1864  000872  5184               	movf	(___wmul@multiplier+1)& (0+255),w,b
  1865  000874  0385               	mulwf	___wmul@multiplicand& (0+255),b
  1866  000876  50F3               	movf	prodl,w,c
  1867  000878  2788               	addwf	(___wmul@product+1)& (0+255),f,b
  1868                           
  1869                           ; BSR set to: 0
  1870  00087A  C087  F083         	movff	___wmul@product,?___wmul
  1871  00087E  C088  F084         	movff	___wmul@product+1,?___wmul+1
  1872  000882  0012               	return	
  1873  000884                     __end_of___wmul:
  1874                           	opt stack 0
  1875                           tblptru	equ	0xFF8
  1876                           tblptrh	equ	0xFF7
  1877                           tblptrl	equ	0xFF6
  1878                           tablat	equ	0xFF5
  1879                           prodh	equ	0xFF4
  1880                           prodl	equ	0xFF3
  1881                           postinc0	equ	0xFEE
  1882                           wreg	equ	0xFE8
  1883                           postdec1	equ	0xFE5
  1884                           fsr1l	equ	0xFE1
  1885                           status	equ	0xFD8
  1886                           
  1887 ;; *************** function _InitApp *****************
  1888 ;; Defined at:
  1889 ;;		line 33 in file "user.c"
  1890 ;; Parameters:    Size  Location     Type
  1891 ;;		None
  1892 ;; Auto vars:     Size  Location     Type
  1893 ;;		None
  1894 ;; Return value:  Size  Location     Type
  1895 ;;                  1    wreg      void 
  1896 ;; Registers used:
  1897 ;;		wreg, status,2
  1898 ;; Tracked objects:
  1899 ;;		On entry : 0/0
  1900 ;;		On exit  : 0/0
  1901 ;;		Unchanged: 0/0
  1902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1903 ;;      Params:         0       0       0       0       0       0       0       0       0
  1904 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1905 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1906 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1907 ;;Total ram usage:        0 bytes
  1908 ;; Hardware stack levels used:    1
  1909 ;; Hardware stack levels required when called:    3
  1910 ;; This function calls:
  1911 ;;		Nothing
  1912 ;; This function is called by:
  1913 ;;		_main
  1914 ;; This function uses a non-reentrant model
  1915 ;;
  1916                           
  1917                           	psect	text8
  1918  0006E8                     __ptext8:
  1919                           	opt stack 0
  1920  0006E8                     _InitApp:
  1921                           	opt stack 27
  1922                           
  1923                           ;user.c: 35: PORTA = 0;
  1924                           
  1925                           ; BSR set to: 0
  1926                           ;incstack = 0
  1927  0006E8  0E00               	movlw	0
  1928  0006EA  6E80               	movwf	3968,c	;volatile
  1929                           
  1930                           ;user.c: 36: LATA = 0;
  1931  0006EC  0E00               	movlw	0
  1932  0006EE  6E89               	movwf	3977,c	;volatile
  1933                           
  1934                           ;user.c: 37: PORTB = 0;
  1935  0006F0  0E00               	movlw	0
  1936  0006F2  6E81               	movwf	3969,c	;volatile
  1937                           
  1938                           ;user.c: 38: LATB = 0;
  1939  0006F4  0E00               	movlw	0
  1940  0006F6  6E8A               	movwf	3978,c	;volatile
  1941                           
  1942                           ;user.c: 39: PORTC = 0;
  1943  0006F8  0E00               	movlw	0
  1944  0006FA  6E82               	movwf	3970,c	;volatile
  1945                           
  1946                           ;user.c: 40: LATC = 0;
  1947  0006FC  0E00               	movlw	0
  1948  0006FE  6E8B               	movwf	3979,c	;volatile
  1949                           
  1950                           ;user.c: 42: ADCON1 = 0b1101;
  1951  000700  0E0D               	movlw	13
  1952  000702  6EC1               	movwf	4033,c	;volatile
  1953                           
  1954                           ;user.c: 43: TRISAbits.TRISA0 = 1;
  1955  000704  8092               	bsf	3986,0,c	;volatile
  1956                           
  1957                           ;user.c: 44: ADCON0bits.CHS = 0;
  1958  000706  94C2               	bcf	4034,2,c	;volatile
  1959  000708  96C2               	bcf	4034,3,c	;volatile
  1960  00070A  98C2               	bcf	4034,4,c	;volatile
  1961  00070C  9AC2               	bcf	4034,5,c	;volatile
  1962                           
  1963                           ;user.c: 45: ADCON2 = 0b10101100;
  1964  00070E  0EAC               	movlw	172
  1965  000710  6EC0               	movwf	4032,c	;volatile
  1966                           
  1967                           ;user.c: 46: PIE1bits.ADIE = 1;
  1968  000712  8C9D               	bsf	3997,6,c	;volatile
  1969                           
  1970                           ;user.c: 47: PIR1bits.ADIF = 0;
  1971  000714  9C9E               	bcf	3998,6,c	;volatile
  1972                           
  1973                           ;user.c: 48: ADCON0bits.ADON = 1;
  1974  000716  80C2               	bsf	4034,0,c	;volatile
  1975                           
  1976                           ;user.c: 50: TRISAbits.RA2 = 0;
  1977  000718  9492               	bcf	3986,2,c	;volatile
  1978                           
  1979                           ;user.c: 51: TRISAbits.RA3 = 0;
  1980  00071A  9692               	bcf	3986,3,c	;volatile
  1981                           
  1982                           ;user.c: 52: TRISAbits.RA4 = 0;
  1983  00071C  9892               	bcf	3986,4,c	;volatile
  1984                           
  1985                           ;user.c: 53: TRISAbits.RA5 = 0;
  1986  00071E  9A92               	bcf	3986,5,c	;volatile
  1987                           
  1988                           ;user.c: 54: TRISCbits.RC0 = 0;
  1989  000720  9094               	bcf	3988,0,c	;volatile
  1990                           
  1991                           ;user.c: 55: TRISCbits.RC1 = 0;
  1992  000722  9294               	bcf	3988,1,c	;volatile
  1993                           
  1994                           ;user.c: 56: TRISBbits.RB7 = 0;
  1995  000724  9E93               	bcf	3987,7,c	;volatile
  1996                           
  1997                           ;user.c: 57: TRISBbits.RB6 = 0;
  1998  000726  9C93               	bcf	3987,6,c	;volatile
  1999                           
  2000                           ;user.c: 58: TRISCbits.RC2 = 0;
  2001  000728  9494               	bcf	3988,2,c	;volatile
  2002                           
  2003                           ;user.c: 59: TRISBbits.RB4 = 0;
  2004  00072A  9893               	bcf	3987,4,c	;volatile
  2005                           
  2006                           ;user.c: 60: TRISBbits.RB5 = 0;
  2007  00072C  9A93               	bcf	3987,5,c	;volatile
  2008                           
  2009                           ;user.c: 62: RCONbits.IPEN = 0;
  2010  00072E  9ED0               	bcf	4048,7,c	;volatile
  2011                           
  2012                           ;user.c: 64: INTCONbits.GIE = 1;
  2013  000730  8EF2               	bsf	intcon,7,c	;volatile
  2014                           
  2015                           ;user.c: 65: INTCONbits.PEIE = 1;
  2016  000732  8CF2               	bsf	intcon,6,c	;volatile
  2017                           
  2018                           ;user.c: 66: INTCONbits.TMR0IE = 1;
  2019  000734  8AF2               	bsf	intcon,5,c	;volatile
  2020                           
  2021                           ;user.c: 67: INTCONbits.TMR0IF = 0;
  2022  000736  94F2               	bcf	intcon,2,c	;volatile
  2023                           
  2024                           ;user.c: 68: INTCON2bits.TMR0IP = 1;
  2025  000738  84F1               	bsf	intcon2,2,c	;volatile
  2026                           
  2027                           ;user.c: 69: T0CONbits.T08BIT = 1;
  2028  00073A  8CD5               	bsf	4053,6,c	;volatile
  2029                           
  2030                           ;user.c: 70: T0CONbits.T0CS = 0;
  2031  00073C  9AD5               	bcf	4053,5,c	;volatile
  2032                           
  2033                           ;user.c: 71: T0CONbits.PSA = 0;
  2034  00073E  96D5               	bcf	4053,3,c	;volatile
  2035                           
  2036                           ;user.c: 72: T0CONbits.T0PS = 0b101;
  2037  000740  50D5               	movf	4053,w,c	;volatile
  2038  000742  0BF8               	andlw	-8
  2039  000744  0905               	iorlw	5
  2040  000746  6ED5               	movwf	4053,c	;volatile
  2041                           
  2042                           ;user.c: 73: T0CONbits.TMR0ON = 0;
  2043  000748  9ED5               	bcf	4053,7,c	;volatile
  2044                           
  2045                           ;user.c: 74: TMR0 = 0x6;
  2046  00074A  0E00               	movlw	0
  2047  00074C  6ED7               	movwf	4055,c	;volatile
  2048  00074E  0E06               	movlw	6
  2049  000750  6ED6               	movwf	4054,c	;volatile
  2050                           
  2051                           ;user.c: 76: PIE1bits.TMR1IE = 1;
  2052  000752  809D               	bsf	3997,0,c	;volatile
  2053                           
  2054                           ;user.c: 77: PIR1bits.TMR1IF = 0;
  2055  000754  909E               	bcf	3998,0,c	;volatile
  2056                           
  2057                           ;user.c: 78: IPR1bits.TMR1IP = 1;
  2058  000756  809F               	bsf	3999,0,c	;volatile
  2059                           
  2060                           ;user.c: 79: T1CONbits.TMR1CS = 0;
  2061  000758  92CD               	bcf	4045,1,c	;volatile
  2062                           
  2063                           ;user.c: 80: T1CONbits.T1CKPS = 0b00;
  2064  00075A  0ECF               	movlw	-49
  2065  00075C  16CD               	andwf	4045,f,c	;volatile
  2066                           
  2067                           ;user.c: 81: T1CONbits.TMR1ON = 1;
  2068  00075E  80CD               	bsf	4045,0,c	;volatile
  2069                           
  2070                           ;user.c: 85: TRISBbits.RB1 = 1;
  2071  000760  8293               	bsf	3987,1,c	;volatile
  2072                           
  2073                           ;user.c: 86: TRISBbits.RB2 = 1;
  2074  000762  8493               	bsf	3987,2,c	;volatile
  2075                           
  2076                           ;user.c: 87: INTCON3bits.INT1IE = 1;
  2077  000764  86F0               	bsf	intcon3,3,c	;volatile
  2078                           
  2079                           ;user.c: 88: INTCON3bits.INT2IE = 1;
  2080  000766  88F0               	bsf	intcon3,4,c	;volatile
  2081                           
  2082                           ;user.c: 89: INTCON3bits.INT1IF = 0;
  2083  000768  90F0               	bcf	intcon3,0,c	;volatile
  2084                           
  2085                           ;user.c: 90: INTCON3bits.INT2IF = 0;
  2086  00076A  92F0               	bcf	intcon3,1,c	;volatile
  2087                           
  2088                           ;user.c: 91: INTCON2bits.INTEDG1 = 0;
  2089  00076C  9AF1               	bcf	intcon2,5,c	;volatile
  2090                           
  2091                           ;user.c: 92: INTCON2bits.INTEDG2 = 0;
  2092  00076E  98F1               	bcf	intcon2,4,c	;volatile
  2093                           
  2094                           ;user.c: 94: TRISCbits.RC6 = 0;
  2095  000770  9C94               	bcf	3988,6,c	;volatile
  2096                           
  2097                           ;user.c: 95: TRISCbits.RC7 = 1;
  2098  000772  8E94               	bsf	3988,7,c	;volatile
  2099                           
  2100                           ;user.c: 96: BRGH = 1;
  2101  000774  84AC               	bsf	4012,2,c	;volatile
  2102                           
  2103                           ;user.c: 97: BRG16 = 1;
  2104  000776  86B8               	bsf	4024,3,c	;volatile
  2105                           
  2106                           ;user.c: 98: SPBRG = 207;
  2107  000778  0ECF               	movlw	207
  2108  00077A  6EAF               	movwf	4015,c	;volatile
  2109                           
  2110                           ;user.c: 99: SPEN = 1;
  2111  00077C  8EAB               	bsf	4011,7,c	;volatile
  2112                           
  2113                           ;user.c: 100: SYNC = 0;
  2114  00077E  98AC               	bcf	4012,4,c	;volatile
  2115                           
  2116                           ;user.c: 101: TXEN = 1;
  2117  000780  8AAC               	bsf	4012,5,c	;volatile
  2118                           
  2119                           ;user.c: 102: CREN = 1;
  2120  000782  88AB               	bsf	4011,4,c	;volatile
  2121                           
  2122                           ;user.c: 103: TX9 = 0;
  2123  000784  9CAC               	bcf	4012,6,c	;volatile
  2124                           
  2125                           ;user.c: 104: RX9 = 0;
  2126  000786  9CAB               	bcf	4011,6,c	;volatile
  2127                           
  2128                           ;user.c: 105: RCIE = 1;
  2129  000788  8A9D               	bsf	3997,5,c	;volatile
  2130                           
  2131                           ;user.c: 106: TXIE = 0;
  2132  00078A  989D               	bcf	3997,4,c	;volatile
  2133                           
  2134                           ;user.c: 108: PR2 = 99;
  2135  00078C  0E63               	movlw	99
  2136  00078E  6ECB               	movwf	4043,c	;volatile
  2137                           
  2138                           ;user.c: 109: CCP1CONbits.DC1B = 0;
  2139  000790  0ECF               	movlw	-49
  2140  000792  16BD               	andwf	4029,f,c	;volatile
  2141                           
  2142                           ;user.c: 110: T2CONbits.T2CKPS = 0b00;
  2143  000794  0EFC               	movlw	-4
  2144  000796  16CA               	andwf	4042,f,c	;volatile
  2145                           
  2146                           ;user.c: 111: T2CONbits.TMR2ON = 1;
  2147  000798  84CA               	bsf	4042,2,c	;volatile
  2148                           
  2149                           ;user.c: 112: CCP1CONbits.CCP1M = 0b1111;
  2150  00079A  80BD               	bsf	4029,0,c	;volatile
  2151  00079C  82BD               	bsf	4029,1,c	;volatile
  2152  00079E  84BD               	bsf	4029,2,c	;volatile
  2153  0007A0  86BD               	bsf	4029,3,c	;volatile
  2154  0007A2  0012               	return		;funcret
  2155  0007A4                     __end_of_InitApp:
  2156                           	opt stack 0
  2157                           tblptru	equ	0xFF8
  2158                           tblptrh	equ	0xFF7
  2159                           tblptrl	equ	0xFF6
  2160                           tablat	equ	0xFF5
  2161                           prodh	equ	0xFF4
  2162                           prodl	equ	0xFF3
  2163                           intcon	equ	0xFF2
  2164                           intcon2	equ	0xFF1
  2165                           intcon3	equ	0xFF0
  2166                           postinc0	equ	0xFEE
  2167                           wreg	equ	0xFE8
  2168                           postdec1	equ	0xFE5
  2169                           fsr1l	equ	0xFE1
  2170                           status	equ	0xFD8
  2171                           
  2172 ;; *************** function _ConfigureOscillator *****************
  2173 ;; Defined at:
  2174 ;;		line 24 in file "system.c"
  2175 ;; Parameters:    Size  Location     Type
  2176 ;;		None
  2177 ;; Auto vars:     Size  Location     Type
  2178 ;;		None
  2179 ;; Return value:  Size  Location     Type
  2180 ;;                  1    wreg      void 
  2181 ;; Registers used:
  2182 ;;		wreg, status,2
  2183 ;; Tracked objects:
  2184 ;;		On entry : 0/0
  2185 ;;		On exit  : 0/0
  2186 ;;		Unchanged: 0/0
  2187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2188 ;;      Params:         0       0       0       0       0       0       0       0       0
  2189 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2190 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2191 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2192 ;;Total ram usage:        0 bytes
  2193 ;; Hardware stack levels used:    1
  2194 ;; Hardware stack levels required when called:    3
  2195 ;; This function calls:
  2196 ;;		Nothing
  2197 ;; This function is called by:
  2198 ;;		_main
  2199 ;; This function uses a non-reentrant model
  2200 ;;
  2201                           
  2202                           	psect	text9
  2203  000966                     __ptext9:
  2204                           	opt stack 0
  2205  000966                     _ConfigureOscillator:
  2206                           	opt stack 27
  2207                           
  2208                           ;system.c: 27: OSCCONbits.IRCF = 0b111;
  2209                           
  2210                           ;incstack = 0
  2211  000966  88D3               	bsf	4051,4,c	;volatile
  2212  000968  8AD3               	bsf	4051,5,c	;volatile
  2213  00096A  8CD3               	bsf	4051,6,c	;volatile
  2214                           
  2215                           ;system.c: 28: OSCCONbits.SCS = 0b11;
  2216  00096C  0E03               	movlw	3
  2217  00096E  12D3               	iorwf	4051,f,c	;volatile
  2218  000970  0012               	return		;funcret
  2219  000972                     __end_of_ConfigureOscillator:
  2220                           	opt stack 0
  2221                           tblptru	equ	0xFF8
  2222                           tblptrh	equ	0xFF7
  2223                           tblptrl	equ	0xFF6
  2224                           tablat	equ	0xFF5
  2225                           prodh	equ	0xFF4
  2226                           prodl	equ	0xFF3
  2227                           intcon	equ	0xFF2
  2228                           intcon2	equ	0xFF1
  2229                           intcon3	equ	0xFF0
  2230                           postinc0	equ	0xFEE
  2231                           wreg	equ	0xFE8
  2232                           postdec1	equ	0xFE5
  2233                           fsr1l	equ	0xFE1
  2234                           status	equ	0xFD8
  2235                           
  2236 ;; *************** function _high_isr *****************
  2237 ;; Defined at:
  2238 ;;		line 70 in file "interrupts.c"
  2239 ;; Parameters:    Size  Location     Type
  2240 ;;		None
  2241 ;; Auto vars:     Size  Location     Type
  2242 ;;		None
  2243 ;; Return value:  Size  Location     Type
  2244 ;;                  1    wreg      void 
  2245 ;; Registers used:
  2246 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2247 ;; Tracked objects:
  2248 ;;		On entry : 0/0
  2249 ;;		On exit  : 0/0
  2250 ;;		Unchanged: 0/0
  2251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2252 ;;      Params:         0       0       0       0       0       0       0       0       0
  2253 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2254 ;;      Temps:         20       0       0       0       0       0       0       0       0
  2255 ;;      Totals:        20       0       0       0       0       0       0       0       0
  2256 ;;Total ram usage:       20 bytes
  2257 ;; Hardware stack levels used:    1
  2258 ;; Hardware stack levels required when called:    2
  2259 ;; This function calls:
  2260 ;;		_mot_3_step_count
  2261 ;;		i2_finish
  2262 ;; This function is called by:
  2263 ;;		Interrupt level 2
  2264 ;; This function uses a non-reentrant model
  2265 ;;
  2266                           
  2267                           	psect	intcode
  2268  000008                     __pintcode:
  2269                           	opt stack 0
  2270  000008                     _high_isr:
  2271                           	opt stack 27
  2272                           
  2273                           ;incstack = 0
  2274  000008  8254               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  2275  00000A  ED0B  F002         	call	int_func,f	;refresh shadow registers
  2276                           tblptru	equ	0xFF8
  2277                           tblptrh	equ	0xFF7
  2278                           tblptrl	equ	0xFF6
  2279                           tablat	equ	0xFF5
  2280                           prodh	equ	0xFF4
  2281                           prodl	equ	0xFF3
  2282                           intcon	equ	0xFF2
  2283                           intcon2	equ	0xFF1
  2284                           intcon3	equ	0xFF0
  2285                           postinc0	equ	0xFEE
  2286                           wreg	equ	0xFE8
  2287                           postdec1	equ	0xFE5
  2288                           fsr1l	equ	0xFE1
  2289                           status	equ	0xFD8
  2290                           
  2291                           	psect	intcode_body
  2292  000416                     __pintcode_body:
  2293                           	opt stack 27
  2294  000416                     int_func:
  2295                           	opt stack 27
  2296  000416  0006               	pop		; remove dummy address from shadow register refresh
  2297  000418  CFFA F036          	movff	pclath,??_high_isr+2
  2298  00041C  CFFB F037          	movff	pclatu,??_high_isr+3
  2299  000420  CFE9 F038          	movff	fsr0l,??_high_isr+4
  2300  000424  CFEA F039          	movff	fsr0h,??_high_isr+5
  2301  000428  CFE1 F03A          	movff	fsr1l,??_high_isr+6
  2302  00042C  CFE2 F03B          	movff	fsr1h,??_high_isr+7
  2303  000430  CFD9 F03C          	movff	fsr2l,??_high_isr+8
  2304  000434  CFDA F03D          	movff	fsr2h,??_high_isr+9
  2305  000438  CFF3 F03E          	movff	prodl,??_high_isr+10
  2306  00043C  CFF4 F03F          	movff	prodh,??_high_isr+11
  2307  000440  CFF6 F040          	movff	tblptrl,??_high_isr+12
  2308  000444  CFF7 F041          	movff	tblptrh,??_high_isr+13
  2309  000448  CFF8 F042          	movff	tblptru,??_high_isr+14
  2310  00044C  CFF5 F043          	movff	tablat,??_high_isr+15
  2311  000450  C054  F044         	movff	btemp,??_high_isr+16
  2312  000454  C055  F045         	movff	btemp+1,??_high_isr+17
  2313  000458  C056  F046         	movff	btemp+2,??_high_isr+18
  2314  00045C  C057  F047         	movff	btemp+3,??_high_isr+19
  2315                           
  2316                           ;interrupts.c: 71: if (INTCONbits.TMR0IF) {
  2317  000460  A4F2               	btfss	intcon,2,c	;volatile
  2318  000462  D085               	goto	i2l97
  2319                           
  2320                           ;interrupts.c: 73: INTCONbits.TMR0IF = 0;
  2321  000464  94F2               	bcf	intcon,2,c	;volatile
  2322                           
  2323                           ;interrupts.c: 74: TMR0 = 250;
  2324  000466  0E00               	movlw	0
  2325  000468  6ED7               	movwf	4055,c	;volatile
  2326  00046A  0EFA               	movlw	250
  2327  00046C  6ED6               	movwf	4054,c	;volatile
  2328                           
  2329                           ;interrupts.c: 75: MOT_1_count++;
  2330  00046E  4A0D               	infsnz	_MOT_1_count,f,c
  2331  000470  2A0E               	incf	_MOT_1_count+1,f,c
  2332                           
  2333                           ;interrupts.c: 76: MOT_2_count++;
  2334  000472  0100               	movlb	0	; () banked
  2335  000474  4B81               	infsnz	_MOT_2_count& (0+255),f,b
  2336  000476  2B82               	incf	(_MOT_2_count+1)& (0+255),f,b
  2337                           
  2338                           ; BSR set to: 0
  2339                           ;interrupts.c: 77: MOT_3_count++;
  2340  000478  4A0B               	infsnz	_MOT_3_count,f,c
  2341  00047A  2A0C               	incf	_MOT_3_count+1,f,c
  2342                           
  2343                           ; BSR set to: 0
  2344                           ;interrupts.c: 78: MOT_4_count++;
  2345  00047C  4B7F               	infsnz	_MOT_4_count& (0+255),f,b
  2346  00047E  2B80               	incf	(_MOT_4_count+1)& (0+255),f,b
  2347                           
  2348                           ;interrupts.c: 80: if (MOT_1) {
  2349  000480  5027               	movf	_MOT_1,w,c
  2350  000482  B4D8               	btfsc	status,2,c
  2351  000484  D03B               	goto	i2l101
  2352                           
  2353                           ; BSR set to: 0
  2354                           ;interrupts.c: 82: if (MOT_1_count == count_1) {
  2355  000486  504C               	movf	_count_1,w,c
  2356  000488  180D               	xorwf	_MOT_1_count,w,c
  2357  00048A  E138               	bnz	i2l1663
  2358  00048C  504D               	movf	_count_1+1,w,c
  2359  00048E  180E               	xorwf	_MOT_1_count+1,w,c
  2360  000490  A4D8               	btfss	status,2,c
  2361  000492  D034               	goto	i2l101
  2362                           
  2363                           ; BSR set to: 0
  2364                           ;interrupts.c: 83: MOT_1_count = 0;
  2365  000494  0E00               	movlw	0
  2366  000496  6E0E               	movwf	_MOT_1_count+1,c
  2367  000498  0E00               	movlw	0
  2368  00049A  6E0D               	movwf	_MOT_1_count,c
  2369                           
  2370                           ; BSR set to: 0
  2371                           ;interrupts.c: 84: LATAbits.LA3 = !PORTAbits.RA3;
  2372  00049C  B680               	btfsc	3968,3,c	;volatile
  2373  00049E  D003               	goto	i2u95_40
  2374  0004A0  6A34               	clrf	??_high_isr& (0+255),c
  2375  0004A2  2A34               	incf	??_high_isr& (0+255),f,c
  2376  0004A4  D001               	goto	i2u96_48
  2377  0004A6                     i2u95_40:
  2378  0004A6  6A34               	clrf	??_high_isr& (0+255),c
  2379  0004A8                     i2u96_48:
  2380  0004A8  4634               	rlncf	??_high_isr,f,c
  2381  0004AA  4634               	rlncf	??_high_isr,f,c
  2382  0004AC  4634               	rlncf	??_high_isr,f,c
  2383  0004AE  5089               	movf	3977,w,c	;volatile
  2384  0004B0  1834               	xorwf	??_high_isr,w,c
  2385  0004B2  0BF7               	andlw	-9
  2386  0004B4  1834               	xorwf	??_high_isr,w,c
  2387  0004B6  6E89               	movwf	3977,c	;volatile
  2388                           
  2389                           ;interrupts.c: 85: mot_1_steps++;
  2390  0004B8  4A09               	infsnz	_mot_1_steps,f,c
  2391  0004BA  2A0A               	incf	_mot_1_steps+1,f,c
  2392                           
  2393                           ;interrupts.c: 86: if (mot_1_steps == 200) {
  2394  0004BC  0EC8               	movlw	200
  2395  0004BE  1809               	xorwf	_mot_1_steps,w,c
  2396  0004C0  100A               	iorwf	_mot_1_steps+1,w,c
  2397  0004C2  A4D8               	btfss	status,2,c
  2398  0004C4  D006               	goto	i2l100
  2399                           
  2400                           ;interrupts.c: 88: mot_1_steps = 0;
  2401  0004C6  0E00               	movlw	0
  2402  0004C8  6E0A               	movwf	_mot_1_steps+1,c
  2403  0004CA  0E00               	movlw	0
  2404  0004CC  6E09               	movwf	_mot_1_steps,c
  2405                           
  2406                           ;interrupts.c: 89: turns_count++;
  2407  0004CE  4A03               	infsnz	_turns_count,f,c
  2408  0004D0  2A04               	incf	_turns_count+1,f,c
  2409  0004D2                     i2l100:
  2410                           
  2411                           ;interrupts.c: 90: }
  2412                           ;interrupts.c: 91: if (turns_count == 8*turns) {
  2413  0004D2  C050  F034         	movff	_turns,??_high_isr
  2414  0004D6  C051  F035         	movff	_turns+1,??_high_isr+1
  2415  0004DA  90D8               	bcf	status,0,c
  2416  0004DC  3634               	rlcf	??_high_isr,f,c
  2417  0004DE  3635               	rlcf	??_high_isr+1,f,c
  2418  0004E0  90D8               	bcf	status,0,c
  2419  0004E2  3634               	rlcf	??_high_isr,f,c
  2420  0004E4  3635               	rlcf	??_high_isr+1,f,c
  2421  0004E6  90D8               	bcf	status,0,c
  2422  0004E8  3634               	rlcf	??_high_isr,f,c
  2423  0004EA  3635               	rlcf	??_high_isr+1,f,c
  2424  0004EC  5003               	movf	_turns_count,w,c
  2425  0004EE  1834               	xorwf	??_high_isr,w,c
  2426  0004F0  E105               	bnz	i2l1663
  2427  0004F2  5004               	movf	_turns_count+1,w,c
  2428  0004F4  1835               	xorwf	??_high_isr+1,w,c
  2429  0004F6  B4D8               	btfsc	status,2,c
  2430                           
  2431                           ;interrupts.c: 93: finish();
  2432  0004F8  EC78  F004         	call	i2_finish	;wreg free
  2433  0004FC                     i2l101:
  2434  0004FC                     i2l1663:
  2435                           
  2436                           ;interrupts.c: 94: }
  2437                           ;interrupts.c: 95: }
  2438                           ;interrupts.c: 96: }
  2439                           ;interrupts.c: 98: if (MOT_3) {
  2440  0004FC  5026               	movf	_MOT_3,w,c
  2441  0004FE  B4D8               	btfsc	status,2,c
  2442  000500  D0CD               	goto	i2l127
  2443                           
  2444                           ;interrupts.c: 100: if (MOT_3_count == count_3) {
  2445  000502  504A               	movf	_count_3,w,c
  2446  000504  180B               	xorwf	_MOT_3_count,w,c
  2447  000506  E103               	bnz	i2u100_41
  2448  000508  504B               	movf	_count_3+1,w,c
  2449  00050A  180C               	xorwf	_MOT_3_count+1,w,c
  2450  00050C  A4D8               	btfss	status,2,c
  2451  00050E                     i2u100_41:
  2452  00050E  D0C6               	goto	i2l127
  2453                           
  2454                           ;interrupts.c: 101: MOT_3_count = 0;
  2455  000510  0E00               	movlw	0
  2456  000512  6E0C               	movwf	_MOT_3_count+1,c
  2457  000514  0E00               	movlw	0
  2458  000516  6E0B               	movwf	_MOT_3_count,c
  2459                           
  2460                           ;interrupts.c: 102: LATCbits.LC1 = !PORTCbits.RC1;
  2461  000518  B282               	btfsc	3970,1,c	;volatile
  2462  00051A  D003               	goto	i2u101_40
  2463  00051C  6A34               	clrf	??_high_isr& (0+255),c
  2464  00051E  2A34               	incf	??_high_isr& (0+255),f,c
  2465  000520  D001               	goto	i2u102_48
  2466  000522                     i2u101_40:
  2467  000522  6A34               	clrf	??_high_isr& (0+255),c
  2468  000524                     i2u102_48:
  2469  000524  4634               	rlncf	??_high_isr,f,c
  2470  000526  508B               	movf	3979,w,c	;volatile
  2471  000528  1834               	xorwf	??_high_isr,w,c
  2472  00052A  0BFD               	andlw	-3
  2473  00052C  1834               	xorwf	??_high_isr,w,c
  2474  00052E  6E8B               	movwf	3979,c	;volatile
  2475                           
  2476                           ;interrupts.c: 103: mot_3_steps++;
  2477  000530  4A07               	infsnz	_mot_3_steps,f,c
  2478  000532  2A08               	incf	_mot_3_steps+1,f,c
  2479                           
  2480                           ;interrupts.c: 105: if (mot_3_steps == mot_3_step_count(length, 1)) {
  2481  000534  C04E  F02E         	movff	_length,mot_3_step_count@l
  2482  000538  C04F  F02F         	movff	_length+1,mot_3_step_count@l+1
  2483  00053C  0E00               	movlw	0
  2484  00053E  6E31               	movwf	mot_3_step_count@ms+1,c
  2485  000540  0E01               	movlw	1
  2486  000542  6E30               	movwf	mot_3_step_count@ms,c
  2487  000544  EC55  F004         	call	_mot_3_step_count	;wreg free
  2488  000548  5007               	movf	_mot_3_steps,w,c
  2489  00054A  182E               	xorwf	?_mot_3_step_count,w,c
  2490  00054C  E103               	bnz	i2u103_41
  2491  00054E  5008               	movf	_mot_3_steps+1,w,c
  2492  000550  182F               	xorwf	?_mot_3_step_count+1,w,c
  2493  000552  A4D8               	btfss	status,2,c
  2494  000554                     i2u103_41:
  2495  000554  D0A3               	goto	i2l127
  2496                           
  2497                           ;interrupts.c: 107: DIR_3 = !DIR_3;
  2498  000556  5025               	movf	_DIR_3,w,c
  2499  000558  A4D8               	btfss	status,2,c
  2500  00055A  D002               	goto	i2u104_40
  2501  00055C  0E01               	movlw	1
  2502  00055E  D001               	goto	i2u105_40
  2503  000560                     i2u104_40:
  2504  000560  0E00               	movlw	0
  2505  000562                     i2u105_40:
  2506  000562  6E25               	movwf	_DIR_3,c
  2507                           
  2508                           ;interrupts.c: 108: mot_3_steps = 0;
  2509  000564  0E00               	movlw	0
  2510  000566  6E08               	movwf	_mot_3_steps+1,c
  2511  000568  0E00               	movlw	0
  2512  00056A  6E07               	movwf	_mot_3_steps,c
  2513                           
  2514                           ;interrupts.c: 109: }
  2515                           ;interrupts.c: 110: }
  2516                           ;interrupts.c: 111: }
  2517                           ;interrupts.c: 121: } else if (PIR1bits.TMR1IF) {
  2518  00056C  D097               	goto	i2l127
  2519  00056E                     i2l97:
  2520  00056E  A09E               	btfss	3998,0,c	;volatile
  2521  000570  D04F               	goto	i2l106
  2522                           
  2523                           ;interrupts.c: 123: PIR1bits.TMR1IF = 0;
  2524  000572  909E               	bcf	3998,0,c	;volatile
  2525                           
  2526                           ;interrupts.c: 124: TMR1 = 0xD8F0;
  2527  000574  0ED8               	movlw	216
  2528  000576  6ECF               	movwf	4047,c	;volatile
  2529  000578  0EF0               	movlw	240
  2530  00057A  6ECE               	movwf	4046,c	;volatile
  2531                           
  2532                           ;interrupts.c: 125: if (MOT_2) {
  2533  00057C  5024               	movf	_MOT_2,w,c
  2534  00057E  B4D8               	btfsc	status,2,c
  2535  000580  D00D               	goto	i2l107
  2536                           
  2537                           ;interrupts.c: 127: LATAbits.LA5 = !PORTAbits.RA5;
  2538  000582  BA80               	btfsc	3968,5,c	;volatile
  2539  000584  D003               	goto	i2u108_40
  2540  000586  6A34               	clrf	??_high_isr& (0+255),c
  2541  000588  2A34               	incf	??_high_isr& (0+255),f,c
  2542  00058A  D001               	goto	i2u109_48
  2543  00058C                     i2u108_40:
  2544  00058C  6A34               	clrf	??_high_isr& (0+255),c
  2545  00058E                     i2u109_48:
  2546  00058E  3A34               	swapf	??_high_isr,f,c
  2547  000590  4634               	rlncf	??_high_isr,f,c
  2548  000592  5089               	movf	3977,w,c	;volatile
  2549  000594  1834               	xorwf	??_high_isr,w,c
  2550  000596  0BDF               	andlw	-33
  2551  000598  1834               	xorwf	??_high_isr,w,c
  2552  00059A  6E89               	movwf	3977,c	;volatile
  2553  00059C                     i2l107:
  2554                           
  2555                           ;interrupts.c: 128: }
  2556                           ;interrupts.c: 130: if (MOT_3) {
  2557  00059C  5026               	movf	_MOT_3,w,c
  2558  00059E  B4D8               	btfsc	status,2,c
  2559  0005A0  D00C               	goto	i2l108
  2560                           
  2561                           ;interrupts.c: 132: LATCbits.LC1 = !PORTCbits.RC1;
  2562  0005A2  B282               	btfsc	3970,1,c	;volatile
  2563  0005A4  D003               	goto	i2u111_40
  2564  0005A6  6A34               	clrf	??_high_isr& (0+255),c
  2565  0005A8  2A34               	incf	??_high_isr& (0+255),f,c
  2566  0005AA  D001               	goto	i2u112_48
  2567  0005AC                     i2u111_40:
  2568  0005AC  6A34               	clrf	??_high_isr& (0+255),c
  2569  0005AE                     i2u112_48:
  2570  0005AE  4634               	rlncf	??_high_isr,f,c
  2571  0005B0  508B               	movf	3979,w,c	;volatile
  2572  0005B2  1834               	xorwf	??_high_isr,w,c
  2573  0005B4  0BFD               	andlw	-3
  2574  0005B6  1834               	xorwf	??_high_isr,w,c
  2575  0005B8  6E8B               	movwf	3979,c	;volatile
  2576  0005BA                     i2l108:
  2577                           
  2578                           ;interrupts.c: 133: }
  2579                           ;interrupts.c: 135: if (MOT_4) {
  2580  0005BA  5053               	movf	_MOT_4,w,c
  2581  0005BC  B4D8               	btfsc	status,2,c
  2582  0005BE  D06E               	goto	i2l127
  2583                           
  2584                           ;interrupts.c: 137: if(move_4) {
  2585  0005C0  5023               	movf	_move_4,w,c
  2586  0005C2  B4D8               	btfsc	status,2,c
  2587  0005C4  D06B               	goto	i2l127
  2588                           
  2589                           ;interrupts.c: 138: LATBbits.LB6 = !PORTBbits.RB6;
  2590  0005C6  BC81               	btfsc	3969,6,c	;volatile
  2591  0005C8  D003               	goto	i2u115_40
  2592  0005CA  6A34               	clrf	??_high_isr& (0+255),c
  2593  0005CC  2A34               	incf	??_high_isr& (0+255),f,c
  2594  0005CE  D001               	goto	i2u116_48
  2595  0005D0                     i2u115_40:
  2596  0005D0  6A34               	clrf	??_high_isr& (0+255),c
  2597  0005D2                     i2u116_48:
  2598  0005D2  3A34               	swapf	??_high_isr,f,c
  2599  0005D4  4634               	rlncf	??_high_isr,f,c
  2600  0005D6  4634               	rlncf	??_high_isr,f,c
  2601  0005D8  508A               	movf	3978,w,c	;volatile
  2602  0005DA  1834               	xorwf	??_high_isr,w,c
  2603  0005DC  0BBF               	andlw	-65
  2604  0005DE  1834               	xorwf	??_high_isr,w,c
  2605  0005E0  6E8A               	movwf	3978,c	;volatile
  2606                           
  2607                           ;interrupts.c: 140: if (mot_4_steps == 2*steps_4) {
  2608  0005E2  C017  F034         	movff	_steps_4,??_high_isr
  2609  0005E6  C018  F035         	movff	_steps_4+1,??_high_isr+1
  2610  0005EA  90D8               	bcf	status,0,c
  2611  0005EC  3634               	rlcf	??_high_isr,f,c
  2612  0005EE  3635               	rlcf	??_high_isr+1,f,c
  2613  0005F0  5005               	movf	_mot_4_steps,w,c
  2614  0005F2  1834               	xorwf	??_high_isr,w,c
  2615  0005F4  E10A               	bnz	i2l1695
  2616  0005F6  5006               	movf	_mot_4_steps+1,w,c
  2617  0005F8  1835               	xorwf	??_high_isr+1,w,c
  2618  0005FA  A4D8               	btfss	status,2,c
  2619  0005FC  D006               	goto	i2l111
  2620                           
  2621                           ;interrupts.c: 141: move_4 = 0;
  2622  0005FE  0E00               	movlw	0
  2623  000600  6E23               	movwf	_move_4,c
  2624                           
  2625                           ;interrupts.c: 142: mot_4_steps = 0;
  2626  000602  0E00               	movlw	0
  2627  000604  6E06               	movwf	_mot_4_steps+1,c
  2628  000606  0E00               	movlw	0
  2629  000608  6E05               	movwf	_mot_4_steps,c
  2630  00060A                     i2l111:
  2631  00060A                     i2l1695:
  2632                           
  2633                           ;interrupts.c: 143: }
  2634                           ;interrupts.c: 144: mot_4_steps++;
  2635  00060A  4A05               	infsnz	_mot_4_steps,f,c
  2636  00060C  2A06               	incf	_mot_4_steps+1,f,c
  2637                           
  2638                           ;interrupts.c: 145: }
  2639                           ;interrupts.c: 146: }
  2640                           ;interrupts.c: 153: } else if (PIR1bits.RCIF) {
  2641  00060E  D046               	goto	i2l127
  2642  000610                     i2l106:
  2643  000610  AA9E               	btfss	3998,5,c	;volatile
  2644  000612  D01A               	goto	i2l113
  2645                           
  2646                           ;interrupts.c: 155: PIR1bits.RCIF = 0;
  2647  000614  9A9E               	bcf	3998,5,c	;volatile
  2648                           
  2649                           ;interrupts.c: 156: palabra[n] = RCREG;
  2650  000616  0E60               	movlw	low _palabra
  2651  000618  2413               	addwf	_n,w,c
  2652  00061A  6ED9               	movwf	fsr2l,c
  2653  00061C  0E00               	movlw	high _palabra
  2654  00061E  2014               	addwfc	_n+1,w,c
  2655  000620  6EDA               	movwf	fsr2h,c
  2656  000622  CFAE FFDF          	movff	4014,indf2	;volatile
  2657                           
  2658                           ;interrupts.c: 157: n++;
  2659  000626  4A13               	infsnz	_n,f,c
  2660  000628  2A14               	incf	_n+1,f,c
  2661                           
  2662                           ;interrupts.c: 158: if (RCREG == '\n') {
  2663  00062A  0E0A               	movlw	10
  2664  00062C  18AE               	xorwf	4014,w,c	;volatile
  2665  00062E  A4D8               	btfss	status,2,c
  2666  000630  D035               	goto	i2l127
  2667                           
  2668                           ;interrupts.c: 159: TXREG = palabra[0];
  2669  000632  C060  FFAD         	movff	_palabra,4013	;volatile
  2670  000636  A89E               	btfss	3998,4,c	;volatile
  2671  000638  D7FE               	goto	i2l116
  2672                           
  2673                           ;interrupts.c: 161: recibi = 1;
  2674  00063A  0E01               	movlw	1
  2675  00063C  6E21               	movwf	_recibi,c
  2676                           
  2677                           ;interrupts.c: 162: n = 0;
  2678  00063E  0E00               	movlw	0
  2679  000640  6E14               	movwf	_n+1,c
  2680  000642  0E00               	movlw	0
  2681  000644  6E13               	movwf	_n,c
  2682                           
  2683                           ;interrupts.c: 163: }
  2684                           ;interrupts.c: 164: } else if (PIR1bits.ADIF) {
  2685  000646  D02A               	goto	i2l127
  2686  000648                     i2l113:
  2687  000648  AC9E               	btfss	3998,6,c	;volatile
  2688  00064A  D00A               	goto	i2l119
  2689                           
  2690                           ;interrupts.c: 166: PIR1bits.ADIF = 0;
  2691  00064C  9C9E               	bcf	3998,6,c	;volatile
  2692                           
  2693                           ;interrupts.c: 172: ADC_previous_value = ADC_value_press;
  2694  00064E  C00F  F015         	movff	_ADC_value_press,_ADC_previous_value
  2695  000652  C010  F016         	movff	_ADC_value_press+1,_ADC_previous_value+1
  2696                           
  2697                           ;interrupts.c: 173: ADC_value_press = ADRES;
  2698  000656  CFC3 F00F          	movff	4035,_ADC_value_press	;volatile
  2699  00065A  CFC4 F010          	movff	4036,_ADC_value_press+1	;volatile
  2700                           
  2701                           ;interrupts.c: 175: } else if (INTCON3bits.INT1IF) {
  2702  00065E  D01E               	goto	i2l127
  2703  000660                     i2l119:
  2704  000660  A0F0               	btfss	intcon3,0,c	;volatile
  2705  000662  D00C               	goto	i2l121
  2706                           
  2707                           ;interrupts.c: 177: INTCON3bits.INT1IF = 0;
  2708  000664  90F0               	bcf	intcon3,0,c	;volatile
  2709                           
  2710                           ;interrupts.c: 179: if (winding) {
  2711  000666  5022               	movf	_winding,w,c
  2712  000668  B4D8               	btfsc	status,2,c
  2713  00066A  D003               	goto	i2l122
  2714                           
  2715                           ;interrupts.c: 181: finish();
  2716  00066C  EC78  F004         	call	i2_finish	;wreg free
  2717                           
  2718                           ;interrupts.c: 186: } else {
  2719  000670  D015               	goto	i2l127
  2720  000672                     i2l122:
  2721                           
  2722                           ;interrupts.c: 188: DIR_3 = !DIR_3;
  2723  000672  5025               	movf	_DIR_3,w,c
  2724  000674  A4D8               	btfss	status,2,c
  2725  000676  D010               	goto	i2u128_40
  2726  000678  0E01               	movlw	1
  2727  00067A  D00F               	goto	i2u129_40
  2728  00067C                     i2l121:
  2729  00067C  A2F0               	btfss	intcon3,1,c	;volatile
  2730  00067E  D00E               	goto	i2l127
  2731                           
  2732                           ;interrupts.c: 193: INTCON3bits.INT2IF = 0;
  2733  000680  92F0               	bcf	intcon3,1,c	;volatile
  2734                           
  2735                           ;interrupts.c: 195: if (winding) {
  2736  000682  5022               	movf	_winding,w,c
  2737  000684  B4D8               	btfsc	status,2,c
  2738  000686  D003               	goto	i2l126
  2739                           
  2740                           ;interrupts.c: 197: finish();
  2741  000688  EC78  F004         	call	i2_finish	;wreg free
  2742                           
  2743                           ;interrupts.c: 202: } else {
  2744  00068C  D007               	goto	i2l127
  2745  00068E                     i2l126:
  2746                           
  2747                           ;interrupts.c: 204: DIR_3 = !DIR_3;
  2748  00068E  5025               	movf	_DIR_3,w,c
  2749  000690  A4D8               	btfss	status,2,c
  2750  000692  D002               	goto	i2u128_40
  2751  000694  0E01               	movlw	1
  2752  000696  D001               	goto	i2u129_40
  2753  000698                     i2u128_40:
  2754  000698  0E00               	movlw	0
  2755  00069A                     i2u129_40:
  2756  00069A  6E25               	movwf	_DIR_3,c
  2757  00069C                     i2l127:
  2758  00069C  C047  F057         	movff	??_high_isr+19,btemp+3
  2759  0006A0  C046  F056         	movff	??_high_isr+18,btemp+2
  2760  0006A4  C045  F055         	movff	??_high_isr+17,btemp+1
  2761  0006A8  C044  F054         	movff	??_high_isr+16,btemp
  2762  0006AC  C043  FFF5         	movff	??_high_isr+15,tablat
  2763  0006B0  C042  FFF8         	movff	??_high_isr+14,tblptru
  2764  0006B4  C041  FFF7         	movff	??_high_isr+13,tblptrh
  2765  0006B8  C040  FFF6         	movff	??_high_isr+12,tblptrl
  2766  0006BC  C03F  FFF4         	movff	??_high_isr+11,prodh
  2767  0006C0  C03E  FFF3         	movff	??_high_isr+10,prodl
  2768  0006C4  C03D  FFDA         	movff	??_high_isr+9,fsr2h
  2769  0006C8  C03C  FFD9         	movff	??_high_isr+8,fsr2l
  2770  0006CC  C03B  FFE2         	movff	??_high_isr+7,fsr1h
  2771  0006D0  C03A  FFE1         	movff	??_high_isr+6,fsr1l
  2772  0006D4  C039  FFEA         	movff	??_high_isr+5,fsr0h
  2773  0006D8  C038  FFE9         	movff	??_high_isr+4,fsr0l
  2774  0006DC  C037  FFFB         	movff	??_high_isr+3,pclatu
  2775  0006E0  C036  FFFA         	movff	??_high_isr+2,pclath
  2776  0006E4  9254               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  2777  0006E6  0011               	retfie		f
  2778  0006E8                     __end_of_high_isr:
  2779                           	opt stack 0
  2780                           pclatu	equ	0xFFB
  2781                           pclath	equ	0xFFA
  2782                           tblptru	equ	0xFF8
  2783                           tblptrh	equ	0xFF7
  2784                           tblptrl	equ	0xFF6
  2785                           tablat	equ	0xFF5
  2786                           prodh	equ	0xFF4
  2787                           prodl	equ	0xFF3
  2788                           intcon	equ	0xFF2
  2789                           intcon2	equ	0xFF1
  2790                           intcon3	equ	0xFF0
  2791                           postinc0	equ	0xFEE
  2792                           fsr0h	equ	0xFEA
  2793                           fsr0l	equ	0xFE9
  2794                           wreg	equ	0xFE8
  2795                           postdec1	equ	0xFE5
  2796                           fsr1h	equ	0xFE2
  2797                           fsr1l	equ	0xFE1
  2798                           indf2	equ	0xFDF
  2799                           fsr2h	equ	0xFDA
  2800                           fsr2l	equ	0xFD9
  2801                           status	equ	0xFD8
  2802                           
  2803 ;; *************** function i2_finish *****************
  2804 ;; Defined at:
  2805 ;;		line 277 in file "main.c"
  2806 ;; Parameters:    Size  Location     Type
  2807 ;;		None
  2808 ;; Auto vars:     Size  Location     Type
  2809 ;;		None
  2810 ;; Return value:  Size  Location     Type
  2811 ;;                  1    wreg      void 
  2812 ;; Registers used:
  2813 ;;		wreg, status,2
  2814 ;; Tracked objects:
  2815 ;;		On entry : 0/0
  2816 ;;		On exit  : 0/0
  2817 ;;		Unchanged: 0/0
  2818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2819 ;;      Params:         0       0       0       0       0       0       0       0       0
  2820 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2821 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2822 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2823 ;;Total ram usage:        0 bytes
  2824 ;; Hardware stack levels used:    1
  2825 ;; This function calls:
  2826 ;;		Nothing
  2827 ;; This function is called by:
  2828 ;;		_high_isr
  2829 ;; This function uses a non-reentrant model
  2830 ;;
  2831                           
  2832                           	psect	text11
  2833  0008F0                     __ptext11:
  2834                           	opt stack 0
  2835  0008F0                     i2_finish:
  2836                           	opt stack 28
  2837                           
  2838                           ;main.c: 279: T1CONbits.TMR1ON = 1;
  2839                           
  2840                           ;incstack = 0
  2841  0008F0  80CD               	bsf	4045,0,c	;volatile
  2842                           
  2843                           ;main.c: 280: T0CONbits.TMR0ON = 0;
  2844  0008F2  9ED5               	bcf	4053,7,c	;volatile
  2845                           
  2846                           ;main.c: 281: MOT_1 = MOT_3 = 0;
  2847  0008F4  0E00               	movlw	0
  2848  0008F6  6E26               	movwf	_MOT_3,c
  2849  0008F8  C026  F027         	movff	_MOT_3,_MOT_1
  2850                           
  2851                           ;main.c: 282: winding = 0;
  2852  0008FC  0E00               	movlw	0
  2853  0008FE  6E22               	movwf	_winding,c
  2854                           
  2855                           ;main.c: 283: MOT_4 = 1;
  2856  000900  0E01               	movlw	1
  2857  000902  6E53               	movwf	_MOT_4,c
  2858                           
  2859                           ;main.c: 284: DIR_4 = 1;
  2860  000904  0E01               	movlw	1
  2861  000906  6E1D               	movwf	_DIR_4,c
  2862                           
  2863                           ;main.c: 285: move_4 = 1;
  2864  000908  0E01               	movlw	1
  2865  00090A  6E23               	movwf	_move_4,c
  2866                           
  2867                           ;main.c: 287: finish_flag = 1;
  2868  00090C  0E01               	movlw	1
  2869  00090E  6E1B               	movwf	_finish_flag,c
  2870  000910  0012               	return		;funcret
  2871  000912                     __end_ofi2_finish:
  2872                           	opt stack 0
  2873                           pclatu	equ	0xFFB
  2874                           pclath	equ	0xFFA
  2875                           tblptru	equ	0xFF8
  2876                           tblptrh	equ	0xFF7
  2877                           tblptrl	equ	0xFF6
  2878                           tablat	equ	0xFF5
  2879                           prodh	equ	0xFF4
  2880                           prodl	equ	0xFF3
  2881                           intcon	equ	0xFF2
  2882                           intcon2	equ	0xFF1
  2883                           intcon3	equ	0xFF0
  2884                           postinc0	equ	0xFEE
  2885                           fsr0h	equ	0xFEA
  2886                           fsr0l	equ	0xFE9
  2887                           wreg	equ	0xFE8
  2888                           postdec1	equ	0xFE5
  2889                           fsr1h	equ	0xFE2
  2890                           fsr1l	equ	0xFE1
  2891                           indf2	equ	0xFDF
  2892                           fsr2h	equ	0xFDA
  2893                           fsr2l	equ	0xFD9
  2894                           status	equ	0xFD8
  2895                           
  2896 ;; *************** function _mot_3_step_count *****************
  2897 ;; Defined at:
  2898 ;;		line 245 in file "main.c"
  2899 ;; Parameters:    Size  Location     Type
  2900 ;;  l               2    6[COMRAM] unsigned int 
  2901 ;;  ms              2    8[COMRAM] unsigned int 
  2902 ;; Auto vars:     Size  Location     Type
  2903 ;;		None
  2904 ;; Return value:  Size  Location     Type
  2905 ;;                  2    6[COMRAM] unsigned int 
  2906 ;; Registers used:
  2907 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2908 ;; Tracked objects:
  2909 ;;		On entry : 0/0
  2910 ;;		On exit  : 0/0
  2911 ;;		Unchanged: 0/0
  2912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2913 ;;      Params:         4       0       0       0       0       0       0       0       0
  2914 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2915 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2916 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2917 ;;Total ram usage:        6 bytes
  2918 ;; Hardware stack levels used:    1
  2919 ;; Hardware stack levels required when called:    1
  2920 ;; This function calls:
  2921 ;;		i2___wmul
  2922 ;; This function is called by:
  2923 ;;		_high_isr
  2924 ;; This function uses a non-reentrant model
  2925 ;;
  2926                           
  2927                           	psect	text12
  2928  0008AA                     __ptext12:
  2929                           	opt stack 0
  2930  0008AA                     _mot_3_step_count:
  2931                           	opt stack 27
  2932                           
  2933                           ;main.c: 247: return (ms * l) / 2;
  2934                           
  2935                           ;incstack = 0
  2936  0008AA  C030  F028         	movff	mot_3_step_count@ms,i2___wmul@multiplier
  2937  0008AE  C031  F029         	movff	mot_3_step_count@ms+1,i2___wmul@multiplier+1
  2938  0008B2  C02E  F02A         	movff	mot_3_step_count@l,i2___wmul@multiplicand
  2939  0008B6  C02F  F02B         	movff	mot_3_step_count@l+1,i2___wmul@multiplicand+1
  2940  0008BA  EC42  F004         	call	i2___wmul	;wreg free
  2941  0008BE  90D8               	bcf	status,0,c
  2942  0008C0  3029               	rrcf	?i2___wmul+1,w,c
  2943  0008C2  6E32               	movwf	??_mot_3_step_count& (0+255),c
  2944  0008C4  3028               	rrcf	?i2___wmul,w,c
  2945  0008C6  6E2E               	movwf	?_mot_3_step_count,c
  2946  0008C8  C032  F02F         	movff	??_mot_3_step_count,?_mot_3_step_count+1
  2947  0008CC  0012               	return	
  2948  0008CE                     __end_of_mot_3_step_count:
  2949                           	opt stack 0
  2950                           pclatu	equ	0xFFB
  2951                           pclath	equ	0xFFA
  2952                           tblptru	equ	0xFF8
  2953                           tblptrh	equ	0xFF7
  2954                           tblptrl	equ	0xFF6
  2955                           tablat	equ	0xFF5
  2956                           prodh	equ	0xFF4
  2957                           prodl	equ	0xFF3
  2958                           intcon	equ	0xFF2
  2959                           intcon2	equ	0xFF1
  2960                           intcon3	equ	0xFF0
  2961                           postinc0	equ	0xFEE
  2962                           fsr0h	equ	0xFEA
  2963                           fsr0l	equ	0xFE9
  2964                           wreg	equ	0xFE8
  2965                           postdec1	equ	0xFE5
  2966                           fsr1h	equ	0xFE2
  2967                           fsr1l	equ	0xFE1
  2968                           indf2	equ	0xFDF
  2969                           fsr2h	equ	0xFDA
  2970                           fsr2l	equ	0xFD9
  2971                           status	equ	0xFD8
  2972                           
  2973 ;; *************** function i2___wmul *****************
  2974 ;; Defined at:
  2975 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
  2976 ;; Parameters:    Size  Location     Type
  2977 ;;  multiplier      2    0[COMRAM] unsigned int 
  2978 ;;  multiplicand    2    2[COMRAM] unsigned int 
  2979 ;; Auto vars:     Size  Location     Type
  2980 ;;  __wmul          2    4[COMRAM] unsigned int 
  2981 ;; Return value:  Size  Location     Type
  2982 ;;                  2    0[COMRAM] unsigned int 
  2983 ;; Registers used:
  2984 ;;		wreg, status,2, status,0, prodl, prodh
  2985 ;; Tracked objects:
  2986 ;;		On entry : 0/0
  2987 ;;		On exit  : 0/0
  2988 ;;		Unchanged: 0/0
  2989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2990 ;;      Params:         4       0       0       0       0       0       0       0       0
  2991 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2992 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2993 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2994 ;;Total ram usage:        6 bytes
  2995 ;; Hardware stack levels used:    1
  2996 ;; This function calls:
  2997 ;;		Nothing
  2998 ;; This function is called by:
  2999 ;;		_mot_3_step_count
  3000 ;; This function uses a non-reentrant model
  3001 ;;
  3002                           
  3003                           	psect	text13
  3004  000884                     __ptext13:
  3005                           	opt stack 0
  3006  000884                     i2___wmul:
  3007                           	opt stack 27
  3008                           
  3009                           ;incstack = 0
  3010  000884  5028               	movf	i2___wmul@multiplier,w,c
  3011  000886  022A               	mulwf	i2___wmul@multiplicand,c
  3012  000888  CFF3 F02C          	movff	prodl,i2___wmul@product
  3013  00088C  CFF4 F02D          	movff	prodh,i2___wmul@product+1
  3014  000890  5028               	movf	i2___wmul@multiplier,w,c
  3015  000892  022B               	mulwf	i2___wmul@multiplicand+1,c
  3016  000894  50F3               	movf	prodl,w,c
  3017  000896  262D               	addwf	i2___wmul@product+1,f,c
  3018  000898  5029               	movf	i2___wmul@multiplier+1,w,c
  3019  00089A  022A               	mulwf	i2___wmul@multiplicand,c
  3020  00089C  50F3               	movf	prodl,w,c
  3021  00089E  262D               	addwf	i2___wmul@product+1,f,c
  3022  0008A0  C02C  F028         	movff	i2___wmul@product,?i2___wmul
  3023  0008A4  C02D  F029         	movff	i2___wmul@product+1,?i2___wmul+1
  3024  0008A8  0012               	return	
  3025  0008AA                     __end_ofi2___wmul:
  3026                           	opt stack 0
  3027  0000                     pclatu	equ	0xFFB
  3028                           pclath	equ	0xFFA
  3029                           tblptru	equ	0xFF8
  3030                           tblptrh	equ	0xFF7
  3031                           tblptrl	equ	0xFF6
  3032                           tablat	equ	0xFF5
  3033                           prodh	equ	0xFF4
  3034                           prodl	equ	0xFF3
  3035                           intcon	equ	0xFF2
  3036                           intcon2	equ	0xFF1
  3037                           intcon3	equ	0xFF0
  3038                           postinc0	equ	0xFEE
  3039                           fsr0h	equ	0xFEA
  3040                           fsr0l	equ	0xFE9
  3041                           wreg	equ	0xFE8
  3042                           postdec1	equ	0xFE5
  3043                           fsr1h	equ	0xFE2
  3044                           fsr1l	equ	0xFE1
  3045                           indf2	equ	0xFDF
  3046                           fsr2h	equ	0xFDA
  3047                           fsr2l	equ	0xFD9
  3048                           status	equ	0xFD8
  3049                           pclatu	equ	0xFFB
  3050                           pclath	equ	0xFFA
  3051                           tblptru	equ	0xFF8
  3052                           tblptrh	equ	0xFF7
  3053                           tblptrl	equ	0xFF6
  3054                           tablat	equ	0xFF5
  3055                           prodh	equ	0xFF4
  3056                           prodl	equ	0xFF3
  3057                           intcon	equ	0xFF2
  3058                           intcon2	equ	0xFF1
  3059                           intcon3	equ	0xFF0
  3060                           postinc0	equ	0xFEE
  3061                           fsr0h	equ	0xFEA
  3062                           fsr0l	equ	0xFE9
  3063                           wreg	equ	0xFE8
  3064                           postdec1	equ	0xFE5
  3065                           fsr1h	equ	0xFE2
  3066                           fsr1l	equ	0xFE1
  3067                           indf2	equ	0xFDF
  3068                           fsr2h	equ	0xFDA
  3069                           fsr2l	equ	0xFD9
  3070                           status	equ	0xFD8
  3071                           
  3072                           	psect	rparam
  3073  0000                     pclatu	equ	0xFFB
  3074                           pclath	equ	0xFFA
  3075                           tblptru	equ	0xFF8
  3076                           tblptrh	equ	0xFF7
  3077                           tblptrl	equ	0xFF6
  3078                           tablat	equ	0xFF5
  3079                           prodh	equ	0xFF4
  3080                           prodl	equ	0xFF3
  3081                           intcon	equ	0xFF2
  3082                           intcon2	equ	0xFF1
  3083                           intcon3	equ	0xFF0
  3084                           postinc0	equ	0xFEE
  3085                           fsr0h	equ	0xFEA
  3086                           fsr0l	equ	0xFE9
  3087                           wreg	equ	0xFE8
  3088                           postdec1	equ	0xFE5
  3089                           fsr1h	equ	0xFE2
  3090                           fsr1l	equ	0xFE1
  3091                           indf2	equ	0xFDF
  3092                           fsr2h	equ	0xFDA
  3093                           fsr2l	equ	0xFD9
  3094                           status	equ	0xFD8
  3095                           
  3096                           	psect	temp
  3097  000054                     btemp:
  3098                           	opt stack 0
  3099  000054                     	ds	1
  3100  0000                     int$flags	set	btemp
  3101  0000                     wtemp6	set	btemp+1
  3102                           pclatu	equ	0xFFB
  3103                           pclath	equ	0xFFA
  3104                           tblptru	equ	0xFF8
  3105                           tblptrh	equ	0xFF7
  3106                           tblptrl	equ	0xFF6
  3107                           tablat	equ	0xFF5
  3108                           prodh	equ	0xFF4
  3109                           prodl	equ	0xFF3
  3110                           intcon	equ	0xFF2
  3111                           intcon2	equ	0xFF1
  3112                           intcon3	equ	0xFF0
  3113                           postinc0	equ	0xFEE
  3114                           fsr0h	equ	0xFEA
  3115                           fsr0l	equ	0xFE9
  3116                           wreg	equ	0xFE8
  3117                           postdec1	equ	0xFE5
  3118                           fsr1h	equ	0xFE2
  3119                           fsr1l	equ	0xFE1
  3120                           indf2	equ	0xFDF
  3121                           fsr2h	equ	0xFDA
  3122                           fsr2l	equ	0xFD9
  3123                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        18
    BSS         74
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     32      83
    BANK0           160      8      49
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    _high_isr->_mot_3_step_count
    _mot_3_step_count->i2___wmul

Critical Paths under _main in BANK0

    _main->___wmul

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    2660
                                              6 BANK0      2     2      0
                _ConfigureOscillator
                            _InitApp
                             ___wmul
                             _finish
                              _reset
                       _speed_select
                         _trans_Char
                             _unwind
                          _zero_mark
 ---------------------------------------------------------------------------------
 (1) _zero_mark                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _unwind                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _trans_Char                                           1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _speed_select                                         4     2      2     121
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _reset                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _finish                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4    2508
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigureOscillator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _high_isr                                            20    20      0     405
                                             12 COMRAM    20    20      0
                   _mot_3_step_count
                           i2_finish
 ---------------------------------------------------------------------------------
 (3) i2_finish                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _mot_3_step_count                                     6     2      4     405
                                              6 COMRAM     6     2      4
                           i2___wmul
 ---------------------------------------------------------------------------------
 (4) i2___wmul                                             6     2      4     209
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfigureOscillator
   _InitApp
   ___wmul
   _finish
   _reset
   _speed_select
   _trans_Char
   _unwind
   _zero_mark

 _high_isr (ROOT)
   _mot_3_step_count
     i2___wmul
   i2_finish

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      8      31       5       30.6%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     20      53       1       88.3%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      84      20        0.0%
DATA                 0      0      84       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sun Aug 25 18:56:30 2019

                           _n 0013           ___wmul@multiplicand 0085                   __CFG_BORV$3 000000  
                __CFG_CP0$OFF 000000                  __CFG_CP1$OFF 000000                  __CFG_CP2$OFF 000000  
                __CFG_CP3$OFF 000000                           l310 0836                           l311 0814  
                         l231 01F6                           l312 0856                           l313 082C  
                         l233 023E                           l250 0288                           l234 0214  
                         l243 025E                           l227 001A                           l260 02D4  
                         l244 0256                           l228 03FC                           l229 01B6  
                         l270 033A                           l262 02EC                           l247 029E  
                         l256 02B2                           l273 0398                           l266 031C  
                         l259 0304                           l268 032A                  __CFG_CPB$OFF 000000  
                         _PR2 000FCB                  __CFG_CPD$OFF 000000                           _RX9 007D5E  
                         _TX9 007D66                  __CFG_BOR$OFF 000000                           wreg 000FE8  
                __CFG_LVP$OFF 000000                  __CFG_WDT$OFF 000000                          l2029 0950  
                        l2171 0392                          _BRGH 007D62                          _CREN 007D5C  
                        u2110 02CE                          u2200 0316                          u2120 02D0  
                        u2210 0318                          u2140 02E6                          _LATA 000F89  
                        u2150 02E8                          _LATB 000F8A                          _LATC 000F8B  
                        u2170 02FE                          u2180 0300                          u1800 091E  
                        u1815 0026                          u1816 0028                          u2297 0408  
                        u1825 0030                          u1930 020C                          u1826 0032  
                        u1835 003A                          u1860 005E                          u1836 003C  
                        u1845 0044                          u1790 091C                          u1846 0046  
                        u1855 004E                          u1856 0050                          u1878 0062  
                        _RCIE 007CED                          i2l97 056E                          _TMR0 000FD6  
                        _TMR1 000FCE                          _SPEN 007D5F                          _TXIE 007CEC  
                        _TXIF 007CF4                          _TXEN 007D65                          _SYNC 007D64  
                        _main 0012                          _send 0074                          fsr0h 000FEA  
                        fsr1h 000FE2                          fsr2h 000FDA                          fsr0l 000FE9  
                        indf2 000FDF                          fsr1l 000FE1                          fsr2l 000FD9  
                        btemp 0054                          prodh 000FF4                          prodl 000FF3  
                        start 000E                 __CFG_IESO$OFF 000000                 __CFG_MCLRE$ON 000000  
                ___param_bank 000000               __end_of_InitApp 07A4                   _unwind_flag 0019  
               __CFG_PLLDIV$1 000000                __CFG_CCP2MX$ON 000000                         ?_main 0028  
                       _ADRES 000FC3                         _BRG16 007DC3                         _DIR_1 001F  
                       _DIR_2 001E                         _DIR_3 0025                         _DIR_4 001D  
                       i2l100 04D2                         i2l101 04FC                         i2l111 060A  
                       i2l121 067C                         i2l113 0648                         i2l122 0672  
                       i2l106 0610                         i2l107 059C                         i2l116 0636  
                       i2l108 05BA                         i2l126 068E                         i2l127 069C  
                       i2l119 0660                         _RCREG 000FAE                         _MOT_1 0027  
                       _MOT_2 0024                         _MOT_3 0026                         _MOT_4 0053  
                       _SPBRG 000FAF                         _PORTA 000F80                         _PORTB 000F81  
                       _PORTC 000F82                 __CFG_USBDIV$1 000000                         _TXREG 000FAD  
         _ConfigureOscillator 0966                 __CFG_PWRT$OFF 000000                 __CFG_WRT0$OFF 000000  
               __CFG_WRT1$OFF 000000                 __CFG_WRT2$OFF 000000                 __CFG_WRT3$OFF 000000  
              __CFG_EBTR0$OFF 000000                __CFG_FCMEN$OFF 000000                __CFG_EBTR1$OFF 000000  
              __CFG_EBTR2$OFF 000000                __CFG_EBTR3$OFF 000000                 __CFG_WRTB$OFF 000000  
               __CFG_WRTC$OFF 000000                 __CFG_WRTD$OFF 000000                __CFG_EBTRB$OFF 000000  
                       _reset 0978                         _turns 0050                   _turns_count 0003  
                       pclath 000FFA                         tablat 000FF5              __end_ofi2___wmul 08AA  
                       status 000FD8                         wtemp6 0055              __end_ofi2_finish 0912  
        ?_ConfigureOscillator 0028               __initialization 07A4                  __end_of_main 0416  
                      ??_main 0089                 __activetblptr 000002                        _ADCON1 000FC1  
                      _ADCON2 000FC0                        _CCPR1L 000FBE                        ?_reset 0028  
                      _GODONE 007E11                        i2l1663 04FC                        i2l1695 060A  
                   ??_InitApp 0083         ??_ConfigureOscillator 0083                __CFG_XINST$OFF 000000  
            __end_of_high_isr 06E8     __size_of_mot_3_step_count 0024                        ___wmul 085C  
                      _enable 001A                        _finish 08CE                        _length 004E  
                      _recibi 0021                        clear_0 07EA                        clear_1 07F6  
                      _move_4 0023                        _motor1 008B                        _motor2 007D  
                      _unwind 0912                  __pdataCOMRAM 0048                        tblptrh 000FF7  
                      tblptrl 000FF6                        tblptru 000FF8                    __accesstop 0060  
     __end_of__initialization 07FC               __CFG_PBADEN$OFF 000000                 ___rparam_used 000001  
              __pcstackCOMRAM 0028                  __pidataBANK0 0972                 __end_of_reset 097C  
                   ?i2___wmul 0028                     ?i2_finish 0028                 trans_Char@out 0083  
                     ??_reset 0083                    __pbssBANK0 0060                       ?___wmul 0083  
                     ?_finish 0028            _ADC_previous_value 0015                       ?_unwind 0028  
                  ??i2___wmul 002C                    ??i2_finish 0028                       i2u95_40 04A6  
                     i2u96_48 04A8                     ?_high_isr 0028               __CFG_VREGEN$OFF 000000  
          __size_of_zero_mark 001A                       _InitApp 06E8                       __Hparam 0000  
                     __Lparam 0000              _mot_3_step_count 08AA               __size_of___wmul 0028  
                     _caliber 0001               __size_of_finish 0022               __CFG_STVREN$OFF 000000  
                     __pcinit 07A4                       __ramtop 0800                       __ptext0 0012  
                     __ptext1 0932                       __ptext2 0912                       __ptext3 094C  
                     __ptext4 080A                       __ptext5 0978                       __ptext6 08CE  
                     __ptext7 085C                       __ptext8 06E8                       __ptext9 0966  
                  _param_flag 001C                     _T0CONbits 000FD5                       _count_1 004C  
                     _count_2 008F                       _count_3 004A                       _count_4 008D  
             __size_of_unwind 0020                     _T1CONbits 000FCD                       _palabra 0060  
                   _T2CONbits 000FCA                       _winding 0022              _mot_4_step_count 007B  
                     _steps_4 0017                    ??_high_isr 0034                __pintcode_body 0416  
        end_of_initialization 07FC                 __Lmediumconst 0000                       int_func 0416  
         i2___wmul@multiplier 0028                 ?_speed_select 0083                       postdec1 000FE5  
                     postinc0 000FEE                     _PORTAbits 000F80                     _PORTBbits 000F81  
                   _PORTCbits 000F82             __end_of_zero_mark 094C                     _TRISAbits 000F92  
                   _TRISBbits 000F93                     _TRISCbits 000F94                    _trans_Char 094C  
 __end_of_ConfigureOscillator 0972                   _CCP1CONbits 000FBD                ??_speed_select 0085  
              __end_of___wmul 0884                 __pidataCOMRAM 095A                __end_of_finish 08F0  
            i2___wmul@product 002C                __end_of_unwind 0932           start_initialization 07A4  
           __size_ofi2___wmul 0026             __size_ofi2_finish 0022                      ??___wmul 0087  
                    ??_finish 0083                   __pdataBANK0 008B              __CFG_LPT1OSC$OFF 000000  
                    ??_unwind 0083                   __pbssCOMRAM 0001                 __pcstackBANK0 0083  
                 ?_trans_Char 0028      __end_of_mot_3_step_count 08CE             __size_of_high_isr 06E0  
                    ?_InitApp 0028                     __pintcode 0008          __end_of_speed_select 085C  
              __size_of_reset 0004                ___wmul@product 0087                      _LATAbits 000F89  
                    _LATBbits 000F8A                      _LATCbits 000F8B                      _IPR1bits 000F9F  
                    _PIE1bits 000F9D                      _RA0state 0020                      i2u100_41 050E  
                    i2u101_40 0522                      i2u111_40 05AC                      i2u102_48 0524  
                    i2u103_41 0554                      i2u104_40 0560                      i2u112_48 05AE  
                    i2u105_40 0562                      i2u115_40 05D0                      i2u108_40 058C  
                    i2u116_48 05D2                      i2u109_48 058E                      i2u128_40 0698  
                    i2u129_40 069A                      _PIR1bits 000F9E                      _RCONbits 000FD0  
            __CFG_WDTPS$32768 000000           __size_of_trans_Char 000E                   _finish_flag 001B  
                  _ADCON0bits 000FC2             ___wmul@multiplier 0083                      i2___wmul 0884  
                    _PWM_duty 0048                      i2_finish 08F0               _ADC_value_press 000F  
                   _zero_flag 0052                     _zero_mark 0932                   _INTCON2bits 000FF1  
                 _INTCON3bits 000FF0                     copy_data0 07B8                     copy_data1 07D8  
            __size_of_InitApp 00BC                      __Hrparam 0000                      __Lrparam 0000  
       i2___wmul@multiplicand 002A                    ?_zero_mark 0028                      __ptext11 08F0  
                    __ptext12 08AA                      __ptext13 0884                      _high_isr 0008  
               __size_of_main 0404                   _mot_1_steps 0009                   _mot_3_steps 0007  
                 _mot_4_steps 0005  __size_of_ConfigureOscillator 000C                      _overflow 0011  
                    int$flags 0054            mot_3_step_count@ms 0030         __size_of_speed_select 0052  
       __CFG_CPUDIV$OSC1_PLL2 000000                    _INTCONbits 000FF2                  ??_trans_Char 0083  
                 _MOT_1_count 000D                   _MOT_2_count 0081                   _MOT_3_count 000B  
                 _MOT_4_count 007F             ?_mot_3_step_count 002E                      intlevel2 0000  
          ??_mot_3_step_count 0032                    _OSCCONbits 000FD3                  _speed_select 080A  
           mot_3_step_count@l 002E            __end_of_trans_Char 095A           __CFG_FOSC$INTOSC_EC 000000  
                 ??_zero_mark 0083               speed_select@var 0083  

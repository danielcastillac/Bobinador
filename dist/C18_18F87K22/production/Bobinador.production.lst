

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sun Aug 18 16:38:22 2019

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F2550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    23                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    28                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    29                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    30  0000                     
    31                           ; Version 1.45
    32                           ; Generated 16/11/2017 GMT
    33                           ; 
    34                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC18F2550 Definitions
    63                           ; 
    64                           ; SFR Addresses
    65  0000                     
    66                           	psect	idataCOMRAM
    67  00082E                     __pidataCOMRAM:
    68                           	opt stack 0
    69                           
    70                           ;initializer for _PWM_duty
    71  00082E  0032               	dw	50
    72                           
    73                           ;initializer for _count_3
    74  000830  0084               	dw	132
    75                           
    76                           ;initializer for _count_2
    77  000832  0001               	dw	1
    78                           
    79                           ;initializer for _count_1
    80  000834  0002               	dw	2
    81                           
    82                           ;initializer for _length
    83  000836  2422               	dw	9250
    84                           
    85                           ;initializer for _turns
    86  000838  0FA0               	dw	4000
    87                           
    88                           ;initializer for _zero_flag
    89  00083A  01                 	db	1
    90                           
    91                           ;initializer for _MOT_4
    92  00083B  01                 	db	1
    93                           
    94                           	psect	idataBANK0
    95  000856                     __pidataBANK0:
    96                           	opt stack 0
    97                           
    98                           ;initializer for _motor1
    99  000856  0001               	dw	1
   100                           
   101                           ;initializer for _count_4
   102  000858  0005               	dw	5
   103  0000                     _ADRES	set	4035
   104  0000                     _TMR1	set	4046
   105  0000                     _TMR0	set	4054
   106  0000                     _T2CONbits	set	4042
   107  0000                     _CCP1CONbits	set	4029
   108  0000                     _PR2	set	4043
   109  0000                     _SPBRG	set	4015
   110  0000                     _IPR1bits	set	3999
   111  0000                     _INTCON2bits	set	4081
   112  0000                     _RCONbits	set	4048
   113  0000                     _TRISBbits	set	3987
   114  0000                     _TRISCbits	set	3988
   115  0000                     _PIE1bits	set	3997
   116  0000                     _ADCON2	set	4032
   117  0000                     _ADCON0bits	set	4034
   118  0000                     _TRISAbits	set	3986
   119  0000                     _ADCON1	set	4033
   120  0000                     _LATC	set	3979
   121  0000                     _PORTC	set	3970
   122  0000                     _LATB	set	3978
   123  0000                     _PORTB	set	3969
   124  0000                     _LATA	set	3977
   125  0000                     _PORTA	set	3968
   126  0000                     _OSCCONbits	set	4051
   127  0000                     _T0CONbits	set	4053
   128  0000                     _T1CONbits	set	4045
   129  0000                     _CCPR1L	set	4030
   130  0000                     _INTCON3bits	set	4080
   131  0000                     _TXREG	set	4013
   132  0000                     _RCREG	set	4014
   133  0000                     _PORTBbits	set	3969
   134  0000                     _LATBbits	set	3978
   135  0000                     _PIR1bits	set	3998
   136  0000                     _PORTCbits	set	3970
   137  0000                     _LATCbits	set	3979
   138  0000                     _PORTAbits	set	3968
   139  0000                     _LATAbits	set	3977
   140  0000                     _INTCONbits	set	4082
   141  0000                     _TXIE	set	31980
   142  0000                     _RCIE	set	31981
   143  0000                     _RX9	set	32094
   144  0000                     _TX9	set	32102
   145  0000                     _CREN	set	32092
   146  0000                     _TXEN	set	32101
   147  0000                     _SYNC	set	32100
   148  0000                     _SPEN	set	32095
   149  0000                     _BRG16	set	32195
   150  0000                     _BRGH	set	32098
   151  0000                     _GODONE	set	32273
   152  0000                     _TXIF	set	31988
   153                           
   154                           ; #config settings
   155  0000                     
   156                           	psect	cinit
   157  00070E                     __pcinit:
   158                           	opt stack 0
   159  00070E                     start_initialization:
   160                           	opt stack 0
   161  00070E                     __initialization:
   162                           	opt stack 0
   163                           
   164                           ; Initialize objects allocated to BANK0 (4 bytes)
   165                           ; load TBLPTR registers with __pidataBANK0
   166  00070E  0E56               	movlw	low __pidataBANK0
   167  000710  6EF6               	movwf	tblptrl,c
   168  000712  0E08               	movlw	high __pidataBANK0
   169  000714  6EF7               	movwf	tblptrh,c
   170  000716  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   171  000718  6EF8               	movwf	tblptru,c
   172  00071A  EE00  F089         	lfsr	0,__pdataBANK0
   173  00071E  EE10 F004          	lfsr	1,4
   174  000722                     copy_data0:
   175  000722  0009               	tblrd		*+
   176  000724  CFF5 FFEE          	movff	tablat,postinc0
   177  000728  50E5               	movf	postdec1,w,c
   178  00072A  50E1               	movf	fsr1l,w,c
   179  00072C  E1FA               	bnz	copy_data0
   180                           
   181                           ; Initialize objects allocated to COMRAM (14 bytes)
   182                           ; load TBLPTR registers with __pidataCOMRAM
   183  00072E  0E2E               	movlw	low __pidataCOMRAM
   184  000730  6EF6               	movwf	tblptrl,c
   185  000732  0E08               	movlw	high __pidataCOMRAM
   186  000734  6EF7               	movwf	tblptrh,c
   187  000736  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   188  000738  6EF8               	movwf	tblptru,c
   189  00073A  EE00  F047         	lfsr	0,__pdataCOMRAM
   190  00073E  EE10 F00E          	lfsr	1,14
   191  000742                     copy_data1:
   192  000742  0009               	tblrd		*+
   193  000744  CFF5 FFEE          	movff	tablat,postinc0
   194  000748  50E5               	movf	postdec1,w,c
   195  00074A  50E1               	movf	fsr1l,w,c
   196  00074C  E1FA               	bnz	copy_data1
   197                           
   198                           ; Clear objects allocated to BANK0 (33 bytes)
   199  00074E  EE00  F060         	lfsr	0,__pbssBANK0
   200  000752  0E21               	movlw	33
   201  000754                     clear_0:
   202  000754  6AEE               	clrf	postinc0,c
   203  000756  06E8               	decf	wreg,f,c
   204  000758  E1FD               	bnz	clear_0
   205                           
   206                           ; Clear objects allocated to COMRAM (38 bytes)
   207  00075A  EE00  F001         	lfsr	0,__pbssCOMRAM
   208  00075E  0E26               	movlw	38
   209  000760                     clear_1:
   210  000760  6AEE               	clrf	postinc0,c
   211  000762  06E8               	decf	wreg,f,c
   212  000764  E1FD               	bnz	clear_1
   213  000766                     end_of_initialization:
   214                           	opt stack 0
   215  000766                     __end_of__initialization:
   216                           	opt stack 0
   217  000766  9055               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   218  000768  9255               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   219  00076A  0100               	movlb	0
   220  00076C  EF09  F000         	goto	_main	;jump to C main() function
   221                           tblptru	equ	0xFF8
   222                           tblptrh	equ	0xFF7
   223                           tblptrl	equ	0xFF6
   224                           tablat	equ	0xFF5
   225                           postinc0	equ	0xFEE
   226                           wreg	equ	0xFE8
   227                           postdec1	equ	0xFE5
   228                           fsr1l	equ	0xFE1
   229                           
   230                           	psect	bssCOMRAM
   231  000001                     __pbssCOMRAM:
   232                           	opt stack 0
   233  000001                     _turns_count:
   234                           	opt stack 0
   235  000001                     	ds	2
   236  000003                     _mot_4_steps:
   237                           	opt stack 0
   238  000003                     	ds	2
   239  000005                     _mot_3_steps:
   240                           	opt stack 0
   241  000005                     	ds	2
   242  000007                     _mot_1_steps:
   243                           	opt stack 0
   244  000007                     	ds	2
   245  000009                     _MOT_4_count:
   246                           	opt stack 0
   247  000009                     	ds	2
   248  00000B                     _MOT_3_count:
   249                           	opt stack 0
   250  00000B                     	ds	2
   251  00000D                     _MOT_2_count:
   252                           	opt stack 0
   253  00000D                     	ds	2
   254  00000F                     _MOT_1_count:
   255                           	opt stack 0
   256  00000F                     	ds	2
   257  000011                     _ADC_value_press:
   258                           	opt stack 0
   259  000011                     	ds	2
   260  000013                     _overflow:
   261                           	opt stack 0
   262  000013                     	ds	2
   263  000015                     _n:
   264                           	opt stack 0
   265  000015                     	ds	2
   266  000017                     _steps_4:
   267                           	opt stack 0
   268  000017                     	ds	2
   269  000019                     _enable:
   270                           	opt stack 0
   271  000019                     	ds	1
   272  00001A                     _finish_flag:
   273                           	opt stack 0
   274  00001A                     	ds	1
   275  00001B                     _param_flag:
   276                           	opt stack 0
   277  00001B                     	ds	1
   278  00001C                     _DIR_4:
   279                           	opt stack 0
   280  00001C                     	ds	1
   281  00001D                     _DIR_2:
   282                           	opt stack 0
   283  00001D                     	ds	1
   284  00001E                     _DIR_1:
   285                           	opt stack 0
   286  00001E                     	ds	1
   287  00001F                     _RA0state:
   288                           	opt stack 0
   289  00001F                     	ds	1
   290  000020                     _recibi:
   291                           	opt stack 0
   292  000020                     	ds	1
   293  000021                     _winding:
   294                           	opt stack 0
   295  000021                     	ds	1
   296  000022                     _move_4:
   297                           	opt stack 0
   298  000022                     	ds	1
   299  000023                     _MOT_2:
   300                           	opt stack 0
   301  000023                     	ds	1
   302  000024                     _DIR_3:
   303                           	opt stack 0
   304  000024                     	ds	1
   305  000025                     _MOT_3:
   306                           	opt stack 0
   307  000025                     	ds	1
   308  000026                     _MOT_1:
   309                           	opt stack 0
   310  000026                     	ds	1
   311                           tblptru	equ	0xFF8
   312                           tblptrh	equ	0xFF7
   313                           tblptrl	equ	0xFF6
   314                           tablat	equ	0xFF5
   315                           postinc0	equ	0xFEE
   316                           wreg	equ	0xFE8
   317                           postdec1	equ	0xFE5
   318                           fsr1l	equ	0xFE1
   319                           
   320                           	psect	dataCOMRAM
   321  000047                     __pdataCOMRAM:
   322                           	opt stack 0
   323  000047                     _PWM_duty:
   324                           	opt stack 0
   325  000047                     	ds	2
   326  000049                     _count_3:
   327                           	opt stack 0
   328  000049                     	ds	2
   329  00004B                     _count_2:
   330                           	opt stack 0
   331  00004B                     	ds	2
   332  00004D                     _count_1:
   333                           	opt stack 0
   334  00004D                     	ds	2
   335  00004F                     _length:
   336                           	opt stack 0
   337  00004F                     	ds	2
   338  000051                     _turns:
   339                           	opt stack 0
   340  000051                     	ds	2
   341  000053                     _zero_flag:
   342                           	opt stack 0
   343  000053                     	ds	1
   344  000054                     _MOT_4:
   345                           	opt stack 0
   346  000054                     	ds	1
   347                           tblptru	equ	0xFF8
   348                           tblptrh	equ	0xFF7
   349                           tblptrl	equ	0xFF6
   350                           tablat	equ	0xFF5
   351                           postinc0	equ	0xFEE
   352                           wreg	equ	0xFE8
   353                           postdec1	equ	0xFE5
   354                           fsr1l	equ	0xFE1
   355                           
   356                           	psect	bssBANK0
   357  000060                     __pbssBANK0:
   358                           	opt stack 0
   359  000060                     _palabra:
   360                           	opt stack 0
   361  000060                     	ds	20
   362  000074                     _send:
   363                           	opt stack 0
   364  000074                     	ds	7
   365  00007B                     _mot_4_step_count:
   366                           	opt stack 0
   367  00007B                     	ds	2
   368  00007D                     _caliber:
   369                           	opt stack 0
   370  00007D                     	ds	2
   371  00007F                     _motor2:
   372                           	opt stack 0
   373  00007F                     	ds	2
   374                           tblptru	equ	0xFF8
   375                           tblptrh	equ	0xFF7
   376                           tblptrl	equ	0xFF6
   377                           tablat	equ	0xFF5
   378                           postinc0	equ	0xFEE
   379                           wreg	equ	0xFE8
   380                           postdec1	equ	0xFE5
   381                           fsr1l	equ	0xFE1
   382                           
   383                           	psect	dataBANK0
   384  000089                     __pdataBANK0:
   385                           	opt stack 0
   386  000089                     _motor1:
   387                           	opt stack 0
   388  000089                     	ds	2
   389  00008B                     _count_4:
   390                           	opt stack 0
   391  00008B                     	ds	2
   392                           tblptru	equ	0xFF8
   393                           tblptrh	equ	0xFF7
   394                           tblptrl	equ	0xFF6
   395                           tablat	equ	0xFF5
   396                           postinc0	equ	0xFEE
   397                           wreg	equ	0xFE8
   398                           postdec1	equ	0xFE5
   399                           fsr1l	equ	0xFE1
   400                           
   401                           	psect	cstackBANK0
   402  000081                     __pcstackBANK0:
   403                           	opt stack 0
   404  000081                     ?___wmul:
   405                           	opt stack 0
   406  000081                     trans_Char@out:
   407                           	opt stack 0
   408  000081                     ___wmul@multiplier:
   409                           	opt stack 0
   410                           
   411                           ; 2 bytes @ 0x0
   412  000081                     	ds	2
   413  000083                     ___wmul@multiplicand:
   414                           	opt stack 0
   415                           
   416                           ; 2 bytes @ 0x2
   417  000083                     	ds	2
   418  000085                     ___wmul@product:
   419                           	opt stack 0
   420                           
   421                           ; 2 bytes @ 0x4
   422  000085                     	ds	2
   423  000087                     ??_main:
   424                           
   425                           ; 1 bytes @ 0x6
   426  000087                     	ds	2
   427                           tblptru	equ	0xFF8
   428                           tblptrh	equ	0xFF7
   429                           tblptrl	equ	0xFF6
   430                           tablat	equ	0xFF5
   431                           postinc0	equ	0xFEE
   432                           wreg	equ	0xFE8
   433                           postdec1	equ	0xFE5
   434                           fsr1l	equ	0xFE1
   435                           
   436                           	psect	cstackCOMRAM
   437  000027                     __pcstackCOMRAM:
   438                           	opt stack 0
   439  000027                     ?i2___wmul:
   440                           	opt stack 0
   441  000027                     i2___wmul@multiplier:
   442                           	opt stack 0
   443                           
   444                           ; 2 bytes @ 0x0
   445  000027                     	ds	2
   446  000029                     i2___wmul@multiplicand:
   447                           	opt stack 0
   448                           
   449                           ; 2 bytes @ 0x2
   450  000029                     	ds	2
   451  00002B                     i2___wmul@product:
   452                           	opt stack 0
   453                           
   454                           ; 2 bytes @ 0x4
   455  00002B                     	ds	2
   456  00002D                     ?_mot_3_step_count:
   457                           	opt stack 0
   458  00002D                     mot_3_step_count@l:
   459                           	opt stack 0
   460                           
   461                           ; 2 bytes @ 0x6
   462  00002D                     	ds	2
   463  00002F                     mot_3_step_count@ms:
   464                           	opt stack 0
   465                           
   466                           ; 2 bytes @ 0x8
   467  00002F                     	ds	2
   468  000031                     ??_mot_3_step_count:
   469                           
   470                           ; 1 bytes @ 0xA
   471  000031                     	ds	2
   472  000033                     ??_high_isr:
   473                           
   474                           ; 1 bytes @ 0xC
   475  000033                     	ds	20
   476                           tblptru	equ	0xFF8
   477                           tblptrh	equ	0xFF7
   478                           tblptrl	equ	0xFF6
   479                           tablat	equ	0xFF5
   480                           postinc0	equ	0xFEE
   481                           wreg	equ	0xFE8
   482                           postdec1	equ	0xFE5
   483                           fsr1l	equ	0xFE1
   484                           
   485 ;;
   486 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   487 ;;
   488 ;; *************** function _main *****************
   489 ;; Defined at:
   490 ;;		line 83 in file "main.c"
   491 ;; Parameters:    Size  Location     Type
   492 ;;		None
   493 ;; Auto vars:     Size  Location     Type
   494 ;;		None
   495 ;; Return value:  Size  Location     Type
   496 ;;                  1    wreg      void 
   497 ;; Registers used:
   498 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   499 ;; Tracked objects:
   500 ;;		On entry : 0/0
   501 ;;		On exit  : 0/0
   502 ;;		Unchanged: 0/0
   503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   504 ;;      Params:         0       0       0       0       0       0       0       0       0
   505 ;;      Locals:         0       0       0       0       0       0       0       0       0
   506 ;;      Temps:          0       2       0       0       0       0       0       0       0
   507 ;;      Totals:         0       2       0       0       0       0       0       0       0
   508 ;;Total ram usage:        2 bytes
   509 ;; Hardware stack levels required when called:    4
   510 ;; This function calls:
   511 ;;		_ConfigureOscillator
   512 ;;		_InitApp
   513 ;;		___wmul
   514 ;;		_reset
   515 ;;		_trans_Char
   516 ;;		_unwind
   517 ;;		_zero_mark
   518 ;; This function is called by:
   519 ;;		Startup code after reset
   520 ;; This function uses a non-reentrant model
   521 ;;
   522                           
   523                           	psect	text0
   524  000012                     __ptext0:
   525                           	opt stack 0
   526  000012                     _main:
   527                           	opt stack 27
   528                           
   529                           ;main.c: 85: ConfigureOscillator();
   530                           
   531                           ;incstack = 0
   532  000012  EC25  F004         	call	_ConfigureOscillator	;wreg free
   533                           
   534                           ;main.c: 88: InitApp();
   535  000016  EC29  F003         	call	_InitApp	;wreg free
   536  00001A                     
   537                           ;main.c: 91: CCPR1L = PWM_duty;
   538  00001A  C047  FFBE         	movff	_PWM_duty,4030	;volatile
   539                           
   540                           ;main.c: 93: LATAbits.LA2 = DIR_1;
   541  00001E  B01E               	btfsc	_DIR_1,0,c
   542  000020  D002               	bra	u1615
   543  000022  9489               	bcf	3977,2,c	;volatile
   544  000024  D001               	bra	u1616
   545  000026                     u1615:
   546  000026  8489               	bsf	3977,2,c	;volatile
   547  000028                     u1616:
   548                           
   549                           ;main.c: 94: LATAbits.LA4 = DIR_2;
   550  000028  B01D               	btfsc	_DIR_2,0,c
   551  00002A  D002               	bra	u1625
   552  00002C  9889               	bcf	3977,4,c	;volatile
   553  00002E  D001               	bra	u1626
   554  000030                     u1625:
   555  000030  8889               	bsf	3977,4,c	;volatile
   556  000032                     u1626:
   557                           
   558                           ;main.c: 95: LATCbits.LC0 = DIR_3;
   559  000032  B024               	btfsc	_DIR_3,0,c
   560  000034  D002               	bra	u1635
   561  000036  908B               	bcf	3979,0,c	;volatile
   562  000038  D001               	bra	u1636
   563  00003A                     u1635:
   564  00003A  808B               	bsf	3979,0,c	;volatile
   565  00003C                     u1636:
   566                           
   567                           ;main.c: 96: LATBbits.LB7 = DIR_4;
   568  00003C  B01C               	btfsc	_DIR_4,0,c
   569  00003E  D002               	bra	u1645
   570  000040  9E8A               	bcf	3978,7,c	;volatile
   571  000042  D001               	bra	u1646
   572  000044                     u1645:
   573  000044  8E8A               	bsf	3978,7,c	;volatile
   574  000046                     u1646:
   575                           
   576                           ;main.c: 97: LATBbits.LB5 = enable;
   577  000046  B019               	btfsc	_enable,0,c
   578  000048  D002               	bra	u1655
   579  00004A  9A8A               	bcf	3978,5,c	;volatile
   580  00004C  D001               	bra	u1656
   581  00004E                     u1655:
   582  00004E  8A8A               	bsf	3978,5,c	;volatile
   583  000050                     u1656:
   584                           
   585                           ;main.c: 98: LATBbits.LB4 = !enable;
   586  000050  5019               	movf	_enable,w,c
   587  000052  A4D8               	btfss	status,2,c
   588  000054  D004               	goto	u1660
   589  000056  0100               	movlb	0	; () banked
   590  000058  6B87               	clrf	??_main& (0+255),b
   591  00005A  2B87               	incf	??_main& (0+255),f,b
   592  00005C  D002               	goto	u1678
   593  00005E                     u1660:
   594  00005E  0100               	movlb	0	; () banked
   595  000060  6B87               	clrf	??_main& (0+255),b
   596  000062                     u1678:
   597  000062  3B87               	swapf	??_main& (0+255),f,b
   598  000064  508A               	movf	3978,w,c	;volatile
   599  000066  1987               	xorwf	??_main& (0+255),w,b
   600  000068  0BEF               	andlw	-17
   601  00006A  1987               	xorwf	??_main& (0+255),w,b
   602  00006C  6E8A               	movwf	3978,c	;volatile
   603                           
   604                           ; BSR set to: 0
   605                           ;main.c: 100: if (recibi == 1) {
   606  00006E  0420               	decf	_recibi,w,c
   607  000070  A4D8               	btfss	status,2,c
   608  000072  D188               	goto	l214
   609                           
   610                           ; BSR set to: 0
   611                           ;main.c: 102: recibi = 0;
   612  000074  0E00               	movlw	0
   613  000076  6E20               	movwf	_recibi,c
   614                           
   615                           ; BSR set to: 0
   616                           ;main.c: 104: if (palabra[0] == 'A') {
   617  000078  0E41               	movlw	65
   618  00007A  1960               	xorwf	_palabra& (0+255),w,b
   619  00007C  A4D8               	btfss	status,2,c
   620  00007E  D0A6               	goto	l215
   621                           
   622                           ; BSR set to: 0
   623                           ;main.c: 106: caliber = ((palabra[1] - 48) * 10) + ((palabra[2] - 48));
   624  000080  0ED0               	movlw	208
   625  000082  2561               	addwf	(_palabra+1)& (0+255),w,b
   626  000084  6F81               	movwf	___wmul@multiplier& (0+255),b
   627  000086  6B82               	clrf	(___wmul@multiplier+1)& (0+255),b
   628  000088  0EFF               	movlw	255
   629  00008A  2382               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   630  00008C  0E00               	movlw	0
   631  00008E  6F84               	movwf	(___wmul@multiplicand+1)& (0+255),b
   632  000090  0E0A               	movlw	10
   633  000092  6F83               	movwf	___wmul@multiplicand& (0+255),b
   634  000094  ECB8  F003         	call	___wmul	;wreg free
   635  000098  0100               	movlb	0	; () banked
   636  00009A  5162               	movf	(_palabra+2)& (0+255),w,b
   637  00009C  6F87               	movwf	??_main& (0+255),b
   638  00009E  6B88               	clrf	(??_main+1)& (0+255),b
   639  0000A0  5181               	movf	?___wmul& (0+255),w,b
   640  0000A2  2787               	addwf	??_main& (0+255),f,b
   641  0000A4  5182               	movf	(?___wmul+1)& (0+255),w,b
   642  0000A6  2388               	addwfc	(??_main+1)& (0+255),f,b
   643  0000A8  0ED0               	movlw	208
   644  0000AA  2587               	addwf	??_main& (0+255),w,b
   645  0000AC  6F7D               	movwf	_caliber& (0+255),b
   646  0000AE  0EFF               	movlw	255
   647  0000B0  2188               	addwfc	(??_main+1)& (0+255),w,b
   648  0000B2  6F7E               	movwf	(_caliber+1)& (0+255),b
   649                           
   650                           ;main.c: 107: length = ((palabra[3] - 48) * 10000) + ((palabra[4] - 48) * 1000) + ((pala
      +                          bra[5] - 48) * 100) + ((palabra[6] - 48) * 10) + ((palabra[7] - 48));
   651  0000B4  0ED0               	movlw	208
   652  0000B6  2563               	addwf	(_palabra+3)& (0+255),w,b
   653  0000B8  6F81               	movwf	___wmul@multiplier& (0+255),b
   654  0000BA  6B82               	clrf	(___wmul@multiplier+1)& (0+255),b
   655  0000BC  0EFF               	movlw	255
   656  0000BE  2382               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   657  0000C0  0E27               	movlw	39
   658  0000C2  6F84               	movwf	(___wmul@multiplicand+1)& (0+255),b
   659  0000C4  0E10               	movlw	16
   660  0000C6  6F83               	movwf	___wmul@multiplicand& (0+255),b
   661  0000C8  ECB8  F003         	call	___wmul	;wreg free
   662  0000CC  0100               	movlb	0	; () banked
   663  0000CE  5167               	movf	(_palabra+7)& (0+255),w,b
   664  0000D0  6F87               	movwf	??_main& (0+255),b
   665  0000D2  6B88               	clrf	(??_main+1)& (0+255),b
   666  0000D4  5181               	movf	?___wmul& (0+255),w,b
   667  0000D6  2787               	addwf	??_main& (0+255),f,b
   668  0000D8  5182               	movf	(?___wmul+1)& (0+255),w,b
   669  0000DA  2388               	addwfc	(??_main+1)& (0+255),f,b
   670  0000DC  0ED0               	movlw	208
   671  0000DE  2564               	addwf	(_palabra+4)& (0+255),w,b
   672  0000E0  6F81               	movwf	___wmul@multiplier& (0+255),b
   673  0000E2  6B82               	clrf	(___wmul@multiplier+1)& (0+255),b
   674  0000E4  0EFF               	movlw	255
   675  0000E6  2382               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   676  0000E8  0E03               	movlw	3
   677  0000EA  6F84               	movwf	(___wmul@multiplicand+1)& (0+255),b
   678  0000EC  0EE8               	movlw	232
   679  0000EE  6F83               	movwf	___wmul@multiplicand& (0+255),b
   680  0000F0  ECB8  F003         	call	___wmul	;wreg free
   681  0000F4  0100               	movlb	0	; () banked
   682  0000F6  5181               	movf	?___wmul& (0+255),w,b
   683  0000F8  2787               	addwf	??_main& (0+255),f,b
   684  0000FA  5182               	movf	(?___wmul+1)& (0+255),w,b
   685  0000FC  2388               	addwfc	(??_main+1)& (0+255),f,b
   686  0000FE  0ED0               	movlw	208
   687  000100  2565               	addwf	(_palabra+5)& (0+255),w,b
   688  000102  6F81               	movwf	___wmul@multiplier& (0+255),b
   689  000104  6B82               	clrf	(___wmul@multiplier+1)& (0+255),b
   690  000106  0EFF               	movlw	255
   691  000108  2382               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   692  00010A  0E00               	movlw	0
   693  00010C  6F84               	movwf	(___wmul@multiplicand+1)& (0+255),b
   694  00010E  0E64               	movlw	100
   695  000110  6F83               	movwf	___wmul@multiplicand& (0+255),b
   696  000112  ECB8  F003         	call	___wmul	;wreg free
   697  000116  0100               	movlb	0	; () banked
   698  000118  5181               	movf	?___wmul& (0+255),w,b
   699  00011A  2787               	addwf	??_main& (0+255),f,b
   700  00011C  5182               	movf	(?___wmul+1)& (0+255),w,b
   701  00011E  2388               	addwfc	(??_main+1)& (0+255),f,b
   702  000120  0ED0               	movlw	208
   703  000122  2566               	addwf	(_palabra+6)& (0+255),w,b
   704  000124  6F81               	movwf	___wmul@multiplier& (0+255),b
   705  000126  6B82               	clrf	(___wmul@multiplier+1)& (0+255),b
   706  000128  0EFF               	movlw	255
   707  00012A  2382               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   708  00012C  0E00               	movlw	0
   709  00012E  6F84               	movwf	(___wmul@multiplicand+1)& (0+255),b
   710  000130  0E0A               	movlw	10
   711  000132  6F83               	movwf	___wmul@multiplicand& (0+255),b
   712  000134  ECB8  F003         	call	___wmul	;wreg free
   713  000138  0100               	movlb	0	; () banked
   714  00013A  5181               	movf	?___wmul& (0+255),w,b
   715  00013C  2787               	addwf	??_main& (0+255),f,b
   716  00013E  5182               	movf	(?___wmul+1)& (0+255),w,b
   717  000140  2388               	addwfc	(??_main+1)& (0+255),f,b
   718  000142  0ED0               	movlw	208
   719  000144  2587               	addwf	??_main& (0+255),w,b
   720  000146  6E4F               	movwf	_length,c
   721  000148  0EFF               	movlw	255
   722  00014A  2188               	addwfc	(??_main+1)& (0+255),w,b
   723  00014C  6E50               	movwf	_length+1,c
   724                           
   725                           ;main.c: 108: turns = ((palabra[8] - 48) * 1000) + ((palabra[9] - 48) * 100) + ((palabra
      +                          [10] - 48) * 10) + ((palabra[11] - 48));
   726  00014E  0ED0               	movlw	208
   727  000150  2568               	addwf	(_palabra+8)& (0+255),w,b
   728  000152  6F81               	movwf	___wmul@multiplier& (0+255),b
   729  000154  6B82               	clrf	(___wmul@multiplier+1)& (0+255),b
   730  000156  0EFF               	movlw	255
   731  000158  2382               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   732  00015A  0E03               	movlw	3
   733  00015C  6F84               	movwf	(___wmul@multiplicand+1)& (0+255),b
   734  00015E  0EE8               	movlw	232
   735  000160  6F83               	movwf	___wmul@multiplicand& (0+255),b
   736  000162  ECB8  F003         	call	___wmul	;wreg free
   737  000166  0100               	movlb	0	; () banked
   738  000168  516B               	movf	(_palabra+11)& (0+255),w,b
   739  00016A  6F87               	movwf	??_main& (0+255),b
   740  00016C  6B88               	clrf	(??_main+1)& (0+255),b
   741  00016E  5181               	movf	?___wmul& (0+255),w,b
   742  000170  2787               	addwf	??_main& (0+255),f,b
   743  000172  5182               	movf	(?___wmul+1)& (0+255),w,b
   744  000174  2388               	addwfc	(??_main+1)& (0+255),f,b
   745  000176  0ED0               	movlw	208
   746  000178  2569               	addwf	(_palabra+9)& (0+255),w,b
   747  00017A  6F81               	movwf	___wmul@multiplier& (0+255),b
   748  00017C  6B82               	clrf	(___wmul@multiplier+1)& (0+255),b
   749  00017E  0EFF               	movlw	255
   750  000180  2382               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   751  000182  0E00               	movlw	0
   752  000184  6F84               	movwf	(___wmul@multiplicand+1)& (0+255),b
   753  000186  0E64               	movlw	100
   754  000188  6F83               	movwf	___wmul@multiplicand& (0+255),b
   755  00018A  ECB8  F003         	call	___wmul	;wreg free
   756  00018E  0100               	movlb	0	; () banked
   757  000190  5181               	movf	?___wmul& (0+255),w,b
   758  000192  2787               	addwf	??_main& (0+255),f,b
   759  000194  5182               	movf	(?___wmul+1)& (0+255),w,b
   760  000196  2388               	addwfc	(??_main+1)& (0+255),f,b
   761  000198  0ED0               	movlw	208
   762  00019A  256A               	addwf	(_palabra+10)& (0+255),w,b
   763  00019C  6F81               	movwf	___wmul@multiplier& (0+255),b
   764  00019E  6B82               	clrf	(___wmul@multiplier+1)& (0+255),b
   765  0001A0  0EFF               	movlw	255
   766  0001A2  2382               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   767  0001A4  0E00               	movlw	0
   768  0001A6  6F84               	movwf	(___wmul@multiplicand+1)& (0+255),b
   769  0001A8  0E0A               	movlw	10
   770  0001AA  6F83               	movwf	___wmul@multiplicand& (0+255),b
   771  0001AC  ECB8  F003         	call	___wmul	;wreg free
   772  0001B0  0100               	movlb	0	; () banked
   773  0001B2  5181               	movf	?___wmul& (0+255),w,b
   774  0001B4  2787               	addwf	??_main& (0+255),f,b
   775  0001B6  5182               	movf	(?___wmul+1)& (0+255),w,b
   776  0001B8  2388               	addwfc	(??_main+1)& (0+255),f,b
   777  0001BA  0ED0               	movlw	208
   778  0001BC  2587               	addwf	??_main& (0+255),w,b
   779  0001BE  6E51               	movwf	_turns,c
   780  0001C0  0EFF               	movlw	255
   781  0001C2  2188               	addwfc	(??_main+1)& (0+255),w,b
   782  0001C4  6E52               	movwf	_turns+1,c
   783                           
   784                           ; BSR set to: 0
   785                           ;main.c: 110: param_flag = 1;
   786  0001C6  0E01               	movlw	1
   787  0001C8  6E1B               	movwf	_param_flag,c
   788                           
   789                           ;main.c: 111: } else if (palabra[0] == 'B') {
   790  0001CA  D727               	goto	l213
   791  0001CC                     l215:
   792                           
   793                           ; BSR set to: 0
   794                           
   795                           ; BSR set to: 0
   796  0001CC  0E42               	movlw	66
   797  0001CE  1960               	xorwf	_palabra& (0+255),w,b
   798  0001D0  A4D8               	btfss	status,2,c
   799  0001D2  D01B               	goto	l217
   800                           
   801                           ; BSR set to: 0
   802                           ;main.c: 113: PWM_duty = ((palabra[1] - 48) * 10) + ((palabra[2] - 48));
   803  0001D4  0ED0               	movlw	208
   804  0001D6  2561               	addwf	(_palabra+1)& (0+255),w,b
   805  0001D8  6F81               	movwf	___wmul@multiplier& (0+255),b
   806  0001DA  6B82               	clrf	(___wmul@multiplier+1)& (0+255),b
   807  0001DC  0EFF               	movlw	255
   808  0001DE  2382               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   809  0001E0  0E00               	movlw	0
   810  0001E2  6F84               	movwf	(___wmul@multiplicand+1)& (0+255),b
   811  0001E4  0E0A               	movlw	10
   812  0001E6  6F83               	movwf	___wmul@multiplicand& (0+255),b
   813  0001E8  ECB8  F003         	call	___wmul	;wreg free
   814  0001EC  0100               	movlb	0	; () banked
   815  0001EE  5162               	movf	(_palabra+2)& (0+255),w,b
   816  0001F0  6F87               	movwf	??_main& (0+255),b
   817  0001F2  6B88               	clrf	(??_main+1)& (0+255),b
   818  0001F4  5181               	movf	?___wmul& (0+255),w,b
   819  0001F6  2787               	addwf	??_main& (0+255),f,b
   820  0001F8  5182               	movf	(?___wmul+1)& (0+255),w,b
   821  0001FA  2388               	addwfc	(??_main+1)& (0+255),f,b
   822  0001FC  0ED0               	movlw	208
   823  0001FE  2587               	addwf	??_main& (0+255),w,b
   824  000200  6E47               	movwf	_PWM_duty,c
   825  000202  0EFF               	movlw	255
   826  000204  2188               	addwfc	(??_main+1)& (0+255),w,b
   827  000206  6E48               	movwf	_PWM_duty+1,c
   828                           
   829                           ;main.c: 114: } else if ((palabra[0] == 'D') && (zero_flag)) {
   830  000208  D708               	goto	l213
   831  00020A                     l217:
   832                           
   833                           ; BSR set to: 0
   834                           
   835                           ; BSR set to: 0
   836  00020A  0E44               	movlw	68
   837  00020C  1960               	xorwf	_palabra& (0+255),w,b
   838  00020E  A4D8               	btfss	status,2,c
   839  000210  D025               	goto	l219
   840                           
   841                           ; BSR set to: 0
   842  000212  5053               	movf	_zero_flag,w,c
   843  000214  B4D8               	btfsc	status,2,c
   844  000216  D022               	goto	l219
   845                           
   846                           ; BSR set to: 0
   847                           ;main.c: 116: if (palabra[1] == '0') {
   848  000218  0E30               	movlw	48
   849  00021A  1961               	xorwf	(_palabra+1)& (0+255),w,b
   850  00021C  A4D8               	btfss	status,2,c
   851  00021E  D004               	goto	l220
   852                           
   853                           ; BSR set to: 0
   854                           ;main.c: 118: MOT_3 = 1;
   855  000220  0E01               	movlw	1
   856  000222  6E25               	movwf	_MOT_3,c
   857                           
   858                           ;main.c: 119: DIR_3 = 0;
   859  000224  0E00               	movlw	0
   860  000226  D007               	goto	L1
   861  000228                     l220:
   862                           
   863                           ; BSR set to: 0
   864                           
   865                           ; BSR set to: 0
   866  000228  0E31               	movlw	49
   867  00022A  1961               	xorwf	(_palabra+1)& (0+255),w,b
   868  00022C  A4D8               	btfss	status,2,c
   869  00022E  D005               	goto	l222
   870                           
   871                           ; BSR set to: 0
   872                           ;main.c: 122: MOT_3 = 1;
   873  000230  0E01               	movlw	1
   874  000232  6E25               	movwf	_MOT_3,c
   875                           
   876                           ;main.c: 123: DIR_3 = 1;
   877  000234  0E01               	movlw	1
   878  000236                     L1:
   879  000236  6E24               	movwf	_DIR_3,c
   880                           
   881                           ;main.c: 124: } else if (palabra[1] == '2') {
   882  000238  D6F0               	goto	l213
   883  00023A                     l222:
   884                           
   885                           ; BSR set to: 0
   886                           
   887                           ; BSR set to: 0
   888  00023A  0E32               	movlw	50
   889  00023C  1961               	xorwf	(_palabra+1)& (0+255),w,b
   890  00023E  B4D8               	btfsc	status,2,c
   891  000240  D033               	goto	u1870
   892                           
   893                           ; BSR set to: 0
   894                           
   895                           ; BSR set to: 0
   896                           
   897                           ;main.c: 127: } else if (palabra[1] == '3') {
   898                           
   899                           ; BSR set to: 0
   900                           ;main.c: 126: MOT_3 = 0;
   901  000242  0E33               	movlw	51
   902  000244  1961               	xorwf	(_palabra+1)& (0+255),w,b
   903  000246  A4D8               	btfss	status,2,c
   904  000248  D6E8               	goto	l213
   905                           
   906                           ; BSR set to: 0
   907                           ;main.c: 129: if ((MOT_3 == 0) && (param_flag)) {
   908  00024A  5025               	movf	_MOT_3,w,c
   909  00024C  A4D8               	btfss	status,2,c
   910  00024E  D6E5               	goto	l213
   911                           
   912                           ; BSR set to: 0
   913  000250  501B               	movf	_param_flag,w,c
   914  000252  B4D8               	btfsc	status,2,c
   915  000254  D6E2               	goto	l213
   916                           
   917                           ; BSR set to: 0
   918                           ;main.c: 131: zero_mark();
   919  000256  ECFF  F003         	call	_zero_mark	;wreg free
   920                           
   921                           ;main.c: 132: }
   922                           ;main.c: 133: }
   923                           ;main.c: 136: } else if (palabra[0] == 'M') {
   924  00025A  D6DF               	goto	l213
   925  00025C                     l219:
   926  00025C  0E4D               	movlw	77
   927  00025E  0100               	movlb	0	; () banked
   928  000260  1960               	xorwf	_palabra& (0+255),w,b
   929  000262  A4D8               	btfss	status,2,c
   930  000264  D024               	goto	l229
   931                           
   932                           ; BSR set to: 0
   933                           ;main.c: 138: if (palabra[1] == '1') {
   934  000266  0E31               	movlw	49
   935  000268  1961               	xorwf	(_palabra+1)& (0+255),w,b
   936  00026A  A4D8               	btfss	status,2,c
   937  00026C  D008               	goto	l230
   938                           
   939                           ; BSR set to: 0
   940                           ;main.c: 139: MOT_1 = !MOT_1;
   941  00026E  5026               	movf	_MOT_1,w,c
   942  000270  A4D8               	btfss	status,2,c
   943  000272  D002               	goto	u1810
   944  000274  0E01               	movlw	1
   945  000276  D001               	goto	u1820
   946  000278                     u1810:
   947  000278  0E00               	movlw	0
   948  00027A                     u1820:
   949  00027A  6E26               	movwf	_MOT_1,c
   950                           
   951                           ;main.c: 140: } else if (palabra[1] == '2') {
   952  00027C  D6CE               	goto	l213
   953  00027E                     l230:
   954                           
   955                           ; BSR set to: 0
   956                           
   957                           ; BSR set to: 0
   958  00027E  0E32               	movlw	50
   959  000280  1961               	xorwf	(_palabra+1)& (0+255),w,b
   960  000282  A4D8               	btfss	status,2,c
   961  000284  D008               	goto	l232
   962                           
   963                           ; BSR set to: 0
   964                           ;main.c: 141: MOT_2 = !MOT_2;
   965  000286  5023               	movf	_MOT_2,w,c
   966  000288  A4D8               	btfss	status,2,c
   967  00028A  D002               	goto	u1840
   968  00028C  0E01               	movlw	1
   969  00028E  D001               	goto	u1850
   970  000290                     u1840:
   971  000290  0E00               	movlw	0
   972  000292                     u1850:
   973  000292  6E23               	movwf	_MOT_2,c
   974                           
   975                           ;main.c: 142: } else if (palabra[1] == '3') {
   976  000294  D6C2               	goto	l213
   977  000296                     l232:
   978                           
   979                           ; BSR set to: 0
   980                           
   981                           ; BSR set to: 0
   982  000296  0E33               	movlw	51
   983  000298  1961               	xorwf	(_palabra+1)& (0+255),w,b
   984  00029A  A4D8               	btfss	status,2,c
   985  00029C  D6BE               	goto	l213
   986                           
   987                           ; BSR set to: 0
   988                           ;main.c: 143: MOT_3 = !MOT_3;
   989  00029E  5025               	movf	_MOT_3,w,c
   990  0002A0  A4D8               	btfss	status,2,c
   991  0002A2  D002               	goto	u1870
   992  0002A4  0E01               	movlw	1
   993  0002A6  D001               	goto	u1880
   994  0002A8                     u1870:
   995  0002A8  0E00               	movlw	0
   996  0002AA                     u1880:
   997  0002AA  6E25               	movwf	_MOT_3,c
   998                           
   999                           ; BSR set to: 0
  1000                           ;main.c: 144: }
  1001                           ;main.c: 145: } else if (palabra[0] == 'N') {
  1002                           
  1003                           ; BSR set to: 0
  1004                           
  1005                           ; BSR set to: 0
  1006  0002AC  D6B6               	goto	l213
  1007  0002AE                     l229:
  1008                           
  1009                           ; BSR set to: 0
  1010                           
  1011                           ; BSR set to: 0
  1012  0002AE  0E4E               	movlw	78
  1013  0002B0  1960               	xorwf	_palabra& (0+255),w,b
  1014  0002B2  A4D8               	btfss	status,2,c
  1015  0002B4  D008               	goto	l236
  1016                           
  1017                           ; BSR set to: 0
  1018                           ;main.c: 147: enable = !enable;
  1019  0002B6  5019               	movf	_enable,w,c
  1020  0002B8  A4D8               	btfss	status,2,c
  1021  0002BA  D002               	goto	u1900
  1022  0002BC  0E01               	movlw	1
  1023  0002BE  D001               	goto	u1910
  1024  0002C0                     u1900:
  1025  0002C0  0E00               	movlw	0
  1026  0002C2                     u1910:
  1027  0002C2  6E19               	movwf	_enable,c
  1028                           
  1029                           ;main.c: 148: } else if (palabra[0] == 'W') {
  1030  0002C4  D6AA               	goto	l213
  1031  0002C6                     l236:
  1032                           
  1033                           ; BSR set to: 0
  1034                           
  1035                           ; BSR set to: 0
  1036  0002C6  0E57               	movlw	87
  1037  0002C8  1960               	xorwf	_palabra& (0+255),w,b
  1038  0002CA  A4D8               	btfss	status,2,c
  1039  0002CC  D003               	goto	l238
  1040                           
  1041                           ; BSR set to: 0
  1042                           ;main.c: 150: unwind();
  1043  0002CE  ECF1  F003         	call	_unwind	;wreg free
  1044                           
  1045                           ;main.c: 151: } else if (palabra[0] == 'R') {
  1046  0002D2  D6A3               	goto	l213
  1047  0002D4                     l238:
  1048  0002D4  0E52               	movlw	82
  1049  0002D6  0100               	movlb	0	; () banked
  1050  0002D8  1960               	xorwf	_palabra& (0+255),w,b
  1051  0002DA  A4D8               	btfss	status,2,c
  1052  0002DC  D003               	goto	l240
  1053                           
  1054                           ; BSR set to: 0
  1055                           ;main.c: 152: reset();
  1056  0002DE  EC2D  F004         	call	_reset	;wreg free
  1057                           
  1058                           ;main.c: 153: } else if (palabra[0] == 'E') {
  1059  0002E2  D69B               	goto	l213
  1060  0002E4                     l240:
  1061  0002E4  0E45               	movlw	69
  1062  0002E6  0100               	movlb	0	; () banked
  1063  0002E8  1960               	xorwf	_palabra& (0+255),w,b
  1064  0002EA  A4D8               	btfss	status,2,c
  1065  0002EC  D696               	goto	l213
  1066                           
  1067                           ; BSR set to: 0
  1068                           ;main.c: 154: if (palabra[1] == 'D') {
  1069  0002EE  0E44               	movlw	68
  1070  0002F0  1961               	xorwf	(_palabra+1)& (0+255),w,b
  1071  0002F2  A4D8               	btfss	status,2,c
  1072  0002F4  D020               	goto	l243
  1073                           
  1074                           ; BSR set to: 0
  1075                           ;main.c: 156: DIR_4 = 1;
  1076  0002F6  0E01               	movlw	1
  1077  0002F8  6E1C               	movwf	_DIR_4,c
  1078                           
  1079                           ; BSR set to: 0
  1080                           ;main.c: 157: steps_4 = ((palabra[2] - 48) * 10) + ((palabra[3] - 48));
  1081  0002FA  0ED0               	movlw	208
  1082  0002FC  2562               	addwf	(_palabra+2)& (0+255),w,b
  1083  0002FE  6F81               	movwf	___wmul@multiplier& (0+255),b
  1084  000300  6B82               	clrf	(___wmul@multiplier+1)& (0+255),b
  1085  000302  0EFF               	movlw	255
  1086  000304  2382               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
  1087  000306  0E00               	movlw	0
  1088  000308  6F84               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1089  00030A  0E0A               	movlw	10
  1090  00030C  6F83               	movwf	___wmul@multiplicand& (0+255),b
  1091  00030E  ECB8  F003         	call	___wmul	;wreg free
  1092  000312  0100               	movlb	0	; () banked
  1093  000314  5163               	movf	(_palabra+3)& (0+255),w,b
  1094  000316  6F87               	movwf	??_main& (0+255),b
  1095  000318  6B88               	clrf	(??_main+1)& (0+255),b
  1096  00031A  5181               	movf	?___wmul& (0+255),w,b
  1097  00031C  2787               	addwf	??_main& (0+255),f,b
  1098  00031E  5182               	movf	(?___wmul+1)& (0+255),w,b
  1099  000320  2388               	addwfc	(??_main+1)& (0+255),f,b
  1100  000322  0ED0               	movlw	208
  1101  000324  2587               	addwf	??_main& (0+255),w,b
  1102  000326  6E17               	movwf	_steps_4,c
  1103  000328  0EFF               	movlw	255
  1104  00032A  2188               	addwfc	(??_main+1)& (0+255),w,b
  1105  00032C  6E18               	movwf	_steps_4+1,c
  1106                           
  1107                           ; BSR set to: 0
  1108                           ;main.c: 158: trans_Char(palabra[3]);
  1109  00032E  5163               	movf	(_palabra+3)& (0+255),w,b
  1110  000330  EC1E  F004         	call	_trans_Char
  1111  000334  D024               	goto	l1953
  1112  000336                     l243:
  1113  000336  0E49               	movlw	73
  1114  000338  0100               	movlb	0	; () banked
  1115  00033A  1961               	xorwf	(_palabra+1)& (0+255),w,b
  1116  00033C  A4D8               	btfss	status,2,c
  1117  00033E  D66D               	goto	l213
  1118                           
  1119                           ; BSR set to: 0
  1120                           ;main.c: 162: DIR_4 = 0;
  1121  000340  0E00               	movlw	0
  1122  000342  6E1C               	movwf	_DIR_4,c
  1123                           
  1124                           ; BSR set to: 0
  1125                           ;main.c: 163: steps_4 = ((palabra[2] - 48) * 10) + ((palabra[3] - 48));
  1126  000344  0ED0               	movlw	208
  1127  000346  2562               	addwf	(_palabra+2)& (0+255),w,b
  1128  000348  6F81               	movwf	___wmul@multiplier& (0+255),b
  1129  00034A  6B82               	clrf	(___wmul@multiplier+1)& (0+255),b
  1130  00034C  0EFF               	movlw	255
  1131  00034E  2382               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
  1132  000350  0E00               	movlw	0
  1133  000352  6F84               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1134  000354  0E0A               	movlw	10
  1135  000356  6F83               	movwf	___wmul@multiplicand& (0+255),b
  1136  000358  ECB8  F003         	call	___wmul	;wreg free
  1137  00035C  0100               	movlb	0	; () banked
  1138  00035E  5163               	movf	(_palabra+3)& (0+255),w,b
  1139  000360  6F87               	movwf	??_main& (0+255),b
  1140  000362  6B88               	clrf	(??_main+1)& (0+255),b
  1141  000364  5181               	movf	?___wmul& (0+255),w,b
  1142  000366  2787               	addwf	??_main& (0+255),f,b
  1143  000368  5182               	movf	(?___wmul+1)& (0+255),w,b
  1144  00036A  2388               	addwfc	(??_main+1)& (0+255),f,b
  1145  00036C  0ED0               	movlw	208
  1146  00036E  2587               	addwf	??_main& (0+255),w,b
  1147  000370  6E17               	movwf	_steps_4,c
  1148  000372  0EFF               	movlw	255
  1149  000374  2188               	addwfc	(??_main+1)& (0+255),w,b
  1150  000376  6E18               	movwf	_steps_4+1,c
  1151                           
  1152                           ; BSR set to: 0
  1153                           ;main.c: 164: trans_Char(palabra[3]);
  1154  000378  5163               	movf	(_palabra+3)& (0+255),w,b
  1155  00037A  EC1E  F004         	call	_trans_Char
  1156  00037E                     l1953:
  1157                           
  1158                           ;main.c: 165: move_4 = 1;
  1159  00037E  0E01               	movlw	1
  1160  000380  6E22               	movwf	_move_4,c
  1161                           
  1162                           ;main.c: 166: }
  1163                           ;main.c: 168: }
  1164                           ;main.c: 170: } else if (GODONE == 0) {
  1165  000382  D64B               	goto	l213
  1166  000384                     l214:
  1167                           
  1168                           ; BSR set to: 0
  1169  000384  B2C2               	btfsc	4034,1,c	;volatile
  1170  000386  D649               	goto	l213
  1171                           
  1172                           ; BSR set to: 0
  1173                           ;main.c: 172: _delay((unsigned long)((4)*(8000000/4000.0)));
  1174  000388  0E0B               	movlw	11
  1175  00038A  0100               	movlb	0	; () banked
  1176  00038C  6F87               	movwf	??_main& (0+255),b
  1177  00038E  0E62               	movlw	98
  1178  000390                     u1997:
  1179  000390  2EE8               	decfsz	wreg,f,c
  1180  000392  D7FE               	bra	u1997
  1181  000394  2F87               	decfsz	??_main& (0+255),f,b
  1182  000396  D7FC               	bra	u1997
  1183  000398  F000               	nop	
  1184                           
  1185                           ;main.c: 174: GODONE = 1;
  1186  00039A  82C2               	bsf	4034,1,c	;volatile
  1187  00039C  D63E               	goto	l213
  1188  00039E                     __end_of_main:
  1189                           	opt stack 0
  1190                           tblptru	equ	0xFF8
  1191                           tblptrh	equ	0xFF7
  1192                           tblptrl	equ	0xFF6
  1193                           tablat	equ	0xFF5
  1194                           postinc0	equ	0xFEE
  1195                           wreg	equ	0xFE8
  1196                           postdec1	equ	0xFE5
  1197                           fsr1l	equ	0xFE1
  1198                           status	equ	0xFD8
  1199                           
  1200 ;; *************** function _zero_mark *****************
  1201 ;; Defined at:
  1202 ;;		line 199 in file "main.c"
  1203 ;; Parameters:    Size  Location     Type
  1204 ;;		None
  1205 ;; Auto vars:     Size  Location     Type
  1206 ;;		None
  1207 ;; Return value:  Size  Location     Type
  1208 ;;                  1    wreg      void 
  1209 ;; Registers used:
  1210 ;;		wreg, status,2
  1211 ;; Tracked objects:
  1212 ;;		On entry : 0/0
  1213 ;;		On exit  : 0/0
  1214 ;;		Unchanged: 0/0
  1215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1216 ;;      Params:         0       0       0       0       0       0       0       0       0
  1217 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1218 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1219 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1220 ;;Total ram usage:        0 bytes
  1221 ;; Hardware stack levels used:    1
  1222 ;; Hardware stack levels required when called:    3
  1223 ;; This function calls:
  1224 ;;		Nothing
  1225 ;; This function is called by:
  1226 ;;		_main
  1227 ;; This function uses a non-reentrant model
  1228 ;;
  1229                           
  1230                           	psect	text1
  1231  0007FE                     __ptext1:
  1232                           	opt stack 0
  1233  0007FE                     _zero_mark:
  1234                           	opt stack 27
  1235                           
  1236                           ;main.c: 201: DIR_3 = 1;
  1237                           
  1238                           ;incstack = 0
  1239  0007FE  0E01               	movlw	1
  1240  000800  6E24               	movwf	_DIR_3,c
  1241                           
  1242                           ;main.c: 202: T1CONbits.TMR1ON = 0;
  1243  000802  90CD               	bcf	4045,0,c	;volatile
  1244                           
  1245                           ;main.c: 203: T0CONbits.TMR0ON = 1;
  1246  000804  8ED5               	bsf	4053,7,c	;volatile
  1247                           
  1248                           ;main.c: 204: zero_flag = 0;
  1249  000806  0E00               	movlw	0
  1250  000808  6E53               	movwf	_zero_flag,c
  1251                           
  1252                           ;main.c: 205: winding = 1;
  1253  00080A  0E01               	movlw	1
  1254  00080C  6E21               	movwf	_winding,c
  1255                           
  1256                           ;main.c: 206: MOT_1 = 1;
  1257  00080E  0E01               	movlw	1
  1258  000810  6E26               	movwf	_MOT_1,c
  1259                           
  1260                           ;main.c: 207: MOT_3 = 1;
  1261  000812  0E01               	movlw	1
  1262  000814  6E25               	movwf	_MOT_3,c
  1263  000816  0012               	return		;funcret
  1264  000818                     __end_of_zero_mark:
  1265                           	opt stack 0
  1266                           tblptru	equ	0xFF8
  1267                           tblptrh	equ	0xFF7
  1268                           tblptrl	equ	0xFF6
  1269                           tablat	equ	0xFF5
  1270                           postinc0	equ	0xFEE
  1271                           wreg	equ	0xFE8
  1272                           postdec1	equ	0xFE5
  1273                           fsr1l	equ	0xFE1
  1274                           status	equ	0xFD8
  1275                           
  1276 ;; *************** function _unwind *****************
  1277 ;; Defined at:
  1278 ;;		line 214 in file "main.c"
  1279 ;; Parameters:    Size  Location     Type
  1280 ;;		None
  1281 ;; Auto vars:     Size  Location     Type
  1282 ;;		None
  1283 ;; Return value:  Size  Location     Type
  1284 ;;                  1    wreg      void 
  1285 ;; Registers used:
  1286 ;;		wreg, status,2
  1287 ;; Tracked objects:
  1288 ;;		On entry : 0/0
  1289 ;;		On exit  : 0/0
  1290 ;;		Unchanged: 0/0
  1291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1292 ;;      Params:         0       0       0       0       0       0       0       0       0
  1293 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1294 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1295 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1296 ;;Total ram usage:        0 bytes
  1297 ;; Hardware stack levels used:    1
  1298 ;; Hardware stack levels required when called:    3
  1299 ;; This function calls:
  1300 ;;		Nothing
  1301 ;; This function is called by:
  1302 ;;		_main
  1303 ;; This function uses a non-reentrant model
  1304 ;;
  1305                           
  1306                           	psect	text2
  1307  0007E2                     __ptext2:
  1308                           	opt stack 0
  1309  0007E2                     _unwind:
  1310                           	opt stack 27
  1311                           
  1312                           ;main.c: 216: enable = !enable;
  1313                           
  1314                           ;incstack = 0
  1315  0007E2  5019               	movf	_enable,w,c
  1316  0007E4  A4D8               	btfss	status,2,c
  1317  0007E6  D002               	goto	u1580
  1318  0007E8  0E01               	movlw	1
  1319  0007EA  D001               	goto	u1590
  1320  0007EC                     u1580:
  1321  0007EC  0E00               	movlw	0
  1322  0007EE                     u1590:
  1323  0007EE  6E19               	movwf	_enable,c
  1324                           
  1325                           ;main.c: 217: T1CONbits.TMR1ON = 1;
  1326  0007F0  80CD               	bsf	4045,0,c	;volatile
  1327                           
  1328                           ;main.c: 218: T0CONbits.TMR0ON = 0;
  1329  0007F2  9ED5               	bcf	4053,7,c	;volatile
  1330                           
  1331                           ;main.c: 219: MOT_3 = 0;
  1332  0007F4  0E00               	movlw	0
  1333  0007F6  6E25               	movwf	_MOT_3,c
  1334                           
  1335                           ;main.c: 220: MOT_2 = 1;
  1336  0007F8  0E01               	movlw	1
  1337  0007FA  6E23               	movwf	_MOT_2,c
  1338  0007FC  0012               	return		;funcret
  1339  0007FE                     __end_of_unwind:
  1340                           	opt stack 0
  1341                           tblptru	equ	0xFF8
  1342                           tblptrh	equ	0xFF7
  1343                           tblptrl	equ	0xFF6
  1344                           tablat	equ	0xFF5
  1345                           postinc0	equ	0xFEE
  1346                           wreg	equ	0xFE8
  1347                           postdec1	equ	0xFE5
  1348                           fsr1l	equ	0xFE1
  1349                           status	equ	0xFD8
  1350                           
  1351 ;; *************** function _trans_Char *****************
  1352 ;; Defined at:
  1353 ;;		line 182 in file "main.c"
  1354 ;; Parameters:    Size  Location     Type
  1355 ;;  out             1    wreg     unsigned char 
  1356 ;; Auto vars:     Size  Location     Type
  1357 ;;  out             1    0[BANK0 ] unsigned char 
  1358 ;; Return value:  Size  Location     Type
  1359 ;;                  1    wreg      void 
  1360 ;; Registers used:
  1361 ;;		wreg
  1362 ;; Tracked objects:
  1363 ;;		On entry : 0/0
  1364 ;;		On exit  : 0/0
  1365 ;;		Unchanged: 0/0
  1366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1367 ;;      Params:         0       0       0       0       0       0       0       0       0
  1368 ;;      Locals:         0       1       0       0       0       0       0       0       0
  1369 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1370 ;;      Totals:         0       1       0       0       0       0       0       0       0
  1371 ;;Total ram usage:        1 bytes
  1372 ;; Hardware stack levels used:    1
  1373 ;; Hardware stack levels required when called:    3
  1374 ;; This function calls:
  1375 ;;		Nothing
  1376 ;; This function is called by:
  1377 ;;		_main
  1378 ;;		_send_String
  1379 ;; This function uses a non-reentrant model
  1380 ;;
  1381                           
  1382                           	psect	text3
  1383  00083C                     __ptext3:
  1384                           	opt stack 0
  1385  00083C                     _trans_Char:
  1386                           	opt stack 27
  1387                           
  1388                           ;incstack = 0
  1389                           ;trans_Char@out stored from wreg
  1390  00083C  0100               	movlb	0	; () banked
  1391  00083E  6F81               	movwf	trans_Char@out& (0+255),b
  1392  000840                     
  1393                           ;main.c: 183: while (TXIF == 0);
  1394  000840  A89E               	btfss	3998,4,c	;volatile
  1395  000842  D7FE               	goto	l1843
  1396                           
  1397                           ;main.c: 184: TXREG = out;
  1398  000844  C081  FFAD         	movff	trans_Char@out,4013	;volatile
  1399  000848  0012               	return		;funcret
  1400  00084A                     __end_of_trans_Char:
  1401                           	opt stack 0
  1402                           tblptru	equ	0xFF8
  1403                           tblptrh	equ	0xFF7
  1404                           tblptrl	equ	0xFF6
  1405                           tablat	equ	0xFF5
  1406                           postinc0	equ	0xFEE
  1407                           wreg	equ	0xFE8
  1408                           postdec1	equ	0xFE5
  1409                           fsr1l	equ	0xFE1
  1410                           status	equ	0xFD8
  1411                           
  1412 ;; *************** function _reset *****************
  1413 ;; Defined at:
  1414 ;;		line 232 in file "main.c"
  1415 ;; Parameters:    Size  Location     Type
  1416 ;;		None
  1417 ;; Auto vars:     Size  Location     Type
  1418 ;;		None
  1419 ;; Return value:  Size  Location     Type
  1420 ;;                  1    wreg      void 
  1421 ;; Registers used:
  1422 ;;		None
  1423 ;; Tracked objects:
  1424 ;;		On entry : 0/0
  1425 ;;		On exit  : 0/0
  1426 ;;		Unchanged: 0/0
  1427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1428 ;;      Params:         0       0       0       0       0       0       0       0       0
  1429 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1430 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1431 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1432 ;;Total ram usage:        0 bytes
  1433 ;; Hardware stack levels used:    1
  1434 ;; Hardware stack levels required when called:    3
  1435 ;; This function calls:
  1436 ;;		Nothing
  1437 ;; This function is called by:
  1438 ;;		_main
  1439 ;; This function uses a non-reentrant model
  1440 ;;
  1441                           
  1442                           	psect	text4
  1443  00085A                     __ptext4:
  1444                           	opt stack 0
  1445  00085A                     _reset:
  1446                           	opt stack 27
  1447                           
  1448                           ;incstack = 0
  1449  00085A  00FF               	reset		;# 
  1450  00085C  0012               	return		;funcret
  1451  00085E                     __end_of_reset:
  1452                           	opt stack 0
  1453                           tblptru	equ	0xFF8
  1454                           tblptrh	equ	0xFF7
  1455                           tblptrl	equ	0xFF6
  1456                           tablat	equ	0xFF5
  1457                           postinc0	equ	0xFEE
  1458                           wreg	equ	0xFE8
  1459                           postdec1	equ	0xFE5
  1460                           fsr1l	equ	0xFE1
  1461                           status	equ	0xFD8
  1462                           
  1463 ;; *************** function ___wmul *****************
  1464 ;; Defined at:
  1465 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
  1466 ;; Parameters:    Size  Location     Type
  1467 ;;  multiplier      2    0[BANK0 ] unsigned int 
  1468 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  1469 ;; Auto vars:     Size  Location     Type
  1470 ;;  product         2    4[BANK0 ] unsigned int 
  1471 ;; Return value:  Size  Location     Type
  1472 ;;                  2    0[BANK0 ] unsigned int 
  1473 ;; Registers used:
  1474 ;;		wreg, status,2, status,0, prodl, prodh
  1475 ;; Tracked objects:
  1476 ;;		On entry : 0/0
  1477 ;;		On exit  : 0/0
  1478 ;;		Unchanged: 0/0
  1479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1480 ;;      Params:         0       4       0       0       0       0       0       0       0
  1481 ;;      Locals:         0       2       0       0       0       0       0       0       0
  1482 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1483 ;;      Totals:         0       6       0       0       0       0       0       0       0
  1484 ;;Total ram usage:        6 bytes
  1485 ;; Hardware stack levels used:    1
  1486 ;; Hardware stack levels required when called:    3
  1487 ;; This function calls:
  1488 ;;		Nothing
  1489 ;; This function is called by:
  1490 ;;		_main
  1491 ;; This function uses a non-reentrant model
  1492 ;;
  1493                           
  1494                           	psect	text5
  1495  000770                     __ptext5:
  1496                           	opt stack 0
  1497  000770                     ___wmul:
  1498                           	opt stack 27
  1499                           
  1500                           ;incstack = 0
  1501  000770  0100               	movlb	0	; () banked
  1502  000772  5181               	movf	___wmul@multiplier& (0+255),w,b
  1503  000774  0383               	mulwf	___wmul@multiplicand& (0+255),b
  1504  000776  CFF3 F085          	movff	prodl,___wmul@product
  1505  00077A  CFF4 F086          	movff	prodh,___wmul@product+1
  1506  00077E  5181               	movf	___wmul@multiplier& (0+255),w,b
  1507  000780  0384               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  1508  000782  50F3               	movf	prodl,w,c
  1509  000784  2786               	addwf	(___wmul@product+1)& (0+255),f,b
  1510  000786  5182               	movf	(___wmul@multiplier+1)& (0+255),w,b
  1511  000788  0383               	mulwf	___wmul@multiplicand& (0+255),b
  1512  00078A  50F3               	movf	prodl,w,c
  1513  00078C  2786               	addwf	(___wmul@product+1)& (0+255),f,b
  1514                           
  1515                           ; BSR set to: 0
  1516  00078E  C085  F081         	movff	___wmul@product,?___wmul
  1517  000792  C086  F082         	movff	___wmul@product+1,?___wmul+1
  1518  000796  0012               	return	
  1519  000798                     __end_of___wmul:
  1520                           	opt stack 0
  1521                           tblptru	equ	0xFF8
  1522                           tblptrh	equ	0xFF7
  1523                           tblptrl	equ	0xFF6
  1524                           tablat	equ	0xFF5
  1525                           prodh	equ	0xFF4
  1526                           prodl	equ	0xFF3
  1527                           postinc0	equ	0xFEE
  1528                           wreg	equ	0xFE8
  1529                           postdec1	equ	0xFE5
  1530                           fsr1l	equ	0xFE1
  1531                           status	equ	0xFD8
  1532                           
  1533 ;; *************** function _InitApp *****************
  1534 ;; Defined at:
  1535 ;;		line 33 in file "user.c"
  1536 ;; Parameters:    Size  Location     Type
  1537 ;;		None
  1538 ;; Auto vars:     Size  Location     Type
  1539 ;;		None
  1540 ;; Return value:  Size  Location     Type
  1541 ;;                  1    wreg      void 
  1542 ;; Registers used:
  1543 ;;		wreg, status,2
  1544 ;; Tracked objects:
  1545 ;;		On entry : 0/0
  1546 ;;		On exit  : 0/0
  1547 ;;		Unchanged: 0/0
  1548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1549 ;;      Params:         0       0       0       0       0       0       0       0       0
  1550 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1551 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1552 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1553 ;;Total ram usage:        0 bytes
  1554 ;; Hardware stack levels used:    1
  1555 ;; Hardware stack levels required when called:    3
  1556 ;; This function calls:
  1557 ;;		Nothing
  1558 ;; This function is called by:
  1559 ;;		_main
  1560 ;; This function uses a non-reentrant model
  1561 ;;
  1562                           
  1563                           	psect	text6
  1564  000652                     __ptext6:
  1565                           	opt stack 0
  1566  000652                     _InitApp:
  1567                           	opt stack 27
  1568                           
  1569                           ;user.c: 35: PORTA = 0;
  1570                           
  1571                           ; BSR set to: 0
  1572                           ;incstack = 0
  1573  000652  0E00               	movlw	0
  1574  000654  6E80               	movwf	3968,c	;volatile
  1575                           
  1576                           ;user.c: 36: LATA = 0;
  1577  000656  0E00               	movlw	0
  1578  000658  6E89               	movwf	3977,c	;volatile
  1579                           
  1580                           ;user.c: 37: PORTB = 0;
  1581  00065A  0E00               	movlw	0
  1582  00065C  6E81               	movwf	3969,c	;volatile
  1583                           
  1584                           ;user.c: 38: LATB = 0;
  1585  00065E  0E00               	movlw	0
  1586  000660  6E8A               	movwf	3978,c	;volatile
  1587                           
  1588                           ;user.c: 39: PORTC = 0;
  1589  000662  0E00               	movlw	0
  1590  000664  6E82               	movwf	3970,c	;volatile
  1591                           
  1592                           ;user.c: 40: LATC = 0;
  1593  000666  0E00               	movlw	0
  1594  000668  6E8B               	movwf	3979,c	;volatile
  1595                           
  1596                           ;user.c: 42: ADCON1 = 0b1101;
  1597  00066A  0E0D               	movlw	13
  1598  00066C  6EC1               	movwf	4033,c	;volatile
  1599                           
  1600                           ;user.c: 43: TRISAbits.TRISA0 = 1;
  1601  00066E  8092               	bsf	3986,0,c	;volatile
  1602                           
  1603                           ;user.c: 44: ADCON0bits.CHS = 0;
  1604  000670  94C2               	bcf	4034,2,c	;volatile
  1605  000672  96C2               	bcf	4034,3,c	;volatile
  1606  000674  98C2               	bcf	4034,4,c	;volatile
  1607  000676  9AC2               	bcf	4034,5,c	;volatile
  1608                           
  1609                           ;user.c: 45: ADCON2 = 0b10101100;
  1610  000678  0EAC               	movlw	172
  1611  00067A  6EC0               	movwf	4032,c	;volatile
  1612                           
  1613                           ;user.c: 46: PIE1bits.ADIE = 1;
  1614  00067C  8C9D               	bsf	3997,6,c	;volatile
  1615                           
  1616                           ;user.c: 47: PIR1bits.ADIF = 0;
  1617  00067E  9C9E               	bcf	3998,6,c	;volatile
  1618                           
  1619                           ;user.c: 48: ADCON0bits.ADON = 1;
  1620  000680  80C2               	bsf	4034,0,c	;volatile
  1621                           
  1622                           ;user.c: 50: TRISAbits.RA2 = 0;
  1623  000682  9492               	bcf	3986,2,c	;volatile
  1624                           
  1625                           ;user.c: 51: TRISAbits.RA3 = 0;
  1626  000684  9692               	bcf	3986,3,c	;volatile
  1627                           
  1628                           ;user.c: 52: TRISAbits.RA4 = 0;
  1629  000686  9892               	bcf	3986,4,c	;volatile
  1630                           
  1631                           ;user.c: 53: TRISAbits.RA5 = 0;
  1632  000688  9A92               	bcf	3986,5,c	;volatile
  1633                           
  1634                           ;user.c: 54: TRISCbits.RC0 = 0;
  1635  00068A  9094               	bcf	3988,0,c	;volatile
  1636                           
  1637                           ;user.c: 55: TRISCbits.RC1 = 0;
  1638  00068C  9294               	bcf	3988,1,c	;volatile
  1639                           
  1640                           ;user.c: 56: TRISBbits.RB7 = 0;
  1641  00068E  9E93               	bcf	3987,7,c	;volatile
  1642                           
  1643                           ;user.c: 57: TRISBbits.RB6 = 0;
  1644  000690  9C93               	bcf	3987,6,c	;volatile
  1645                           
  1646                           ;user.c: 58: TRISCbits.RC2 = 0;
  1647  000692  9494               	bcf	3988,2,c	;volatile
  1648                           
  1649                           ;user.c: 59: TRISBbits.RB4 = 0;
  1650  000694  9893               	bcf	3987,4,c	;volatile
  1651                           
  1652                           ;user.c: 60: TRISBbits.RB5 = 0;
  1653  000696  9A93               	bcf	3987,5,c	;volatile
  1654                           
  1655                           ;user.c: 62: RCONbits.IPEN = 0;
  1656  000698  9ED0               	bcf	4048,7,c	;volatile
  1657                           
  1658                           ;user.c: 64: INTCONbits.GIE = 1;
  1659  00069A  8EF2               	bsf	intcon,7,c	;volatile
  1660                           
  1661                           ;user.c: 65: INTCONbits.PEIE = 1;
  1662  00069C  8CF2               	bsf	intcon,6,c	;volatile
  1663                           
  1664                           ;user.c: 66: INTCONbits.TMR0IE = 1;
  1665  00069E  8AF2               	bsf	intcon,5,c	;volatile
  1666                           
  1667                           ;user.c: 67: INTCONbits.TMR0IF = 0;
  1668  0006A0  94F2               	bcf	intcon,2,c	;volatile
  1669                           
  1670                           ;user.c: 68: INTCON2bits.TMR0IP = 1;
  1671  0006A2  84F1               	bsf	intcon2,2,c	;volatile
  1672                           
  1673                           ;user.c: 69: T0CONbits.T08BIT = 1;
  1674  0006A4  8CD5               	bsf	4053,6,c	;volatile
  1675                           
  1676                           ;user.c: 70: T0CONbits.T0CS = 0;
  1677  0006A6  9AD5               	bcf	4053,5,c	;volatile
  1678                           
  1679                           ;user.c: 71: T0CONbits.PSA = 0;
  1680  0006A8  96D5               	bcf	4053,3,c	;volatile
  1681                           
  1682                           ;user.c: 72: T0CONbits.T0PS = 0b101;
  1683  0006AA  50D5               	movf	4053,w,c	;volatile
  1684  0006AC  0BF8               	andlw	-8
  1685  0006AE  0905               	iorlw	5
  1686  0006B0  6ED5               	movwf	4053,c	;volatile
  1687                           
  1688                           ;user.c: 73: T0CONbits.TMR0ON = 0;
  1689  0006B2  9ED5               	bcf	4053,7,c	;volatile
  1690                           
  1691                           ;user.c: 74: TMR0 = 0x6;
  1692  0006B4  0E00               	movlw	0
  1693  0006B6  6ED7               	movwf	4055,c	;volatile
  1694  0006B8  0E06               	movlw	6
  1695  0006BA  6ED6               	movwf	4054,c	;volatile
  1696                           
  1697                           ;user.c: 76: PIE1bits.TMR1IE = 1;
  1698  0006BC  809D               	bsf	3997,0,c	;volatile
  1699                           
  1700                           ;user.c: 77: PIR1bits.TMR1IF = 0;
  1701  0006BE  909E               	bcf	3998,0,c	;volatile
  1702                           
  1703                           ;user.c: 78: IPR1bits.TMR1IP = 1;
  1704  0006C0  809F               	bsf	3999,0,c	;volatile
  1705                           
  1706                           ;user.c: 79: T1CONbits.TMR1CS = 0;
  1707  0006C2  92CD               	bcf	4045,1,c	;volatile
  1708                           
  1709                           ;user.c: 80: T1CONbits.T1CKPS = 0b00;
  1710  0006C4  0ECF               	movlw	-49
  1711  0006C6  16CD               	andwf	4045,f,c	;volatile
  1712                           
  1713                           ;user.c: 81: T1CONbits.TMR1ON = 1;
  1714  0006C8  80CD               	bsf	4045,0,c	;volatile
  1715                           
  1716                           ;user.c: 85: TRISBbits.RB1 = 1;
  1717  0006CA  8293               	bsf	3987,1,c	;volatile
  1718                           
  1719                           ;user.c: 86: TRISBbits.RB2 = 1;
  1720  0006CC  8493               	bsf	3987,2,c	;volatile
  1721                           
  1722                           ;user.c: 87: INTCON3bits.INT1IE = 1;
  1723  0006CE  86F0               	bsf	intcon3,3,c	;volatile
  1724                           
  1725                           ;user.c: 88: INTCON3bits.INT2IE = 1;
  1726  0006D0  88F0               	bsf	intcon3,4,c	;volatile
  1727                           
  1728                           ;user.c: 89: INTCON3bits.INT1IF = 0;
  1729  0006D2  90F0               	bcf	intcon3,0,c	;volatile
  1730                           
  1731                           ;user.c: 90: INTCON3bits.INT2IF = 0;
  1732  0006D4  92F0               	bcf	intcon3,1,c	;volatile
  1733                           
  1734                           ;user.c: 91: INTCON2bits.INTEDG1 = 0;
  1735  0006D6  9AF1               	bcf	intcon2,5,c	;volatile
  1736                           
  1737                           ;user.c: 92: INTCON2bits.INTEDG2 = 0;
  1738  0006D8  98F1               	bcf	intcon2,4,c	;volatile
  1739                           
  1740                           ;user.c: 94: TRISCbits.RC6 = 0;
  1741  0006DA  9C94               	bcf	3988,6,c	;volatile
  1742                           
  1743                           ;user.c: 95: TRISCbits.RC7 = 1;
  1744  0006DC  8E94               	bsf	3988,7,c	;volatile
  1745                           
  1746                           ;user.c: 96: BRGH = 1;
  1747  0006DE  84AC               	bsf	4012,2,c	;volatile
  1748                           
  1749                           ;user.c: 97: BRG16 = 1;
  1750  0006E0  86B8               	bsf	4024,3,c	;volatile
  1751                           
  1752                           ;user.c: 98: SPBRG = 207;
  1753  0006E2  0ECF               	movlw	207
  1754  0006E4  6EAF               	movwf	4015,c	;volatile
  1755                           
  1756                           ;user.c: 99: SPEN = 1;
  1757  0006E6  8EAB               	bsf	4011,7,c	;volatile
  1758                           
  1759                           ;user.c: 100: SYNC = 0;
  1760  0006E8  98AC               	bcf	4012,4,c	;volatile
  1761                           
  1762                           ;user.c: 101: TXEN = 1;
  1763  0006EA  8AAC               	bsf	4012,5,c	;volatile
  1764                           
  1765                           ;user.c: 102: CREN = 1;
  1766  0006EC  88AB               	bsf	4011,4,c	;volatile
  1767                           
  1768                           ;user.c: 103: TX9 = 0;
  1769  0006EE  9CAC               	bcf	4012,6,c	;volatile
  1770                           
  1771                           ;user.c: 104: RX9 = 0;
  1772  0006F0  9CAB               	bcf	4011,6,c	;volatile
  1773                           
  1774                           ;user.c: 105: RCIE = 1;
  1775  0006F2  8A9D               	bsf	3997,5,c	;volatile
  1776                           
  1777                           ;user.c: 106: TXIE = 0;
  1778  0006F4  989D               	bcf	3997,4,c	;volatile
  1779                           
  1780                           ;user.c: 108: PR2 = 99;
  1781  0006F6  0E63               	movlw	99
  1782  0006F8  6ECB               	movwf	4043,c	;volatile
  1783                           
  1784                           ;user.c: 109: CCP1CONbits.DC1B = 0;
  1785  0006FA  0ECF               	movlw	-49
  1786  0006FC  16BD               	andwf	4029,f,c	;volatile
  1787                           
  1788                           ;user.c: 110: T2CONbits.T2CKPS = 0b00;
  1789  0006FE  0EFC               	movlw	-4
  1790  000700  16CA               	andwf	4042,f,c	;volatile
  1791                           
  1792                           ;user.c: 111: T2CONbits.TMR2ON = 1;
  1793  000702  84CA               	bsf	4042,2,c	;volatile
  1794                           
  1795                           ;user.c: 112: CCP1CONbits.CCP1M = 0b1111;
  1796  000704  80BD               	bsf	4029,0,c	;volatile
  1797  000706  82BD               	bsf	4029,1,c	;volatile
  1798  000708  84BD               	bsf	4029,2,c	;volatile
  1799  00070A  86BD               	bsf	4029,3,c	;volatile
  1800  00070C  0012               	return		;funcret
  1801  00070E                     __end_of_InitApp:
  1802                           	opt stack 0
  1803                           tblptru	equ	0xFF8
  1804                           tblptrh	equ	0xFF7
  1805                           tblptrl	equ	0xFF6
  1806                           tablat	equ	0xFF5
  1807                           prodh	equ	0xFF4
  1808                           prodl	equ	0xFF3
  1809                           intcon	equ	0xFF2
  1810                           intcon2	equ	0xFF1
  1811                           intcon3	equ	0xFF0
  1812                           postinc0	equ	0xFEE
  1813                           wreg	equ	0xFE8
  1814                           postdec1	equ	0xFE5
  1815                           fsr1l	equ	0xFE1
  1816                           status	equ	0xFD8
  1817                           
  1818 ;; *************** function _ConfigureOscillator *****************
  1819 ;; Defined at:
  1820 ;;		line 24 in file "system.c"
  1821 ;; Parameters:    Size  Location     Type
  1822 ;;		None
  1823 ;; Auto vars:     Size  Location     Type
  1824 ;;		None
  1825 ;; Return value:  Size  Location     Type
  1826 ;;                  1    wreg      void 
  1827 ;; Registers used:
  1828 ;;		wreg, status,2
  1829 ;; Tracked objects:
  1830 ;;		On entry : 0/0
  1831 ;;		On exit  : 0/0
  1832 ;;		Unchanged: 0/0
  1833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1834 ;;      Params:         0       0       0       0       0       0       0       0       0
  1835 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1836 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1837 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1838 ;;Total ram usage:        0 bytes
  1839 ;; Hardware stack levels used:    1
  1840 ;; Hardware stack levels required when called:    3
  1841 ;; This function calls:
  1842 ;;		Nothing
  1843 ;; This function is called by:
  1844 ;;		_main
  1845 ;; This function uses a non-reentrant model
  1846 ;;
  1847                           
  1848                           	psect	text7
  1849  00084A                     __ptext7:
  1850                           	opt stack 0
  1851  00084A                     _ConfigureOscillator:
  1852                           	opt stack 27
  1853                           
  1854                           ;system.c: 27: OSCCONbits.IRCF = 0b111;
  1855                           
  1856                           ;incstack = 0
  1857  00084A  88D3               	bsf	4051,4,c	;volatile
  1858  00084C  8AD3               	bsf	4051,5,c	;volatile
  1859  00084E  8CD3               	bsf	4051,6,c	;volatile
  1860                           
  1861                           ;system.c: 28: OSCCONbits.SCS = 0b11;
  1862  000850  0E03               	movlw	3
  1863  000852  12D3               	iorwf	4051,f,c	;volatile
  1864  000854  0012               	return		;funcret
  1865  000856                     __end_of_ConfigureOscillator:
  1866                           	opt stack 0
  1867                           tblptru	equ	0xFF8
  1868                           tblptrh	equ	0xFF7
  1869                           tblptrl	equ	0xFF6
  1870                           tablat	equ	0xFF5
  1871                           prodh	equ	0xFF4
  1872                           prodl	equ	0xFF3
  1873                           intcon	equ	0xFF2
  1874                           intcon2	equ	0xFF1
  1875                           intcon3	equ	0xFF0
  1876                           postinc0	equ	0xFEE
  1877                           wreg	equ	0xFE8
  1878                           postdec1	equ	0xFE5
  1879                           fsr1l	equ	0xFE1
  1880                           status	equ	0xFD8
  1881                           
  1882 ;; *************** function _high_isr *****************
  1883 ;; Defined at:
  1884 ;;		line 68 in file "interrupts.c"
  1885 ;; Parameters:    Size  Location     Type
  1886 ;;		None
  1887 ;; Auto vars:     Size  Location     Type
  1888 ;;		None
  1889 ;; Return value:  Size  Location     Type
  1890 ;;                  1    wreg      void 
  1891 ;; Registers used:
  1892 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1893 ;; Tracked objects:
  1894 ;;		On entry : 0/0
  1895 ;;		On exit  : 0/0
  1896 ;;		Unchanged: 0/0
  1897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1898 ;;      Params:         0       0       0       0       0       0       0       0       0
  1899 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1900 ;;      Temps:         20       0       0       0       0       0       0       0       0
  1901 ;;      Totals:        20       0       0       0       0       0       0       0       0
  1902 ;;Total ram usage:       20 bytes
  1903 ;; Hardware stack levels used:    1
  1904 ;; Hardware stack levels required when called:    2
  1905 ;; This function calls:
  1906 ;;		_finish
  1907 ;;		_mot_3_step_count
  1908 ;; This function is called by:
  1909 ;;		Interrupt level 2
  1910 ;; This function uses a non-reentrant model
  1911 ;;
  1912                           
  1913                           	psect	intcode
  1914  000008                     __pintcode:
  1915                           	opt stack 0
  1916  000008                     _high_isr:
  1917                           	opt stack 27
  1918                           
  1919                           ;incstack = 0
  1920  000008  8255               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  1921  00000A  EDCF  F001         	call	int_func,f	;refresh shadow registers
  1922                           tblptru	equ	0xFF8
  1923                           tblptrh	equ	0xFF7
  1924                           tblptrl	equ	0xFF6
  1925                           tablat	equ	0xFF5
  1926                           prodh	equ	0xFF4
  1927                           prodl	equ	0xFF3
  1928                           intcon	equ	0xFF2
  1929                           intcon2	equ	0xFF1
  1930                           intcon3	equ	0xFF0
  1931                           postinc0	equ	0xFEE
  1932                           wreg	equ	0xFE8
  1933                           postdec1	equ	0xFE5
  1934                           fsr1l	equ	0xFE1
  1935                           status	equ	0xFD8
  1936                           
  1937                           	psect	intcode_body
  1938  00039E                     __pintcode_body:
  1939                           	opt stack 27
  1940  00039E                     int_func:
  1941                           	opt stack 27
  1942  00039E  0006               	pop		; remove dummy address from shadow register refresh
  1943  0003A0  CFFA F035          	movff	pclath,??_high_isr+2
  1944  0003A4  CFFB F036          	movff	pclatu,??_high_isr+3
  1945  0003A8  CFE9 F037          	movff	fsr0l,??_high_isr+4
  1946  0003AC  CFEA F038          	movff	fsr0h,??_high_isr+5
  1947  0003B0  CFE1 F039          	movff	fsr1l,??_high_isr+6
  1948  0003B4  CFE2 F03A          	movff	fsr1h,??_high_isr+7
  1949  0003B8  CFD9 F03B          	movff	fsr2l,??_high_isr+8
  1950  0003BC  CFDA F03C          	movff	fsr2h,??_high_isr+9
  1951  0003C0  CFF3 F03D          	movff	prodl,??_high_isr+10
  1952  0003C4  CFF4 F03E          	movff	prodh,??_high_isr+11
  1953  0003C8  CFF6 F03F          	movff	tblptrl,??_high_isr+12
  1954  0003CC  CFF7 F040          	movff	tblptrh,??_high_isr+13
  1955  0003D0  CFF8 F041          	movff	tblptru,??_high_isr+14
  1956  0003D4  CFF5 F042          	movff	tablat,??_high_isr+15
  1957  0003D8  C055  F043         	movff	btemp,??_high_isr+16
  1958  0003DC  C056  F044         	movff	btemp+1,??_high_isr+17
  1959  0003E0  C057  F045         	movff	btemp+2,??_high_isr+18
  1960  0003E4  C058  F046         	movff	btemp+3,??_high_isr+19
  1961                           
  1962                           ;interrupts.c: 69: if (INTCONbits.TMR0IF) {
  1963  0003E8  A4F2               	btfss	intcon,2,c	;volatile
  1964  0003EA  D077               	goto	i2l95
  1965                           
  1966                           ;interrupts.c: 71: INTCONbits.TMR0IF = 0;
  1967  0003EC  94F2               	bcf	intcon,2,c	;volatile
  1968                           
  1969                           ;interrupts.c: 72: TMR0 = 250;
  1970  0003EE  0E00               	movlw	0
  1971  0003F0  6ED7               	movwf	4055,c	;volatile
  1972  0003F2  0EFA               	movlw	250
  1973  0003F4  6ED6               	movwf	4054,c	;volatile
  1974                           
  1975                           ;interrupts.c: 73: MOT_1_count++;
  1976  0003F6  4A0F               	infsnz	_MOT_1_count,f,c
  1977  0003F8  2A10               	incf	_MOT_1_count+1,f,c
  1978                           
  1979                           ;interrupts.c: 74: MOT_2_count++;
  1980  0003FA  4A0D               	infsnz	_MOT_2_count,f,c
  1981  0003FC  2A0E               	incf	_MOT_2_count+1,f,c
  1982                           
  1983                           ;interrupts.c: 75: MOT_3_count++;
  1984  0003FE  4A0B               	infsnz	_MOT_3_count,f,c
  1985  000400  2A0C               	incf	_MOT_3_count+1,f,c
  1986                           
  1987                           ;interrupts.c: 76: MOT_4_count++;
  1988  000402  4A09               	infsnz	_MOT_4_count,f,c
  1989  000404  2A0A               	incf	_MOT_4_count+1,f,c
  1990                           
  1991                           ;interrupts.c: 78: if (MOT_1) {
  1992  000406  5026               	movf	_MOT_1,w,c
  1993  000408  B4D8               	btfsc	status,2,c
  1994  00040A  D02E               	goto	i2l99
  1995                           
  1996                           ;interrupts.c: 80: if (MOT_1_count == count_1) {
  1997  00040C  504D               	movf	_count_1,w,c
  1998  00040E  180F               	xorwf	_MOT_1_count,w,c
  1999  000410  E12B               	bnz	i2l1539
  2000  000412  504E               	movf	_count_1+1,w,c
  2001  000414  1810               	xorwf	_MOT_1_count+1,w,c
  2002  000416  A4D8               	btfss	status,2,c
  2003  000418  D027               	goto	i2l99
  2004                           
  2005                           ;interrupts.c: 81: MOT_1_count = 0;
  2006  00041A  0E00               	movlw	0
  2007  00041C  6E10               	movwf	_MOT_1_count+1,c
  2008  00041E  0E00               	movlw	0
  2009  000420  6E0F               	movwf	_MOT_1_count,c
  2010                           
  2011                           ;interrupts.c: 82: LATAbits.LA3 = !PORTAbits.RA3;
  2012  000422  B680               	btfsc	3968,3,c	;volatile
  2013  000424  D003               	goto	i2u85_40
  2014  000426  6A33               	clrf	??_high_isr& (0+255),c
  2015  000428  2A33               	incf	??_high_isr& (0+255),f,c
  2016  00042A  D001               	goto	i2u86_48
  2017  00042C                     i2u85_40:
  2018  00042C  6A33               	clrf	??_high_isr& (0+255),c
  2019  00042E                     i2u86_48:
  2020  00042E  4633               	rlncf	??_high_isr,f,c
  2021  000430  4633               	rlncf	??_high_isr,f,c
  2022  000432  4633               	rlncf	??_high_isr,f,c
  2023  000434  5089               	movf	3977,w,c	;volatile
  2024  000436  1833               	xorwf	??_high_isr,w,c
  2025  000438  0BF7               	andlw	-9
  2026  00043A  1833               	xorwf	??_high_isr,w,c
  2027  00043C  6E89               	movwf	3977,c	;volatile
  2028                           
  2029                           ;interrupts.c: 83: mot_1_steps++;
  2030  00043E  4A07               	infsnz	_mot_1_steps,f,c
  2031  000440  2A08               	incf	_mot_1_steps+1,f,c
  2032                           
  2033                           ;interrupts.c: 84: if (mot_1_steps == 200) {
  2034  000442  0EC8               	movlw	200
  2035  000444  1807               	xorwf	_mot_1_steps,w,c
  2036  000446  1008               	iorwf	_mot_1_steps+1,w,c
  2037  000448  A4D8               	btfss	status,2,c
  2038  00044A  D006               	goto	i2l98
  2039                           
  2040                           ;interrupts.c: 86: mot_1_steps = 0;
  2041  00044C  0E00               	movlw	0
  2042  00044E  6E08               	movwf	_mot_1_steps+1,c
  2043  000450  0E00               	movlw	0
  2044  000452  6E07               	movwf	_mot_1_steps,c
  2045                           
  2046                           ;interrupts.c: 87: turns_count++;
  2047  000454  4A01               	infsnz	_turns_count,f,c
  2048  000456  2A02               	incf	_turns_count+1,f,c
  2049  000458                     i2l98:
  2050                           
  2051                           ;interrupts.c: 88: }
  2052                           ;interrupts.c: 89: if (turns_count == turns) {
  2053  000458  5051               	movf	_turns,w,c
  2054  00045A  1801               	xorwf	_turns_count,w,c
  2055  00045C  E105               	bnz	i2l1539
  2056  00045E  5052               	movf	_turns+1,w,c
  2057  000460  1802               	xorwf	_turns_count+1,w,c
  2058  000462  B4D8               	btfsc	status,2,c
  2059                           
  2060                           ;interrupts.c: 91: finish();
  2061  000464  EC0C  F004         	call	_finish	;wreg free
  2062  000468                     i2l99:
  2063  000468                     i2l1539:
  2064                           
  2065                           ;interrupts.c: 92: }
  2066                           ;interrupts.c: 93: }
  2067                           ;interrupts.c: 94: }
  2068                           ;interrupts.c: 96: if (MOT_3) {
  2069  000468  5025               	movf	_MOT_3,w,c
  2070  00046A  B4D8               	btfsc	status,2,c
  2071  00046C  D0CC               	goto	i2l125
  2072                           
  2073                           ;interrupts.c: 98: if (MOT_3_count == count_3) {
  2074  00046E  5049               	movf	_count_3,w,c
  2075  000470  180B               	xorwf	_MOT_3_count,w,c
  2076  000472  E103               	bnz	i2u90_41
  2077  000474  504A               	movf	_count_3+1,w,c
  2078  000476  180C               	xorwf	_MOT_3_count+1,w,c
  2079  000478  A4D8               	btfss	status,2,c
  2080  00047A                     i2u90_41:
  2081  00047A  D0C5               	goto	i2l125
  2082                           
  2083                           ;interrupts.c: 99: MOT_3_count = 0;
  2084  00047C  0E00               	movlw	0
  2085  00047E  6E0C               	movwf	_MOT_3_count+1,c
  2086  000480  0E00               	movlw	0
  2087  000482  6E0B               	movwf	_MOT_3_count,c
  2088                           
  2089                           ;interrupts.c: 100: LATCbits.LC1 = !PORTCbits.RC1;
  2090  000484  B282               	btfsc	3970,1,c	;volatile
  2091  000486  D003               	goto	i2u91_40
  2092  000488  6A33               	clrf	??_high_isr& (0+255),c
  2093  00048A  2A33               	incf	??_high_isr& (0+255),f,c
  2094  00048C  D001               	goto	i2u92_48
  2095  00048E                     i2u91_40:
  2096  00048E  6A33               	clrf	??_high_isr& (0+255),c
  2097  000490                     i2u92_48:
  2098  000490  4633               	rlncf	??_high_isr,f,c
  2099  000492  508B               	movf	3979,w,c	;volatile
  2100  000494  1833               	xorwf	??_high_isr,w,c
  2101  000496  0BFD               	andlw	-3
  2102  000498  1833               	xorwf	??_high_isr,w,c
  2103  00049A  6E8B               	movwf	3979,c	;volatile
  2104                           
  2105                           ;interrupts.c: 101: mot_3_steps++;
  2106  00049C  4A05               	infsnz	_mot_3_steps,f,c
  2107  00049E  2A06               	incf	_mot_3_steps+1,f,c
  2108                           
  2109                           ;interrupts.c: 103: if (mot_3_steps == mot_3_step_count(length, 1)) {
  2110  0004A0  C04F  F02D         	movff	_length,mot_3_step_count@l
  2111  0004A4  C050  F02E         	movff	_length+1,mot_3_step_count@l+1
  2112  0004A8  0E00               	movlw	0
  2113  0004AA  6E30               	movwf	mot_3_step_count@ms+1,c
  2114  0004AC  0E01               	movlw	1
  2115  0004AE  6E2F               	movwf	mot_3_step_count@ms,c
  2116  0004B0  ECDF  F003         	call	_mot_3_step_count	;wreg free
  2117  0004B4  5005               	movf	_mot_3_steps,w,c
  2118  0004B6  182D               	xorwf	?_mot_3_step_count,w,c
  2119  0004B8  E103               	bnz	i2u93_41
  2120  0004BA  5006               	movf	_mot_3_steps+1,w,c
  2121  0004BC  182E               	xorwf	?_mot_3_step_count+1,w,c
  2122  0004BE  A4D8               	btfss	status,2,c
  2123  0004C0                     i2u93_41:
  2124  0004C0  D0A2               	goto	i2l125
  2125                           
  2126                           ;interrupts.c: 105: DIR_3 = !DIR_3;
  2127  0004C2  5024               	movf	_DIR_3,w,c
  2128  0004C4  A4D8               	btfss	status,2,c
  2129  0004C6  D002               	goto	i2u94_40
  2130  0004C8  0E01               	movlw	1
  2131  0004CA  D001               	goto	i2u95_40
  2132  0004CC                     i2u94_40:
  2133  0004CC  0E00               	movlw	0
  2134  0004CE                     i2u95_40:
  2135  0004CE  6E24               	movwf	_DIR_3,c
  2136                           
  2137                           ;interrupts.c: 106: mot_3_steps = 0;
  2138  0004D0  0E00               	movlw	0
  2139  0004D2  6E06               	movwf	_mot_3_steps+1,c
  2140  0004D4  0E00               	movlw	0
  2141  0004D6  6E05               	movwf	_mot_3_steps,c
  2142                           
  2143                           ;interrupts.c: 107: }
  2144                           ;interrupts.c: 108: }
  2145                           ;interrupts.c: 109: }
  2146                           ;interrupts.c: 119: } else if (PIR1bits.TMR1IF) {
  2147  0004D8  D096               	goto	i2l125
  2148  0004DA                     i2l95:
  2149  0004DA  A09E               	btfss	3998,0,c	;volatile
  2150  0004DC  D04F               	goto	i2l104
  2151                           
  2152                           ;interrupts.c: 121: PIR1bits.TMR1IF = 0;
  2153  0004DE  909E               	bcf	3998,0,c	;volatile
  2154                           
  2155                           ;interrupts.c: 122: TMR1 = 0xD8F0;
  2156  0004E0  0ED8               	movlw	216
  2157  0004E2  6ECF               	movwf	4047,c	;volatile
  2158  0004E4  0EF0               	movlw	240
  2159  0004E6  6ECE               	movwf	4046,c	;volatile
  2160                           
  2161                           ;interrupts.c: 123: if (MOT_2) {
  2162  0004E8  5023               	movf	_MOT_2,w,c
  2163  0004EA  B4D8               	btfsc	status,2,c
  2164  0004EC  D00D               	goto	i2l105
  2165                           
  2166                           ;interrupts.c: 125: LATAbits.LA5 = !PORTAbits.RA5;
  2167  0004EE  BA80               	btfsc	3968,5,c	;volatile
  2168  0004F0  D003               	goto	i2u98_40
  2169  0004F2  6A33               	clrf	??_high_isr& (0+255),c
  2170  0004F4  2A33               	incf	??_high_isr& (0+255),f,c
  2171  0004F6  D001               	goto	i2u99_48
  2172  0004F8                     i2u98_40:
  2173  0004F8  6A33               	clrf	??_high_isr& (0+255),c
  2174  0004FA                     i2u99_48:
  2175  0004FA  3A33               	swapf	??_high_isr,f,c
  2176  0004FC  4633               	rlncf	??_high_isr,f,c
  2177  0004FE  5089               	movf	3977,w,c	;volatile
  2178  000500  1833               	xorwf	??_high_isr,w,c
  2179  000502  0BDF               	andlw	-33
  2180  000504  1833               	xorwf	??_high_isr,w,c
  2181  000506  6E89               	movwf	3977,c	;volatile
  2182  000508                     i2l105:
  2183                           
  2184                           ;interrupts.c: 126: }
  2185                           ;interrupts.c: 128: if (MOT_3) {
  2186  000508  5025               	movf	_MOT_3,w,c
  2187  00050A  B4D8               	btfsc	status,2,c
  2188  00050C  D00C               	goto	i2l106
  2189                           
  2190                           ;interrupts.c: 130: LATCbits.LC1 = !PORTCbits.RC1;
  2191  00050E  B282               	btfsc	3970,1,c	;volatile
  2192  000510  D003               	goto	i2u101_40
  2193  000512  6A33               	clrf	??_high_isr& (0+255),c
  2194  000514  2A33               	incf	??_high_isr& (0+255),f,c
  2195  000516  D001               	goto	i2u102_48
  2196  000518                     i2u101_40:
  2197  000518  6A33               	clrf	??_high_isr& (0+255),c
  2198  00051A                     i2u102_48:
  2199  00051A  4633               	rlncf	??_high_isr,f,c
  2200  00051C  508B               	movf	3979,w,c	;volatile
  2201  00051E  1833               	xorwf	??_high_isr,w,c
  2202  000520  0BFD               	andlw	-3
  2203  000522  1833               	xorwf	??_high_isr,w,c
  2204  000524  6E8B               	movwf	3979,c	;volatile
  2205  000526                     i2l106:
  2206                           
  2207                           ;interrupts.c: 131: }
  2208                           ;interrupts.c: 133: if (MOT_4) {
  2209  000526  5054               	movf	_MOT_4,w,c
  2210  000528  B4D8               	btfsc	status,2,c
  2211  00052A  D06D               	goto	i2l125
  2212                           
  2213                           ;interrupts.c: 135: if(move_4) {
  2214  00052C  5022               	movf	_move_4,w,c
  2215  00052E  B4D8               	btfsc	status,2,c
  2216  000530  D06A               	goto	i2l125
  2217                           
  2218                           ;interrupts.c: 136: LATBbits.LB6 = !PORTBbits.RB6;
  2219  000532  BC81               	btfsc	3969,6,c	;volatile
  2220  000534  D003               	goto	i2u105_40
  2221  000536  6A33               	clrf	??_high_isr& (0+255),c
  2222  000538  2A33               	incf	??_high_isr& (0+255),f,c
  2223  00053A  D001               	goto	i2u106_48
  2224  00053C                     i2u105_40:
  2225  00053C  6A33               	clrf	??_high_isr& (0+255),c
  2226  00053E                     i2u106_48:
  2227  00053E  3A33               	swapf	??_high_isr,f,c
  2228  000540  4633               	rlncf	??_high_isr,f,c
  2229  000542  4633               	rlncf	??_high_isr,f,c
  2230  000544  508A               	movf	3978,w,c	;volatile
  2231  000546  1833               	xorwf	??_high_isr,w,c
  2232  000548  0BBF               	andlw	-65
  2233  00054A  1833               	xorwf	??_high_isr,w,c
  2234  00054C  6E8A               	movwf	3978,c	;volatile
  2235                           
  2236                           ;interrupts.c: 138: if (mot_4_steps == 2*steps_4) {
  2237  00054E  C017  F033         	movff	_steps_4,??_high_isr
  2238  000552  C018  F034         	movff	_steps_4+1,??_high_isr+1
  2239  000556  90D8               	bcf	status,0,c
  2240  000558  3633               	rlcf	??_high_isr,f,c
  2241  00055A  3634               	rlcf	??_high_isr+1,f,c
  2242  00055C  5003               	movf	_mot_4_steps,w,c
  2243  00055E  1833               	xorwf	??_high_isr,w,c
  2244  000560  E10A               	bnz	i2l1571
  2245  000562  5004               	movf	_mot_4_steps+1,w,c
  2246  000564  1834               	xorwf	??_high_isr+1,w,c
  2247  000566  A4D8               	btfss	status,2,c
  2248  000568  D006               	goto	i2l109
  2249                           
  2250                           ;interrupts.c: 139: move_4 = 0;
  2251  00056A  0E00               	movlw	0
  2252  00056C  6E22               	movwf	_move_4,c
  2253                           
  2254                           ;interrupts.c: 140: mot_4_steps = 0;
  2255  00056E  0E00               	movlw	0
  2256  000570  6E04               	movwf	_mot_4_steps+1,c
  2257  000572  0E00               	movlw	0
  2258  000574  6E03               	movwf	_mot_4_steps,c
  2259  000576                     i2l109:
  2260  000576                     i2l1571:
  2261                           
  2262                           ;interrupts.c: 141: }
  2263                           ;interrupts.c: 142: mot_4_steps++;
  2264  000576  4A03               	infsnz	_mot_4_steps,f,c
  2265  000578  2A04               	incf	_mot_4_steps+1,f,c
  2266                           
  2267                           ;interrupts.c: 143: }
  2268                           ;interrupts.c: 144: }
  2269                           ;interrupts.c: 151: } else if (PIR1bits.RCIF) {
  2270  00057A  D045               	goto	i2l125
  2271  00057C                     i2l104:
  2272  00057C  AA9E               	btfss	3998,5,c	;volatile
  2273  00057E  D01A               	goto	i2l111
  2274                           
  2275                           ;interrupts.c: 153: PIR1bits.RCIF = 0;
  2276  000580  9A9E               	bcf	3998,5,c	;volatile
  2277                           
  2278                           ;interrupts.c: 154: palabra[n] = RCREG;
  2279  000582  0E60               	movlw	low _palabra
  2280  000584  2415               	addwf	_n,w,c
  2281  000586  6ED9               	movwf	fsr2l,c
  2282  000588  0E00               	movlw	high _palabra
  2283  00058A  2016               	addwfc	_n+1,w,c
  2284  00058C  6EDA               	movwf	fsr2h,c
  2285  00058E  CFAE FFDF          	movff	4014,indf2	;volatile
  2286                           
  2287                           ;interrupts.c: 155: n++;
  2288  000592  4A15               	infsnz	_n,f,c
  2289  000594  2A16               	incf	_n+1,f,c
  2290                           
  2291                           ;interrupts.c: 156: if (RCREG == '\n') {
  2292  000596  0E0A               	movlw	10
  2293  000598  18AE               	xorwf	4014,w,c	;volatile
  2294  00059A  A4D8               	btfss	status,2,c
  2295  00059C  D034               	goto	i2l125
  2296                           
  2297                           ;interrupts.c: 157: TXREG = palabra[0];
  2298  00059E  C060  FFAD         	movff	_palabra,4013	;volatile
  2299  0005A2  A89E               	btfss	3998,4,c	;volatile
  2300  0005A4  D7FE               	goto	i2l114
  2301                           
  2302                           ;interrupts.c: 159: recibi = 1;
  2303  0005A6  0E01               	movlw	1
  2304  0005A8  6E20               	movwf	_recibi,c
  2305                           
  2306                           ;interrupts.c: 160: n = 0;
  2307  0005AA  0E00               	movlw	0
  2308  0005AC  6E16               	movwf	_n+1,c
  2309  0005AE  0E00               	movlw	0
  2310  0005B0  6E15               	movwf	_n,c
  2311                           
  2312                           ;interrupts.c: 161: }
  2313                           ;interrupts.c: 162: } else if (PIR1bits.ADIF) {
  2314  0005B2  D029               	goto	i2l125
  2315  0005B4                     i2l111:
  2316  0005B4  AC9E               	btfss	3998,6,c	;volatile
  2317  0005B6  D006               	goto	i2l117
  2318                           
  2319                           ;interrupts.c: 164: PIR1bits.ADIF = 0;
  2320  0005B8  9C9E               	bcf	3998,6,c	;volatile
  2321                           
  2322                           ;interrupts.c: 170: ADC_value_press = ADRES;
  2323  0005BA  CFC3 F011          	movff	4035,_ADC_value_press	;volatile
  2324  0005BE  CFC4 F012          	movff	4036,_ADC_value_press+1	;volatile
  2325                           
  2326                           ;interrupts.c: 172: } else if (INTCON3bits.INT1IF) {
  2327  0005C2  D021               	goto	i2l125
  2328  0005C4                     i2l117:
  2329  0005C4  A0F0               	btfss	intcon3,0,c	;volatile
  2330  0005C6  D009               	goto	i2l119
  2331                           
  2332                           ;interrupts.c: 174: INTCON3bits.INT1IF = 0;
  2333  0005C8  90F0               	bcf	intcon3,0,c	;volatile
  2334                           
  2335                           ;interrupts.c: 176: if (winding) {
  2336  0005CA  5021               	movf	_winding,w,c
  2337  0005CC  A4D8               	btfss	status,2,c
  2338  0005CE  D00B               	goto	i2u117_40
  2339                           
  2340                           ;interrupts.c: 185: DIR_3 = !DIR_3;
  2341                           
  2342                           ;interrupts.c: 183: } else {
  2343                           
  2344                           ;interrupts.c: 181: MOT_4 = 0;
  2345                           
  2346                           ;interrupts.c: 180: MOT_3 = 0;
  2347                           
  2348                           ;interrupts.c: 179: MOT_2 = 0;
  2349                           
  2350                           ;interrupts.c: 178: MOT_1 = 0;
  2351  0005D0  5024               	movf	_DIR_3,w,c
  2352  0005D2  A4D8               	btfss	status,2,c
  2353  0005D4  D016               	goto	i2u118_40
  2354  0005D6  0E01               	movlw	1
  2355  0005D8  D015               	goto	i2u119_40
  2356  0005DA                     i2l119:
  2357  0005DA  A2F0               	btfss	intcon3,1,c	;volatile
  2358  0005DC  D014               	goto	i2l125
  2359                           
  2360                           ;interrupts.c: 190: INTCON3bits.INT2IF = 0;
  2361  0005DE  92F0               	bcf	intcon3,1,c	;volatile
  2362                           
  2363                           ;interrupts.c: 192: if (winding) {
  2364  0005E0  5021               	movf	_winding,w,c
  2365  0005E2  B4D8               	btfsc	status,2,c
  2366  0005E4  D009               	goto	i2l124
  2367  0005E6                     i2u117_40:
  2368                           
  2369                           ;interrupts.c: 194: MOT_1 = 0;
  2370  0005E6  0E00               	movlw	0
  2371  0005E8  6E26               	movwf	_MOT_1,c
  2372                           
  2373                           ;interrupts.c: 195: MOT_2 = 0;
  2374  0005EA  0E00               	movlw	0
  2375  0005EC  6E23               	movwf	_MOT_2,c
  2376                           
  2377                           ;interrupts.c: 196: MOT_3 = 0;
  2378  0005EE  0E00               	movlw	0
  2379  0005F0  6E25               	movwf	_MOT_3,c
  2380                           
  2381                           ;interrupts.c: 197: MOT_4 = 0;
  2382  0005F2  0E00               	movlw	0
  2383  0005F4  6E54               	movwf	_MOT_4,c
  2384                           
  2385                           ;interrupts.c: 199: } else {
  2386  0005F6  D007               	goto	i2l125
  2387  0005F8                     i2l124:
  2388                           
  2389                           ;interrupts.c: 201: DIR_3 = !DIR_3;
  2390  0005F8  5024               	movf	_DIR_3,w,c
  2391  0005FA  A4D8               	btfss	status,2,c
  2392  0005FC  D002               	goto	i2u118_40
  2393  0005FE  0E01               	movlw	1
  2394  000600  D001               	goto	i2u119_40
  2395  000602                     i2u118_40:
  2396  000602  0E00               	movlw	0
  2397  000604                     i2u119_40:
  2398  000604  6E24               	movwf	_DIR_3,c
  2399  000606                     i2l125:
  2400  000606  C046  F058         	movff	??_high_isr+19,btemp+3
  2401  00060A  C045  F057         	movff	??_high_isr+18,btemp+2
  2402  00060E  C044  F056         	movff	??_high_isr+17,btemp+1
  2403  000612  C043  F055         	movff	??_high_isr+16,btemp
  2404  000616  C042  FFF5         	movff	??_high_isr+15,tablat
  2405  00061A  C041  FFF8         	movff	??_high_isr+14,tblptru
  2406  00061E  C040  FFF7         	movff	??_high_isr+13,tblptrh
  2407  000622  C03F  FFF6         	movff	??_high_isr+12,tblptrl
  2408  000626  C03E  FFF4         	movff	??_high_isr+11,prodh
  2409  00062A  C03D  FFF3         	movff	??_high_isr+10,prodl
  2410  00062E  C03C  FFDA         	movff	??_high_isr+9,fsr2h
  2411  000632  C03B  FFD9         	movff	??_high_isr+8,fsr2l
  2412  000636  C03A  FFE2         	movff	??_high_isr+7,fsr1h
  2413  00063A  C039  FFE1         	movff	??_high_isr+6,fsr1l
  2414  00063E  C038  FFEA         	movff	??_high_isr+5,fsr0h
  2415  000642  C037  FFE9         	movff	??_high_isr+4,fsr0l
  2416  000646  C036  FFFB         	movff	??_high_isr+3,pclatu
  2417  00064A  C035  FFFA         	movff	??_high_isr+2,pclath
  2418  00064E  9255               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  2419  000650  0011               	retfie		f
  2420  000652                     __end_of_high_isr:
  2421                           	opt stack 0
  2422                           pclatu	equ	0xFFB
  2423                           pclath	equ	0xFFA
  2424                           tblptru	equ	0xFF8
  2425                           tblptrh	equ	0xFF7
  2426                           tblptrl	equ	0xFF6
  2427                           tablat	equ	0xFF5
  2428                           prodh	equ	0xFF4
  2429                           prodl	equ	0xFF3
  2430                           intcon	equ	0xFF2
  2431                           intcon2	equ	0xFF1
  2432                           intcon3	equ	0xFF0
  2433                           postinc0	equ	0xFEE
  2434                           fsr0h	equ	0xFEA
  2435                           fsr0l	equ	0xFE9
  2436                           wreg	equ	0xFE8
  2437                           postdec1	equ	0xFE5
  2438                           fsr1h	equ	0xFE2
  2439                           fsr1l	equ	0xFE1
  2440                           indf2	equ	0xFDF
  2441                           fsr2h	equ	0xFDA
  2442                           fsr2l	equ	0xFD9
  2443                           status	equ	0xFD8
  2444                           
  2445 ;; *************** function _mot_3_step_count *****************
  2446 ;; Defined at:
  2447 ;;		line 194 in file "main.c"
  2448 ;; Parameters:    Size  Location     Type
  2449 ;;  l               2    6[COMRAM] unsigned int 
  2450 ;;  ms              2    8[COMRAM] unsigned int 
  2451 ;; Auto vars:     Size  Location     Type
  2452 ;;		None
  2453 ;; Return value:  Size  Location     Type
  2454 ;;                  2    6[COMRAM] unsigned int 
  2455 ;; Registers used:
  2456 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2457 ;; Tracked objects:
  2458 ;;		On entry : 0/0
  2459 ;;		On exit  : 0/0
  2460 ;;		Unchanged: 0/0
  2461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2462 ;;      Params:         4       0       0       0       0       0       0       0       0
  2463 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2464 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2465 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2466 ;;Total ram usage:        6 bytes
  2467 ;; Hardware stack levels used:    1
  2468 ;; Hardware stack levels required when called:    1
  2469 ;; This function calls:
  2470 ;;		i2___wmul
  2471 ;; This function is called by:
  2472 ;;		_high_isr
  2473 ;; This function uses a non-reentrant model
  2474 ;;
  2475                           
  2476                           	psect	text9
  2477  0007BE                     __ptext9:
  2478                           	opt stack 0
  2479  0007BE                     _mot_3_step_count:
  2480                           	opt stack 27
  2481                           
  2482                           ;main.c: 196: return (ms * l) / 2;
  2483                           
  2484                           ;incstack = 0
  2485  0007BE  C02F  F027         	movff	mot_3_step_count@ms,i2___wmul@multiplier
  2486  0007C2  C030  F028         	movff	mot_3_step_count@ms+1,i2___wmul@multiplier+1
  2487  0007C6  C02D  F029         	movff	mot_3_step_count@l,i2___wmul@multiplicand
  2488  0007CA  C02E  F02A         	movff	mot_3_step_count@l+1,i2___wmul@multiplicand+1
  2489  0007CE  ECCC  F003         	call	i2___wmul	;wreg free
  2490  0007D2  90D8               	bcf	status,0,c
  2491  0007D4  3028               	rrcf	?i2___wmul+1,w,c
  2492  0007D6  6E31               	movwf	??_mot_3_step_count& (0+255),c
  2493  0007D8  3027               	rrcf	?i2___wmul,w,c
  2494  0007DA  6E2D               	movwf	?_mot_3_step_count,c
  2495  0007DC  C031  F02E         	movff	??_mot_3_step_count,?_mot_3_step_count+1
  2496  0007E0  0012               	return	
  2497  0007E2                     __end_of_mot_3_step_count:
  2498                           	opt stack 0
  2499                           pclatu	equ	0xFFB
  2500                           pclath	equ	0xFFA
  2501                           tblptru	equ	0xFF8
  2502                           tblptrh	equ	0xFF7
  2503                           tblptrl	equ	0xFF6
  2504                           tablat	equ	0xFF5
  2505                           prodh	equ	0xFF4
  2506                           prodl	equ	0xFF3
  2507                           intcon	equ	0xFF2
  2508                           intcon2	equ	0xFF1
  2509                           intcon3	equ	0xFF0
  2510                           postinc0	equ	0xFEE
  2511                           fsr0h	equ	0xFEA
  2512                           fsr0l	equ	0xFE9
  2513                           wreg	equ	0xFE8
  2514                           postdec1	equ	0xFE5
  2515                           fsr1h	equ	0xFE2
  2516                           fsr1l	equ	0xFE1
  2517                           indf2	equ	0xFDF
  2518                           fsr2h	equ	0xFDA
  2519                           fsr2l	equ	0xFD9
  2520                           status	equ	0xFD8
  2521                           
  2522 ;; *************** function i2___wmul *****************
  2523 ;; Defined at:
  2524 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
  2525 ;; Parameters:    Size  Location     Type
  2526 ;;  multiplier      2    0[COMRAM] unsigned int 
  2527 ;;  multiplicand    2    2[COMRAM] unsigned int 
  2528 ;; Auto vars:     Size  Location     Type
  2529 ;;  __wmul          2    4[COMRAM] unsigned int 
  2530 ;; Return value:  Size  Location     Type
  2531 ;;                  2    0[COMRAM] unsigned int 
  2532 ;; Registers used:
  2533 ;;		wreg, status,2, status,0, prodl, prodh
  2534 ;; Tracked objects:
  2535 ;;		On entry : 0/0
  2536 ;;		On exit  : 0/0
  2537 ;;		Unchanged: 0/0
  2538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2539 ;;      Params:         4       0       0       0       0       0       0       0       0
  2540 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2541 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2542 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2543 ;;Total ram usage:        6 bytes
  2544 ;; Hardware stack levels used:    1
  2545 ;; This function calls:
  2546 ;;		Nothing
  2547 ;; This function is called by:
  2548 ;;		_mot_3_step_count
  2549 ;; This function uses a non-reentrant model
  2550 ;;
  2551                           
  2552                           	psect	text10
  2553  000798                     __ptext10:
  2554                           	opt stack 0
  2555  000798                     i2___wmul:
  2556                           	opt stack 27
  2557                           
  2558                           ;incstack = 0
  2559  000798  5027               	movf	i2___wmul@multiplier,w,c
  2560  00079A  0229               	mulwf	i2___wmul@multiplicand,c
  2561  00079C  CFF3 F02B          	movff	prodl,i2___wmul@product
  2562  0007A0  CFF4 F02C          	movff	prodh,i2___wmul@product+1
  2563  0007A4  5027               	movf	i2___wmul@multiplier,w,c
  2564  0007A6  022A               	mulwf	i2___wmul@multiplicand+1,c
  2565  0007A8  50F3               	movf	prodl,w,c
  2566  0007AA  262C               	addwf	i2___wmul@product+1,f,c
  2567  0007AC  5028               	movf	i2___wmul@multiplier+1,w,c
  2568  0007AE  0229               	mulwf	i2___wmul@multiplicand,c
  2569  0007B0  50F3               	movf	prodl,w,c
  2570  0007B2  262C               	addwf	i2___wmul@product+1,f,c
  2571  0007B4  C02B  F027         	movff	i2___wmul@product,?i2___wmul
  2572  0007B8  C02C  F028         	movff	i2___wmul@product+1,?i2___wmul+1
  2573  0007BC  0012               	return	
  2574  0007BE                     __end_ofi2___wmul:
  2575                           	opt stack 0
  2576                           pclatu	equ	0xFFB
  2577                           pclath	equ	0xFFA
  2578                           tblptru	equ	0xFF8
  2579                           tblptrh	equ	0xFF7
  2580                           tblptrl	equ	0xFF6
  2581                           tablat	equ	0xFF5
  2582                           prodh	equ	0xFF4
  2583                           prodl	equ	0xFF3
  2584                           intcon	equ	0xFF2
  2585                           intcon2	equ	0xFF1
  2586                           intcon3	equ	0xFF0
  2587                           postinc0	equ	0xFEE
  2588                           fsr0h	equ	0xFEA
  2589                           fsr0l	equ	0xFE9
  2590                           wreg	equ	0xFE8
  2591                           postdec1	equ	0xFE5
  2592                           fsr1h	equ	0xFE2
  2593                           fsr1l	equ	0xFE1
  2594                           indf2	equ	0xFDF
  2595                           fsr2h	equ	0xFDA
  2596                           fsr2l	equ	0xFD9
  2597                           status	equ	0xFD8
  2598                           
  2599 ;; *************** function _finish *****************
  2600 ;; Defined at:
  2601 ;;		line 223 in file "main.c"
  2602 ;; Parameters:    Size  Location     Type
  2603 ;;		None
  2604 ;; Auto vars:     Size  Location     Type
  2605 ;;		None
  2606 ;; Return value:  Size  Location     Type
  2607 ;;                  1    wreg      void 
  2608 ;; Registers used:
  2609 ;;		wreg, status,2
  2610 ;; Tracked objects:
  2611 ;;		On entry : 0/0
  2612 ;;		On exit  : 0/0
  2613 ;;		Unchanged: 0/0
  2614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2615 ;;      Params:         0       0       0       0       0       0       0       0       0
  2616 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2617 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2618 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2619 ;;Total ram usage:        0 bytes
  2620 ;; Hardware stack levels used:    1
  2621 ;; This function calls:
  2622 ;;		Nothing
  2623 ;; This function is called by:
  2624 ;;		_high_isr
  2625 ;; This function uses a non-reentrant model
  2626 ;;
  2627                           
  2628                           	psect	text11
  2629  000818                     __ptext11:
  2630                           	opt stack 0
  2631  000818                     _finish:
  2632                           	opt stack 28
  2633                           
  2634                           ;main.c: 225: T1CONbits.TMR1ON = 1;
  2635                           
  2636                           ;incstack = 0
  2637  000818  80CD               	bsf	4045,0,c	;volatile
  2638                           
  2639                           ;main.c: 226: T0CONbits.TMR0ON = 0;
  2640  00081A  9ED5               	bcf	4053,7,c	;volatile
  2641                           
  2642                           ;main.c: 227: MOT_1 = MOT_3 = 0;
  2643  00081C  0E00               	movlw	0
  2644  00081E  6E25               	movwf	_MOT_3,c
  2645  000820  C025  F026         	movff	_MOT_3,_MOT_1
  2646                           
  2647                           ;main.c: 228: winding = 0;
  2648  000824  0E00               	movlw	0
  2649  000826  6E21               	movwf	_winding,c
  2650                           
  2651                           ;main.c: 229: finish_flag = 1;
  2652  000828  0E01               	movlw	1
  2653  00082A  6E1A               	movwf	_finish_flag,c
  2654  00082C  0012               	return		;funcret
  2655  00082E                     __end_of_finish:
  2656                           	opt stack 0
  2657  0000                     pclatu	equ	0xFFB
  2658                           pclath	equ	0xFFA
  2659                           tblptru	equ	0xFF8
  2660                           tblptrh	equ	0xFF7
  2661                           tblptrl	equ	0xFF6
  2662                           tablat	equ	0xFF5
  2663                           prodh	equ	0xFF4
  2664                           prodl	equ	0xFF3
  2665                           intcon	equ	0xFF2
  2666                           intcon2	equ	0xFF1
  2667                           intcon3	equ	0xFF0
  2668                           postinc0	equ	0xFEE
  2669                           fsr0h	equ	0xFEA
  2670                           fsr0l	equ	0xFE9
  2671                           wreg	equ	0xFE8
  2672                           postdec1	equ	0xFE5
  2673                           fsr1h	equ	0xFE2
  2674                           fsr1l	equ	0xFE1
  2675                           indf2	equ	0xFDF
  2676                           fsr2h	equ	0xFDA
  2677                           fsr2l	equ	0xFD9
  2678                           status	equ	0xFD8
  2679                           pclatu	equ	0xFFB
  2680                           pclath	equ	0xFFA
  2681                           tblptru	equ	0xFF8
  2682                           tblptrh	equ	0xFF7
  2683                           tblptrl	equ	0xFF6
  2684                           tablat	equ	0xFF5
  2685                           prodh	equ	0xFF4
  2686                           prodl	equ	0xFF3
  2687                           intcon	equ	0xFF2
  2688                           intcon2	equ	0xFF1
  2689                           intcon3	equ	0xFF0
  2690                           postinc0	equ	0xFEE
  2691                           fsr0h	equ	0xFEA
  2692                           fsr0l	equ	0xFE9
  2693                           wreg	equ	0xFE8
  2694                           postdec1	equ	0xFE5
  2695                           fsr1h	equ	0xFE2
  2696                           fsr1l	equ	0xFE1
  2697                           indf2	equ	0xFDF
  2698                           fsr2h	equ	0xFDA
  2699                           fsr2l	equ	0xFD9
  2700                           status	equ	0xFD8
  2701                           
  2702                           	psect	rparam
  2703  0000                     pclatu	equ	0xFFB
  2704                           pclath	equ	0xFFA
  2705                           tblptru	equ	0xFF8
  2706                           tblptrh	equ	0xFF7
  2707                           tblptrl	equ	0xFF6
  2708                           tablat	equ	0xFF5
  2709                           prodh	equ	0xFF4
  2710                           prodl	equ	0xFF3
  2711                           intcon	equ	0xFF2
  2712                           intcon2	equ	0xFF1
  2713                           intcon3	equ	0xFF0
  2714                           postinc0	equ	0xFEE
  2715                           fsr0h	equ	0xFEA
  2716                           fsr0l	equ	0xFE9
  2717                           wreg	equ	0xFE8
  2718                           postdec1	equ	0xFE5
  2719                           fsr1h	equ	0xFE2
  2720                           fsr1l	equ	0xFE1
  2721                           indf2	equ	0xFDF
  2722                           fsr2h	equ	0xFDA
  2723                           fsr2l	equ	0xFD9
  2724                           status	equ	0xFD8
  2725                           
  2726                           	psect	temp
  2727  000055                     btemp:
  2728                           	opt stack 0
  2729  000055                     	ds	1
  2730  0000                     int$flags	set	btemp
  2731  0000                     wtemp6	set	btemp+1
  2732                           pclatu	equ	0xFFB
  2733                           pclath	equ	0xFFA
  2734                           tblptru	equ	0xFF8
  2735                           tblptrh	equ	0xFF7
  2736                           tblptrl	equ	0xFF6
  2737                           tablat	equ	0xFF5
  2738                           prodh	equ	0xFF4
  2739                           prodl	equ	0xFF3
  2740                           intcon	equ	0xFF2
  2741                           intcon2	equ	0xFF1
  2742                           intcon3	equ	0xFF0
  2743                           postinc0	equ	0xFEE
  2744                           fsr0h	equ	0xFEA
  2745                           fsr0l	equ	0xFE9
  2746                           wreg	equ	0xFE8
  2747                           postdec1	equ	0xFE5
  2748                           fsr1h	equ	0xFE2
  2749                           fsr1l	equ	0xFE1
  2750                           indf2	equ	0xFDF
  2751                           fsr2h	equ	0xFDA
  2752                           fsr2l	equ	0xFD9
  2753                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        18
    BSS         71
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     32      84
    BANK0           160      8      45
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    _high_isr->_mot_3_step_count
    _mot_3_step_count->i2___wmul

Critical Paths under _main in BANK0

    _main->___wmul

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    2359
                                              6 BANK0      2     2      0
                _ConfigureOscillator
                            _InitApp
                             ___wmul
                              _reset
                         _trans_Char
                             _unwind
                          _zero_mark
 ---------------------------------------------------------------------------------
 (1) _zero_mark                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _unwind                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _trans_Char                                           1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _reset                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4    2328
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigureOscillator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _high_isr                                            20    20      0     405
                                             12 COMRAM    20    20      0
                             _finish
                   _mot_3_step_count
 ---------------------------------------------------------------------------------
 (3) _mot_3_step_count                                     6     2      4     405
                                              6 COMRAM     6     2      4
                           i2___wmul
 ---------------------------------------------------------------------------------
 (4) i2___wmul                                             6     2      4     209
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _finish                                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfigureOscillator
   _InitApp
   ___wmul
   _reset
   _trans_Char
   _unwind
   _zero_mark

 _high_isr (ROOT)
   _finish
   _mot_3_step_count
     i2___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      8      2D       5       28.1%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     20      54       1       89.4%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      81      20        0.0%
DATA                 0      0      81       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sun Aug 18 16:38:22 2019

                           _n 0015           ___wmul@multiplicand 0083                   __CFG_BORV$3 000000  
                __CFG_CP0$OFF 000000                  __CFG_CP1$OFF 000000                  __CFG_CP2$OFF 000000  
                __CFG_CP3$OFF 000000                           l220 0228                           l213 001A  
                         l230 027E                           l222 023A                           l214 0384  
                         l215 01CC                           l240 02E4                           l232 0296  
                         l217 020A                           l243 0336                           l219 025C  
                         l236 02C6                           l229 02AE                           l238 02D4  
                __CFG_CPB$OFF 000000                           _PR2 000FCB                  __CFG_CPD$OFF 000000  
                         _RX9 007D5E                           _TX9 007D66                  __CFG_BOR$OFF 000000  
                         wreg 000FE8                  __CFG_LVP$OFF 000000                  __CFG_WDT$OFF 000000  
                        l1843 0840                          l1953 037E                          _BRGH 007D62  
                        _CREN 007D5C                          _LATA 000F89                          _LATB 000F8A  
                        _LATC 000F8B                          u1615 0026                          u1616 0028  
                        u1625 0030                          u1810 0278                          u1626 0032  
                        u1635 003A                          u1580 07EC                          u1900 02C0  
                        u1820 027A                          u1660 005E                          u1636 003C  
                        u1645 0044                          u1590 07EE                          u1910 02C2  
                        u1646 0046                          u1655 004E                          u1840 0290  
                        u1656 0050                          u1850 0292                          u1870 02A8  
                        u1678 0062                          u1880 02AA                          _RCIE 007CED  
                        u1997 0390                          i2l95 04DA                          i2l98 0458  
                        i2l99 0468                          _TMR0 000FD6                          _TMR1 000FCE  
                        _SPEN 007D5F                          _TXIE 007CEC                          _TXIF 007CF4  
                        _TXEN 007D65                          _SYNC 007D64                          _main 0012  
                        _send 0074                          fsr0h 000FEA                          fsr1h 000FE2  
                        fsr2h 000FDA                          fsr0l 000FE9                          indf2 000FDF  
                        fsr1l 000FE1                          fsr2l 000FD9                          btemp 0055  
                        prodh 000FF4                          prodl 000FF3                          start 000E  
               __CFG_IESO$OFF 000000                 __CFG_MCLRE$ON 000000                  ___param_bank 000000  
             __end_of_InitApp 070E                 __CFG_PLLDIV$1 000000                __CFG_CCP2MX$ON 000000  
                       ?_main 0027                         _ADRES 000FC3                         _BRG16 007DC3  
                       _DIR_1 001E                         _DIR_2 001D                         _DIR_3 0024  
                       _DIR_4 001C                         i2l111 05B4                         i2l104 057C  
                       i2l105 0508                         i2l114 05A2                         i2l106 0526  
                       i2l124 05F8                         i2l125 0606                         i2l117 05C4  
                       i2l109 0576                         i2l119 05DA                         _RCREG 000FAE  
                       _MOT_1 0026                         _MOT_2 0023                         _MOT_3 0025  
                       _MOT_4 0054                         _SPBRG 000FAF                         _PORTA 000F80  
                       _PORTB 000F81                         _PORTC 000F82                 __CFG_USBDIV$1 000000  
                       _TXREG 000FAD           _ConfigureOscillator 084A                 __CFG_PWRT$OFF 000000  
               __CFG_WRT0$OFF 000000                 __CFG_WRT1$OFF 000000                 __CFG_WRT2$OFF 000000  
               __CFG_WRT3$OFF 000000                __CFG_EBTR0$OFF 000000                __CFG_FCMEN$OFF 000000  
              __CFG_EBTR1$OFF 000000                __CFG_EBTR2$OFF 000000                __CFG_EBTR3$OFF 000000  
               __CFG_WRTB$OFF 000000                 __CFG_WRTC$OFF 000000                 __CFG_WRTD$OFF 000000  
              __CFG_EBTRB$OFF 000000                         _reset 085A                         _turns 0051  
                 _turns_count 0001                         pclath 000FFA                         tablat 000FF5  
            __end_ofi2___wmul 07BE                         status 000FD8                         wtemp6 0056  
        ?_ConfigureOscillator 0027               __initialization 070E                  __end_of_main 039E  
                      ??_main 0087                 __activetblptr 000000                        _ADCON1 000FC1  
                      _ADCON2 000FC0                        _CCPR1L 000FBE                        ?_reset 0027  
                      _GODONE 007E11                        i2l1571 0576                        i2l1539 0468  
                   ??_InitApp 0081         ??_ConfigureOscillator 0081                __CFG_XINST$OFF 000000  
            __end_of_high_isr 0652     __size_of_mot_3_step_count 0024                        ___wmul 0770  
                      _enable 0019                        _finish 0818                        _length 004F  
                      _recibi 0020                        clear_0 0754                        clear_1 0760  
                      _move_4 0022                        _motor1 0089                        _motor2 007F  
                      _unwind 07E2                  __pdataCOMRAM 0047                        tblptrh 000FF7  
                      tblptrl 000FF6                        tblptru 000FF8                    __accesstop 0060  
     __end_of__initialization 0766               __CFG_PBADEN$OFF 000000                 ___rparam_used 000001  
              __pcstackCOMRAM 0027                  __pidataBANK0 0856                 __end_of_reset 085E  
                   ?i2___wmul 0027                 trans_Char@out 0081                       ??_reset 0081  
                  __pbssBANK0 0060                       ?___wmul 0081                       ?_finish 0027  
                     ?_unwind 0027                    ??i2___wmul 002B                       i2u90_41 047A  
                     i2u91_40 048E                       i2u92_48 0490                       i2u85_40 042C  
                     i2u93_41 04C0                       i2u94_40 04CC                       i2u95_40 04CE  
                     i2u86_48 042E                       i2u98_40 04F8                       i2u99_48 04FA  
                   ?_high_isr 0027               __CFG_VREGEN$OFF 000000            __size_of_zero_mark 001A  
                     _InitApp 0652                       __Hparam 0000                       __Lparam 0000  
            _mot_3_step_count 07BE               __size_of___wmul 0028                       _caliber 007D  
             __size_of_finish 0016               __CFG_STVREN$OFF 000000                       __pcinit 070E  
                     __ramtop 0800                       __ptext0 0012                       __ptext1 07FE  
                     __ptext2 07E2                       __ptext3 083C                       __ptext4 085A  
                     __ptext5 0770                       __ptext6 0652                       __ptext7 084A  
                     __ptext9 07BE                    _param_flag 001B                     _T0CONbits 000FD5  
                     _count_1 004D                       _count_2 004B                       _count_3 0049  
                     _count_4 008B               __size_of_unwind 001C                     _T1CONbits 000FCD  
                     _palabra 0060                     _T2CONbits 000FCA                       _winding 0021  
            _mot_4_step_count 007B                       _steps_4 0017                    ??_high_isr 0033  
              __pintcode_body 039E          end_of_initialization 0766                       int_func 039E  
         i2___wmul@multiplier 0027                       postdec1 000FE5                       postinc0 000FEE  
                   _PORTAbits 000F80                     _PORTBbits 000F81                     _PORTCbits 000F82  
           __end_of_zero_mark 0818                     _TRISAbits 000F92                     _TRISBbits 000F93  
                   _TRISCbits 000F94                    _trans_Char 083C   __end_of_ConfigureOscillator 0856  
                 _CCP1CONbits 000FBD                __end_of___wmul 0798                 __pidataCOMRAM 082E  
              __end_of_finish 082E              i2___wmul@product 002B                __end_of_unwind 07FE  
         start_initialization 070E             __size_ofi2___wmul 0026                      ??___wmul 0085  
                    ??_finish 0027                   __pdataBANK0 0089              __CFG_LPT1OSC$OFF 000000  
                    ??_unwind 0081                   __pbssCOMRAM 0001                 __pcstackBANK0 0081  
                 ?_trans_Char 0027      __end_of_mot_3_step_count 07E2             __size_of_high_isr 064A  
                    ?_InitApp 0027                     __pintcode 0008                __size_of_reset 0004  
              ___wmul@product 0085                      _LATAbits 000F89                      _LATBbits 000F8A  
                    _LATCbits 000F8B                      _IPR1bits 000F9F                      _PIE1bits 000F9D  
                    _RA0state 001F                      i2u101_40 0518                      i2u102_48 051A  
                    i2u105_40 053C                      i2u106_48 053E                      i2u117_40 05E6  
                    i2u118_40 0602                      i2u119_40 0604                      _PIR1bits 000F9E  
                    _RCONbits 000FD0              __CFG_WDTPS$32768 000000           __size_of_trans_Char 000E  
                 _finish_flag 001A                    _ADCON0bits 000FC2             ___wmul@multiplier 0081  
                    i2___wmul 0798                      _PWM_duty 0047               _ADC_value_press 0011  
                   _zero_flag 0053                     _zero_mark 07FE                   _INTCON2bits 000FF1  
                 _INTCON3bits 000FF0                     copy_data0 0722                     copy_data1 0742  
            __size_of_InitApp 00BC                      __Hrparam 0000                      __Lrparam 0000  
       i2___wmul@multiplicand 0029                    ?_zero_mark 0027                      __ptext10 0798  
                    __ptext11 0818                      _high_isr 0008                 __size_of_main 038C  
                 _mot_1_steps 0007                   _mot_3_steps 0005                   _mot_4_steps 0003  
__size_of_ConfigureOscillator 000C                      _overflow 0013                      int$flags 0055  
          mot_3_step_count@ms 002F         __CFG_CPUDIV$OSC1_PLL2 000000                    _INTCONbits 000FF2  
                ??_trans_Char 0081                   _MOT_1_count 000F                   _MOT_2_count 000D  
                 _MOT_3_count 000B                   _MOT_4_count 0009             ?_mot_3_step_count 002D  
                    intlevel2 0000            ??_mot_3_step_count 0031                    _OSCCONbits 000FD3  
           mot_3_step_count@l 002D            __end_of_trans_Char 084A           __CFG_FOSC$INTOSC_EC 000000  
                 ??_zero_mark 0081  



Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Fri Aug 16 18:36:28 2019

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F2550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    20                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    25                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    26                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    27  0000                     
    28                           ; Version 1.45
    29                           ; Generated 16/11/2017 GMT
    30                           ; 
    31                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    32                           ; All rights reserved.
    33                           ; 
    34                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    35                           ; 
    36                           ; Redistribution and use in source and binary forms, with or without modification, are
    37                           ; permitted provided that the following conditions are met:
    38                           ; 
    39                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    40                           ;        conditions and the following disclaimer.
    41                           ; 
    42                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    43                           ;        of conditions and the following disclaimer in the documentation and/or other
    44                           ;        materials provided with the distribution.
    45                           ; 
    46                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    47                           ;        software without specific prior written permission.
    48                           ; 
    49                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    50                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    51                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    52                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    53                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    54                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    55                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    56                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    57                           ; 
    58                           ; 
    59                           ; Code-generator required, PIC18F2550 Definitions
    60                           ; 
    61                           ; SFR Addresses
    62  0000                     
    63                           	psect	idataCOMRAM
    64  0007EE                     __pidataCOMRAM:
    65                           	opt stack 0
    66                           
    67                           ;initializer for _PWM_duty
    68  0007EE  0032               	dw	50
    69                           
    70                           ;initializer for _count_4
    71  0007F0  0005               	dw	5
    72                           
    73                           ;initializer for _count_3
    74  0007F2  0084               	dw	132
    75                           
    76                           ;initializer for _count_2
    77  0007F4  0005               	dw	5
    78                           
    79                           ;initializer for _count_1
    80  0007F6  0002               	dw	2
    81                           
    82                           ;initializer for _turns
    83  0007F8  0014               	dw	20
    84                           
    85                           ;initializer for _length
    86  0007FA  2328               	dw	9000
    87                           
    88                           	psect	idataBANK0
    89  000822                     __pidataBANK0:
    90                           	opt stack 0
    91                           
    92                           ;initializer for _motor1
    93  000822  0001               	dw	1
    94  0000                     _ADRES	set	4035
    95  0000                     _TMR0	set	4054
    96  0000                     _T2CONbits	set	4042
    97  0000                     _CCP1CONbits	set	4029
    98  0000                     _PR2	set	4043
    99  0000                     _SPBRG	set	4015
   100  0000                     _T0CONbits	set	4053
   101  0000                     _INTCON2bits	set	4081
   102  0000                     _RCONbits	set	4048
   103  0000                     _TRISBbits	set	3987
   104  0000                     _TRISCbits	set	3988
   105  0000                     _PIE1bits	set	3997
   106  0000                     _ADCON2	set	4032
   107  0000                     _ADCON0bits	set	4034
   108  0000                     _TRISAbits	set	3986
   109  0000                     _ADCON1	set	4033
   110  0000                     _LATC	set	3979
   111  0000                     _PORTC	set	3970
   112  0000                     _LATB	set	3978
   113  0000                     _PORTB	set	3969
   114  0000                     _LATA	set	3977
   115  0000                     _PORTA	set	3968
   116  0000                     _OSCCONbits	set	4051
   117  0000                     _CCPR1L	set	4030
   118  0000                     _INTCON3bits	set	4080
   119  0000                     _TXREG	set	4013
   120  0000                     _RCREG	set	4014
   121  0000                     _PIR1bits	set	3998
   122  0000                     _PORTBbits	set	3969
   123  0000                     _LATBbits	set	3978
   124  0000                     _PORTAbits	set	3968
   125  0000                     _LATAbits	set	3977
   126  0000                     _PORTCbits	set	3970
   127  0000                     _LATCbits	set	3979
   128  0000                     _INTCONbits	set	4082
   129  0000                     _TXIE	set	31980
   130  0000                     _RCIE	set	31981
   131  0000                     _RX9	set	32094
   132  0000                     _TX9	set	32102
   133  0000                     _CREN	set	32092
   134  0000                     _TXEN	set	32101
   135  0000                     _SYNC	set	32100
   136  0000                     _SPEN	set	32095
   137  0000                     _BRG16	set	32195
   138  0000                     _BRGH	set	32098
   139  0000                     _GODONE	set	32273
   140  0000                     _TXIF	set	31988
   141                           
   142                           ; #config settings
   143  0000                     
   144                           	psect	cinit
   145  000722                     __pcinit:
   146                           	opt stack 0
   147  000722                     start_initialization:
   148                           	opt stack 0
   149  000722                     __initialization:
   150                           	opt stack 0
   151                           
   152                           ; Initialize objects allocated to BANK0 (2 bytes)
   153                           ; load TBLPTR registers with __pidataBANK0
   154  000722  0E22               	movlw	low __pidataBANK0
   155  000724  6EF6               	movwf	tblptrl,c
   156  000726  0E08               	movlw	high __pidataBANK0
   157  000728  6EF7               	movwf	tblptrh,c
   158  00072A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   159  00072C  6EF8               	movwf	tblptru,c
   160  00072E  0009               	tblrd		*+	;fetch initializer
   161  000730  CFF5 F08B          	movff	tablat,__pdataBANK0
   162  000734  0009               	tblrd		*+	;fetch initializer
   163  000736  CFF5 F08C          	movff	tablat,__pdataBANK0+1
   164                           
   165                           ; Initialize objects allocated to COMRAM (14 bytes)
   166                           ; load TBLPTR registers with __pidataCOMRAM
   167  00073A  0EEE               	movlw	low __pidataCOMRAM
   168  00073C  6EF6               	movwf	tblptrl,c
   169  00073E  0E07               	movlw	high __pidataCOMRAM
   170  000740  6EF7               	movwf	tblptrh,c
   171  000742  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   172  000744  6EF8               	movwf	tblptru,c
   173  000746  EE00  F046         	lfsr	0,__pdataCOMRAM
   174  00074A  EE10 F00E          	lfsr	1,14
   175  00074E                     copy_data0:
   176  00074E  0009               	tblrd		*+
   177  000750  CFF5 FFEE          	movff	tablat,postinc0
   178  000754  50E5               	movf	postdec1,w,c
   179  000756  50E1               	movf	fsr1l,w,c
   180  000758  E1FA               	bnz	copy_data0
   181                           
   182                           ; Clear objects allocated to BANK0 (35 bytes)
   183  00075A  EE00  F060         	lfsr	0,__pbssBANK0
   184  00075E  0E23               	movlw	35
   185  000760                     clear_0:
   186  000760  6AEE               	clrf	postinc0,c
   187  000762  06E8               	decf	wreg,f,c
   188  000764  E1FD               	bnz	clear_0
   189                           
   190                           ; Clear objects allocated to COMRAM (38 bytes)
   191  000766  EE00  F001         	lfsr	0,__pbssCOMRAM
   192  00076A  0E26               	movlw	38
   193  00076C                     clear_1:
   194  00076C  6AEE               	clrf	postinc0,c
   195  00076E  06E8               	decf	wreg,f,c
   196  000770  E1FD               	bnz	clear_1
   197  000772                     end_of_initialization:
   198                           	opt stack 0
   199  000772                     __end_of__initialization:
   200                           	opt stack 0
   201  000772  9054               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   202  000774  9254               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   203  000776  0100               	movlb	0
   204  000778  EF09  F000         	goto	_main	;jump to C main() function
   205                           tblptru	equ	0xFF8
   206                           tblptrh	equ	0xFF7
   207                           tblptrl	equ	0xFF6
   208                           tablat	equ	0xFF5
   209                           postinc0	equ	0xFEE
   210                           wreg	equ	0xFE8
   211                           postdec1	equ	0xFE5
   212                           fsr1l	equ	0xFE1
   213                           
   214                           	psect	bssCOMRAM
   215  000001                     __pbssCOMRAM:
   216                           	opt stack 0
   217  000001                     _mot_4_step_count:
   218                           	opt stack 0
   219  000001                     	ds	2
   220  000003                     _turns_count:
   221                           	opt stack 0
   222  000003                     	ds	2
   223  000005                     _mot_4_steps:
   224                           	opt stack 0
   225  000005                     	ds	2
   226  000007                     _mot_3_steps:
   227                           	opt stack 0
   228  000007                     	ds	2
   229  000009                     _mot_1_steps:
   230                           	opt stack 0
   231  000009                     	ds	2
   232  00000B                     _MOT_4_count:
   233                           	opt stack 0
   234  00000B                     	ds	2
   235  00000D                     _MOT_3_count:
   236                           	opt stack 0
   237  00000D                     	ds	2
   238  00000F                     _MOT_2_count:
   239                           	opt stack 0
   240  00000F                     	ds	2
   241  000011                     _MOT_1_count:
   242                           	opt stack 0
   243  000011                     	ds	2
   244  000013                     _ADC_value_press:
   245                           	opt stack 0
   246  000013                     	ds	2
   247  000015                     _overflow:
   248                           	opt stack 0
   249  000015                     	ds	2
   250  000017                     _n:
   251                           	opt stack 0
   252  000017                     	ds	2
   253  000019                     _enable:
   254                           	opt stack 0
   255  000019                     	ds	1
   256  00001A                     _DIR_4:
   257                           	opt stack 0
   258  00001A                     	ds	1
   259  00001B                     _DIR_2:
   260                           	opt stack 0
   261  00001B                     	ds	1
   262  00001C                     _DIR_1:
   263                           	opt stack 0
   264  00001C                     	ds	1
   265  00001D                     _RA0state:
   266                           	opt stack 0
   267  00001D                     	ds	1
   268  00001E                     _recibi:
   269                           	opt stack 0
   270  00001E                     	ds	1
   271  00001F                     _busy_flag:
   272                           	opt stack 0
   273  00001F                     	ds	1
   274  000020                     _MOT_4:
   275                           	opt stack 0
   276  000020                     	ds	1
   277  000021                     _MOT_2:
   278                           	opt stack 0
   279  000021                     	ds	1
   280  000022                     _finish:
   281                           	opt stack 0
   282  000022                     	ds	1
   283  000023                     _MOT_1:
   284                           	opt stack 0
   285  000023                     	ds	1
   286  000024                     _DIR_3:
   287                           	opt stack 0
   288  000024                     	ds	1
   289  000025                     _zero_flag:
   290                           	opt stack 0
   291  000025                     	ds	1
   292  000026                     _MOT_3:
   293                           	opt stack 0
   294  000026                     	ds	1
   295                           tblptru	equ	0xFF8
   296                           tblptrh	equ	0xFF7
   297                           tblptrl	equ	0xFF6
   298                           tablat	equ	0xFF5
   299                           postinc0	equ	0xFEE
   300                           wreg	equ	0xFE8
   301                           postdec1	equ	0xFE5
   302                           fsr1l	equ	0xFE1
   303                           
   304                           	psect	dataCOMRAM
   305  000046                     __pdataCOMRAM:
   306                           	opt stack 0
   307  000046                     _PWM_duty:
   308                           	opt stack 0
   309  000046                     	ds	2
   310  000048                     _count_4:
   311                           	opt stack 0
   312  000048                     	ds	2
   313  00004A                     _count_3:
   314                           	opt stack 0
   315  00004A                     	ds	2
   316  00004C                     _count_2:
   317                           	opt stack 0
   318  00004C                     	ds	2
   319  00004E                     _count_1:
   320                           	opt stack 0
   321  00004E                     	ds	2
   322  000050                     _turns:
   323                           	opt stack 0
   324  000050                     	ds	2
   325  000052                     _length:
   326                           	opt stack 0
   327  000052                     	ds	2
   328                           tblptru	equ	0xFF8
   329                           tblptrh	equ	0xFF7
   330                           tblptrl	equ	0xFF6
   331                           tablat	equ	0xFF5
   332                           postinc0	equ	0xFEE
   333                           wreg	equ	0xFE8
   334                           postdec1	equ	0xFE5
   335                           fsr1l	equ	0xFE1
   336                           
   337                           	psect	bssBANK0
   338  000060                     __pbssBANK0:
   339                           	opt stack 0
   340  000060                     _palabra:
   341                           	opt stack 0
   342  000060                     	ds	20
   343  000074                     _send:
   344                           	opt stack 0
   345  000074                     	ds	7
   346  00007B                     _speed:
   347                           	opt stack 0
   348  00007B                     	ds	2
   349  00007D                     _diameter:
   350                           	opt stack 0
   351  00007D                     	ds	2
   352  00007F                     _caliber:
   353                           	opt stack 0
   354  00007F                     	ds	2
   355  000081                     _motor2:
   356                           	opt stack 0
   357  000081                     	ds	2
   358                           tblptru	equ	0xFF8
   359                           tblptrh	equ	0xFF7
   360                           tblptrl	equ	0xFF6
   361                           tablat	equ	0xFF5
   362                           postinc0	equ	0xFEE
   363                           wreg	equ	0xFE8
   364                           postdec1	equ	0xFE5
   365                           fsr1l	equ	0xFE1
   366                           
   367                           	psect	dataBANK0
   368  00008B                     __pdataBANK0:
   369                           	opt stack 0
   370  00008B                     _motor1:
   371                           	opt stack 0
   372  00008B                     	ds	2
   373                           tblptru	equ	0xFF8
   374                           tblptrh	equ	0xFF7
   375                           tblptrl	equ	0xFF6
   376                           tablat	equ	0xFF5
   377                           postinc0	equ	0xFEE
   378                           wreg	equ	0xFE8
   379                           postdec1	equ	0xFE5
   380                           fsr1l	equ	0xFE1
   381                           
   382                           	psect	cstackBANK0
   383  000083                     __pcstackBANK0:
   384                           	opt stack 0
   385  000083                     ?___wmul:
   386                           	opt stack 0
   387  000083                     trans_Char@out:
   388                           	opt stack 0
   389  000083                     ___wmul@multiplier:
   390                           	opt stack 0
   391                           
   392                           ; 2 bytes @ 0x0
   393  000083                     	ds	2
   394  000085                     ___wmul@multiplicand:
   395                           	opt stack 0
   396                           
   397                           ; 2 bytes @ 0x2
   398  000085                     	ds	2
   399  000087                     ___wmul@product:
   400                           	opt stack 0
   401                           
   402                           ; 2 bytes @ 0x4
   403  000087                     	ds	2
   404  000089                     ??_main:
   405                           
   406                           ; 1 bytes @ 0x6
   407  000089                     	ds	2
   408                           tblptru	equ	0xFF8
   409                           tblptrh	equ	0xFF7
   410                           tblptrl	equ	0xFF6
   411                           tablat	equ	0xFF5
   412                           postinc0	equ	0xFEE
   413                           wreg	equ	0xFE8
   414                           postdec1	equ	0xFE5
   415                           fsr1l	equ	0xFE1
   416                           
   417                           	psect	cstackCOMRAM
   418  000027                     __pcstackCOMRAM:
   419                           	opt stack 0
   420  000027                     ?i2___wmul:
   421                           	opt stack 0
   422  000027                     i2trans_Char@out:
   423                           	opt stack 0
   424  000027                     i2___wmul@multiplier:
   425                           	opt stack 0
   426                           
   427                           ; 2 bytes @ 0x0
   428  000027                     	ds	2
   429  000029                     i2___wmul@multiplicand:
   430                           	opt stack 0
   431                           
   432                           ; 2 bytes @ 0x2
   433  000029                     	ds	2
   434  00002B                     i2___wmul@product:
   435                           	opt stack 0
   436                           
   437                           ; 2 bytes @ 0x4
   438  00002B                     	ds	2
   439  00002D                     ?_mot_3_step_count:
   440                           	opt stack 0
   441  00002D                     mot_3_step_count@l:
   442                           	opt stack 0
   443                           
   444                           ; 2 bytes @ 0x6
   445  00002D                     	ds	2
   446  00002F                     mot_3_step_count@ms:
   447                           	opt stack 0
   448                           
   449                           ; 2 bytes @ 0x8
   450  00002F                     	ds	2
   451  000031                     ??_mot_3_step_count:
   452                           
   453                           ; 1 bytes @ 0xA
   454  000031                     	ds	2
   455  000033                     ??_high_isr:
   456                           
   457                           ; 1 bytes @ 0xC
   458  000033                     	ds	19
   459                           tblptru	equ	0xFF8
   460                           tblptrh	equ	0xFF7
   461                           tblptrl	equ	0xFF6
   462                           tablat	equ	0xFF5
   463                           postinc0	equ	0xFEE
   464                           wreg	equ	0xFE8
   465                           postdec1	equ	0xFE5
   466                           fsr1l	equ	0xFE1
   467                           
   468 ;;
   469 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   470 ;;
   471 ;; *************** function _main *****************
   472 ;; Defined at:
   473 ;;		line 79 in file "main.c"
   474 ;; Parameters:    Size  Location     Type
   475 ;;		None
   476 ;; Auto vars:     Size  Location     Type
   477 ;;		None
   478 ;; Return value:  Size  Location     Type
   479 ;;                  1    wreg      void 
   480 ;; Registers used:
   481 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   482 ;; Tracked objects:
   483 ;;		On entry : 0/0
   484 ;;		On exit  : 0/0
   485 ;;		Unchanged: 0/0
   486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   487 ;;      Params:         0       0       0       0       0       0       0       0       0
   488 ;;      Locals:         0       0       0       0       0       0       0       0       0
   489 ;;      Temps:          0       2       0       0       0       0       0       0       0
   490 ;;      Totals:         0       2       0       0       0       0       0       0       0
   491 ;;Total ram usage:        2 bytes
   492 ;; Hardware stack levels required when called:    4
   493 ;; This function calls:
   494 ;;		_ConfigureOscillator
   495 ;;		_InitApp
   496 ;;		___wmul
   497 ;;		_trans_Char
   498 ;; This function is called by:
   499 ;;		Startup code after reset
   500 ;; This function uses a non-reentrant model
   501 ;;
   502                           
   503                           	psect	text0
   504  000012                     __ptext0:
   505                           	opt stack 0
   506  000012                     _main:
   507                           	opt stack 27
   508                           
   509                           ;main.c: 81: ConfigureOscillator();
   510                           
   511                           ;incstack = 0
   512  000012  EC05  F004         	call	_ConfigureOscillator	;wreg free
   513                           
   514                           ;main.c: 84: InitApp();
   515  000016  EC3B  F003         	call	_InitApp	;wreg free
   516  00001A                     
   517                           ;main.c: 87: CCPR1L = PWM_duty;
   518  00001A  C046  FFBE         	movff	_PWM_duty,4030	;volatile
   519                           
   520                           ;main.c: 89: LATAbits.LA2 = DIR_1;
   521  00001E  B01C               	btfsc	_DIR_1,0,c
   522  000020  D002               	bra	u1575
   523  000022  9489               	bcf	3977,2,c	;volatile
   524  000024  D001               	bra	u1576
   525  000026                     u1575:
   526  000026  8489               	bsf	3977,2,c	;volatile
   527  000028                     u1576:
   528                           
   529                           ;main.c: 90: LATAbits.LA4 = DIR_2;
   530  000028  B01B               	btfsc	_DIR_2,0,c
   531  00002A  D002               	bra	u1585
   532  00002C  9889               	bcf	3977,4,c	;volatile
   533  00002E  D001               	bra	u1586
   534  000030                     u1585:
   535  000030  8889               	bsf	3977,4,c	;volatile
   536  000032                     u1586:
   537                           
   538                           ;main.c: 91: LATCbits.LC0 = DIR_3;
   539  000032  B024               	btfsc	_DIR_3,0,c
   540  000034  D002               	bra	u1595
   541  000036  908B               	bcf	3979,0,c	;volatile
   542  000038  D001               	bra	u1596
   543  00003A                     u1595:
   544  00003A  808B               	bsf	3979,0,c	;volatile
   545  00003C                     u1596:
   546                           
   547                           ;main.c: 92: LATBbits.LB7 = DIR_4;
   548  00003C  B01A               	btfsc	_DIR_4,0,c
   549  00003E  D002               	bra	u1605
   550  000040  9E8A               	bcf	3978,7,c	;volatile
   551  000042  D001               	bra	u1606
   552  000044                     u1605:
   553  000044  8E8A               	bsf	3978,7,c	;volatile
   554  000046                     u1606:
   555                           
   556                           ;main.c: 93: LATBbits.LB5 = enable;
   557  000046  B019               	btfsc	_enable,0,c
   558  000048  D002               	bra	u1615
   559  00004A  9A8A               	bcf	3978,5,c	;volatile
   560  00004C  D001               	bra	u1616
   561  00004E                     u1615:
   562  00004E  8A8A               	bsf	3978,5,c	;volatile
   563  000050                     u1616:
   564                           
   565                           ;main.c: 94: LATBbits.LB4 = !enable;
   566  000050  5019               	movf	_enable,w,c
   567  000052  A4D8               	btfss	status,2,c
   568  000054  D004               	goto	u1620
   569  000056  0100               	movlb	0	; () banked
   570  000058  6B89               	clrf	??_main& (0+255),b
   571  00005A  2B89               	incf	??_main& (0+255),f,b
   572  00005C  D002               	goto	u1638
   573  00005E                     u1620:
   574  00005E  0100               	movlb	0	; () banked
   575  000060  6B89               	clrf	??_main& (0+255),b
   576  000062                     u1638:
   577  000062  3B89               	swapf	??_main& (0+255),f,b
   578  000064  508A               	movf	3978,w,c	;volatile
   579  000066  1989               	xorwf	??_main& (0+255),w,b
   580  000068  0BEF               	andlw	-17
   581  00006A  1989               	xorwf	??_main& (0+255),w,b
   582  00006C  6E8A               	movwf	3978,c	;volatile
   583                           
   584                           ; BSR set to: 0
   585                           ;main.c: 104: if (recibi == 1) {
   586  00006E  041E               	decf	_recibi,w,c
   587  000070  A4D8               	btfss	status,2,c
   588  000072  D17B               	goto	l201
   589                           
   590                           ; BSR set to: 0
   591                           ;main.c: 106: recibi = 0;
   592  000074  0E00               	movlw	0
   593  000076  6E1E               	movwf	_recibi,c
   594                           
   595                           ; BSR set to: 0
   596                           ;main.c: 108: if (palabra[0] == 'B') {
   597  000078  0E42               	movlw	66
   598  00007A  1960               	xorwf	_palabra& (0+255),w,b
   599  00007C  A4D8               	btfss	status,2,c
   600  00007E  D01B               	goto	l202
   601                           
   602                           ; BSR set to: 0
   603                           ;main.c: 110: PWM_duty = ((palabra[1] - 48) * 10) + ((palabra[2] - 48));
   604  000080  0ED0               	movlw	208
   605  000082  2561               	addwf	(_palabra+1)& (0+255),w,b
   606  000084  6F83               	movwf	___wmul@multiplier& (0+255),b
   607  000086  6B84               	clrf	(___wmul@multiplier+1)& (0+255),b
   608  000088  0EFF               	movlw	255
   609  00008A  2384               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   610  00008C  0E00               	movlw	0
   611  00008E  6F86               	movwf	(___wmul@multiplicand+1)& (0+255),b
   612  000090  0E0A               	movlw	10
   613  000092  6F85               	movwf	___wmul@multiplicand& (0+255),b
   614  000094  ECBE  F003         	call	___wmul	;wreg free
   615  000098  0100               	movlb	0	; () banked
   616  00009A  5162               	movf	(_palabra+2)& (0+255),w,b
   617  00009C  6F89               	movwf	??_main& (0+255),b
   618  00009E  6B8A               	clrf	(??_main+1)& (0+255),b
   619  0000A0  5183               	movf	?___wmul& (0+255),w,b
   620  0000A2  2789               	addwf	??_main& (0+255),f,b
   621  0000A4  5184               	movf	(?___wmul+1)& (0+255),w,b
   622  0000A6  238A               	addwfc	(??_main+1)& (0+255),f,b
   623  0000A8  0ED0               	movlw	208
   624  0000AA  2589               	addwf	??_main& (0+255),w,b
   625  0000AC  6E46               	movwf	_PWM_duty,c
   626  0000AE  0EFF               	movlw	255
   627  0000B0  218A               	addwfc	(??_main+1)& (0+255),w,b
   628  0000B2  6E47               	movwf	_PWM_duty+1,c
   629                           
   630                           ;main.c: 111: } else if (palabra[0] == 'A') {
   631  0000B4  D166               	goto	l227
   632  0000B6                     l202:
   633                           
   634                           ; BSR set to: 0
   635                           
   636                           ; BSR set to: 0
   637  0000B6  0E41               	movlw	65
   638  0000B8  1960               	xorwf	_palabra& (0+255),w,b
   639  0000BA  A4D8               	btfss	status,2,c
   640  0000BC  D0E5               	goto	l204
   641                           
   642                           ; BSR set to: 0
   643                           ;main.c: 113: caliber = ((palabra[1] - 48) * 10) + ((palabra[2] - 48));
   644  0000BE  0ED0               	movlw	208
   645  0000C0  2561               	addwf	(_palabra+1)& (0+255),w,b
   646  0000C2  6F83               	movwf	___wmul@multiplier& (0+255),b
   647  0000C4  6B84               	clrf	(___wmul@multiplier+1)& (0+255),b
   648  0000C6  0EFF               	movlw	255
   649  0000C8  2384               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   650  0000CA  0E00               	movlw	0
   651  0000CC  6F86               	movwf	(___wmul@multiplicand+1)& (0+255),b
   652  0000CE  0E0A               	movlw	10
   653  0000D0  6F85               	movwf	___wmul@multiplicand& (0+255),b
   654  0000D2  ECBE  F003         	call	___wmul	;wreg free
   655  0000D6  0100               	movlb	0	; () banked
   656  0000D8  5162               	movf	(_palabra+2)& (0+255),w,b
   657  0000DA  6F89               	movwf	??_main& (0+255),b
   658  0000DC  6B8A               	clrf	(??_main+1)& (0+255),b
   659  0000DE  5183               	movf	?___wmul& (0+255),w,b
   660  0000E0  2789               	addwf	??_main& (0+255),f,b
   661  0000E2  5184               	movf	(?___wmul+1)& (0+255),w,b
   662  0000E4  238A               	addwfc	(??_main+1)& (0+255),f,b
   663  0000E6  0ED0               	movlw	208
   664  0000E8  2589               	addwf	??_main& (0+255),w,b
   665  0000EA  6F7F               	movwf	_caliber& (0+255),b
   666  0000EC  0EFF               	movlw	255
   667  0000EE  218A               	addwfc	(??_main+1)& (0+255),w,b
   668  0000F0  6F80               	movwf	(_caliber+1)& (0+255),b
   669                           
   670                           ;main.c: 114: diameter = ((palabra[3] - 48) * 1000) + ((palabra[4] - 48) * 100) + ((pala
      +                          bra[5] - 48) * 10) + ((palabra[6] - 48));
   671  0000F2  0ED0               	movlw	208
   672  0000F4  2563               	addwf	(_palabra+3)& (0+255),w,b
   673  0000F6  6F83               	movwf	___wmul@multiplier& (0+255),b
   674  0000F8  6B84               	clrf	(___wmul@multiplier+1)& (0+255),b
   675  0000FA  0EFF               	movlw	255
   676  0000FC  2384               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   677  0000FE  0E03               	movlw	3
   678  000100  6F86               	movwf	(___wmul@multiplicand+1)& (0+255),b
   679  000102  0EE8               	movlw	232
   680  000104  6F85               	movwf	___wmul@multiplicand& (0+255),b
   681  000106  ECBE  F003         	call	___wmul	;wreg free
   682  00010A  0100               	movlb	0	; () banked
   683  00010C  5166               	movf	(_palabra+6)& (0+255),w,b
   684  00010E  6F89               	movwf	??_main& (0+255),b
   685  000110  6B8A               	clrf	(??_main+1)& (0+255),b
   686  000112  5183               	movf	?___wmul& (0+255),w,b
   687  000114  2789               	addwf	??_main& (0+255),f,b
   688  000116  5184               	movf	(?___wmul+1)& (0+255),w,b
   689  000118  238A               	addwfc	(??_main+1)& (0+255),f,b
   690  00011A  0ED0               	movlw	208
   691  00011C  2564               	addwf	(_palabra+4)& (0+255),w,b
   692  00011E  6F83               	movwf	___wmul@multiplier& (0+255),b
   693  000120  6B84               	clrf	(___wmul@multiplier+1)& (0+255),b
   694  000122  0EFF               	movlw	255
   695  000124  2384               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   696  000126  0E00               	movlw	0
   697  000128  6F86               	movwf	(___wmul@multiplicand+1)& (0+255),b
   698  00012A  0E64               	movlw	100
   699  00012C  6F85               	movwf	___wmul@multiplicand& (0+255),b
   700  00012E  ECBE  F003         	call	___wmul	;wreg free
   701  000132  0100               	movlb	0	; () banked
   702  000134  5183               	movf	?___wmul& (0+255),w,b
   703  000136  2789               	addwf	??_main& (0+255),f,b
   704  000138  5184               	movf	(?___wmul+1)& (0+255),w,b
   705  00013A  238A               	addwfc	(??_main+1)& (0+255),f,b
   706  00013C  0ED0               	movlw	208
   707  00013E  2565               	addwf	(_palabra+5)& (0+255),w,b
   708  000140  6F83               	movwf	___wmul@multiplier& (0+255),b
   709  000142  6B84               	clrf	(___wmul@multiplier+1)& (0+255),b
   710  000144  0EFF               	movlw	255
   711  000146  2384               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   712  000148  0E00               	movlw	0
   713  00014A  6F86               	movwf	(___wmul@multiplicand+1)& (0+255),b
   714  00014C  0E0A               	movlw	10
   715  00014E  6F85               	movwf	___wmul@multiplicand& (0+255),b
   716  000150  ECBE  F003         	call	___wmul	;wreg free
   717  000154  0100               	movlb	0	; () banked
   718  000156  5183               	movf	?___wmul& (0+255),w,b
   719  000158  2789               	addwf	??_main& (0+255),f,b
   720  00015A  5184               	movf	(?___wmul+1)& (0+255),w,b
   721  00015C  238A               	addwfc	(??_main+1)& (0+255),f,b
   722  00015E  0ED0               	movlw	208
   723  000160  2589               	addwf	??_main& (0+255),w,b
   724  000162  6F7D               	movwf	_diameter& (0+255),b
   725  000164  0EFF               	movlw	255
   726  000166  218A               	addwfc	(??_main+1)& (0+255),w,b
   727  000168  6F7E               	movwf	(_diameter+1)& (0+255),b
   728                           
   729                           ;main.c: 115: length = ((palabra[7] - 48) * 10000) + ((palabra[8] - 48) * 1000) + ((pala
      +                          bra[9] - 48) * 100) + ((palabra[10] - 48) * 10) + ((palabra[11] - 48));
   730  00016A  0ED0               	movlw	208
   731  00016C  2567               	addwf	(_palabra+7)& (0+255),w,b
   732  00016E  6F83               	movwf	___wmul@multiplier& (0+255),b
   733  000170  6B84               	clrf	(___wmul@multiplier+1)& (0+255),b
   734  000172  0EFF               	movlw	255
   735  000174  2384               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   736  000176  0E27               	movlw	39
   737  000178  6F86               	movwf	(___wmul@multiplicand+1)& (0+255),b
   738  00017A  0E10               	movlw	16
   739  00017C  6F85               	movwf	___wmul@multiplicand& (0+255),b
   740  00017E  ECBE  F003         	call	___wmul	;wreg free
   741  000182  0100               	movlb	0	; () banked
   742  000184  516B               	movf	(_palabra+11)& (0+255),w,b
   743  000186  6F89               	movwf	??_main& (0+255),b
   744  000188  6B8A               	clrf	(??_main+1)& (0+255),b
   745  00018A  5183               	movf	?___wmul& (0+255),w,b
   746  00018C  2789               	addwf	??_main& (0+255),f,b
   747  00018E  5184               	movf	(?___wmul+1)& (0+255),w,b
   748  000190  238A               	addwfc	(??_main+1)& (0+255),f,b
   749  000192  0ED0               	movlw	208
   750  000194  2568               	addwf	(_palabra+8)& (0+255),w,b
   751  000196  6F83               	movwf	___wmul@multiplier& (0+255),b
   752  000198  6B84               	clrf	(___wmul@multiplier+1)& (0+255),b
   753  00019A  0EFF               	movlw	255
   754  00019C  2384               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   755  00019E  0E03               	movlw	3
   756  0001A0  6F86               	movwf	(___wmul@multiplicand+1)& (0+255),b
   757  0001A2  0EE8               	movlw	232
   758  0001A4  6F85               	movwf	___wmul@multiplicand& (0+255),b
   759  0001A6  ECBE  F003         	call	___wmul	;wreg free
   760  0001AA  0100               	movlb	0	; () banked
   761  0001AC  5183               	movf	?___wmul& (0+255),w,b
   762  0001AE  2789               	addwf	??_main& (0+255),f,b
   763  0001B0  5184               	movf	(?___wmul+1)& (0+255),w,b
   764  0001B2  238A               	addwfc	(??_main+1)& (0+255),f,b
   765  0001B4  0ED0               	movlw	208
   766  0001B6  2569               	addwf	(_palabra+9)& (0+255),w,b
   767  0001B8  6F83               	movwf	___wmul@multiplier& (0+255),b
   768  0001BA  6B84               	clrf	(___wmul@multiplier+1)& (0+255),b
   769  0001BC  0EFF               	movlw	255
   770  0001BE  2384               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   771  0001C0  0E00               	movlw	0
   772  0001C2  6F86               	movwf	(___wmul@multiplicand+1)& (0+255),b
   773  0001C4  0E64               	movlw	100
   774  0001C6  6F85               	movwf	___wmul@multiplicand& (0+255),b
   775  0001C8  ECBE  F003         	call	___wmul	;wreg free
   776  0001CC  0100               	movlb	0	; () banked
   777  0001CE  5183               	movf	?___wmul& (0+255),w,b
   778  0001D0  2789               	addwf	??_main& (0+255),f,b
   779  0001D2  5184               	movf	(?___wmul+1)& (0+255),w,b
   780  0001D4  238A               	addwfc	(??_main+1)& (0+255),f,b
   781  0001D6  0ED0               	movlw	208
   782  0001D8  256A               	addwf	(_palabra+10)& (0+255),w,b
   783  0001DA  6F83               	movwf	___wmul@multiplier& (0+255),b
   784  0001DC  6B84               	clrf	(___wmul@multiplier+1)& (0+255),b
   785  0001DE  0EFF               	movlw	255
   786  0001E0  2384               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   787  0001E2  0E00               	movlw	0
   788  0001E4  6F86               	movwf	(___wmul@multiplicand+1)& (0+255),b
   789  0001E6  0E0A               	movlw	10
   790  0001E8  6F85               	movwf	___wmul@multiplicand& (0+255),b
   791  0001EA  ECBE  F003         	call	___wmul	;wreg free
   792  0001EE  0100               	movlb	0	; () banked
   793  0001F0  5183               	movf	?___wmul& (0+255),w,b
   794  0001F2  2789               	addwf	??_main& (0+255),f,b
   795  0001F4  5184               	movf	(?___wmul+1)& (0+255),w,b
   796  0001F6  238A               	addwfc	(??_main+1)& (0+255),f,b
   797  0001F8  0ED0               	movlw	208
   798  0001FA  2589               	addwf	??_main& (0+255),w,b
   799  0001FC  6E52               	movwf	_length,c
   800  0001FE  0EFF               	movlw	255
   801  000200  218A               	addwfc	(??_main+1)& (0+255),w,b
   802  000202  6E53               	movwf	_length+1,c
   803                           
   804                           ;main.c: 116: turns = ((palabra[12] - 48) * 1000) + ((palabra[13] - 48) * 100) + ((palab
      +                          ra[14] - 48) * 10) + ((palabra[15] - 48));
   805  000204  0ED0               	movlw	208
   806  000206  256C               	addwf	(_palabra+12)& (0+255),w,b
   807  000208  6F83               	movwf	___wmul@multiplier& (0+255),b
   808  00020A  6B84               	clrf	(___wmul@multiplier+1)& (0+255),b
   809  00020C  0EFF               	movlw	255
   810  00020E  2384               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   811  000210  0E03               	movlw	3
   812  000212  6F86               	movwf	(___wmul@multiplicand+1)& (0+255),b
   813  000214  0EE8               	movlw	232
   814  000216  6F85               	movwf	___wmul@multiplicand& (0+255),b
   815  000218  ECBE  F003         	call	___wmul	;wreg free
   816  00021C  0100               	movlb	0	; () banked
   817  00021E  516F               	movf	(_palabra+15)& (0+255),w,b
   818  000220  6F89               	movwf	??_main& (0+255),b
   819  000222  6B8A               	clrf	(??_main+1)& (0+255),b
   820  000224  5183               	movf	?___wmul& (0+255),w,b
   821  000226  2789               	addwf	??_main& (0+255),f,b
   822  000228  5184               	movf	(?___wmul+1)& (0+255),w,b
   823  00022A  238A               	addwfc	(??_main+1)& (0+255),f,b
   824  00022C  0ED0               	movlw	208
   825  00022E  256D               	addwf	(_palabra+13)& (0+255),w,b
   826  000230  6F83               	movwf	___wmul@multiplier& (0+255),b
   827  000232  6B84               	clrf	(___wmul@multiplier+1)& (0+255),b
   828  000234  0EFF               	movlw	255
   829  000236  2384               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   830  000238  0E00               	movlw	0
   831  00023A  6F86               	movwf	(___wmul@multiplicand+1)& (0+255),b
   832  00023C  0E64               	movlw	100
   833  00023E  6F85               	movwf	___wmul@multiplicand& (0+255),b
   834  000240  ECBE  F003         	call	___wmul	;wreg free
   835  000244  0100               	movlb	0	; () banked
   836  000246  5183               	movf	?___wmul& (0+255),w,b
   837  000248  2789               	addwf	??_main& (0+255),f,b
   838  00024A  5184               	movf	(?___wmul+1)& (0+255),w,b
   839  00024C  238A               	addwfc	(??_main+1)& (0+255),f,b
   840  00024E  0ED0               	movlw	208
   841  000250  256E               	addwf	(_palabra+14)& (0+255),w,b
   842  000252  6F83               	movwf	___wmul@multiplier& (0+255),b
   843  000254  6B84               	clrf	(___wmul@multiplier+1)& (0+255),b
   844  000256  0EFF               	movlw	255
   845  000258  2384               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   846  00025A  0E00               	movlw	0
   847  00025C  6F86               	movwf	(___wmul@multiplicand+1)& (0+255),b
   848  00025E  0E0A               	movlw	10
   849  000260  6F85               	movwf	___wmul@multiplicand& (0+255),b
   850  000262  ECBE  F003         	call	___wmul	;wreg free
   851  000266  0100               	movlb	0	; () banked
   852  000268  5183               	movf	?___wmul& (0+255),w,b
   853  00026A  2789               	addwf	??_main& (0+255),f,b
   854  00026C  5184               	movf	(?___wmul+1)& (0+255),w,b
   855  00026E  238A               	addwfc	(??_main+1)& (0+255),f,b
   856  000270  0ED0               	movlw	208
   857  000272  2589               	addwf	??_main& (0+255),w,b
   858  000274  6E50               	movwf	_turns,c
   859  000276  0EFF               	movlw	255
   860  000278  218A               	addwfc	(??_main+1)& (0+255),w,b
   861  00027A  6E51               	movwf	_turns+1,c
   862                           
   863                           ; BSR set to: 0
   864                           ;main.c: 117: speed = palabra[15];
   865  00027C  C06F  F07B         	movff	_palabra+15,_speed
   866  000280  6B7C               	clrf	(_speed+1)& (0+255),b
   867                           
   868                           ; BSR set to: 0
   869                           ;main.c: 119: busy_flag = 1;
   870  000282  0E01               	movlw	1
   871  000284  6E1F               	movwf	_busy_flag,c
   872                           
   873                           ;main.c: 120: } else if (palabra[0] == 'C') {
   874  000286  D07D               	goto	l227
   875  000288                     l204:
   876                           
   877                           ; BSR set to: 0
   878                           
   879                           ; BSR set to: 0
   880  000288  0E43               	movlw	67
   881  00028A  1960               	xorwf	_palabra& (0+255),w,b
   882  00028C  A4D8               	btfss	status,2,c
   883  00028E  D008               	goto	l206
   884                           
   885                           ; BSR set to: 0
   886                           ;main.c: 122: enable = !enable;
   887  000290  5019               	movf	_enable,w,c
   888  000292  A4D8               	btfss	status,2,c
   889  000294  D002               	goto	u1680
   890  000296  0E01               	movlw	1
   891  000298  D001               	goto	u1690
   892  00029A                     u1680:
   893  00029A  0E00               	movlw	0
   894  00029C                     u1690:
   895  00029C  6E19               	movwf	_enable,c
   896                           
   897                           ;main.c: 123: } else if ((palabra[0] == 'D') && (busy_flag == 0)) {
   898  00029E  D071               	goto	l227
   899  0002A0                     l206:
   900                           
   901                           ; BSR set to: 0
   902                           
   903                           ; BSR set to: 0
   904  0002A0  0E44               	movlw	68
   905  0002A2  1960               	xorwf	_palabra& (0+255),w,b
   906  0002A4  A4D8               	btfss	status,2,c
   907  0002A6  D01D               	goto	l208
   908                           
   909                           ; BSR set to: 0
   910  0002A8  501F               	movf	_busy_flag,w,c
   911  0002AA  A4D8               	btfss	status,2,c
   912  0002AC  D01A               	goto	l208
   913                           
   914                           ; BSR set to: 0
   915                           ;main.c: 125: if (palabra[1] == '0') {
   916  0002AE  0E30               	movlw	48
   917  0002B0  1961               	xorwf	(_palabra+1)& (0+255),w,b
   918  0002B2  A4D8               	btfss	status,2,c
   919  0002B4  D004               	goto	l209
   920                           
   921                           ; BSR set to: 0
   922                           ;main.c: 127: MOT_3 = 1;
   923  0002B6  0E01               	movlw	1
   924  0002B8  6E26               	movwf	_MOT_3,c
   925                           
   926                           ;main.c: 128: DIR_3 = 0;
   927  0002BA  0E00               	movlw	0
   928  0002BC  D007               	goto	L1
   929  0002BE                     l209:
   930                           
   931                           ; BSR set to: 0
   932                           
   933                           ; BSR set to: 0
   934  0002BE  0E31               	movlw	49
   935  0002C0  1961               	xorwf	(_palabra+1)& (0+255),w,b
   936  0002C2  A4D8               	btfss	status,2,c
   937  0002C4  D005               	goto	l211
   938                           
   939                           ; BSR set to: 0
   940                           ;main.c: 131: MOT_3 = 1;
   941  0002C6  0E01               	movlw	1
   942  0002C8  6E26               	movwf	_MOT_3,c
   943                           
   944                           ;main.c: 132: DIR_3 = 1;
   945  0002CA  0E01               	movlw	1
   946  0002CC                     L1:
   947  0002CC  6E24               	movwf	_DIR_3,c
   948                           
   949                           ;main.c: 133: } else if (palabra[1] == '2') {
   950  0002CE  D059               	goto	l227
   951  0002D0                     l211:
   952                           
   953                           ; BSR set to: 0
   954                           
   955                           ; BSR set to: 0
   956  0002D0  0E32               	movlw	50
   957  0002D2  1961               	xorwf	(_palabra+1)& (0+255),w,b
   958  0002D4  A4D8               	btfss	status,2,c
   959  0002D6  D055               	goto	l227
   960                           
   961                           ; BSR set to: 0
   962                           ;main.c: 135: MOT_3 = 0;
   963  0002D8  0E00               	movlw	0
   964  0002DA  6E26               	movwf	_MOT_3,c
   965                           
   966                           ;main.c: 137: zero_flag = 1;
   967  0002DC  0E01               	movlw	1
   968  0002DE  6E25               	movwf	_zero_flag,c
   969                           
   970                           ; BSR set to: 0
   971                           ;main.c: 138: }
   972                           ;main.c: 142: } else if (palabra[0] == 'E') {
   973                           
   974                           ; BSR set to: 0
   975                           
   976                           ; BSR set to: 0
   977  0002E0  D050               	goto	l227
   978  0002E2                     l208:
   979                           
   980                           ; BSR set to: 0
   981                           
   982                           ; BSR set to: 0
   983  0002E2  0E45               	movlw	69
   984  0002E4  1960               	xorwf	_palabra& (0+255),w,b
   985  0002E6  A4D8               	btfss	status,2,c
   986  0002E8  D018               	goto	l215
   987                           
   988                           ; BSR set to: 0
   989                           ;main.c: 144: if (palabra[1] == '0') {
   990  0002EA  0E30               	movlw	48
   991  0002EC  1961               	xorwf	(_palabra+1)& (0+255),w,b
   992  0002EE  A4D8               	btfss	status,2,c
   993  0002F0  D008               	goto	l216
   994                           
   995                           ; BSR set to: 0
   996                           ;main.c: 145: MOT_4 = !MOT_4;
   997  0002F2  5020               	movf	_MOT_4,w,c
   998  0002F4  A4D8               	btfss	status,2,c
   999  0002F6  D002               	goto	u1770
  1000  0002F8  0E01               	movlw	1
  1001  0002FA  D001               	goto	u1780
  1002  0002FC                     u1770:
  1003  0002FC  0E00               	movlw	0
  1004  0002FE                     u1780:
  1005  0002FE  6E20               	movwf	_MOT_4,c
  1006                           
  1007                           ;main.c: 146: } else if (palabra[1] == '1') {
  1008  000300  D040               	goto	l227
  1009  000302                     l216:
  1010                           
  1011                           ; BSR set to: 0
  1012                           
  1013                           ; BSR set to: 0
  1014  000302  0E31               	movlw	49
  1015  000304  1961               	xorwf	(_palabra+1)& (0+255),w,b
  1016  000306  A4D8               	btfss	status,2,c
  1017  000308  D03C               	goto	l227
  1018                           
  1019                           ; BSR set to: 0
  1020                           ;main.c: 147: DIR_4 = !DIR_4;
  1021  00030A  501A               	movf	_DIR_4,w,c
  1022  00030C  A4D8               	btfss	status,2,c
  1023  00030E  D002               	goto	u1800
  1024  000310  0E01               	movlw	1
  1025  000312  D001               	goto	u1810
  1026  000314                     u1800:
  1027  000314  0E00               	movlw	0
  1028  000316                     u1810:
  1029  000316  6E1A               	movwf	_DIR_4,c
  1030                           
  1031                           ; BSR set to: 0
  1032                           ;main.c: 148: }
  1033                           ;main.c: 149: } else if (palabra[0] == 'M') {
  1034                           
  1035                           ; BSR set to: 0
  1036  000318  D034               	goto	l227
  1037  00031A                     l215:
  1038                           
  1039                           ; BSR set to: 0
  1040                           
  1041                           ; BSR set to: 0
  1042  00031A  0E4D               	movlw	77
  1043  00031C  1960               	xorwf	_palabra& (0+255),w,b
  1044  00031E  A4D8               	btfss	status,2,c
  1045  000320  D030               	goto	l227
  1046                           
  1047                           ; BSR set to: 0
  1048                           ;main.c: 151: if (palabra[1] == '1') {
  1049  000322  0E31               	movlw	49
  1050  000324  1961               	xorwf	(_palabra+1)& (0+255),w,b
  1051  000326  A4D8               	btfss	status,2,c
  1052  000328  D008               	goto	l221
  1053                           
  1054                           ; BSR set to: 0
  1055                           ;main.c: 152: MOT_1 = !MOT_1;
  1056  00032A  5023               	movf	_MOT_1,w,c
  1057  00032C  A4D8               	btfss	status,2,c
  1058  00032E  D002               	goto	u1840
  1059  000330  0E01               	movlw	1
  1060  000332  D001               	goto	u1850
  1061  000334                     u1840:
  1062  000334  0E00               	movlw	0
  1063  000336                     u1850:
  1064  000336  6E23               	movwf	_MOT_1,c
  1065                           
  1066                           ;main.c: 153: } else if (palabra[1] == '2') {
  1067  000338  D024               	goto	l227
  1068  00033A                     l221:
  1069                           
  1070                           ; BSR set to: 0
  1071                           
  1072                           ; BSR set to: 0
  1073  00033A  0E32               	movlw	50
  1074  00033C  1961               	xorwf	(_palabra+1)& (0+255),w,b
  1075  00033E  A4D8               	btfss	status,2,c
  1076  000340  D008               	goto	l223
  1077                           
  1078                           ; BSR set to: 0
  1079                           ;main.c: 154: MOT_2 = !MOT_2;
  1080  000342  5021               	movf	_MOT_2,w,c
  1081  000344  A4D8               	btfss	status,2,c
  1082  000346  D002               	goto	u1870
  1083  000348  0E01               	movlw	1
  1084  00034A  D001               	goto	u1880
  1085  00034C                     u1870:
  1086  00034C  0E00               	movlw	0
  1087  00034E                     u1880:
  1088  00034E  6E21               	movwf	_MOT_2,c
  1089                           
  1090                           ;main.c: 155: } else if (palabra[1] == '3') {
  1091  000350  D018               	goto	l227
  1092  000352                     l223:
  1093                           
  1094                           ; BSR set to: 0
  1095                           
  1096                           ; BSR set to: 0
  1097  000352  0E33               	movlw	51
  1098  000354  1961               	xorwf	(_palabra+1)& (0+255),w,b
  1099  000356  A4D8               	btfss	status,2,c
  1100  000358  D014               	goto	l227
  1101                           
  1102                           ; BSR set to: 0
  1103                           ;main.c: 156: MOT_3 = !MOT_3;
  1104  00035A  5026               	movf	_MOT_3,w,c
  1105  00035C  A4D8               	btfss	status,2,c
  1106  00035E  D002               	goto	u1900
  1107  000360  0E01               	movlw	1
  1108  000362  D001               	goto	u1910
  1109  000364                     u1900:
  1110  000364  0E00               	movlw	0
  1111  000366                     u1910:
  1112  000366  6E26               	movwf	_MOT_3,c
  1113                           
  1114                           ; BSR set to: 0
  1115                           ;main.c: 157: }
  1116                           ;main.c: 158: }
  1117                           ;main.c: 161: } else if (GODONE == 0) {
  1118                           
  1119                           ; BSR set to: 0
  1120                           
  1121                           ; BSR set to: 0
  1122                           
  1123                           ; BSR set to: 0
  1124                           
  1125                           ; BSR set to: 0
  1126                           
  1127                           ; BSR set to: 0
  1128                           
  1129                           ; BSR set to: 0
  1130                           
  1131                           ; BSR set to: 0
  1132                           
  1133                           ; BSR set to: 0
  1134  000368  D00C               	goto	l227
  1135  00036A                     l201:
  1136                           
  1137                           ; BSR set to: 0
  1138  00036A  B2C2               	btfsc	4034,1,c	;volatile
  1139  00036C  D00A               	goto	l227
  1140                           
  1141                           ; BSR set to: 0
  1142                           ;main.c: 163: _delay((unsigned long)((4)*(8000000/4000.0)));
  1143  00036E  0E0B               	movlw	11
  1144  000370  0100               	movlb	0	; () banked
  1145  000372  6F89               	movwf	??_main& (0+255),b
  1146  000374  0E62               	movlw	98
  1147  000376                     u1977:
  1148  000376  2EE8               	decfsz	wreg,f,c
  1149  000378  D7FE               	bra	u1977
  1150  00037A  2F89               	decfsz	??_main& (0+255),f,b
  1151  00037C  D7FC               	bra	u1977
  1152  00037E  F000               	nop	
  1153                           
  1154                           ;main.c: 165: GODONE = 1;
  1155  000380  82C2               	bsf	4034,1,c	;volatile
  1156  000382                     l227:
  1157                           
  1158                           ;main.c: 174: }
  1159                           ;main.c: 183: if (mot_4_steps == mot_4_step_count && busy_flag) {
  1160  000382  5001               	movf	_mot_4_step_count,w,c
  1161  000384  1805               	xorwf	_mot_4_steps,w,c
  1162  000386  E109               	bnz	l228
  1163  000388  5002               	movf	_mot_4_step_count+1,w,c
  1164  00038A  1806               	xorwf	_mot_4_steps+1,w,c
  1165  00038C  A4D8               	btfss	status,2,c
  1166  00038E  D005               	goto	l228
  1167  000390  501F               	movf	_busy_flag,w,c
  1168  000392  B4D8               	btfsc	status,2,c
  1169  000394  D002               	goto	l228
  1170                           
  1171                           ;main.c: 185: MOT_4 = 0;
  1172  000396  0E00               	movlw	0
  1173  000398  6E20               	movwf	_MOT_4,c
  1174  00039A                     l228:
  1175                           
  1176                           ;main.c: 186: }
  1177                           ;main.c: 188: if (zero_flag) {
  1178  00039A  5025               	movf	_zero_flag,w,c
  1179  00039C  B4D8               	btfsc	status,2,c
  1180  00039E  D006               	goto	l229
  1181                           
  1182                           ;main.c: 191: MOT_1 = MOT_3 = 1;
  1183  0003A0  0E01               	movlw	1
  1184  0003A2  6E26               	movwf	_MOT_3,c
  1185  0003A4  C026  F023         	movff	_MOT_3,_MOT_1
  1186                           
  1187                           ;main.c: 193: DIR_3 = 1;
  1188  0003A8  0E01               	movlw	1
  1189  0003AA  6E24               	movwf	_DIR_3,c
  1190  0003AC                     l229:
  1191                           
  1192                           ;main.c: 194: }
  1193                           ;main.c: 197: if (finish) {
  1194  0003AC  5022               	movf	_finish,w,c
  1195  0003AE  B4D8               	btfsc	status,2,c
  1196  0003B0  D634               	goto	l200
  1197                           
  1198                           ;main.c: 198: MOT_1 = 0;
  1199  0003B2  0E00               	movlw	0
  1200  0003B4  6E23               	movwf	_MOT_1,c
  1201                           
  1202                           ;main.c: 199: MOT_3 = 0;
  1203  0003B6  0E00               	movlw	0
  1204  0003B8  6E26               	movwf	_MOT_3,c
  1205                           
  1206                           ;main.c: 200: trans_Char('Z');
  1207  0003BA  0E5A               	movlw	90
  1208  0003BC  ECFE  F003         	call	_trans_Char
  1209                           
  1210                           ;main.c: 201: finish = 0;
  1211  0003C0  0E00               	movlw	0
  1212  0003C2  6E22               	movwf	_finish,c
  1213  0003C4  D62A               	goto	l200
  1214  0003C6                     __end_of_main:
  1215                           	opt stack 0
  1216                           tblptru	equ	0xFF8
  1217                           tblptrh	equ	0xFF7
  1218                           tblptrl	equ	0xFF6
  1219                           tablat	equ	0xFF5
  1220                           postinc0	equ	0xFEE
  1221                           wreg	equ	0xFE8
  1222                           postdec1	equ	0xFE5
  1223                           fsr1l	equ	0xFE1
  1224                           status	equ	0xFD8
  1225                           
  1226 ;; *************** function _trans_Char *****************
  1227 ;; Defined at:
  1228 ;;		line 208 in file "main.c"
  1229 ;; Parameters:    Size  Location     Type
  1230 ;;  out             1    wreg     unsigned char 
  1231 ;; Auto vars:     Size  Location     Type
  1232 ;;  out             1    0[BANK0 ] unsigned char 
  1233 ;; Return value:  Size  Location     Type
  1234 ;;                  1    wreg      void 
  1235 ;; Registers used:
  1236 ;;		wreg
  1237 ;; Tracked objects:
  1238 ;;		On entry : 0/0
  1239 ;;		On exit  : 0/0
  1240 ;;		Unchanged: 0/0
  1241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1242 ;;      Params:         0       0       0       0       0       0       0       0       0
  1243 ;;      Locals:         0       1       0       0       0       0       0       0       0
  1244 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1245 ;;      Totals:         0       1       0       0       0       0       0       0       0
  1246 ;;Total ram usage:        1 bytes
  1247 ;; Hardware stack levels used:    1
  1248 ;; Hardware stack levels required when called:    3
  1249 ;; This function calls:
  1250 ;;		Nothing
  1251 ;; This function is called by:
  1252 ;;		_main
  1253 ;; This function uses a non-reentrant model
  1254 ;;
  1255                           
  1256                           	psect	text1
  1257  0007FC                     __ptext1:
  1258                           	opt stack 0
  1259  0007FC                     _trans_Char:
  1260                           	opt stack 27
  1261                           
  1262                           ;incstack = 0
  1263                           ;trans_Char@out stored from wreg
  1264  0007FC  0100               	movlb	0	; () banked
  1265  0007FE  6F83               	movwf	trans_Char@out& (0+255),b
  1266  000800                     
  1267                           ;main.c: 209: while (TXIF == 0);
  1268  000800  A89E               	btfss	3998,4,c	;volatile
  1269  000802  D7FE               	goto	l1584
  1270                           
  1271                           ;main.c: 210: TXREG = out;
  1272  000804  C083  FFAD         	movff	trans_Char@out,4013	;volatile
  1273  000808  0012               	return		;funcret
  1274  00080A                     __end_of_trans_Char:
  1275                           	opt stack 0
  1276                           tblptru	equ	0xFF8
  1277                           tblptrh	equ	0xFF7
  1278                           tblptrl	equ	0xFF6
  1279                           tablat	equ	0xFF5
  1280                           postinc0	equ	0xFEE
  1281                           wreg	equ	0xFE8
  1282                           postdec1	equ	0xFE5
  1283                           fsr1l	equ	0xFE1
  1284                           status	equ	0xFD8
  1285                           
  1286 ;; *************** function ___wmul *****************
  1287 ;; Defined at:
  1288 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
  1289 ;; Parameters:    Size  Location     Type
  1290 ;;  multiplier      2    0[BANK0 ] unsigned int 
  1291 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  1292 ;; Auto vars:     Size  Location     Type
  1293 ;;  product         2    4[BANK0 ] unsigned int 
  1294 ;; Return value:  Size  Location     Type
  1295 ;;                  2    0[BANK0 ] unsigned int 
  1296 ;; Registers used:
  1297 ;;		wreg, status,2, status,0, prodl, prodh
  1298 ;; Tracked objects:
  1299 ;;		On entry : 0/0
  1300 ;;		On exit  : 0/0
  1301 ;;		Unchanged: 0/0
  1302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1303 ;;      Params:         0       4       0       0       0       0       0       0       0
  1304 ;;      Locals:         0       2       0       0       0       0       0       0       0
  1305 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1306 ;;      Totals:         0       6       0       0       0       0       0       0       0
  1307 ;;Total ram usage:        6 bytes
  1308 ;; Hardware stack levels used:    1
  1309 ;; Hardware stack levels required when called:    3
  1310 ;; This function calls:
  1311 ;;		Nothing
  1312 ;; This function is called by:
  1313 ;;		_main
  1314 ;; This function uses a non-reentrant model
  1315 ;;
  1316                           
  1317                           	psect	text2
  1318  00077C                     __ptext2:
  1319                           	opt stack 0
  1320  00077C                     ___wmul:
  1321                           	opt stack 27
  1322                           
  1323                           ;incstack = 0
  1324  00077C  0100               	movlb	0	; () banked
  1325  00077E  5183               	movf	___wmul@multiplier& (0+255),w,b
  1326  000780  0385               	mulwf	___wmul@multiplicand& (0+255),b
  1327  000782  CFF3 F087          	movff	prodl,___wmul@product
  1328  000786  CFF4 F088          	movff	prodh,___wmul@product+1
  1329  00078A  5183               	movf	___wmul@multiplier& (0+255),w,b
  1330  00078C  0386               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  1331  00078E  50F3               	movf	prodl,w,c
  1332  000790  2788               	addwf	(___wmul@product+1)& (0+255),f,b
  1333  000792  5184               	movf	(___wmul@multiplier+1)& (0+255),w,b
  1334  000794  0385               	mulwf	___wmul@multiplicand& (0+255),b
  1335  000796  50F3               	movf	prodl,w,c
  1336  000798  2788               	addwf	(___wmul@product+1)& (0+255),f,b
  1337                           
  1338                           ; BSR set to: 0
  1339  00079A  C087  F083         	movff	___wmul@product,?___wmul
  1340  00079E  C088  F084         	movff	___wmul@product+1,?___wmul+1
  1341  0007A2  0012               	return	
  1342  0007A4                     __end_of___wmul:
  1343                           	opt stack 0
  1344                           tblptru	equ	0xFF8
  1345                           tblptrh	equ	0xFF7
  1346                           tblptrl	equ	0xFF6
  1347                           tablat	equ	0xFF5
  1348                           prodh	equ	0xFF4
  1349                           prodl	equ	0xFF3
  1350                           postinc0	equ	0xFEE
  1351                           wreg	equ	0xFE8
  1352                           postdec1	equ	0xFE5
  1353                           fsr1l	equ	0xFE1
  1354                           status	equ	0xFD8
  1355                           
  1356 ;; *************** function _InitApp *****************
  1357 ;; Defined at:
  1358 ;;		line 33 in file "user.c"
  1359 ;; Parameters:    Size  Location     Type
  1360 ;;		None
  1361 ;; Auto vars:     Size  Location     Type
  1362 ;;		None
  1363 ;; Return value:  Size  Location     Type
  1364 ;;                  1    wreg      void 
  1365 ;; Registers used:
  1366 ;;		wreg, status,2
  1367 ;; Tracked objects:
  1368 ;;		On entry : 0/0
  1369 ;;		On exit  : 0/0
  1370 ;;		Unchanged: 0/0
  1371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1372 ;;      Params:         0       0       0       0       0       0       0       0       0
  1373 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1374 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1375 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1376 ;;Total ram usage:        0 bytes
  1377 ;; Hardware stack levels used:    1
  1378 ;; Hardware stack levels required when called:    3
  1379 ;; This function calls:
  1380 ;;		Nothing
  1381 ;; This function is called by:
  1382 ;;		_main
  1383 ;; This function uses a non-reentrant model
  1384 ;;
  1385                           
  1386                           	psect	text3
  1387  000676                     __ptext3:
  1388                           	opt stack 0
  1389  000676                     _InitApp:
  1390                           	opt stack 27
  1391                           
  1392                           ;user.c: 35: PORTA = 0;
  1393                           
  1394                           ; BSR set to: 0
  1395                           ;incstack = 0
  1396  000676  0E00               	movlw	0
  1397  000678  6E80               	movwf	3968,c	;volatile
  1398                           
  1399                           ;user.c: 36: LATA = 0;
  1400  00067A  0E00               	movlw	0
  1401  00067C  6E89               	movwf	3977,c	;volatile
  1402                           
  1403                           ;user.c: 37: PORTB = 0;
  1404  00067E  0E00               	movlw	0
  1405  000680  6E81               	movwf	3969,c	;volatile
  1406                           
  1407                           ;user.c: 38: LATB = 0;
  1408  000682  0E00               	movlw	0
  1409  000684  6E8A               	movwf	3978,c	;volatile
  1410                           
  1411                           ;user.c: 39: PORTC = 0;
  1412  000686  0E00               	movlw	0
  1413  000688  6E82               	movwf	3970,c	;volatile
  1414                           
  1415                           ;user.c: 40: LATC = 0;
  1416  00068A  0E00               	movlw	0
  1417  00068C  6E8B               	movwf	3979,c	;volatile
  1418                           
  1419                           ;user.c: 42: ADCON1 = 0b1101;
  1420  00068E  0E0D               	movlw	13
  1421  000690  6EC1               	movwf	4033,c	;volatile
  1422                           
  1423                           ;user.c: 43: TRISAbits.TRISA0 = 1;
  1424  000692  8092               	bsf	3986,0,c	;volatile
  1425                           
  1426                           ;user.c: 44: ADCON0bits.CHS = 0;
  1427  000694  94C2               	bcf	4034,2,c	;volatile
  1428  000696  96C2               	bcf	4034,3,c	;volatile
  1429  000698  98C2               	bcf	4034,4,c	;volatile
  1430  00069A  9AC2               	bcf	4034,5,c	;volatile
  1431                           
  1432                           ;user.c: 45: ADCON2 = 0b10101100;
  1433  00069C  0EAC               	movlw	172
  1434  00069E  6EC0               	movwf	4032,c	;volatile
  1435                           
  1436                           ;user.c: 46: PIE1bits.ADIE = 1;
  1437  0006A0  8C9D               	bsf	3997,6,c	;volatile
  1438                           
  1439                           ;user.c: 47: PIR1bits.ADIF = 0;
  1440  0006A2  9C9E               	bcf	3998,6,c	;volatile
  1441                           
  1442                           ;user.c: 48: ADCON0bits.ADON = 1;
  1443  0006A4  80C2               	bsf	4034,0,c	;volatile
  1444                           
  1445                           ;user.c: 50: TRISAbits.RA2 = 0;
  1446  0006A6  9492               	bcf	3986,2,c	;volatile
  1447                           
  1448                           ;user.c: 51: TRISAbits.RA3 = 0;
  1449  0006A8  9692               	bcf	3986,3,c	;volatile
  1450                           
  1451                           ;user.c: 52: TRISAbits.RA4 = 0;
  1452  0006AA  9892               	bcf	3986,4,c	;volatile
  1453                           
  1454                           ;user.c: 53: TRISAbits.RA5 = 0;
  1455  0006AC  9A92               	bcf	3986,5,c	;volatile
  1456                           
  1457                           ;user.c: 54: TRISCbits.RC0 = 0;
  1458  0006AE  9094               	bcf	3988,0,c	;volatile
  1459                           
  1460                           ;user.c: 55: TRISCbits.RC1 = 0;
  1461  0006B0  9294               	bcf	3988,1,c	;volatile
  1462                           
  1463                           ;user.c: 56: TRISBbits.RB7 = 0;
  1464  0006B2  9E93               	bcf	3987,7,c	;volatile
  1465                           
  1466                           ;user.c: 57: TRISBbits.RB6 = 0;
  1467  0006B4  9C93               	bcf	3987,6,c	;volatile
  1468                           
  1469                           ;user.c: 58: TRISCbits.RC2 = 0;
  1470  0006B6  9494               	bcf	3988,2,c	;volatile
  1471                           
  1472                           ;user.c: 59: TRISBbits.RB4 = 0;
  1473  0006B8  9893               	bcf	3987,4,c	;volatile
  1474                           
  1475                           ;user.c: 60: TRISBbits.RB5 = 0;
  1476  0006BA  9A93               	bcf	3987,5,c	;volatile
  1477                           
  1478                           ;user.c: 62: RCONbits.IPEN = 0;
  1479  0006BC  9ED0               	bcf	4048,7,c	;volatile
  1480                           
  1481                           ;user.c: 64: INTCONbits.GIE = 1;
  1482  0006BE  8EF2               	bsf	intcon,7,c	;volatile
  1483                           
  1484                           ;user.c: 65: INTCONbits.PEIE = 1;
  1485  0006C0  8CF2               	bsf	intcon,6,c	;volatile
  1486                           
  1487                           ;user.c: 66: INTCONbits.TMR0IE = 1;
  1488  0006C2  8AF2               	bsf	intcon,5,c	;volatile
  1489                           
  1490                           ;user.c: 67: INTCONbits.TMR0IF = 0;
  1491  0006C4  94F2               	bcf	intcon,2,c	;volatile
  1492                           
  1493                           ;user.c: 68: INTCON2bits.TMR0IP = 1;
  1494  0006C6  84F1               	bsf	intcon2,2,c	;volatile
  1495                           
  1496                           ;user.c: 69: T0CONbits.T08BIT = 1;
  1497  0006C8  8CD5               	bsf	4053,6,c	;volatile
  1498                           
  1499                           ;user.c: 70: T0CONbits.T0CS = 0;
  1500  0006CA  9AD5               	bcf	4053,5,c	;volatile
  1501                           
  1502                           ;user.c: 71: T0CONbits.PSA = 0;
  1503  0006CC  96D5               	bcf	4053,3,c	;volatile
  1504                           
  1505                           ;user.c: 72: T0CONbits.T0PS = 0b101;
  1506  0006CE  50D5               	movf	4053,w,c	;volatile
  1507  0006D0  0BF8               	andlw	-8
  1508  0006D2  0905               	iorlw	5
  1509  0006D4  6ED5               	movwf	4053,c	;volatile
  1510                           
  1511                           ;user.c: 73: TMR0 = 0x6;
  1512  0006D6  0E00               	movlw	0
  1513  0006D8  6ED7               	movwf	4055,c	;volatile
  1514  0006DA  0E06               	movlw	6
  1515  0006DC  6ED6               	movwf	4054,c	;volatile
  1516                           
  1517                           ;user.c: 75: TRISBbits.RB1 = 1;
  1518  0006DE  8293               	bsf	3987,1,c	;volatile
  1519                           
  1520                           ;user.c: 76: TRISBbits.RB2 = 1;
  1521  0006E0  8493               	bsf	3987,2,c	;volatile
  1522                           
  1523                           ;user.c: 77: INTCON3bits.INT1IE = 1;
  1524  0006E2  86F0               	bsf	intcon3,3,c	;volatile
  1525                           
  1526                           ;user.c: 78: INTCON3bits.INT2IE = 1;
  1527  0006E4  88F0               	bsf	intcon3,4,c	;volatile
  1528                           
  1529                           ;user.c: 79: INTCON3bits.INT1IF = 0;
  1530  0006E6  90F0               	bcf	intcon3,0,c	;volatile
  1531                           
  1532                           ;user.c: 80: INTCON3bits.INT2IF = 0;
  1533  0006E8  92F0               	bcf	intcon3,1,c	;volatile
  1534                           
  1535                           ;user.c: 81: INTCON2bits.INTEDG1 = 0;
  1536  0006EA  9AF1               	bcf	intcon2,5,c	;volatile
  1537                           
  1538                           ;user.c: 82: INTCON2bits.INTEDG2 = 0;
  1539  0006EC  98F1               	bcf	intcon2,4,c	;volatile
  1540                           
  1541                           ;user.c: 84: TRISCbits.RC6 = 0;
  1542  0006EE  9C94               	bcf	3988,6,c	;volatile
  1543                           
  1544                           ;user.c: 85: TRISCbits.RC7 = 1;
  1545  0006F0  8E94               	bsf	3988,7,c	;volatile
  1546                           
  1547                           ;user.c: 86: BRGH = 1;
  1548  0006F2  84AC               	bsf	4012,2,c	;volatile
  1549                           
  1550                           ;user.c: 87: BRG16 = 1;
  1551  0006F4  86B8               	bsf	4024,3,c	;volatile
  1552                           
  1553                           ;user.c: 88: SPBRG = 207;
  1554  0006F6  0ECF               	movlw	207
  1555  0006F8  6EAF               	movwf	4015,c	;volatile
  1556                           
  1557                           ;user.c: 89: SPEN = 1;
  1558  0006FA  8EAB               	bsf	4011,7,c	;volatile
  1559                           
  1560                           ;user.c: 90: SYNC = 0;
  1561  0006FC  98AC               	bcf	4012,4,c	;volatile
  1562                           
  1563                           ;user.c: 91: TXEN = 1;
  1564  0006FE  8AAC               	bsf	4012,5,c	;volatile
  1565                           
  1566                           ;user.c: 92: CREN = 1;
  1567  000700  88AB               	bsf	4011,4,c	;volatile
  1568                           
  1569                           ;user.c: 93: TX9 = 0;
  1570  000702  9CAC               	bcf	4012,6,c	;volatile
  1571                           
  1572                           ;user.c: 94: RX9 = 0;
  1573  000704  9CAB               	bcf	4011,6,c	;volatile
  1574                           
  1575                           ;user.c: 95: RCIE = 1;
  1576  000706  8A9D               	bsf	3997,5,c	;volatile
  1577                           
  1578                           ;user.c: 96: TXIE = 0;
  1579  000708  989D               	bcf	3997,4,c	;volatile
  1580                           
  1581                           ;user.c: 98: PR2 = 99;
  1582  00070A  0E63               	movlw	99
  1583  00070C  6ECB               	movwf	4043,c	;volatile
  1584                           
  1585                           ;user.c: 99: CCP1CONbits.DC1B = 0;
  1586  00070E  0ECF               	movlw	-49
  1587  000710  16BD               	andwf	4029,f,c	;volatile
  1588                           
  1589                           ;user.c: 100: T2CONbits.T2CKPS = 0b00;
  1590  000712  0EFC               	movlw	-4
  1591  000714  16CA               	andwf	4042,f,c	;volatile
  1592                           
  1593                           ;user.c: 101: T2CONbits.TMR2ON = 1;
  1594  000716  84CA               	bsf	4042,2,c	;volatile
  1595                           
  1596                           ;user.c: 102: CCP1CONbits.CCP1M = 0b1111;
  1597  000718  80BD               	bsf	4029,0,c	;volatile
  1598  00071A  82BD               	bsf	4029,1,c	;volatile
  1599  00071C  84BD               	bsf	4029,2,c	;volatile
  1600  00071E  86BD               	bsf	4029,3,c	;volatile
  1601  000720  0012               	return		;funcret
  1602  000722                     __end_of_InitApp:
  1603                           	opt stack 0
  1604                           tblptru	equ	0xFF8
  1605                           tblptrh	equ	0xFF7
  1606                           tblptrl	equ	0xFF6
  1607                           tablat	equ	0xFF5
  1608                           prodh	equ	0xFF4
  1609                           prodl	equ	0xFF3
  1610                           intcon	equ	0xFF2
  1611                           intcon2	equ	0xFF1
  1612                           intcon3	equ	0xFF0
  1613                           postinc0	equ	0xFEE
  1614                           wreg	equ	0xFE8
  1615                           postdec1	equ	0xFE5
  1616                           fsr1l	equ	0xFE1
  1617                           status	equ	0xFD8
  1618                           
  1619 ;; *************** function _ConfigureOscillator *****************
  1620 ;; Defined at:
  1621 ;;		line 24 in file "system.c"
  1622 ;; Parameters:    Size  Location     Type
  1623 ;;		None
  1624 ;; Auto vars:     Size  Location     Type
  1625 ;;		None
  1626 ;; Return value:  Size  Location     Type
  1627 ;;                  1    wreg      void 
  1628 ;; Registers used:
  1629 ;;		wreg, status,2
  1630 ;; Tracked objects:
  1631 ;;		On entry : 0/0
  1632 ;;		On exit  : 0/0
  1633 ;;		Unchanged: 0/0
  1634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1635 ;;      Params:         0       0       0       0       0       0       0       0       0
  1636 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1637 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1638 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1639 ;;Total ram usage:        0 bytes
  1640 ;; Hardware stack levels used:    1
  1641 ;; Hardware stack levels required when called:    3
  1642 ;; This function calls:
  1643 ;;		Nothing
  1644 ;; This function is called by:
  1645 ;;		_main
  1646 ;; This function uses a non-reentrant model
  1647 ;;
  1648                           
  1649                           	psect	text4
  1650  00080A                     __ptext4:
  1651                           	opt stack 0
  1652  00080A                     _ConfigureOscillator:
  1653                           	opt stack 27
  1654                           
  1655                           ;system.c: 27: OSCCONbits.IRCF = 0b111;
  1656                           
  1657                           ;incstack = 0
  1658  00080A  88D3               	bsf	4051,4,c	;volatile
  1659  00080C  8AD3               	bsf	4051,5,c	;volatile
  1660  00080E  8CD3               	bsf	4051,6,c	;volatile
  1661                           
  1662                           ;system.c: 28: OSCCONbits.SCS = 0b11;
  1663  000810  0E03               	movlw	3
  1664  000812  12D3               	iorwf	4051,f,c	;volatile
  1665  000814  0012               	return		;funcret
  1666  000816                     __end_of_ConfigureOscillator:
  1667                           	opt stack 0
  1668                           tblptru	equ	0xFF8
  1669                           tblptrh	equ	0xFF7
  1670                           tblptrl	equ	0xFF6
  1671                           tablat	equ	0xFF5
  1672                           prodh	equ	0xFF4
  1673                           prodl	equ	0xFF3
  1674                           intcon	equ	0xFF2
  1675                           intcon2	equ	0xFF1
  1676                           intcon3	equ	0xFF0
  1677                           postinc0	equ	0xFEE
  1678                           wreg	equ	0xFE8
  1679                           postdec1	equ	0xFE5
  1680                           fsr1l	equ	0xFE1
  1681                           status	equ	0xFD8
  1682                           
  1683 ;; *************** function _high_isr *****************
  1684 ;; Defined at:
  1685 ;;		line 63 in file "interrupts.c"
  1686 ;; Parameters:    Size  Location     Type
  1687 ;;		None
  1688 ;; Auto vars:     Size  Location     Type
  1689 ;;		None
  1690 ;; Return value:  Size  Location     Type
  1691 ;;                  1    wreg      void 
  1692 ;; Registers used:
  1693 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1694 ;; Tracked objects:
  1695 ;;		On entry : 0/0
  1696 ;;		On exit  : 0/0
  1697 ;;		Unchanged: 0/0
  1698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1699 ;;      Params:         0       0       0       0       0       0       0       0       0
  1700 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1701 ;;      Temps:         19       0       0       0       0       0       0       0       0
  1702 ;;      Totals:        19       0       0       0       0       0       0       0       0
  1703 ;;Total ram usage:       19 bytes
  1704 ;; Hardware stack levels used:    1
  1705 ;; Hardware stack levels required when called:    2
  1706 ;; This function calls:
  1707 ;;		_mot_3_step_count
  1708 ;;		i2_trans_Char
  1709 ;; This function is called by:
  1710 ;;		Interrupt level 2
  1711 ;; This function uses a non-reentrant model
  1712 ;;
  1713                           
  1714                           	psect	intcode
  1715  000008                     __pintcode:
  1716                           	opt stack 0
  1717  000008                     _high_isr:
  1718                           	opt stack 27
  1719                           
  1720                           ;incstack = 0
  1721  000008  8254               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  1722  00000A  EDE3  F001         	call	int_func,f	;refresh shadow registers
  1723                           tblptru	equ	0xFF8
  1724                           tblptrh	equ	0xFF7
  1725                           tblptrl	equ	0xFF6
  1726                           tablat	equ	0xFF5
  1727                           prodh	equ	0xFF4
  1728                           prodl	equ	0xFF3
  1729                           intcon	equ	0xFF2
  1730                           intcon2	equ	0xFF1
  1731                           intcon3	equ	0xFF0
  1732                           postinc0	equ	0xFEE
  1733                           wreg	equ	0xFE8
  1734                           postdec1	equ	0xFE5
  1735                           fsr1l	equ	0xFE1
  1736                           status	equ	0xFD8
  1737                           
  1738                           	psect	intcode_body
  1739  0003C6                     __pintcode_body:
  1740                           	opt stack 27
  1741  0003C6                     int_func:
  1742                           	opt stack 27
  1743  0003C6  0006               	pop		; remove dummy address from shadow register refresh
  1744  0003C8  CFFA F034          	movff	pclath,??_high_isr+1
  1745  0003CC  CFFB F035          	movff	pclatu,??_high_isr+2
  1746  0003D0  CFE9 F036          	movff	fsr0l,??_high_isr+3
  1747  0003D4  CFEA F037          	movff	fsr0h,??_high_isr+4
  1748  0003D8  CFE1 F038          	movff	fsr1l,??_high_isr+5
  1749  0003DC  CFE2 F039          	movff	fsr1h,??_high_isr+6
  1750  0003E0  CFD9 F03A          	movff	fsr2l,??_high_isr+7
  1751  0003E4  CFDA F03B          	movff	fsr2h,??_high_isr+8
  1752  0003E8  CFF3 F03C          	movff	prodl,??_high_isr+9
  1753  0003EC  CFF4 F03D          	movff	prodh,??_high_isr+10
  1754  0003F0  CFF6 F03E          	movff	tblptrl,??_high_isr+11
  1755  0003F4  CFF7 F03F          	movff	tblptrh,??_high_isr+12
  1756  0003F8  CFF8 F040          	movff	tblptru,??_high_isr+13
  1757  0003FC  CFF5 F041          	movff	tablat,??_high_isr+14
  1758  000400  C054  F042         	movff	btemp,??_high_isr+15
  1759  000404  C055  F043         	movff	btemp+1,??_high_isr+16
  1760  000408  C056  F044         	movff	btemp+2,??_high_isr+17
  1761  00040C  C057  F045         	movff	btemp+3,??_high_isr+18
  1762                           
  1763                           ;interrupts.c: 64: if (INTCONbits.TMR0IF) {
  1764  000410  A4F2               	btfss	intcon,2,c	;volatile
  1765  000412  D0B7               	goto	i2l93
  1766                           
  1767                           ;interrupts.c: 66: INTCONbits.TMR0IF = 0;
  1768  000414  94F2               	bcf	intcon,2,c	;volatile
  1769                           
  1770                           ;interrupts.c: 67: TMR0 = 250;
  1771  000416  0E00               	movlw	0
  1772  000418  6ED7               	movwf	4055,c	;volatile
  1773  00041A  0EFA               	movlw	250
  1774  00041C  6ED6               	movwf	4054,c	;volatile
  1775                           
  1776                           ;interrupts.c: 68: MOT_1_count++;
  1777  00041E  4A11               	infsnz	_MOT_1_count,f,c
  1778  000420  2A12               	incf	_MOT_1_count+1,f,c
  1779                           
  1780                           ;interrupts.c: 69: MOT_2_count++;
  1781  000422  4A0F               	infsnz	_MOT_2_count,f,c
  1782  000424  2A10               	incf	_MOT_2_count+1,f,c
  1783                           
  1784                           ;interrupts.c: 70: MOT_3_count++;
  1785  000426  4A0D               	infsnz	_MOT_3_count,f,c
  1786  000428  2A0E               	incf	_MOT_3_count+1,f,c
  1787                           
  1788                           ;interrupts.c: 71: MOT_4_count++;
  1789  00042A  4A0B               	infsnz	_MOT_4_count,f,c
  1790  00042C  2A0C               	incf	_MOT_4_count+1,f,c
  1791                           
  1792                           ;interrupts.c: 73: if (MOT_3) {
  1793  00042E  5026               	movf	_MOT_3,w,c
  1794  000430  B4D8               	btfsc	status,2,c
  1795  000432  D038               	goto	i2l97
  1796                           
  1797                           ;interrupts.c: 74: if (MOT_3_count == count_3) {
  1798  000434  504A               	movf	_count_3,w,c
  1799  000436  180D               	xorwf	_MOT_3_count,w,c
  1800  000438  E135               	bnz	i2l94
  1801  00043A  504B               	movf	_count_3+1,w,c
  1802  00043C  180E               	xorwf	_MOT_3_count+1,w,c
  1803  00043E  A4D8               	btfss	status,2,c
  1804  000440  D031               	goto	i2l97
  1805                           
  1806                           ;interrupts.c: 75: LATCbits.LC1 = !PORTCbits.RC1;
  1807  000442  B282               	btfsc	3970,1,c	;volatile
  1808  000444  D003               	goto	i2u83_40
  1809  000446  6A33               	clrf	??_high_isr& (0+255),c
  1810  000448  2A33               	incf	??_high_isr& (0+255),f,c
  1811  00044A  D001               	goto	i2u84_48
  1812  00044C                     i2u83_40:
  1813  00044C  6A33               	clrf	??_high_isr& (0+255),c
  1814  00044E                     i2u84_48:
  1815  00044E  4633               	rlncf	??_high_isr,f,c
  1816  000450  508B               	movf	3979,w,c	;volatile
  1817  000452  1833               	xorwf	??_high_isr,w,c
  1818  000454  0BFD               	andlw	-3
  1819  000456  1833               	xorwf	??_high_isr,w,c
  1820  000458  6E8B               	movwf	3979,c	;volatile
  1821                           
  1822                           ;interrupts.c: 76: MOT_3_count = 0;
  1823  00045A  0E00               	movlw	0
  1824  00045C  6E0E               	movwf	_MOT_3_count+1,c
  1825  00045E  0E00               	movlw	0
  1826  000460  6E0D               	movwf	_MOT_3_count,c
  1827                           
  1828                           ;interrupts.c: 77: if (zero_flag == 1) {
  1829  000462  0425               	decf	_zero_flag,w,c
  1830  000464  A4D8               	btfss	status,2,c
  1831  000466  D01E               	goto	i2l97
  1832                           
  1833                           ;interrupts.c: 79: mot_3_steps++;
  1834  000468  4A07               	infsnz	_mot_3_steps,f,c
  1835  00046A  2A08               	incf	_mot_3_steps+1,f,c
  1836                           
  1837                           ;interrupts.c: 80: if (mot_3_steps == mot_3_step_count(length, 1)) {
  1838  00046C  C052  F02D         	movff	_length,mot_3_step_count@l
  1839  000470  C053  F02E         	movff	_length+1,mot_3_step_count@l+1
  1840  000474  0E00               	movlw	0
  1841  000476  6E30               	movwf	mot_3_step_count@ms+1,c
  1842  000478  0E01               	movlw	1
  1843  00047A  6E2F               	movwf	mot_3_step_count@ms,c
  1844  00047C  ECE5  F003         	call	_mot_3_step_count	;wreg free
  1845  000480  5007               	movf	_mot_3_steps,w,c
  1846  000482  182D               	xorwf	?_mot_3_step_count,w,c
  1847  000484  E10F               	bnz	i2l94
  1848  000486  5008               	movf	_mot_3_steps+1,w,c
  1849  000488  182E               	xorwf	?_mot_3_step_count+1,w,c
  1850  00048A  A4D8               	btfss	status,2,c
  1851  00048C  D00B               	goto	i2l97
  1852                           
  1853                           ;interrupts.c: 81: DIR_3 = !DIR_3;
  1854  00048E  5024               	movf	_DIR_3,w,c
  1855  000490  A4D8               	btfss	status,2,c
  1856  000492  D002               	goto	i2u87_40
  1857  000494  0E01               	movlw	1
  1858  000496  D001               	goto	i2u88_40
  1859  000498                     i2u87_40:
  1860  000498  0E00               	movlw	0
  1861  00049A                     i2u88_40:
  1862  00049A  6E24               	movwf	_DIR_3,c
  1863                           
  1864                           ;interrupts.c: 82: mot_3_steps = 0;
  1865  00049C  0E00               	movlw	0
  1866  00049E  6E08               	movwf	_mot_3_steps+1,c
  1867  0004A0  0E00               	movlw	0
  1868  0004A2  6E07               	movwf	_mot_3_steps,c
  1869  0004A4                     i2l97:
  1870  0004A4                     i2l94:
  1871                           
  1872                           ;interrupts.c: 83: }
  1873                           ;interrupts.c: 84: }
  1874                           ;interrupts.c: 85: }
  1875                           ;interrupts.c: 86: }
  1876                           ;interrupts.c: 88: if (MOT_1) {
  1877  0004A4  5023               	movf	_MOT_1,w,c
  1878  0004A6  B4D8               	btfsc	status,2,c
  1879  0004A8  D032               	goto	i2l102
  1880                           
  1881                           ;interrupts.c: 89: if (MOT_1_count == count_1) {
  1882  0004AA  504E               	movf	_count_1,w,c
  1883  0004AC  1811               	xorwf	_MOT_1_count,w,c
  1884  0004AE  E12F               	bnz	i2l98
  1885  0004B0  504F               	movf	_count_1+1,w,c
  1886  0004B2  1812               	xorwf	_MOT_1_count+1,w,c
  1887  0004B4  A4D8               	btfss	status,2,c
  1888  0004B6  D02B               	goto	i2l102
  1889                           
  1890                           ;interrupts.c: 90: LATAbits.LA3 = !PORTAbits.RA3;
  1891  0004B8  B680               	btfsc	3968,3,c	;volatile
  1892  0004BA  D003               	goto	i2u91_40
  1893  0004BC  6A33               	clrf	??_high_isr& (0+255),c
  1894  0004BE  2A33               	incf	??_high_isr& (0+255),f,c
  1895  0004C0  D001               	goto	i2u92_48
  1896  0004C2                     i2u91_40:
  1897  0004C2  6A33               	clrf	??_high_isr& (0+255),c
  1898  0004C4                     i2u92_48:
  1899  0004C4  4633               	rlncf	??_high_isr,f,c
  1900  0004C6  4633               	rlncf	??_high_isr,f,c
  1901  0004C8  4633               	rlncf	??_high_isr,f,c
  1902  0004CA  5089               	movf	3977,w,c	;volatile
  1903  0004CC  1833               	xorwf	??_high_isr,w,c
  1904  0004CE  0BF7               	andlw	-9
  1905  0004D0  1833               	xorwf	??_high_isr,w,c
  1906  0004D2  6E89               	movwf	3977,c	;volatile
  1907                           
  1908                           ;interrupts.c: 91: MOT_1_count = 0;
  1909  0004D4  0E00               	movlw	0
  1910  0004D6  6E12               	movwf	_MOT_1_count+1,c
  1911  0004D8  0E00               	movlw	0
  1912  0004DA  6E11               	movwf	_MOT_1_count,c
  1913                           
  1914                           ;interrupts.c: 93: if (zero_flag) {
  1915  0004DC  5025               	movf	_zero_flag,w,c
  1916  0004DE  B4D8               	btfsc	status,2,c
  1917  0004E0  D016               	goto	i2l102
  1918                           
  1919                           ;interrupts.c: 94: mot_1_steps++;
  1920  0004E2  4A09               	infsnz	_mot_1_steps,f,c
  1921  0004E4  2A0A               	incf	_mot_1_steps+1,f,c
  1922                           
  1923                           ;interrupts.c: 95: if (mot_1_steps == 200) {
  1924  0004E6  0EC8               	movlw	200
  1925  0004E8  1809               	xorwf	_mot_1_steps,w,c
  1926  0004EA  100A               	iorwf	_mot_1_steps+1,w,c
  1927  0004EC  A4D8               	btfss	status,2,c
  1928  0004EE  D006               	goto	i2l101
  1929                           
  1930                           ;interrupts.c: 97: mot_1_steps = 0;
  1931  0004F0  0E00               	movlw	0
  1932  0004F2  6E0A               	movwf	_mot_1_steps+1,c
  1933  0004F4  0E00               	movlw	0
  1934  0004F6  6E09               	movwf	_mot_1_steps,c
  1935                           
  1936                           ;interrupts.c: 98: turns_count++;
  1937  0004F8  4A03               	infsnz	_turns_count,f,c
  1938  0004FA  2A04               	incf	_turns_count+1,f,c
  1939  0004FC                     i2l101:
  1940                           
  1941                           ;interrupts.c: 99: }
  1942                           ;interrupts.c: 100: if (turns_count == (turns)) {
  1943  0004FC  5050               	movf	_turns,w,c
  1944  0004FE  1803               	xorwf	_turns_count,w,c
  1945  000500  E106               	bnz	i2l98
  1946  000502  5051               	movf	_turns+1,w,c
  1947  000504  1804               	xorwf	_turns_count+1,w,c
  1948  000506  A4D8               	btfss	status,2,c
  1949  000508  D002               	goto	i2l102
  1950                           
  1951                           ;interrupts.c: 101: finish = 1;
  1952  00050A  0E01               	movlw	1
  1953  00050C  6E22               	movwf	_finish,c
  1954  00050E                     i2l102:
  1955  00050E                     i2l98:
  1956                           
  1957                           ;interrupts.c: 102: }
  1958                           ;interrupts.c: 103: }
  1959                           ;interrupts.c: 106: }
  1960                           ;interrupts.c: 107: }
  1961                           ;interrupts.c: 108: if (MOT_2) {
  1962  00050E  5021               	movf	_MOT_2,w,c
  1963  000510  B4D8               	btfsc	status,2,c
  1964  000512  D018               	goto	i2l104
  1965                           
  1966                           ;interrupts.c: 109: if (MOT_2_count == count_2) {
  1967  000514  504C               	movf	_count_2,w,c
  1968  000516  180F               	xorwf	_MOT_2_count,w,c
  1969  000518  E115               	bnz	i2l1446
  1970  00051A  504D               	movf	_count_2+1,w,c
  1971  00051C  1810               	xorwf	_MOT_2_count+1,w,c
  1972  00051E  A4D8               	btfss	status,2,c
  1973  000520  D011               	goto	i2l104
  1974                           
  1975                           ;interrupts.c: 110: LATAbits.LA5 = !PORTAbits.RA5;
  1976  000522  BA80               	btfsc	3968,5,c	;volatile
  1977  000524  D003               	goto	i2u98_40
  1978  000526  6A33               	clrf	??_high_isr& (0+255),c
  1979  000528  2A33               	incf	??_high_isr& (0+255),f,c
  1980  00052A  D001               	goto	i2u99_48
  1981  00052C                     i2u98_40:
  1982  00052C  6A33               	clrf	??_high_isr& (0+255),c
  1983  00052E                     i2u99_48:
  1984  00052E  3A33               	swapf	??_high_isr,f,c
  1985  000530  4633               	rlncf	??_high_isr,f,c
  1986  000532  5089               	movf	3977,w,c	;volatile
  1987  000534  1833               	xorwf	??_high_isr,w,c
  1988  000536  0BDF               	andlw	-33
  1989  000538  1833               	xorwf	??_high_isr,w,c
  1990  00053A  6E89               	movwf	3977,c	;volatile
  1991                           
  1992                           ;interrupts.c: 111: MOT_2_count = 0;
  1993  00053C  0E00               	movlw	0
  1994  00053E  6E10               	movwf	_MOT_2_count+1,c
  1995  000540  0E00               	movlw	0
  1996  000542  6E0F               	movwf	_MOT_2_count,c
  1997  000544                     i2l104:
  1998  000544                     i2l1446:
  1999                           
  2000                           ;interrupts.c: 112: }
  2001                           ;interrupts.c: 113: }
  2002                           ;interrupts.c: 115: if (MOT_4) {
  2003  000544  5020               	movf	_MOT_4,w,c
  2004  000546  B4D8               	btfsc	status,2,c
  2005  000548  D070               	goto	i2l122
  2006                           
  2007                           ;interrupts.c: 116: if (MOT_4_count == count_4) {
  2008  00054A  5048               	movf	_count_4,w,c
  2009  00054C  180B               	xorwf	_MOT_4_count,w,c
  2010  00054E  E16D               	bnz	i2l107
  2011  000550  5049               	movf	_count_4+1,w,c
  2012  000552  180C               	xorwf	_MOT_4_count+1,w,c
  2013  000554  A4D8               	btfss	status,2,c
  2014  000556  D069               	goto	i2l122
  2015                           
  2016                           ;interrupts.c: 117: LATBbits.LB6 = !PORTBbits.RB6;
  2017  000558  BC81               	btfsc	3969,6,c	;volatile
  2018  00055A  D003               	goto	i2u102_40
  2019  00055C  6A33               	clrf	??_high_isr& (0+255),c
  2020  00055E  2A33               	incf	??_high_isr& (0+255),f,c
  2021  000560  D001               	goto	i2u103_48
  2022  000562                     i2u102_40:
  2023  000562  6A33               	clrf	??_high_isr& (0+255),c
  2024  000564                     i2u103_48:
  2025  000564  3A33               	swapf	??_high_isr,f,c
  2026  000566  4633               	rlncf	??_high_isr,f,c
  2027  000568  4633               	rlncf	??_high_isr,f,c
  2028  00056A  508A               	movf	3978,w,c	;volatile
  2029  00056C  1833               	xorwf	??_high_isr,w,c
  2030  00056E  0BBF               	andlw	-65
  2031  000570  1833               	xorwf	??_high_isr,w,c
  2032  000572  6E8A               	movwf	3978,c	;volatile
  2033                           
  2034                           ;interrupts.c: 118: MOT_4_count = 0;
  2035  000574  0E00               	movlw	0
  2036  000576  6E0C               	movwf	_MOT_4_count+1,c
  2037  000578  0E00               	movlw	0
  2038  00057A  6E0B               	movwf	_MOT_4_count,c
  2039                           
  2040                           ;interrupts.c: 119: mot_4_steps++;
  2041  00057C  4A05               	infsnz	_mot_4_steps,f,c
  2042  00057E  2A06               	incf	_mot_4_steps+1,f,c
  2043                           
  2044                           ;interrupts.c: 121: }
  2045                           ;interrupts.c: 122: }
  2046                           ;interrupts.c: 124: } else if (PIR1bits.RCIF) {
  2047  000580  D054               	goto	i2l122
  2048  000582                     i2l93:
  2049  000582  AA9E               	btfss	3998,5,c	;volatile
  2050  000584  D01A               	goto	i2l108
  2051                           
  2052                           ;interrupts.c: 126: PIR1bits.RCIF = 0;
  2053  000586  9A9E               	bcf	3998,5,c	;volatile
  2054                           
  2055                           ;interrupts.c: 127: palabra[n] = RCREG;
  2056  000588  0E60               	movlw	low _palabra
  2057  00058A  2417               	addwf	_n,w,c
  2058  00058C  6ED9               	movwf	fsr2l,c
  2059  00058E  0E00               	movlw	high _palabra
  2060  000590  2018               	addwfc	_n+1,w,c
  2061  000592  6EDA               	movwf	fsr2h,c
  2062  000594  CFAE FFDF          	movff	4014,indf2	;volatile
  2063                           
  2064                           ;interrupts.c: 128: n++;
  2065  000598  4A17               	infsnz	_n,f,c
  2066  00059A  2A18               	incf	_n+1,f,c
  2067                           
  2068                           ;interrupts.c: 129: if (RCREG == '\n') {
  2069  00059C  0E0A               	movlw	10
  2070  00059E  18AE               	xorwf	4014,w,c	;volatile
  2071  0005A0  A4D8               	btfss	status,2,c
  2072  0005A2  D043               	goto	i2l122
  2073                           
  2074                           ;interrupts.c: 130: TXREG = palabra[0];
  2075  0005A4  C060  FFAD         	movff	_palabra,4013	;volatile
  2076  0005A8  A89E               	btfss	3998,4,c	;volatile
  2077  0005AA  D7FE               	goto	i2l111
  2078                           
  2079                           ;interrupts.c: 132: recibi = 1;
  2080  0005AC  0E01               	movlw	1
  2081  0005AE  6E1E               	movwf	_recibi,c
  2082                           
  2083                           ;interrupts.c: 133: n = 0;
  2084  0005B0  0E00               	movlw	0
  2085  0005B2  6E18               	movwf	_n+1,c
  2086  0005B4  0E00               	movlw	0
  2087  0005B6  6E17               	movwf	_n,c
  2088                           
  2089                           ;interrupts.c: 134: }
  2090                           ;interrupts.c: 135: } else if (PIR1bits.ADIF) {
  2091  0005B8  D038               	goto	i2l122
  2092  0005BA                     i2l108:
  2093  0005BA  AC9E               	btfss	3998,6,c	;volatile
  2094  0005BC  D006               	goto	i2l114
  2095                           
  2096                           ;interrupts.c: 137: PIR1bits.ADIF = 0;
  2097  0005BE  9C9E               	bcf	3998,6,c	;volatile
  2098                           
  2099                           ;interrupts.c: 143: ADC_value_press = ADRES;
  2100  0005C0  CFC3 F013          	movff	4035,_ADC_value_press	;volatile
  2101  0005C4  CFC4 F014          	movff	4036,_ADC_value_press+1	;volatile
  2102                           
  2103                           ;interrupts.c: 145: } else if (INTCON3bits.INT1IF) {
  2104  0005C8  D030               	goto	i2l122
  2105  0005CA                     i2l114:
  2106  0005CA  A0F0               	btfss	intcon3,0,c	;volatile
  2107  0005CC  D015               	goto	i2l116
  2108                           
  2109                           ;interrupts.c: 147: INTCON3bits.INT1IF = 0;
  2110  0005CE  90F0               	bcf	intcon3,0,c	;volatile
  2111                           
  2112                           ;interrupts.c: 149: if (busy_flag) {
  2113  0005D0  501F               	movf	_busy_flag,w,c
  2114  0005D2  B4D8               	btfsc	status,2,c
  2115  0005D4  D00C               	goto	i2l117
  2116                           
  2117                           ;interrupts.c: 151: MOT_1 = 0;
  2118  0005D6  0E00               	movlw	0
  2119  0005D8  6E23               	movwf	_MOT_1,c
  2120                           
  2121                           ;interrupts.c: 152: MOT_2 = 0;
  2122  0005DA  0E00               	movlw	0
  2123  0005DC  6E21               	movwf	_MOT_2,c
  2124                           
  2125                           ;interrupts.c: 153: MOT_3 = 0;
  2126  0005DE  0E00               	movlw	0
  2127  0005E0  6E26               	movwf	_MOT_3,c
  2128                           
  2129                           ;interrupts.c: 154: MOT_4 = 0;
  2130  0005E2  0E00               	movlw	0
  2131  0005E4  6E20               	movwf	_MOT_4,c
  2132                           
  2133                           ;interrupts.c: 155: trans_Char('1');
  2134  0005E6  0E31               	movlw	49
  2135  0005E8  EC0B  F004         	call	i2_trans_Char
  2136                           
  2137                           ;interrupts.c: 156: } else {
  2138  0005EC  D01E               	goto	i2l122
  2139  0005EE                     i2l117:
  2140                           
  2141                           ;interrupts.c: 158: DIR_3 = !DIR_3;
  2142  0005EE  5024               	movf	_DIR_3,w,c
  2143  0005F0  A4D8               	btfss	status,2,c
  2144  0005F2  D019               	goto	i2u114_40
  2145  0005F4  0E01               	movlw	1
  2146  0005F6  D018               	goto	i2u115_40
  2147  0005F8                     i2l116:
  2148  0005F8  A2F0               	btfss	intcon3,1,c	;volatile
  2149  0005FA  D017               	goto	i2l122
  2150                           
  2151                           ;interrupts.c: 163: INTCON3bits.INT2IF = 0;
  2152  0005FC  92F0               	bcf	intcon3,1,c	;volatile
  2153                           
  2154                           ;interrupts.c: 165: if (busy_flag) {
  2155  0005FE  501F               	movf	_busy_flag,w,c
  2156  000600  B4D8               	btfsc	status,2,c
  2157  000602  D00C               	goto	i2l121
  2158                           
  2159                           ;interrupts.c: 167: MOT_1 = 0;
  2160  000604  0E00               	movlw	0
  2161  000606  6E23               	movwf	_MOT_1,c
  2162                           
  2163                           ;interrupts.c: 168: MOT_2 = 0;
  2164  000608  0E00               	movlw	0
  2165  00060A  6E21               	movwf	_MOT_2,c
  2166                           
  2167                           ;interrupts.c: 169: MOT_3 = 0;
  2168  00060C  0E00               	movlw	0
  2169  00060E  6E26               	movwf	_MOT_3,c
  2170                           
  2171                           ;interrupts.c: 170: MOT_4 = 0;
  2172  000610  0E00               	movlw	0
  2173  000612  6E20               	movwf	_MOT_4,c
  2174                           
  2175                           ;interrupts.c: 171: trans_Char('1');
  2176  000614  0E31               	movlw	49
  2177  000616  EC0B  F004         	call	i2_trans_Char
  2178                           
  2179                           ;interrupts.c: 172: } else {
  2180  00061A  D007               	goto	i2l122
  2181  00061C                     i2l121:
  2182                           
  2183                           ;interrupts.c: 174: DIR_3 = !DIR_3;
  2184  00061C  5024               	movf	_DIR_3,w,c
  2185  00061E  A4D8               	btfss	status,2,c
  2186  000620  D002               	goto	i2u114_40
  2187  000622  0E01               	movlw	1
  2188  000624  D001               	goto	i2u115_40
  2189  000626                     i2u114_40:
  2190  000626  0E00               	movlw	0
  2191  000628                     i2u115_40:
  2192  000628  6E24               	movwf	_DIR_3,c
  2193  00062A                     i2l122:
  2194  00062A                     i2l107:
  2195  00062A  C045  F057         	movff	??_high_isr+18,btemp+3
  2196  00062E  C044  F056         	movff	??_high_isr+17,btemp+2
  2197  000632  C043  F055         	movff	??_high_isr+16,btemp+1
  2198  000636  C042  F054         	movff	??_high_isr+15,btemp
  2199  00063A  C041  FFF5         	movff	??_high_isr+14,tablat
  2200  00063E  C040  FFF8         	movff	??_high_isr+13,tblptru
  2201  000642  C03F  FFF7         	movff	??_high_isr+12,tblptrh
  2202  000646  C03E  FFF6         	movff	??_high_isr+11,tblptrl
  2203  00064A  C03D  FFF4         	movff	??_high_isr+10,prodh
  2204  00064E  C03C  FFF3         	movff	??_high_isr+9,prodl
  2205  000652  C03B  FFDA         	movff	??_high_isr+8,fsr2h
  2206  000656  C03A  FFD9         	movff	??_high_isr+7,fsr2l
  2207  00065A  C039  FFE2         	movff	??_high_isr+6,fsr1h
  2208  00065E  C038  FFE1         	movff	??_high_isr+5,fsr1l
  2209  000662  C037  FFEA         	movff	??_high_isr+4,fsr0h
  2210  000666  C036  FFE9         	movff	??_high_isr+3,fsr0l
  2211  00066A  C035  FFFB         	movff	??_high_isr+2,pclatu
  2212  00066E  C034  FFFA         	movff	??_high_isr+1,pclath
  2213  000672  9254               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  2214  000674  0011               	retfie		f
  2215  000676                     __end_of_high_isr:
  2216                           	opt stack 0
  2217                           pclatu	equ	0xFFB
  2218                           pclath	equ	0xFFA
  2219                           tblptru	equ	0xFF8
  2220                           tblptrh	equ	0xFF7
  2221                           tblptrl	equ	0xFF6
  2222                           tablat	equ	0xFF5
  2223                           prodh	equ	0xFF4
  2224                           prodl	equ	0xFF3
  2225                           intcon	equ	0xFF2
  2226                           intcon2	equ	0xFF1
  2227                           intcon3	equ	0xFF0
  2228                           postinc0	equ	0xFEE
  2229                           fsr0h	equ	0xFEA
  2230                           fsr0l	equ	0xFE9
  2231                           wreg	equ	0xFE8
  2232                           postdec1	equ	0xFE5
  2233                           fsr1h	equ	0xFE2
  2234                           fsr1l	equ	0xFE1
  2235                           indf2	equ	0xFDF
  2236                           fsr2h	equ	0xFDA
  2237                           fsr2l	equ	0xFD9
  2238                           status	equ	0xFD8
  2239                           
  2240 ;; *************** function i2_trans_Char *****************
  2241 ;; Defined at:
  2242 ;;		line 208 in file "main.c"
  2243 ;; Parameters:    Size  Location     Type
  2244 ;;  out             1    wreg     unsigned char 
  2245 ;; Auto vars:     Size  Location     Type
  2246 ;;  out             1    0[COMRAM] unsigned char 
  2247 ;; Return value:  Size  Location     Type
  2248 ;;                  1    wreg      void 
  2249 ;; Registers used:
  2250 ;;		wreg
  2251 ;; Tracked objects:
  2252 ;;		On entry : 0/0
  2253 ;;		On exit  : 0/0
  2254 ;;		Unchanged: 0/0
  2255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2256 ;;      Params:         0       0       0       0       0       0       0       0       0
  2257 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2258 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2259 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2260 ;;Total ram usage:        1 bytes
  2261 ;; Hardware stack levels used:    1
  2262 ;; This function calls:
  2263 ;;		Nothing
  2264 ;; This function is called by:
  2265 ;;		_high_isr
  2266 ;; This function uses a non-reentrant model
  2267 ;;
  2268                           
  2269                           	psect	text6
  2270  000816                     __ptext6:
  2271                           	opt stack 0
  2272  000816                     i2_trans_Char:
  2273                           	opt stack 28
  2274                           
  2275                           ;incstack = 0
  2276                           ;i2trans_Char@out stored from wreg
  2277  000816  6E27               	movwf	i2trans_Char@out,c
  2278  000818                     
  2279                           ;main.c: 209: while (TXIF == 0);
  2280  000818  A89E               	btfss	3998,4,c	;volatile
  2281  00081A  D7FE               	goto	i2l1388
  2282                           
  2283                           ;main.c: 210: TXREG = out;
  2284  00081C  C027  FFAD         	movff	i2trans_Char@out,4013	;volatile
  2285  000820  0012               	return		;funcret
  2286  000822                     __end_ofi2_trans_Char:
  2287                           	opt stack 0
  2288                           pclatu	equ	0xFFB
  2289                           pclath	equ	0xFFA
  2290                           tblptru	equ	0xFF8
  2291                           tblptrh	equ	0xFF7
  2292                           tblptrl	equ	0xFF6
  2293                           tablat	equ	0xFF5
  2294                           prodh	equ	0xFF4
  2295                           prodl	equ	0xFF3
  2296                           intcon	equ	0xFF2
  2297                           intcon2	equ	0xFF1
  2298                           intcon3	equ	0xFF0
  2299                           postinc0	equ	0xFEE
  2300                           fsr0h	equ	0xFEA
  2301                           fsr0l	equ	0xFE9
  2302                           wreg	equ	0xFE8
  2303                           postdec1	equ	0xFE5
  2304                           fsr1h	equ	0xFE2
  2305                           fsr1l	equ	0xFE1
  2306                           indf2	equ	0xFDF
  2307                           fsr2h	equ	0xFDA
  2308                           fsr2l	equ	0xFD9
  2309                           status	equ	0xFD8
  2310                           
  2311 ;; *************** function _mot_3_step_count *****************
  2312 ;; Defined at:
  2313 ;;		line 220 in file "main.c"
  2314 ;; Parameters:    Size  Location     Type
  2315 ;;  l               2    6[COMRAM] unsigned int 
  2316 ;;  ms              2    8[COMRAM] unsigned int 
  2317 ;; Auto vars:     Size  Location     Type
  2318 ;;		None
  2319 ;; Return value:  Size  Location     Type
  2320 ;;                  2    6[COMRAM] unsigned int 
  2321 ;; Registers used:
  2322 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2323 ;; Tracked objects:
  2324 ;;		On entry : 0/0
  2325 ;;		On exit  : 0/0
  2326 ;;		Unchanged: 0/0
  2327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2328 ;;      Params:         4       0       0       0       0       0       0       0       0
  2329 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2330 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2331 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2332 ;;Total ram usage:        6 bytes
  2333 ;; Hardware stack levels used:    1
  2334 ;; Hardware stack levels required when called:    1
  2335 ;; This function calls:
  2336 ;;		i2___wmul
  2337 ;; This function is called by:
  2338 ;;		_high_isr
  2339 ;; This function uses a non-reentrant model
  2340 ;;
  2341                           
  2342                           	psect	text7
  2343  0007CA                     __ptext7:
  2344                           	opt stack 0
  2345  0007CA                     _mot_3_step_count:
  2346                           	opt stack 27
  2347                           
  2348                           ;main.c: 222: return (ms*l)/2;
  2349                           
  2350                           ;incstack = 0
  2351  0007CA  C02F  F027         	movff	mot_3_step_count@ms,i2___wmul@multiplier
  2352  0007CE  C030  F028         	movff	mot_3_step_count@ms+1,i2___wmul@multiplier+1
  2353  0007D2  C02D  F029         	movff	mot_3_step_count@l,i2___wmul@multiplicand
  2354  0007D6  C02E  F02A         	movff	mot_3_step_count@l+1,i2___wmul@multiplicand+1
  2355  0007DA  ECD2  F003         	call	i2___wmul	;wreg free
  2356  0007DE  90D8               	bcf	status,0,c
  2357  0007E0  3028               	rrcf	?i2___wmul+1,w,c
  2358  0007E2  6E31               	movwf	??_mot_3_step_count& (0+255),c
  2359  0007E4  3027               	rrcf	?i2___wmul,w,c
  2360  0007E6  6E2D               	movwf	?_mot_3_step_count,c
  2361  0007E8  C031  F02E         	movff	??_mot_3_step_count,?_mot_3_step_count+1
  2362  0007EC  0012               	return	
  2363  0007EE                     __end_of_mot_3_step_count:
  2364                           	opt stack 0
  2365                           pclatu	equ	0xFFB
  2366                           pclath	equ	0xFFA
  2367                           tblptru	equ	0xFF8
  2368                           tblptrh	equ	0xFF7
  2369                           tblptrl	equ	0xFF6
  2370                           tablat	equ	0xFF5
  2371                           prodh	equ	0xFF4
  2372                           prodl	equ	0xFF3
  2373                           intcon	equ	0xFF2
  2374                           intcon2	equ	0xFF1
  2375                           intcon3	equ	0xFF0
  2376                           postinc0	equ	0xFEE
  2377                           fsr0h	equ	0xFEA
  2378                           fsr0l	equ	0xFE9
  2379                           wreg	equ	0xFE8
  2380                           postdec1	equ	0xFE5
  2381                           fsr1h	equ	0xFE2
  2382                           fsr1l	equ	0xFE1
  2383                           indf2	equ	0xFDF
  2384                           fsr2h	equ	0xFDA
  2385                           fsr2l	equ	0xFD9
  2386                           status	equ	0xFD8
  2387                           
  2388 ;; *************** function i2___wmul *****************
  2389 ;; Defined at:
  2390 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
  2391 ;; Parameters:    Size  Location     Type
  2392 ;;  multiplier      2    0[COMRAM] unsigned int 
  2393 ;;  multiplicand    2    2[COMRAM] unsigned int 
  2394 ;; Auto vars:     Size  Location     Type
  2395 ;;  __wmul          2    4[COMRAM] unsigned int 
  2396 ;; Return value:  Size  Location     Type
  2397 ;;                  2    0[COMRAM] unsigned int 
  2398 ;; Registers used:
  2399 ;;		wreg, status,2, status,0, prodl, prodh
  2400 ;; Tracked objects:
  2401 ;;		On entry : 0/0
  2402 ;;		On exit  : 0/0
  2403 ;;		Unchanged: 0/0
  2404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2405 ;;      Params:         4       0       0       0       0       0       0       0       0
  2406 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2407 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2408 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2409 ;;Total ram usage:        6 bytes
  2410 ;; Hardware stack levels used:    1
  2411 ;; This function calls:
  2412 ;;		Nothing
  2413 ;; This function is called by:
  2414 ;;		_mot_3_step_count
  2415 ;; This function uses a non-reentrant model
  2416 ;;
  2417                           
  2418                           	psect	text8
  2419  0007A4                     __ptext8:
  2420                           	opt stack 0
  2421  0007A4                     i2___wmul:
  2422                           	opt stack 27
  2423                           
  2424                           ;incstack = 0
  2425  0007A4  5027               	movf	i2___wmul@multiplier,w,c
  2426  0007A6  0229               	mulwf	i2___wmul@multiplicand,c
  2427  0007A8  CFF3 F02B          	movff	prodl,i2___wmul@product
  2428  0007AC  CFF4 F02C          	movff	prodh,i2___wmul@product+1
  2429  0007B0  5027               	movf	i2___wmul@multiplier,w,c
  2430  0007B2  022A               	mulwf	i2___wmul@multiplicand+1,c
  2431  0007B4  50F3               	movf	prodl,w,c
  2432  0007B6  262C               	addwf	i2___wmul@product+1,f,c
  2433  0007B8  5028               	movf	i2___wmul@multiplier+1,w,c
  2434  0007BA  0229               	mulwf	i2___wmul@multiplicand,c
  2435  0007BC  50F3               	movf	prodl,w,c
  2436  0007BE  262C               	addwf	i2___wmul@product+1,f,c
  2437  0007C0  C02B  F027         	movff	i2___wmul@product,?i2___wmul
  2438  0007C4  C02C  F028         	movff	i2___wmul@product+1,?i2___wmul+1
  2439  0007C8  0012               	return	
  2440  0007CA                     __end_ofi2___wmul:
  2441                           	opt stack 0
  2442  0000                     pclatu	equ	0xFFB
  2443                           pclath	equ	0xFFA
  2444                           tblptru	equ	0xFF8
  2445                           tblptrh	equ	0xFF7
  2446                           tblptrl	equ	0xFF6
  2447                           tablat	equ	0xFF5
  2448                           prodh	equ	0xFF4
  2449                           prodl	equ	0xFF3
  2450                           intcon	equ	0xFF2
  2451                           intcon2	equ	0xFF1
  2452                           intcon3	equ	0xFF0
  2453                           postinc0	equ	0xFEE
  2454                           fsr0h	equ	0xFEA
  2455                           fsr0l	equ	0xFE9
  2456                           wreg	equ	0xFE8
  2457                           postdec1	equ	0xFE5
  2458                           fsr1h	equ	0xFE2
  2459                           fsr1l	equ	0xFE1
  2460                           indf2	equ	0xFDF
  2461                           fsr2h	equ	0xFDA
  2462                           fsr2l	equ	0xFD9
  2463                           status	equ	0xFD8
  2464                           pclatu	equ	0xFFB
  2465                           pclath	equ	0xFFA
  2466                           tblptru	equ	0xFF8
  2467                           tblptrh	equ	0xFF7
  2468                           tblptrl	equ	0xFF6
  2469                           tablat	equ	0xFF5
  2470                           prodh	equ	0xFF4
  2471                           prodl	equ	0xFF3
  2472                           intcon	equ	0xFF2
  2473                           intcon2	equ	0xFF1
  2474                           intcon3	equ	0xFF0
  2475                           postinc0	equ	0xFEE
  2476                           fsr0h	equ	0xFEA
  2477                           fsr0l	equ	0xFE9
  2478                           wreg	equ	0xFE8
  2479                           postdec1	equ	0xFE5
  2480                           fsr1h	equ	0xFE2
  2481                           fsr1l	equ	0xFE1
  2482                           indf2	equ	0xFDF
  2483                           fsr2h	equ	0xFDA
  2484                           fsr2l	equ	0xFD9
  2485                           status	equ	0xFD8
  2486                           
  2487                           	psect	rparam
  2488  0000                     pclatu	equ	0xFFB
  2489                           pclath	equ	0xFFA
  2490                           tblptru	equ	0xFF8
  2491                           tblptrh	equ	0xFF7
  2492                           tblptrl	equ	0xFF6
  2493                           tablat	equ	0xFF5
  2494                           prodh	equ	0xFF4
  2495                           prodl	equ	0xFF3
  2496                           intcon	equ	0xFF2
  2497                           intcon2	equ	0xFF1
  2498                           intcon3	equ	0xFF0
  2499                           postinc0	equ	0xFEE
  2500                           fsr0h	equ	0xFEA
  2501                           fsr0l	equ	0xFE9
  2502                           wreg	equ	0xFE8
  2503                           postdec1	equ	0xFE5
  2504                           fsr1h	equ	0xFE2
  2505                           fsr1l	equ	0xFE1
  2506                           indf2	equ	0xFDF
  2507                           fsr2h	equ	0xFDA
  2508                           fsr2l	equ	0xFD9
  2509                           status	equ	0xFD8
  2510                           
  2511                           	psect	temp
  2512  000054                     btemp:
  2513                           	opt stack 0
  2514  000054                     	ds	1
  2515  0000                     int$flags	set	btemp
  2516  0000                     wtemp6	set	btemp+1
  2517                           pclatu	equ	0xFFB
  2518                           pclath	equ	0xFFA
  2519                           tblptru	equ	0xFF8
  2520                           tblptrh	equ	0xFF7
  2521                           tblptrl	equ	0xFF6
  2522                           tablat	equ	0xFF5
  2523                           prodh	equ	0xFF4
  2524                           prodl	equ	0xFF3
  2525                           intcon	equ	0xFF2
  2526                           intcon2	equ	0xFF1
  2527                           intcon3	equ	0xFF0
  2528                           postinc0	equ	0xFEE
  2529                           fsr0h	equ	0xFEA
  2530                           fsr0l	equ	0xFE9
  2531                           wreg	equ	0xFE8
  2532                           postdec1	equ	0xFE5
  2533                           fsr1h	equ	0xFE2
  2534                           fsr1l	equ	0xFE1
  2535                           indf2	equ	0xFDF
  2536                           fsr2h	equ	0xFDA
  2537                           fsr2l	equ	0xFD9
  2538                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        16
    BSS         73
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     31      83
    BANK0           160      8      45
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    _high_isr->_mot_3_step_count
    _mot_3_step_count->i2___wmul

Critical Paths under _main in BANK0

    _main->___wmul

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    2539
                                              6 BANK0      2     2      0
                _ConfigureOscillator
                            _InitApp
                             ___wmul
                         _trans_Char
 ---------------------------------------------------------------------------------
 (1) _trans_Char                                           1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4    2508
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigureOscillator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _high_isr                                            19    19      0     427
                                             12 COMRAM    19    19      0
                   _mot_3_step_count
                       i2_trans_Char
 ---------------------------------------------------------------------------------
 (3) i2_trans_Char                                         1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _mot_3_step_count                                     6     2      4     405
                                              6 COMRAM     6     2      4
                           i2___wmul
 ---------------------------------------------------------------------------------
 (4) i2___wmul                                             6     2      4     209
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfigureOscillator
   _InitApp
   ___wmul
   _trans_Char

 _high_isr (ROOT)
   _mot_3_step_count
     i2___wmul
   i2_trans_Char

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      8      2D       5       28.1%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     1F      53       1       88.3%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      80      20        0.0%
DATA                 0      0      80       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Fri Aug 16 18:36:28 2019

                           _n 0017           ___wmul@multiplicand 0085                   __CFG_BORV$3 000000  
                __CFG_CP0$OFF 000000                  __CFG_CP1$OFF 000000                  __CFG_CP2$OFF 000000  
                __CFG_CP3$OFF 000000                           l200 001A                           l201 036A  
                         l202 00B6                           l211 02D0                           l204 0288  
                         l221 033A                           l206 02A0                           l223 0352  
                         l215 031A                           l216 0302                           l208 02E2  
                         l209 02BE                           l227 0382                           l228 039A  
                         l229 03AC                  __CFG_CPB$OFF 000000                           _PR2 000FCB  
                __CFG_CPD$OFF 000000                           _RX9 007D5E                           _TX9 007D66  
                __CFG_BOR$OFF 000000                           wreg 000FE8                  __CFG_LVP$OFF 000000  
                __CFG_WDT$OFF 000000                          l1584 0800                          _BRGH 007D62  
                        _CREN 007D5C                          _LATA 000F89                          _LATB 000F8A  
                        _LATC 000F8B                          u1620 005E                          u1605 0044  
                        u1606 0046                          u1615 004E                          u1800 0314  
                        u1616 0050                          u1810 0316                          u1900 0364  
                        u1910 0366                          u1638 0062                          u1575 0026  
                        u1840 0334                          u1680 029A                          u1576 0028  
                        u1585 0030                          u1850 0336                          u1770 02FC  
                        u1690 029C                          u1586 0032                          u1595 003A  
                        u1780 02FE                          u1596 003C                          u1870 034C  
                        u1880 034E                          u1977 0376                          _RCIE 007CED  
                        i2l93 0582                          i2l94 04A4                          i2l97 04A4  
                        i2l98 050E                          _TMR0 000FD6                          _SPEN 007D5F  
                        _TXIE 007CEC                          _TXIF 007CF4                          _TXEN 007D65  
                        _SYNC 007D64                          _main 0012                          _send 0074  
                        fsr0h 000FEA                          fsr1h 000FE2                          fsr2h 000FDA  
                        fsr0l 000FE9                          indf2 000FDF                          fsr1l 000FE1  
                        fsr2l 000FD9                          btemp 0054                          prodh 000FF4  
                        prodl 000FF3                          start 000E                 __CFG_IESO$OFF 000000  
               __CFG_MCLRE$ON 000000                  ___param_bank 000000          __end_ofi2_trans_Char 0822  
             __end_of_InitApp 0722                 __CFG_PLLDIV$1 000000                __CFG_CCP2MX$ON 000000  
                       ?_main 0027                         _ADRES 000FC3                         _BRG16 007DC3  
                       _DIR_1 001C                         _DIR_2 001B                         _DIR_3 0024  
                       _DIR_4 001A                         i2l101 04FC                         i2l102 050E  
                       i2l111 05A8                         i2l104 0544                         i2l121 061C  
                       i2l122 062A                         i2l114 05CA                         i2l107 062A  
                       i2l116 05F8                         i2l108 05BA                         i2l117 05EE  
                       _RCREG 000FAE                         _MOT_1 0023                         _MOT_2 0021  
                       _MOT_3 0026                         _MOT_4 0020                         _SPBRG 000FAF  
                       _PORTA 000F80                         _PORTB 000F81                         _PORTC 000F82  
               __CFG_USBDIV$1 000000                         _TXREG 000FAD           _ConfigureOscillator 080A  
               __CFG_PWRT$OFF 000000                 __CFG_WRT0$OFF 000000                 __CFG_WRT1$OFF 000000  
               __CFG_WRT2$OFF 000000                 __CFG_WRT3$OFF 000000                __CFG_EBTR0$OFF 000000  
              __CFG_FCMEN$OFF 000000                __CFG_EBTR1$OFF 000000                __CFG_EBTR2$OFF 000000  
              __CFG_EBTR3$OFF 000000                 __CFG_WRTB$OFF 000000                 __CFG_WRTC$OFF 000000  
               __CFG_WRTD$OFF 000000                __CFG_EBTRB$OFF 000000                         _speed 007B  
                       _turns 0050                   _turns_count 0003                         pclath 000FFA  
                       tablat 000FF5              __end_ofi2___wmul 07CA                         status 000FD8  
                       wtemp6 0055          ?_ConfigureOscillator 0027               __initialization 0722  
                __end_of_main 03C6                        ??_main 0089                 __activetblptr 000000  
                      _ADCON1 000FC1                        _ADCON2 000FC0                        _CCPR1L 000FBE  
                      _GODONE 007E11                        i2l1446 0544                        i2l1388 0818  
                   ??_InitApp 0083         ??_ConfigureOscillator 0083                __CFG_XINST$OFF 000000  
            __end_of_high_isr 0676     __size_of_mot_3_step_count 0024                        ___wmul 077C  
                      _enable 0019                        _finish 0022                        _length 0052  
                      _recibi 001E                        clear_0 0760                        clear_1 076C  
                      _motor1 008B                        _motor2 0081                  __pdataCOMRAM 0046  
                      tblptrh 000FF7                        tblptrl 000FF6                        tblptru 000FF8  
                  __accesstop 0060       __end_of__initialization 0772               __CFG_PBADEN$OFF 000000  
       __size_ofi2_trans_Char 000C                 ___rparam_used 000001                __pcstackCOMRAM 0027  
                __pidataBANK0 0822                     ?i2___wmul 0027                  i2_trans_Char 0816  
               trans_Char@out 0083                    __pbssBANK0 0060                       ?___wmul 0083  
                  ??i2___wmul 002B                       i2u91_40 04C2                       i2u83_40 044C  
                     i2u92_48 04C4                       i2u84_48 044E                       i2u87_40 0498  
                     i2u88_40 049A                       i2u98_40 052C                       i2u99_48 052E  
                   ?_high_isr 0027               __CFG_VREGEN$OFF 000000                       _InitApp 0676  
                     __Hparam 0000                       __Lparam 0000              _mot_3_step_count 07CA  
             __size_of___wmul 0028                       _caliber 007F               __CFG_STVREN$OFF 000000  
                     __pcinit 0722                       __ramtop 0800                       __ptext0 0012  
                     __ptext1 07FC                       __ptext2 077C                       __ptext3 0676  
                     __ptext4 080A                       __ptext6 0816                       __ptext7 07CA  
                     __ptext8 07A4                     _T0CONbits 000FD5                       _count_1 004E  
                     _count_2 004C                       _count_3 004A                       _count_4 0048  
                     _palabra 0060                     _T2CONbits 000FCA              _mot_4_step_count 0001  
                  ??_high_isr 0033                __pintcode_body 03C6          end_of_initialization 0772  
                     int_func 03C6           i2___wmul@multiplier 0027                       postdec1 000FE5  
                     postinc0 000FEE                     _PORTAbits 000F80                     _PORTBbits 000F81  
                   _PORTCbits 000F82                     _TRISAbits 000F92                     _TRISBbits 000F93  
                   _TRISCbits 000F94                    _trans_Char 07FC   __end_of_ConfigureOscillator 0816  
                 _CCP1CONbits 000FBD                __end_of___wmul 07A4                 __pidataCOMRAM 07EE  
            i2___wmul@product 002B           start_initialization 0722             __size_ofi2___wmul 0026  
                    ??___wmul 0087                   __pdataBANK0 008B              __CFG_LPT1OSC$OFF 000000  
                 __pbssCOMRAM 0001                 __pcstackBANK0 0083                   ?_trans_Char 0027  
    __end_of_mot_3_step_count 07EE             __size_of_high_isr 066E                      ?_InitApp 0027  
                   __pintcode 0008                     _busy_flag 001F                ___wmul@product 0087  
                    _LATAbits 000F89                      _LATBbits 000F8A                      _LATCbits 000F8B  
             i2trans_Char@out 0027                      _PIE1bits 000F9D                      _RA0state 001D  
                    i2u102_40 0562                      i2u103_48 0564                      i2u114_40 0626  
                    i2u115_40 0628                      _PIR1bits 000F9E                      _RCONbits 000FD0  
            __CFG_WDTPS$32768 000000           __size_of_trans_Char 000E                    _ADCON0bits 000FC2  
           ___wmul@multiplier 0083                      i2___wmul 07A4                      _PWM_duty 0046  
             _ADC_value_press 0013                     _zero_flag 0025                   _INTCON2bits 000FF1  
                 _INTCON3bits 000FF0                     copy_data0 074E              __size_of_InitApp 00AC  
                    __Hrparam 0000                      __Lrparam 0000         i2___wmul@multiplicand 0029  
                    _diameter 007D                 ?i2_trans_Char 0027                      _high_isr 0008  
               __size_of_main 03B4                   _mot_1_steps 0009                   _mot_3_steps 0007  
                 _mot_4_steps 0005  __size_of_ConfigureOscillator 000C                      _overflow 0015  
                    int$flags 0054            mot_3_step_count@ms 002F         __CFG_CPUDIV$OSC1_PLL2 000000  
                  _INTCONbits 000FF2                ??i2_trans_Char 0027                  ??_trans_Char 0083  
                 _MOT_1_count 0011                   _MOT_2_count 000F                   _MOT_3_count 000D  
                 _MOT_4_count 000B             ?_mot_3_step_count 002D                      intlevel2 0000  
          ??_mot_3_step_count 0031                    _OSCCONbits 000FD3             mot_3_step_count@l 002D  
          __end_of_trans_Char 080A           __CFG_FOSC$INTOSC_EC 000000  



Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Fri Aug 16 21:02:42 2019

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F2550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    19                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    23                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    24                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    25  0000                     
    26                           ; Version 1.45
    27                           ; Generated 16/11/2017 GMT
    28                           ; 
    29                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    30                           ; All rights reserved.
    31                           ; 
    32                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    33                           ; 
    34                           ; Redistribution and use in source and binary forms, with or without modification, are
    35                           ; permitted provided that the following conditions are met:
    36                           ; 
    37                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    38                           ;        conditions and the following disclaimer.
    39                           ; 
    40                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    41                           ;        of conditions and the following disclaimer in the documentation and/or other
    42                           ;        materials provided with the distribution.
    43                           ; 
    44                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    45                           ;        software without specific prior written permission.
    46                           ; 
    47                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    48                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    49                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    50                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    51                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    52                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    53                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    54                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    55                           ; 
    56                           ; 
    57                           ; Code-generator required, PIC18F2550 Definitions
    58                           ; 
    59                           ; SFR Addresses
    60  0000                     
    61                           	psect	idataCOMRAM
    62  000796                     __pidataCOMRAM:
    63                           	opt stack 0
    64                           
    65                           ;initializer for _PWM_duty
    66  000796  0032               	dw	50
    67                           
    68                           ;initializer for _motor1
    69  000798  0001               	dw	1
    70                           
    71                           ;initializer for _count_4
    72  00079A  0005               	dw	5
    73                           
    74                           ;initializer for _count_3
    75  00079C  0084               	dw	132
    76                           
    77                           ;initializer for _count_2
    78  00079E  0005               	dw	5
    79                           
    80                           ;initializer for _count_1
    81  0007A0  0002               	dw	2
    82                           
    83                           ;initializer for _length
    84  0007A2  2328               	dw	9000
    85                           
    86                           ;initializer for _turns
    87  0007A4  0014               	dw	20
    88                           
    89                           	psect	nvCOMRAM
    90  000053                     __pnvCOMRAM:
    91                           	opt stack 0
    92  000053                     _MOT_1:
    93                           	opt stack 0
    94  000053                     	ds	1
    95  0000                     _ADRES	set	4035
    96  0000                     _TMR0	set	4054
    97  0000                     _T2CONbits	set	4042
    98  0000                     _CCP1CONbits	set	4029
    99  0000                     _PR2	set	4043
   100  0000                     _SPBRG	set	4015
   101  0000                     _T0CONbits	set	4053
   102  0000                     _INTCON2bits	set	4081
   103  0000                     _RCONbits	set	4048
   104  0000                     _TRISBbits	set	3987
   105  0000                     _TRISCbits	set	3988
   106  0000                     _PIE1bits	set	3997
   107  0000                     _ADCON2	set	4032
   108  0000                     _ADCON0bits	set	4034
   109  0000                     _TRISAbits	set	3986
   110  0000                     _ADCON1	set	4033
   111  0000                     _LATC	set	3979
   112  0000                     _PORTC	set	3970
   113  0000                     _LATB	set	3978
   114  0000                     _PORTB	set	3969
   115  0000                     _LATA	set	3977
   116  0000                     _PORTA	set	3968
   117  0000                     _OSCCONbits	set	4051
   118  0000                     _TXREG	set	4013
   119  0000                     _CCPR1L	set	4030
   120  0000                     _INTCON3bits	set	4080
   121  0000                     _RCREG	set	4014
   122  0000                     _PIR1bits	set	3998
   123  0000                     _PORTBbits	set	3969
   124  0000                     _LATBbits	set	3978
   125  0000                     _PORTCbits	set	3970
   126  0000                     _LATCbits	set	3979
   127  0000                     _PORTAbits	set	3968
   128  0000                     _LATAbits	set	3977
   129  0000                     _INTCONbits	set	4082
   130  0000                     _TXIE	set	31980
   131  0000                     _RCIE	set	31981
   132  0000                     _RX9	set	32094
   133  0000                     _TX9	set	32102
   134  0000                     _CREN	set	32092
   135  0000                     _TXEN	set	32101
   136  0000                     _SYNC	set	32100
   137  0000                     _SPEN	set	32095
   138  0000                     _BRG16	set	32195
   139  0000                     _BRGH	set	32098
   140  0000                     _TXIF	set	31988
   141  0000                     _GODONE	set	32273
   142                           
   143                           ; #config settings
   144  0000                     
   145                           	psect	cinit
   146  0006E2                     __pcinit:
   147                           	opt stack 0
   148  0006E2                     start_initialization:
   149                           	opt stack 0
   150  0006E2                     __initialization:
   151                           	opt stack 0
   152                           
   153                           ; Initialize objects allocated to COMRAM (16 bytes)
   154                           ; load TBLPTR registers with __pidataCOMRAM
   155  0006E2  0E96               	movlw	low __pidataCOMRAM
   156  0006E4  6EF6               	movwf	tblptrl,c
   157  0006E6  0E07               	movlw	high __pidataCOMRAM
   158  0006E8  6EF7               	movwf	tblptrh,c
   159  0006EA  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   160  0006EC  6EF8               	movwf	tblptru,c
   161  0006EE  EE00  F043         	lfsr	0,__pdataCOMRAM
   162  0006F2  EE10 F010          	lfsr	1,16
   163  0006F6                     copy_data0:
   164  0006F6  0009               	tblrd		*+
   165  0006F8  CFF5 FFEE          	movff	tablat,postinc0
   166  0006FC  50E5               	movf	postdec1,w,c
   167  0006FE  50E1               	movf	fsr1l,w,c
   168  000700  E1FA               	bnz	copy_data0
   169                           
   170                           ; Clear objects allocated to BANK0 (37 bytes)
   171  000702  EE00  F060         	lfsr	0,__pbssBANK0
   172  000706  0E25               	movlw	37
   173  000708                     clear_0:
   174  000708  6AEE               	clrf	postinc0,c
   175  00070A  06E8               	decf	wreg,f,c
   176  00070C  E1FD               	bnz	clear_0
   177                           
   178                           ; Clear objects allocated to COMRAM (35 bytes)
   179  00070E  EE00  F001         	lfsr	0,__pbssCOMRAM
   180  000712  0E23               	movlw	35
   181  000714                     clear_1:
   182  000714  6AEE               	clrf	postinc0,c
   183  000716  06E8               	decf	wreg,f,c
   184  000718  E1FD               	bnz	clear_1
   185  00071A                     end_of_initialization:
   186                           	opt stack 0
   187  00071A                     __end_of__initialization:
   188                           	opt stack 0
   189  00071A  9054               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   190  00071C  9254               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   191  00071E  0100               	movlb	0
   192  000720  EF09  F000         	goto	_main	;jump to C main() function
   193                           tblptru	equ	0xFF8
   194                           tblptrh	equ	0xFF7
   195                           tblptrl	equ	0xFF6
   196                           tablat	equ	0xFF5
   197                           postinc0	equ	0xFEE
   198                           wreg	equ	0xFE8
   199                           postdec1	equ	0xFE5
   200                           fsr1l	equ	0xFE1
   201                           
   202                           	psect	bssCOMRAM
   203  000001                     __pbssCOMRAM:
   204                           	opt stack 0
   205  000001                     _turns_count:
   206                           	opt stack 0
   207  000001                     	ds	2
   208  000003                     _mot_4_steps:
   209                           	opt stack 0
   210  000003                     	ds	2
   211  000005                     _mot_3_steps:
   212                           	opt stack 0
   213  000005                     	ds	2
   214  000007                     _mot_1_steps:
   215                           	opt stack 0
   216  000007                     	ds	2
   217  000009                     _MOT_4_count:
   218                           	opt stack 0
   219  000009                     	ds	2
   220  00000B                     _MOT_3_count:
   221                           	opt stack 0
   222  00000B                     	ds	2
   223  00000D                     _MOT_2_count:
   224                           	opt stack 0
   225  00000D                     	ds	2
   226  00000F                     _MOT_1_count:
   227                           	opt stack 0
   228  00000F                     	ds	2
   229  000011                     _ADC_value_press:
   230                           	opt stack 0
   231  000011                     	ds	2
   232  000013                     _overflow:
   233                           	opt stack 0
   234  000013                     	ds	2
   235  000015                     _n:
   236                           	opt stack 0
   237  000015                     	ds	2
   238  000017                     _enable:
   239                           	opt stack 0
   240  000017                     	ds	1
   241  000018                     _DIR_4:
   242                           	opt stack 0
   243  000018                     	ds	1
   244  000019                     _DIR_2:
   245                           	opt stack 0
   246  000019                     	ds	1
   247  00001A                     _DIR_1:
   248                           	opt stack 0
   249  00001A                     	ds	1
   250  00001B                     _RA0state:
   251                           	opt stack 0
   252  00001B                     	ds	1
   253  00001C                     _recibi:
   254                           	opt stack 0
   255  00001C                     	ds	1
   256  00001D                     _busy_flag:
   257                           	opt stack 0
   258  00001D                     	ds	1
   259  00001E                     _MOT_4:
   260                           	opt stack 0
   261  00001E                     	ds	1
   262  00001F                     _DIR_3:
   263                           	opt stack 0
   264  00001F                     	ds	1
   265  000020                     _MOT_3:
   266                           	opt stack 0
   267  000020                     	ds	1
   268  000021                     _MOT_2:
   269                           	opt stack 0
   270  000021                     	ds	1
   271  000022                     _finish:
   272                           	opt stack 0
   273  000022                     	ds	1
   274  000023                     _zero_flag:
   275                           	opt stack 0
   276  000023                     	ds	1
   277                           tblptru	equ	0xFF8
   278                           tblptrh	equ	0xFF7
   279                           tblptrl	equ	0xFF6
   280                           tablat	equ	0xFF5
   281                           postinc0	equ	0xFEE
   282                           wreg	equ	0xFE8
   283                           postdec1	equ	0xFE5
   284                           fsr1l	equ	0xFE1
   285                           
   286                           	psect	dataCOMRAM
   287  000043                     __pdataCOMRAM:
   288                           	opt stack 0
   289  000043                     _PWM_duty:
   290                           	opt stack 0
   291  000043                     	ds	2
   292  000045                     _motor1:
   293                           	opt stack 0
   294  000045                     	ds	2
   295  000047                     _count_4:
   296                           	opt stack 0
   297  000047                     	ds	2
   298  000049                     _count_3:
   299                           	opt stack 0
   300  000049                     	ds	2
   301  00004B                     _count_2:
   302                           	opt stack 0
   303  00004B                     	ds	2
   304  00004D                     _count_1:
   305                           	opt stack 0
   306  00004D                     	ds	2
   307  00004F                     _length:
   308                           	opt stack 0
   309  00004F                     	ds	2
   310  000051                     _turns:
   311                           	opt stack 0
   312  000051                     	ds	2
   313                           tblptru	equ	0xFF8
   314                           tblptrh	equ	0xFF7
   315                           tblptrl	equ	0xFF6
   316                           tablat	equ	0xFF5
   317                           postinc0	equ	0xFEE
   318                           wreg	equ	0xFE8
   319                           postdec1	equ	0xFE5
   320                           fsr1l	equ	0xFE1
   321                           
   322                           	psect	bssBANK0
   323  000060                     __pbssBANK0:
   324                           	opt stack 0
   325  000060                     _palabra:
   326                           	opt stack 0
   327  000060                     	ds	20
   328  000074                     _send:
   329                           	opt stack 0
   330  000074                     	ds	7
   331  00007B                     _mot_4_step_count:
   332                           	opt stack 0
   333  00007B                     	ds	2
   334  00007D                     _speed:
   335                           	opt stack 0
   336  00007D                     	ds	2
   337  00007F                     _diameter:
   338                           	opt stack 0
   339  00007F                     	ds	2
   340  000081                     _caliber:
   341                           	opt stack 0
   342  000081                     	ds	2
   343  000083                     _motor2:
   344                           	opt stack 0
   345  000083                     	ds	2
   346                           tblptru	equ	0xFF8
   347                           tblptrh	equ	0xFF7
   348                           tblptrl	equ	0xFF6
   349                           tablat	equ	0xFF5
   350                           postinc0	equ	0xFEE
   351                           wreg	equ	0xFE8
   352                           postdec1	equ	0xFE5
   353                           fsr1l	equ	0xFE1
   354                           
   355                           	psect	cstackBANK0
   356  000085                     __pcstackBANK0:
   357                           	opt stack 0
   358  000085                     ?___wmul:
   359                           	opt stack 0
   360  000085                     trans_Char@out:
   361                           	opt stack 0
   362  000085                     ___wmul@multiplier:
   363                           	opt stack 0
   364                           
   365                           ; 2 bytes @ 0x0
   366  000085                     	ds	2
   367  000087                     ___wmul@multiplicand:
   368                           	opt stack 0
   369                           
   370                           ; 2 bytes @ 0x2
   371  000087                     	ds	2
   372  000089                     ___wmul@product:
   373                           	opt stack 0
   374                           
   375                           ; 2 bytes @ 0x4
   376  000089                     	ds	2
   377  00008B                     ??_main:
   378                           
   379                           ; 1 bytes @ 0x6
   380  00008B                     	ds	2
   381                           tblptru	equ	0xFF8
   382                           tblptrh	equ	0xFF7
   383                           tblptrl	equ	0xFF6
   384                           tablat	equ	0xFF5
   385                           postinc0	equ	0xFEE
   386                           wreg	equ	0xFE8
   387                           postdec1	equ	0xFE5
   388                           fsr1l	equ	0xFE1
   389                           
   390                           	psect	cstackCOMRAM
   391  000024                     __pcstackCOMRAM:
   392                           	opt stack 0
   393  000024                     ?i2___wmul:
   394                           	opt stack 0
   395  000024                     i2___wmul@multiplier:
   396                           	opt stack 0
   397                           
   398                           ; 2 bytes @ 0x0
   399  000024                     	ds	2
   400  000026                     i2___wmul@multiplicand:
   401                           	opt stack 0
   402                           
   403                           ; 2 bytes @ 0x2
   404  000026                     	ds	2
   405  000028                     i2___wmul@product:
   406                           	opt stack 0
   407                           
   408                           ; 2 bytes @ 0x4
   409  000028                     	ds	2
   410  00002A                     ?_mot_3_step_count:
   411                           	opt stack 0
   412  00002A                     mot_3_step_count@l:
   413                           	opt stack 0
   414                           
   415                           ; 2 bytes @ 0x6
   416  00002A                     	ds	2
   417  00002C                     mot_3_step_count@ms:
   418                           	opt stack 0
   419                           
   420                           ; 2 bytes @ 0x8
   421  00002C                     	ds	2
   422  00002E                     ??_mot_3_step_count:
   423                           
   424                           ; 1 bytes @ 0xA
   425  00002E                     	ds	2
   426  000030                     ??_high_isr:
   427                           
   428                           ; 1 bytes @ 0xC
   429  000030                     	ds	19
   430                           tblptru	equ	0xFF8
   431                           tblptrh	equ	0xFF7
   432                           tblptrl	equ	0xFF6
   433                           tablat	equ	0xFF5
   434                           postinc0	equ	0xFEE
   435                           wreg	equ	0xFE8
   436                           postdec1	equ	0xFE5
   437                           fsr1l	equ	0xFE1
   438                           
   439 ;;
   440 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   441 ;;
   442 ;; *************** function _main *****************
   443 ;; Defined at:
   444 ;;		line 79 in file "main.c"
   445 ;; Parameters:    Size  Location     Type
   446 ;;		None
   447 ;; Auto vars:     Size  Location     Type
   448 ;;		None
   449 ;; Return value:  Size  Location     Type
   450 ;;                  1    wreg      void 
   451 ;; Registers used:
   452 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   453 ;; Tracked objects:
   454 ;;		On entry : 0/0
   455 ;;		On exit  : 0/0
   456 ;;		Unchanged: 0/0
   457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   458 ;;      Params:         0       0       0       0       0       0       0       0       0
   459 ;;      Locals:         0       0       0       0       0       0       0       0       0
   460 ;;      Temps:          0       2       0       0       0       0       0       0       0
   461 ;;      Totals:         0       2       0       0       0       0       0       0       0
   462 ;;Total ram usage:        2 bytes
   463 ;; Hardware stack levels required when called:    4
   464 ;; This function calls:
   465 ;;		_ConfigureOscillator
   466 ;;		_InitApp
   467 ;;		___wmul
   468 ;;		_trans_Char
   469 ;; This function is called by:
   470 ;;		Startup code after reset
   471 ;; This function uses a non-reentrant model
   472 ;;
   473                           
   474                           	psect	text0
   475  000012                     __ptext0:
   476                           	opt stack 0
   477  000012                     _main:
   478                           	opt stack 27
   479                           
   480                           ;main.c: 81: ConfigureOscillator();
   481                           
   482                           ;incstack = 0
   483  000012  ECDA  F003         	call	_ConfigureOscillator	;wreg free
   484                           
   485                           ;main.c: 84: InitApp();
   486  000016  EC1B  F003         	call	_InitApp	;wreg free
   487  00001A                     
   488                           ;main.c: 87: CCPR1L = PWM_duty;
   489  00001A  C043  FFBE         	movff	_PWM_duty,4030	;volatile
   490                           
   491                           ;main.c: 89: LATAbits.LA2 = DIR_1;
   492  00001E  B01A               	btfsc	_DIR_1,0,c
   493  000020  D002               	bra	u1515
   494  000022  9489               	bcf	3977,2,c	;volatile
   495  000024  D001               	bra	u1516
   496  000026                     u1515:
   497  000026  8489               	bsf	3977,2,c	;volatile
   498  000028                     u1516:
   499                           
   500                           ;main.c: 90: LATAbits.LA4 = DIR_2;
   501  000028  B019               	btfsc	_DIR_2,0,c
   502  00002A  D002               	bra	u1525
   503  00002C  9889               	bcf	3977,4,c	;volatile
   504  00002E  D001               	bra	u1526
   505  000030                     u1525:
   506  000030  8889               	bsf	3977,4,c	;volatile
   507  000032                     u1526:
   508                           
   509                           ;main.c: 91: LATCbits.LC0 = DIR_3;
   510  000032  B01F               	btfsc	_DIR_3,0,c
   511  000034  D002               	bra	u1535
   512  000036  908B               	bcf	3979,0,c	;volatile
   513  000038  D001               	bra	u1536
   514  00003A                     u1535:
   515  00003A  808B               	bsf	3979,0,c	;volatile
   516  00003C                     u1536:
   517                           
   518                           ;main.c: 92: LATBbits.LB7 = DIR_4;
   519  00003C  B018               	btfsc	_DIR_4,0,c
   520  00003E  D002               	bra	u1545
   521  000040  9E8A               	bcf	3978,7,c	;volatile
   522  000042  D001               	bra	u1546
   523  000044                     u1545:
   524  000044  8E8A               	bsf	3978,7,c	;volatile
   525  000046                     u1546:
   526                           
   527                           ;main.c: 93: LATBbits.LB5 = enable;
   528  000046  B017               	btfsc	_enable,0,c
   529  000048  D002               	bra	u1555
   530  00004A  9A8A               	bcf	3978,5,c	;volatile
   531  00004C  D001               	bra	u1556
   532  00004E                     u1555:
   533  00004E  8A8A               	bsf	3978,5,c	;volatile
   534  000050                     u1556:
   535                           
   536                           ;main.c: 94: LATBbits.LB4 = !enable;
   537  000050  5017               	movf	_enable,w,c
   538  000052  A4D8               	btfss	status,2,c
   539  000054  D004               	goto	u1560
   540  000056  0100               	movlb	0	; () banked
   541  000058  6B8B               	clrf	??_main& (0+255),b
   542  00005A  2B8B               	incf	??_main& (0+255),f,b
   543  00005C  D002               	goto	u1578
   544  00005E                     u1560:
   545  00005E  0100               	movlb	0	; () banked
   546  000060  6B8B               	clrf	??_main& (0+255),b
   547  000062                     u1578:
   548  000062  3B8B               	swapf	??_main& (0+255),f,b
   549  000064  508A               	movf	3978,w,c	;volatile
   550  000066  198B               	xorwf	??_main& (0+255),w,b
   551  000068  0BEF               	andlw	-17
   552  00006A  198B               	xorwf	??_main& (0+255),w,b
   553  00006C  6E8A               	movwf	3978,c	;volatile
   554                           
   555                           ; BSR set to: 0
   556                           ;main.c: 101: MOT_1 = 1;
   557  00006E  0E01               	movlw	1
   558  000070  6E53               	movwf	_MOT_1,c
   559                           
   560                           ; BSR set to: 0
   561                           ;main.c: 104: if (recibi == 1) {
   562  000072  041C               	decf	_recibi,w,c
   563  000074  A4D8               	btfss	status,2,c
   564  000076  D17D               	goto	l190
   565                           
   566                           ; BSR set to: 0
   567                           ;main.c: 106: recibi = 0;
   568  000078  0E00               	movlw	0
   569  00007A  6E1C               	movwf	_recibi,c
   570                           
   571                           ; BSR set to: 0
   572                           ;main.c: 109: if (palabra[0] == 'B') {
   573  00007C  0E42               	movlw	66
   574  00007E  1960               	xorwf	_palabra& (0+255),w,b
   575  000080  A4D8               	btfss	status,2,c
   576  000082  D01B               	goto	l191
   577                           
   578                           ; BSR set to: 0
   579                           ;main.c: 111: PWM_duty = ((palabra[1] - 48) * 10) + ((palabra[2] - 48));
   580  000084  0ED0               	movlw	208
   581  000086  2561               	addwf	(_palabra+1)& (0+255),w,b
   582  000088  6F85               	movwf	___wmul@multiplier& (0+255),b
   583  00008A  6B86               	clrf	(___wmul@multiplier+1)& (0+255),b
   584  00008C  0EFF               	movlw	255
   585  00008E  2386               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   586  000090  0E00               	movlw	0
   587  000092  6F88               	movwf	(___wmul@multiplicand+1)& (0+255),b
   588  000094  0E0A               	movlw	10
   589  000096  6F87               	movwf	___wmul@multiplicand& (0+255),b
   590  000098  EC92  F003         	call	___wmul	;wreg free
   591  00009C  0100               	movlb	0	; () banked
   592  00009E  5162               	movf	(_palabra+2)& (0+255),w,b
   593  0000A0  6F8B               	movwf	??_main& (0+255),b
   594  0000A2  6B8C               	clrf	(??_main+1)& (0+255),b
   595  0000A4  5185               	movf	?___wmul& (0+255),w,b
   596  0000A6  278B               	addwf	??_main& (0+255),f,b
   597  0000A8  5186               	movf	(?___wmul+1)& (0+255),w,b
   598  0000AA  238C               	addwfc	(??_main+1)& (0+255),f,b
   599  0000AC  0ED0               	movlw	208
   600  0000AE  258B               	addwf	??_main& (0+255),w,b
   601  0000B0  6E43               	movwf	_PWM_duty,c
   602  0000B2  0EFF               	movlw	255
   603  0000B4  218C               	addwfc	(??_main+1)& (0+255),w,b
   604  0000B6  6E44               	movwf	_PWM_duty+1,c
   605                           
   606                           ;main.c: 112: } else if (palabra[0] == 'A') {
   607  0000B8  D168               	goto	l216
   608  0000BA                     l191:
   609                           
   610                           ; BSR set to: 0
   611                           
   612                           ; BSR set to: 0
   613  0000BA  0E41               	movlw	65
   614  0000BC  1960               	xorwf	_palabra& (0+255),w,b
   615  0000BE  A4D8               	btfss	status,2,c
   616  0000C0  D0E5               	goto	l193
   617                           
   618                           ; BSR set to: 0
   619                           ;main.c: 114: caliber = ((palabra[1] - 48) * 10) + ((palabra[2] - 48));
   620  0000C2  0ED0               	movlw	208
   621  0000C4  2561               	addwf	(_palabra+1)& (0+255),w,b
   622  0000C6  6F85               	movwf	___wmul@multiplier& (0+255),b
   623  0000C8  6B86               	clrf	(___wmul@multiplier+1)& (0+255),b
   624  0000CA  0EFF               	movlw	255
   625  0000CC  2386               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   626  0000CE  0E00               	movlw	0
   627  0000D0  6F88               	movwf	(___wmul@multiplicand+1)& (0+255),b
   628  0000D2  0E0A               	movlw	10
   629  0000D4  6F87               	movwf	___wmul@multiplicand& (0+255),b
   630  0000D6  EC92  F003         	call	___wmul	;wreg free
   631  0000DA  0100               	movlb	0	; () banked
   632  0000DC  5162               	movf	(_palabra+2)& (0+255),w,b
   633  0000DE  6F8B               	movwf	??_main& (0+255),b
   634  0000E0  6B8C               	clrf	(??_main+1)& (0+255),b
   635  0000E2  5185               	movf	?___wmul& (0+255),w,b
   636  0000E4  278B               	addwf	??_main& (0+255),f,b
   637  0000E6  5186               	movf	(?___wmul+1)& (0+255),w,b
   638  0000E8  238C               	addwfc	(??_main+1)& (0+255),f,b
   639  0000EA  0ED0               	movlw	208
   640  0000EC  258B               	addwf	??_main& (0+255),w,b
   641  0000EE  6F81               	movwf	_caliber& (0+255),b
   642  0000F0  0EFF               	movlw	255
   643  0000F2  218C               	addwfc	(??_main+1)& (0+255),w,b
   644  0000F4  6F82               	movwf	(_caliber+1)& (0+255),b
   645                           
   646                           ;main.c: 115: diameter = ((palabra[3] - 48) * 1000) + ((palabra[4] - 48) * 100) + ((pala
      +                          bra[5] - 48) * 10) + ((palabra[6] - 48));
   647  0000F6  0ED0               	movlw	208
   648  0000F8  2563               	addwf	(_palabra+3)& (0+255),w,b
   649  0000FA  6F85               	movwf	___wmul@multiplier& (0+255),b
   650  0000FC  6B86               	clrf	(___wmul@multiplier+1)& (0+255),b
   651  0000FE  0EFF               	movlw	255
   652  000100  2386               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   653  000102  0E03               	movlw	3
   654  000104  6F88               	movwf	(___wmul@multiplicand+1)& (0+255),b
   655  000106  0EE8               	movlw	232
   656  000108  6F87               	movwf	___wmul@multiplicand& (0+255),b
   657  00010A  EC92  F003         	call	___wmul	;wreg free
   658  00010E  0100               	movlb	0	; () banked
   659  000110  5166               	movf	(_palabra+6)& (0+255),w,b
   660  000112  6F8B               	movwf	??_main& (0+255),b
   661  000114  6B8C               	clrf	(??_main+1)& (0+255),b
   662  000116  5185               	movf	?___wmul& (0+255),w,b
   663  000118  278B               	addwf	??_main& (0+255),f,b
   664  00011A  5186               	movf	(?___wmul+1)& (0+255),w,b
   665  00011C  238C               	addwfc	(??_main+1)& (0+255),f,b
   666  00011E  0ED0               	movlw	208
   667  000120  2564               	addwf	(_palabra+4)& (0+255),w,b
   668  000122  6F85               	movwf	___wmul@multiplier& (0+255),b
   669  000124  6B86               	clrf	(___wmul@multiplier+1)& (0+255),b
   670  000126  0EFF               	movlw	255
   671  000128  2386               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   672  00012A  0E00               	movlw	0
   673  00012C  6F88               	movwf	(___wmul@multiplicand+1)& (0+255),b
   674  00012E  0E64               	movlw	100
   675  000130  6F87               	movwf	___wmul@multiplicand& (0+255),b
   676  000132  EC92  F003         	call	___wmul	;wreg free
   677  000136  0100               	movlb	0	; () banked
   678  000138  5185               	movf	?___wmul& (0+255),w,b
   679  00013A  278B               	addwf	??_main& (0+255),f,b
   680  00013C  5186               	movf	(?___wmul+1)& (0+255),w,b
   681  00013E  238C               	addwfc	(??_main+1)& (0+255),f,b
   682  000140  0ED0               	movlw	208
   683  000142  2565               	addwf	(_palabra+5)& (0+255),w,b
   684  000144  6F85               	movwf	___wmul@multiplier& (0+255),b
   685  000146  6B86               	clrf	(___wmul@multiplier+1)& (0+255),b
   686  000148  0EFF               	movlw	255
   687  00014A  2386               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   688  00014C  0E00               	movlw	0
   689  00014E  6F88               	movwf	(___wmul@multiplicand+1)& (0+255),b
   690  000150  0E0A               	movlw	10
   691  000152  6F87               	movwf	___wmul@multiplicand& (0+255),b
   692  000154  EC92  F003         	call	___wmul	;wreg free
   693  000158  0100               	movlb	0	; () banked
   694  00015A  5185               	movf	?___wmul& (0+255),w,b
   695  00015C  278B               	addwf	??_main& (0+255),f,b
   696  00015E  5186               	movf	(?___wmul+1)& (0+255),w,b
   697  000160  238C               	addwfc	(??_main+1)& (0+255),f,b
   698  000162  0ED0               	movlw	208
   699  000164  258B               	addwf	??_main& (0+255),w,b
   700  000166  6F7F               	movwf	_diameter& (0+255),b
   701  000168  0EFF               	movlw	255
   702  00016A  218C               	addwfc	(??_main+1)& (0+255),w,b
   703  00016C  6F80               	movwf	(_diameter+1)& (0+255),b
   704                           
   705                           ;main.c: 116: length = ((palabra[7] - 48) * 10000) + ((palabra[8] - 48) * 1000) + ((pala
      +                          bra[9] - 48) * 100) + ((palabra[10] - 48) * 10) + ((palabra[11] - 48));
   706  00016E  0ED0               	movlw	208
   707  000170  2567               	addwf	(_palabra+7)& (0+255),w,b
   708  000172  6F85               	movwf	___wmul@multiplier& (0+255),b
   709  000174  6B86               	clrf	(___wmul@multiplier+1)& (0+255),b
   710  000176  0EFF               	movlw	255
   711  000178  2386               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   712  00017A  0E27               	movlw	39
   713  00017C  6F88               	movwf	(___wmul@multiplicand+1)& (0+255),b
   714  00017E  0E10               	movlw	16
   715  000180  6F87               	movwf	___wmul@multiplicand& (0+255),b
   716  000182  EC92  F003         	call	___wmul	;wreg free
   717  000186  0100               	movlb	0	; () banked
   718  000188  516B               	movf	(_palabra+11)& (0+255),w,b
   719  00018A  6F8B               	movwf	??_main& (0+255),b
   720  00018C  6B8C               	clrf	(??_main+1)& (0+255),b
   721  00018E  5185               	movf	?___wmul& (0+255),w,b
   722  000190  278B               	addwf	??_main& (0+255),f,b
   723  000192  5186               	movf	(?___wmul+1)& (0+255),w,b
   724  000194  238C               	addwfc	(??_main+1)& (0+255),f,b
   725  000196  0ED0               	movlw	208
   726  000198  2568               	addwf	(_palabra+8)& (0+255),w,b
   727  00019A  6F85               	movwf	___wmul@multiplier& (0+255),b
   728  00019C  6B86               	clrf	(___wmul@multiplier+1)& (0+255),b
   729  00019E  0EFF               	movlw	255
   730  0001A0  2386               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   731  0001A2  0E03               	movlw	3
   732  0001A4  6F88               	movwf	(___wmul@multiplicand+1)& (0+255),b
   733  0001A6  0EE8               	movlw	232
   734  0001A8  6F87               	movwf	___wmul@multiplicand& (0+255),b
   735  0001AA  EC92  F003         	call	___wmul	;wreg free
   736  0001AE  0100               	movlb	0	; () banked
   737  0001B0  5185               	movf	?___wmul& (0+255),w,b
   738  0001B2  278B               	addwf	??_main& (0+255),f,b
   739  0001B4  5186               	movf	(?___wmul+1)& (0+255),w,b
   740  0001B6  238C               	addwfc	(??_main+1)& (0+255),f,b
   741  0001B8  0ED0               	movlw	208
   742  0001BA  2569               	addwf	(_palabra+9)& (0+255),w,b
   743  0001BC  6F85               	movwf	___wmul@multiplier& (0+255),b
   744  0001BE  6B86               	clrf	(___wmul@multiplier+1)& (0+255),b
   745  0001C0  0EFF               	movlw	255
   746  0001C2  2386               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   747  0001C4  0E00               	movlw	0
   748  0001C6  6F88               	movwf	(___wmul@multiplicand+1)& (0+255),b
   749  0001C8  0E64               	movlw	100
   750  0001CA  6F87               	movwf	___wmul@multiplicand& (0+255),b
   751  0001CC  EC92  F003         	call	___wmul	;wreg free
   752  0001D0  0100               	movlb	0	; () banked
   753  0001D2  5185               	movf	?___wmul& (0+255),w,b
   754  0001D4  278B               	addwf	??_main& (0+255),f,b
   755  0001D6  5186               	movf	(?___wmul+1)& (0+255),w,b
   756  0001D8  238C               	addwfc	(??_main+1)& (0+255),f,b
   757  0001DA  0ED0               	movlw	208
   758  0001DC  256A               	addwf	(_palabra+10)& (0+255),w,b
   759  0001DE  6F85               	movwf	___wmul@multiplier& (0+255),b
   760  0001E0  6B86               	clrf	(___wmul@multiplier+1)& (0+255),b
   761  0001E2  0EFF               	movlw	255
   762  0001E4  2386               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   763  0001E6  0E00               	movlw	0
   764  0001E8  6F88               	movwf	(___wmul@multiplicand+1)& (0+255),b
   765  0001EA  0E0A               	movlw	10
   766  0001EC  6F87               	movwf	___wmul@multiplicand& (0+255),b
   767  0001EE  EC92  F003         	call	___wmul	;wreg free
   768  0001F2  0100               	movlb	0	; () banked
   769  0001F4  5185               	movf	?___wmul& (0+255),w,b
   770  0001F6  278B               	addwf	??_main& (0+255),f,b
   771  0001F8  5186               	movf	(?___wmul+1)& (0+255),w,b
   772  0001FA  238C               	addwfc	(??_main+1)& (0+255),f,b
   773  0001FC  0ED0               	movlw	208
   774  0001FE  258B               	addwf	??_main& (0+255),w,b
   775  000200  6E4F               	movwf	_length,c
   776  000202  0EFF               	movlw	255
   777  000204  218C               	addwfc	(??_main+1)& (0+255),w,b
   778  000206  6E50               	movwf	_length+1,c
   779                           
   780                           ;main.c: 117: turns = ((palabra[12] - 48) * 1000) + ((palabra[13] - 48) * 100) + ((palab
      +                          ra[14] - 48) * 10) + ((palabra[15] - 48));
   781  000208  0ED0               	movlw	208
   782  00020A  256C               	addwf	(_palabra+12)& (0+255),w,b
   783  00020C  6F85               	movwf	___wmul@multiplier& (0+255),b
   784  00020E  6B86               	clrf	(___wmul@multiplier+1)& (0+255),b
   785  000210  0EFF               	movlw	255
   786  000212  2386               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   787  000214  0E03               	movlw	3
   788  000216  6F88               	movwf	(___wmul@multiplicand+1)& (0+255),b
   789  000218  0EE8               	movlw	232
   790  00021A  6F87               	movwf	___wmul@multiplicand& (0+255),b
   791  00021C  EC92  F003         	call	___wmul	;wreg free
   792  000220  0100               	movlb	0	; () banked
   793  000222  516F               	movf	(_palabra+15)& (0+255),w,b
   794  000224  6F8B               	movwf	??_main& (0+255),b
   795  000226  6B8C               	clrf	(??_main+1)& (0+255),b
   796  000228  5185               	movf	?___wmul& (0+255),w,b
   797  00022A  278B               	addwf	??_main& (0+255),f,b
   798  00022C  5186               	movf	(?___wmul+1)& (0+255),w,b
   799  00022E  238C               	addwfc	(??_main+1)& (0+255),f,b
   800  000230  0ED0               	movlw	208
   801  000232  256D               	addwf	(_palabra+13)& (0+255),w,b
   802  000234  6F85               	movwf	___wmul@multiplier& (0+255),b
   803  000236  6B86               	clrf	(___wmul@multiplier+1)& (0+255),b
   804  000238  0EFF               	movlw	255
   805  00023A  2386               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   806  00023C  0E00               	movlw	0
   807  00023E  6F88               	movwf	(___wmul@multiplicand+1)& (0+255),b
   808  000240  0E64               	movlw	100
   809  000242  6F87               	movwf	___wmul@multiplicand& (0+255),b
   810  000244  EC92  F003         	call	___wmul	;wreg free
   811  000248  0100               	movlb	0	; () banked
   812  00024A  5185               	movf	?___wmul& (0+255),w,b
   813  00024C  278B               	addwf	??_main& (0+255),f,b
   814  00024E  5186               	movf	(?___wmul+1)& (0+255),w,b
   815  000250  238C               	addwfc	(??_main+1)& (0+255),f,b
   816  000252  0ED0               	movlw	208
   817  000254  256E               	addwf	(_palabra+14)& (0+255),w,b
   818  000256  6F85               	movwf	___wmul@multiplier& (0+255),b
   819  000258  6B86               	clrf	(___wmul@multiplier+1)& (0+255),b
   820  00025A  0EFF               	movlw	255
   821  00025C  2386               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   822  00025E  0E00               	movlw	0
   823  000260  6F88               	movwf	(___wmul@multiplicand+1)& (0+255),b
   824  000262  0E0A               	movlw	10
   825  000264  6F87               	movwf	___wmul@multiplicand& (0+255),b
   826  000266  EC92  F003         	call	___wmul	;wreg free
   827  00026A  0100               	movlb	0	; () banked
   828  00026C  5185               	movf	?___wmul& (0+255),w,b
   829  00026E  278B               	addwf	??_main& (0+255),f,b
   830  000270  5186               	movf	(?___wmul+1)& (0+255),w,b
   831  000272  238C               	addwfc	(??_main+1)& (0+255),f,b
   832  000274  0ED0               	movlw	208
   833  000276  258B               	addwf	??_main& (0+255),w,b
   834  000278  6E51               	movwf	_turns,c
   835  00027A  0EFF               	movlw	255
   836  00027C  218C               	addwfc	(??_main+1)& (0+255),w,b
   837  00027E  6E52               	movwf	_turns+1,c
   838                           
   839                           ; BSR set to: 0
   840                           ;main.c: 118: speed = palabra[15];
   841  000280  C06F  F07D         	movff	_palabra+15,_speed
   842  000284  6B7E               	clrf	(_speed+1)& (0+255),b
   843                           
   844                           ; BSR set to: 0
   845                           ;main.c: 120: busy_flag = 1;
   846  000286  0E01               	movlw	1
   847  000288  6E1D               	movwf	_busy_flag,c
   848                           
   849                           ;main.c: 121: } else if (palabra[0] == 'C') {
   850  00028A  D07F               	goto	l216
   851  00028C                     l193:
   852                           
   853                           ; BSR set to: 0
   854                           
   855                           ; BSR set to: 0
   856  00028C  0E43               	movlw	67
   857  00028E  1960               	xorwf	_palabra& (0+255),w,b
   858  000290  A4D8               	btfss	status,2,c
   859  000292  D008               	goto	l195
   860                           
   861                           ; BSR set to: 0
   862                           ;main.c: 123: enable = !enable;
   863  000294  5017               	movf	_enable,w,c
   864  000296  A4D8               	btfss	status,2,c
   865  000298  D002               	goto	u1620
   866  00029A  0E01               	movlw	1
   867  00029C  D001               	goto	u1630
   868  00029E                     u1620:
   869  00029E  0E00               	movlw	0
   870  0002A0                     u1630:
   871  0002A0  6E17               	movwf	_enable,c
   872                           
   873                           ;main.c: 124: } else if ((palabra[0] == 'D') && (busy_flag == 0)) {
   874  0002A2  D073               	goto	l216
   875  0002A4                     l195:
   876                           
   877                           ; BSR set to: 0
   878                           
   879                           ; BSR set to: 0
   880  0002A4  0E44               	movlw	68
   881  0002A6  1960               	xorwf	_palabra& (0+255),w,b
   882  0002A8  A4D8               	btfss	status,2,c
   883  0002AA  D01F               	goto	l197
   884                           
   885                           ; BSR set to: 0
   886  0002AC  501D               	movf	_busy_flag,w,c
   887  0002AE  A4D8               	btfss	status,2,c
   888  0002B0  D01C               	goto	l197
   889                           
   890                           ; BSR set to: 0
   891                           ;main.c: 126: if (palabra[1] == '0') {
   892  0002B2  0E30               	movlw	48
   893  0002B4  1961               	xorwf	(_palabra+1)& (0+255),w,b
   894  0002B6  A4D8               	btfss	status,2,c
   895  0002B8  D004               	goto	l198
   896                           
   897                           ; BSR set to: 0
   898                           ;main.c: 128: MOT_3 = 1;
   899  0002BA  0E01               	movlw	1
   900  0002BC  6E20               	movwf	_MOT_3,c
   901                           
   902                           ;main.c: 129: DIR_3 = 0;
   903  0002BE  0E00               	movlw	0
   904  0002C0  D007               	goto	L1
   905  0002C2                     l198:
   906                           
   907                           ; BSR set to: 0
   908                           
   909                           ; BSR set to: 0
   910  0002C2  0E31               	movlw	49
   911  0002C4  1961               	xorwf	(_palabra+1)& (0+255),w,b
   912  0002C6  A4D8               	btfss	status,2,c
   913  0002C8  D005               	goto	l200
   914                           
   915                           ; BSR set to: 0
   916                           ;main.c: 132: MOT_3 = 1;
   917  0002CA  0E01               	movlw	1
   918  0002CC  6E20               	movwf	_MOT_3,c
   919                           
   920                           ;main.c: 133: DIR_3 = 1;
   921  0002CE  0E01               	movlw	1
   922  0002D0                     L1:
   923  0002D0  6E1F               	movwf	_DIR_3,c
   924                           
   925                           ;main.c: 134: } else if (palabra[1] == '2') {
   926  0002D2  D05B               	goto	l216
   927  0002D4                     l200:
   928                           
   929                           ; BSR set to: 0
   930                           
   931                           ; BSR set to: 0
   932  0002D4  0E32               	movlw	50
   933  0002D6  1961               	xorwf	(_palabra+1)& (0+255),w,b
   934  0002D8  A4D8               	btfss	status,2,c
   935  0002DA  D057               	goto	l216
   936                           
   937                           ; BSR set to: 0
   938                           ;main.c: 136: MOT_3 = 0;
   939  0002DC  0E00               	movlw	0
   940  0002DE  6E20               	movwf	_MOT_3,c
   941                           
   942                           ;main.c: 137: DIR_3 = 1;
   943  0002E0  0E01               	movlw	1
   944  0002E2  6E1F               	movwf	_DIR_3,c
   945                           
   946                           ;main.c: 138: zero_flag = 1;
   947  0002E4  0E01               	movlw	1
   948  0002E6  6E23               	movwf	_zero_flag,c
   949                           
   950                           ; BSR set to: 0
   951                           ;main.c: 139: }
   952                           ;main.c: 143: } else if (palabra[0] == 'E') {
   953                           
   954                           ; BSR set to: 0
   955                           
   956                           ; BSR set to: 0
   957  0002E8  D050               	goto	l216
   958  0002EA                     l197:
   959                           
   960                           ; BSR set to: 0
   961                           
   962                           ; BSR set to: 0
   963  0002EA  0E45               	movlw	69
   964  0002EC  1960               	xorwf	_palabra& (0+255),w,b
   965  0002EE  A4D8               	btfss	status,2,c
   966  0002F0  D018               	goto	l204
   967                           
   968                           ; BSR set to: 0
   969                           ;main.c: 145: if (palabra[1] == '0') {
   970  0002F2  0E30               	movlw	48
   971  0002F4  1961               	xorwf	(_palabra+1)& (0+255),w,b
   972  0002F6  A4D8               	btfss	status,2,c
   973  0002F8  D008               	goto	l205
   974                           
   975                           ; BSR set to: 0
   976                           ;main.c: 146: MOT_4 = !MOT_4;
   977  0002FA  501E               	movf	_MOT_4,w,c
   978  0002FC  A4D8               	btfss	status,2,c
   979  0002FE  D002               	goto	u1710
   980  000300  0E01               	movlw	1
   981  000302  D001               	goto	u1720
   982  000304                     u1710:
   983  000304  0E00               	movlw	0
   984  000306                     u1720:
   985  000306  6E1E               	movwf	_MOT_4,c
   986                           
   987                           ;main.c: 147: } else if (palabra[1] == '1') {
   988  000308  D040               	goto	l216
   989  00030A                     l205:
   990                           
   991                           ; BSR set to: 0
   992                           
   993                           ; BSR set to: 0
   994  00030A  0E31               	movlw	49
   995  00030C  1961               	xorwf	(_palabra+1)& (0+255),w,b
   996  00030E  A4D8               	btfss	status,2,c
   997  000310  D03C               	goto	l216
   998                           
   999                           ; BSR set to: 0
  1000                           ;main.c: 148: DIR_4 = !DIR_4;
  1001  000312  5018               	movf	_DIR_4,w,c
  1002  000314  A4D8               	btfss	status,2,c
  1003  000316  D002               	goto	u1740
  1004  000318  0E01               	movlw	1
  1005  00031A  D001               	goto	u1750
  1006  00031C                     u1740:
  1007  00031C  0E00               	movlw	0
  1008  00031E                     u1750:
  1009  00031E  6E18               	movwf	_DIR_4,c
  1010                           
  1011                           ; BSR set to: 0
  1012                           ;main.c: 149: }
  1013                           ;main.c: 150: } else if (palabra[0] == 'M') {
  1014                           
  1015                           ; BSR set to: 0
  1016  000320  D034               	goto	l216
  1017  000322                     l204:
  1018                           
  1019                           ; BSR set to: 0
  1020                           
  1021                           ; BSR set to: 0
  1022  000322  0E4D               	movlw	77
  1023  000324  1960               	xorwf	_palabra& (0+255),w,b
  1024  000326  A4D8               	btfss	status,2,c
  1025  000328  D030               	goto	l216
  1026                           
  1027                           ; BSR set to: 0
  1028                           ;main.c: 152: if (palabra[1] == '1') {
  1029  00032A  0E31               	movlw	49
  1030  00032C  1961               	xorwf	(_palabra+1)& (0+255),w,b
  1031  00032E  A4D8               	btfss	status,2,c
  1032  000330  D008               	goto	l210
  1033                           
  1034                           ; BSR set to: 0
  1035                           ;main.c: 153: MOT_1 = !MOT_1;
  1036  000332  5053               	movf	_MOT_1,w,c
  1037  000334  A4D8               	btfss	status,2,c
  1038  000336  D002               	goto	u1780
  1039  000338  0E01               	movlw	1
  1040  00033A  D001               	goto	u1790
  1041  00033C                     u1780:
  1042  00033C  0E00               	movlw	0
  1043  00033E                     u1790:
  1044  00033E  6E53               	movwf	_MOT_1,c
  1045                           
  1046                           ;main.c: 154: } else if (palabra[1] == '2') {
  1047  000340  D024               	goto	l216
  1048  000342                     l210:
  1049                           
  1050                           ; BSR set to: 0
  1051                           
  1052                           ; BSR set to: 0
  1053  000342  0E32               	movlw	50
  1054  000344  1961               	xorwf	(_palabra+1)& (0+255),w,b
  1055  000346  A4D8               	btfss	status,2,c
  1056  000348  D008               	goto	l212
  1057                           
  1058                           ; BSR set to: 0
  1059                           ;main.c: 155: MOT_2 = !MOT_2;
  1060  00034A  5021               	movf	_MOT_2,w,c
  1061  00034C  A4D8               	btfss	status,2,c
  1062  00034E  D002               	goto	u1810
  1063  000350  0E01               	movlw	1
  1064  000352  D001               	goto	u1820
  1065  000354                     u1810:
  1066  000354  0E00               	movlw	0
  1067  000356                     u1820:
  1068  000356  6E21               	movwf	_MOT_2,c
  1069                           
  1070                           ;main.c: 156: } else if (palabra[1] == '3') {
  1071  000358  D018               	goto	l216
  1072  00035A                     l212:
  1073                           
  1074                           ; BSR set to: 0
  1075                           
  1076                           ; BSR set to: 0
  1077  00035A  0E33               	movlw	51
  1078  00035C  1961               	xorwf	(_palabra+1)& (0+255),w,b
  1079  00035E  A4D8               	btfss	status,2,c
  1080  000360  D014               	goto	l216
  1081                           
  1082                           ; BSR set to: 0
  1083                           ;main.c: 157: MOT_3 = !MOT_3;
  1084  000362  5020               	movf	_MOT_3,w,c
  1085  000364  A4D8               	btfss	status,2,c
  1086  000366  D002               	goto	u1840
  1087  000368  0E01               	movlw	1
  1088  00036A  D001               	goto	u1850
  1089  00036C                     u1840:
  1090  00036C  0E00               	movlw	0
  1091  00036E                     u1850:
  1092  00036E  6E20               	movwf	_MOT_3,c
  1093                           
  1094                           ; BSR set to: 0
  1095                           ;main.c: 158: }
  1096                           ;main.c: 159: }
  1097                           ;main.c: 162: } else if (GODONE == 0) {
  1098                           
  1099                           ; BSR set to: 0
  1100                           
  1101                           ; BSR set to: 0
  1102                           
  1103                           ; BSR set to: 0
  1104                           
  1105                           ; BSR set to: 0
  1106                           
  1107                           ; BSR set to: 0
  1108                           
  1109                           ; BSR set to: 0
  1110                           
  1111                           ; BSR set to: 0
  1112                           
  1113                           ; BSR set to: 0
  1114  000370  D00C               	goto	l216
  1115  000372                     l190:
  1116                           
  1117                           ; BSR set to: 0
  1118  000372  B2C2               	btfsc	4034,1,c	;volatile
  1119  000374  D00A               	goto	l216
  1120                           
  1121                           ; BSR set to: 0
  1122                           ;main.c: 164: _delay((unsigned long)((4)*(8000000/4000.0)));
  1123  000376  0E0B               	movlw	11
  1124  000378  0100               	movlb	0	; () banked
  1125  00037A  6F8B               	movwf	??_main& (0+255),b
  1126  00037C  0E62               	movlw	98
  1127  00037E                     u1907:
  1128  00037E  2EE8               	decfsz	wreg,f,c
  1129  000380  D7FE               	bra	u1907
  1130  000382  2F8B               	decfsz	??_main& (0+255),f,b
  1131  000384  D7FC               	bra	u1907
  1132  000386  F000               	nop	
  1133                           
  1134                           ;main.c: 166: GODONE = 1;
  1135  000388  82C2               	bsf	4034,1,c	;volatile
  1136  00038A                     l216:
  1137                           
  1138                           ;main.c: 175: }
  1139                           ;main.c: 189: if (zero_flag) {
  1140  00038A  5023               	movf	_zero_flag,w,c
  1141  00038C  B4D8               	btfsc	status,2,c
  1142  00038E  D002               	goto	l217
  1143                           
  1144                           ;main.c: 194: MOT_3 = 1;
  1145  000390  0E01               	movlw	1
  1146  000392  6E20               	movwf	_MOT_3,c
  1147  000394                     l217:
  1148                           
  1149                           ;main.c: 197: }
  1150                           ;main.c: 200: if (finish) {
  1151  000394  5022               	movf	_finish,w,c
  1152  000396  B4D8               	btfsc	status,2,c
  1153  000398  D640               	goto	l189
  1154                           
  1155                           ;main.c: 201: MOT_1 = 0;
  1156  00039A  0E00               	movlw	0
  1157  00039C  6E53               	movwf	_MOT_1,c
  1158                           
  1159                           ;main.c: 202: MOT_3 = 0;
  1160  00039E  0E00               	movlw	0
  1161  0003A0  6E20               	movwf	_MOT_3,c
  1162                           
  1163                           ;main.c: 203: trans_Char('Z');
  1164  0003A2  0E5A               	movlw	90
  1165  0003A4  ECD3  F003         	call	_trans_Char
  1166                           
  1167                           ;main.c: 204: finish = 0;
  1168  0003A8  0E00               	movlw	0
  1169  0003AA  6E22               	movwf	_finish,c
  1170  0003AC  D636               	goto	l189
  1171  0003AE                     __end_of_main:
  1172                           	opt stack 0
  1173                           tblptru	equ	0xFF8
  1174                           tblptrh	equ	0xFF7
  1175                           tblptrl	equ	0xFF6
  1176                           tablat	equ	0xFF5
  1177                           postinc0	equ	0xFEE
  1178                           wreg	equ	0xFE8
  1179                           postdec1	equ	0xFE5
  1180                           fsr1l	equ	0xFE1
  1181                           status	equ	0xFD8
  1182                           
  1183 ;; *************** function _trans_Char *****************
  1184 ;; Defined at:
  1185 ;;		line 222 in file "main.c"
  1186 ;; Parameters:    Size  Location     Type
  1187 ;;  out             1    wreg     unsigned char 
  1188 ;; Auto vars:     Size  Location     Type
  1189 ;;  out             1    0[BANK0 ] unsigned char 
  1190 ;; Return value:  Size  Location     Type
  1191 ;;                  1    wreg      void 
  1192 ;; Registers used:
  1193 ;;		wreg
  1194 ;; Tracked objects:
  1195 ;;		On entry : 0/0
  1196 ;;		On exit  : 0/0
  1197 ;;		Unchanged: 0/0
  1198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1199 ;;      Params:         0       0       0       0       0       0       0       0       0
  1200 ;;      Locals:         0       1       0       0       0       0       0       0       0
  1201 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1202 ;;      Totals:         0       1       0       0       0       0       0       0       0
  1203 ;;Total ram usage:        1 bytes
  1204 ;; Hardware stack levels used:    1
  1205 ;; Hardware stack levels required when called:    3
  1206 ;; This function calls:
  1207 ;;		Nothing
  1208 ;; This function is called by:
  1209 ;;		_main
  1210 ;;		_send_String
  1211 ;; This function uses a non-reentrant model
  1212 ;;
  1213                           
  1214                           	psect	text1
  1215  0007A6                     __ptext1:
  1216                           	opt stack 0
  1217  0007A6                     _trans_Char:
  1218                           	opt stack 27
  1219                           
  1220                           ;incstack = 0
  1221                           ;trans_Char@out stored from wreg
  1222  0007A6  0100               	movlb	0	; () banked
  1223  0007A8  6F85               	movwf	trans_Char@out& (0+255),b
  1224  0007AA                     
  1225                           ;main.c: 223: while (TXIF == 0);
  1226  0007AA  A89E               	btfss	3998,4,c	;volatile
  1227  0007AC  D7FE               	goto	l1668
  1228                           
  1229                           ;main.c: 224: TXREG = out;
  1230  0007AE  C085  FFAD         	movff	trans_Char@out,4013	;volatile
  1231  0007B2  0012               	return		;funcret
  1232  0007B4                     __end_of_trans_Char:
  1233                           	opt stack 0
  1234                           tblptru	equ	0xFF8
  1235                           tblptrh	equ	0xFF7
  1236                           tblptrl	equ	0xFF6
  1237                           tablat	equ	0xFF5
  1238                           postinc0	equ	0xFEE
  1239                           wreg	equ	0xFE8
  1240                           postdec1	equ	0xFE5
  1241                           fsr1l	equ	0xFE1
  1242                           status	equ	0xFD8
  1243                           
  1244 ;; *************** function ___wmul *****************
  1245 ;; Defined at:
  1246 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
  1247 ;; Parameters:    Size  Location     Type
  1248 ;;  multiplier      2    0[BANK0 ] unsigned int 
  1249 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  1250 ;; Auto vars:     Size  Location     Type
  1251 ;;  product         2    4[BANK0 ] unsigned int 
  1252 ;; Return value:  Size  Location     Type
  1253 ;;                  2    0[BANK0 ] unsigned int 
  1254 ;; Registers used:
  1255 ;;		wreg, status,2, status,0, prodl, prodh
  1256 ;; Tracked objects:
  1257 ;;		On entry : 0/0
  1258 ;;		On exit  : 0/0
  1259 ;;		Unchanged: 0/0
  1260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1261 ;;      Params:         0       4       0       0       0       0       0       0       0
  1262 ;;      Locals:         0       2       0       0       0       0       0       0       0
  1263 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1264 ;;      Totals:         0       6       0       0       0       0       0       0       0
  1265 ;;Total ram usage:        6 bytes
  1266 ;; Hardware stack levels used:    1
  1267 ;; Hardware stack levels required when called:    3
  1268 ;; This function calls:
  1269 ;;		Nothing
  1270 ;; This function is called by:
  1271 ;;		_main
  1272 ;; This function uses a non-reentrant model
  1273 ;;
  1274                           
  1275                           	psect	text2
  1276  000724                     __ptext2:
  1277                           	opt stack 0
  1278  000724                     ___wmul:
  1279                           	opt stack 27
  1280                           
  1281                           ;incstack = 0
  1282  000724  0100               	movlb	0	; () banked
  1283  000726  5185               	movf	___wmul@multiplier& (0+255),w,b
  1284  000728  0387               	mulwf	___wmul@multiplicand& (0+255),b
  1285  00072A  CFF3 F089          	movff	prodl,___wmul@product
  1286  00072E  CFF4 F08A          	movff	prodh,___wmul@product+1
  1287  000732  5185               	movf	___wmul@multiplier& (0+255),w,b
  1288  000734  0388               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  1289  000736  50F3               	movf	prodl,w,c
  1290  000738  278A               	addwf	(___wmul@product+1)& (0+255),f,b
  1291  00073A  5186               	movf	(___wmul@multiplier+1)& (0+255),w,b
  1292  00073C  0387               	mulwf	___wmul@multiplicand& (0+255),b
  1293  00073E  50F3               	movf	prodl,w,c
  1294  000740  278A               	addwf	(___wmul@product+1)& (0+255),f,b
  1295                           
  1296                           ; BSR set to: 0
  1297  000742  C089  F085         	movff	___wmul@product,?___wmul
  1298  000746  C08A  F086         	movff	___wmul@product+1,?___wmul+1
  1299  00074A  0012               	return	
  1300  00074C                     __end_of___wmul:
  1301                           	opt stack 0
  1302                           tblptru	equ	0xFF8
  1303                           tblptrh	equ	0xFF7
  1304                           tblptrl	equ	0xFF6
  1305                           tablat	equ	0xFF5
  1306                           prodh	equ	0xFF4
  1307                           prodl	equ	0xFF3
  1308                           postinc0	equ	0xFEE
  1309                           wreg	equ	0xFE8
  1310                           postdec1	equ	0xFE5
  1311                           fsr1l	equ	0xFE1
  1312                           status	equ	0xFD8
  1313                           
  1314 ;; *************** function _InitApp *****************
  1315 ;; Defined at:
  1316 ;;		line 33 in file "user.c"
  1317 ;; Parameters:    Size  Location     Type
  1318 ;;		None
  1319 ;; Auto vars:     Size  Location     Type
  1320 ;;		None
  1321 ;; Return value:  Size  Location     Type
  1322 ;;                  1    wreg      void 
  1323 ;; Registers used:
  1324 ;;		wreg, status,2
  1325 ;; Tracked objects:
  1326 ;;		On entry : 0/0
  1327 ;;		On exit  : 0/0
  1328 ;;		Unchanged: 0/0
  1329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1330 ;;      Params:         0       0       0       0       0       0       0       0       0
  1331 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1332 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1333 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1334 ;;Total ram usage:        0 bytes
  1335 ;; Hardware stack levels used:    1
  1336 ;; Hardware stack levels required when called:    3
  1337 ;; This function calls:
  1338 ;;		Nothing
  1339 ;; This function is called by:
  1340 ;;		_main
  1341 ;; This function uses a non-reentrant model
  1342 ;;
  1343                           
  1344                           	psect	text3
  1345  000636                     __ptext3:
  1346                           	opt stack 0
  1347  000636                     _InitApp:
  1348                           	opt stack 27
  1349                           
  1350                           ;user.c: 35: PORTA = 0;
  1351                           
  1352                           ; BSR set to: 0
  1353                           ;incstack = 0
  1354  000636  0E00               	movlw	0
  1355  000638  6E80               	movwf	3968,c	;volatile
  1356                           
  1357                           ;user.c: 36: LATA = 0;
  1358  00063A  0E00               	movlw	0
  1359  00063C  6E89               	movwf	3977,c	;volatile
  1360                           
  1361                           ;user.c: 37: PORTB = 0;
  1362  00063E  0E00               	movlw	0
  1363  000640  6E81               	movwf	3969,c	;volatile
  1364                           
  1365                           ;user.c: 38: LATB = 0;
  1366  000642  0E00               	movlw	0
  1367  000644  6E8A               	movwf	3978,c	;volatile
  1368                           
  1369                           ;user.c: 39: PORTC = 0;
  1370  000646  0E00               	movlw	0
  1371  000648  6E82               	movwf	3970,c	;volatile
  1372                           
  1373                           ;user.c: 40: LATC = 0;
  1374  00064A  0E00               	movlw	0
  1375  00064C  6E8B               	movwf	3979,c	;volatile
  1376                           
  1377                           ;user.c: 42: ADCON1 = 0b1101;
  1378  00064E  0E0D               	movlw	13
  1379  000650  6EC1               	movwf	4033,c	;volatile
  1380                           
  1381                           ;user.c: 43: TRISAbits.TRISA0 = 1;
  1382  000652  8092               	bsf	3986,0,c	;volatile
  1383                           
  1384                           ;user.c: 44: ADCON0bits.CHS = 0;
  1385  000654  94C2               	bcf	4034,2,c	;volatile
  1386  000656  96C2               	bcf	4034,3,c	;volatile
  1387  000658  98C2               	bcf	4034,4,c	;volatile
  1388  00065A  9AC2               	bcf	4034,5,c	;volatile
  1389                           
  1390                           ;user.c: 45: ADCON2 = 0b10101100;
  1391  00065C  0EAC               	movlw	172
  1392  00065E  6EC0               	movwf	4032,c	;volatile
  1393                           
  1394                           ;user.c: 46: PIE1bits.ADIE = 1;
  1395  000660  8C9D               	bsf	3997,6,c	;volatile
  1396                           
  1397                           ;user.c: 47: PIR1bits.ADIF = 0;
  1398  000662  9C9E               	bcf	3998,6,c	;volatile
  1399                           
  1400                           ;user.c: 48: ADCON0bits.ADON = 1;
  1401  000664  80C2               	bsf	4034,0,c	;volatile
  1402                           
  1403                           ;user.c: 50: TRISAbits.RA2 = 0;
  1404  000666  9492               	bcf	3986,2,c	;volatile
  1405                           
  1406                           ;user.c: 51: TRISAbits.RA3 = 0;
  1407  000668  9692               	bcf	3986,3,c	;volatile
  1408                           
  1409                           ;user.c: 52: TRISAbits.RA4 = 0;
  1410  00066A  9892               	bcf	3986,4,c	;volatile
  1411                           
  1412                           ;user.c: 53: TRISAbits.RA5 = 0;
  1413  00066C  9A92               	bcf	3986,5,c	;volatile
  1414                           
  1415                           ;user.c: 54: TRISCbits.RC0 = 0;
  1416  00066E  9094               	bcf	3988,0,c	;volatile
  1417                           
  1418                           ;user.c: 55: TRISCbits.RC1 = 0;
  1419  000670  9294               	bcf	3988,1,c	;volatile
  1420                           
  1421                           ;user.c: 56: TRISBbits.RB7 = 0;
  1422  000672  9E93               	bcf	3987,7,c	;volatile
  1423                           
  1424                           ;user.c: 57: TRISBbits.RB6 = 0;
  1425  000674  9C93               	bcf	3987,6,c	;volatile
  1426                           
  1427                           ;user.c: 58: TRISCbits.RC2 = 0;
  1428  000676  9494               	bcf	3988,2,c	;volatile
  1429                           
  1430                           ;user.c: 59: TRISBbits.RB4 = 0;
  1431  000678  9893               	bcf	3987,4,c	;volatile
  1432                           
  1433                           ;user.c: 60: TRISBbits.RB5 = 0;
  1434  00067A  9A93               	bcf	3987,5,c	;volatile
  1435                           
  1436                           ;user.c: 62: RCONbits.IPEN = 0;
  1437  00067C  9ED0               	bcf	4048,7,c	;volatile
  1438                           
  1439                           ;user.c: 64: INTCONbits.GIE = 1;
  1440  00067E  8EF2               	bsf	intcon,7,c	;volatile
  1441                           
  1442                           ;user.c: 65: INTCONbits.PEIE = 1;
  1443  000680  8CF2               	bsf	intcon,6,c	;volatile
  1444                           
  1445                           ;user.c: 66: INTCONbits.TMR0IE = 1;
  1446  000682  8AF2               	bsf	intcon,5,c	;volatile
  1447                           
  1448                           ;user.c: 67: INTCONbits.TMR0IF = 0;
  1449  000684  94F2               	bcf	intcon,2,c	;volatile
  1450                           
  1451                           ;user.c: 68: INTCON2bits.TMR0IP = 1;
  1452  000686  84F1               	bsf	intcon2,2,c	;volatile
  1453                           
  1454                           ;user.c: 69: T0CONbits.T08BIT = 1;
  1455  000688  8CD5               	bsf	4053,6,c	;volatile
  1456                           
  1457                           ;user.c: 70: T0CONbits.T0CS = 0;
  1458  00068A  9AD5               	bcf	4053,5,c	;volatile
  1459                           
  1460                           ;user.c: 71: T0CONbits.PSA = 0;
  1461  00068C  96D5               	bcf	4053,3,c	;volatile
  1462                           
  1463                           ;user.c: 72: T0CONbits.T0PS = 0b101;
  1464  00068E  50D5               	movf	4053,w,c	;volatile
  1465  000690  0BF8               	andlw	-8
  1466  000692  0905               	iorlw	5
  1467  000694  6ED5               	movwf	4053,c	;volatile
  1468                           
  1469                           ;user.c: 73: TMR0 = 0x6;
  1470  000696  0E00               	movlw	0
  1471  000698  6ED7               	movwf	4055,c	;volatile
  1472  00069A  0E06               	movlw	6
  1473  00069C  6ED6               	movwf	4054,c	;volatile
  1474                           
  1475                           ;user.c: 75: TRISBbits.RB1 = 1;
  1476  00069E  8293               	bsf	3987,1,c	;volatile
  1477                           
  1478                           ;user.c: 76: TRISBbits.RB2 = 1;
  1479  0006A0  8493               	bsf	3987,2,c	;volatile
  1480                           
  1481                           ;user.c: 77: INTCON3bits.INT1IE = 1;
  1482  0006A2  86F0               	bsf	intcon3,3,c	;volatile
  1483                           
  1484                           ;user.c: 78: INTCON3bits.INT2IE = 1;
  1485  0006A4  88F0               	bsf	intcon3,4,c	;volatile
  1486                           
  1487                           ;user.c: 79: INTCON3bits.INT1IF = 0;
  1488  0006A6  90F0               	bcf	intcon3,0,c	;volatile
  1489                           
  1490                           ;user.c: 80: INTCON3bits.INT2IF = 0;
  1491  0006A8  92F0               	bcf	intcon3,1,c	;volatile
  1492                           
  1493                           ;user.c: 81: INTCON2bits.INTEDG1 = 0;
  1494  0006AA  9AF1               	bcf	intcon2,5,c	;volatile
  1495                           
  1496                           ;user.c: 82: INTCON2bits.INTEDG2 = 0;
  1497  0006AC  98F1               	bcf	intcon2,4,c	;volatile
  1498                           
  1499                           ;user.c: 84: TRISCbits.RC6 = 0;
  1500  0006AE  9C94               	bcf	3988,6,c	;volatile
  1501                           
  1502                           ;user.c: 85: TRISCbits.RC7 = 1;
  1503  0006B0  8E94               	bsf	3988,7,c	;volatile
  1504                           
  1505                           ;user.c: 86: BRGH = 1;
  1506  0006B2  84AC               	bsf	4012,2,c	;volatile
  1507                           
  1508                           ;user.c: 87: BRG16 = 1;
  1509  0006B4  86B8               	bsf	4024,3,c	;volatile
  1510                           
  1511                           ;user.c: 88: SPBRG = 207;
  1512  0006B6  0ECF               	movlw	207
  1513  0006B8  6EAF               	movwf	4015,c	;volatile
  1514                           
  1515                           ;user.c: 89: SPEN = 1;
  1516  0006BA  8EAB               	bsf	4011,7,c	;volatile
  1517                           
  1518                           ;user.c: 90: SYNC = 0;
  1519  0006BC  98AC               	bcf	4012,4,c	;volatile
  1520                           
  1521                           ;user.c: 91: TXEN = 1;
  1522  0006BE  8AAC               	bsf	4012,5,c	;volatile
  1523                           
  1524                           ;user.c: 92: CREN = 1;
  1525  0006C0  88AB               	bsf	4011,4,c	;volatile
  1526                           
  1527                           ;user.c: 93: TX9 = 0;
  1528  0006C2  9CAC               	bcf	4012,6,c	;volatile
  1529                           
  1530                           ;user.c: 94: RX9 = 0;
  1531  0006C4  9CAB               	bcf	4011,6,c	;volatile
  1532                           
  1533                           ;user.c: 95: RCIE = 1;
  1534  0006C6  8A9D               	bsf	3997,5,c	;volatile
  1535                           
  1536                           ;user.c: 96: TXIE = 0;
  1537  0006C8  989D               	bcf	3997,4,c	;volatile
  1538                           
  1539                           ;user.c: 98: PR2 = 99;
  1540  0006CA  0E63               	movlw	99
  1541  0006CC  6ECB               	movwf	4043,c	;volatile
  1542                           
  1543                           ;user.c: 99: CCP1CONbits.DC1B = 0;
  1544  0006CE  0ECF               	movlw	-49
  1545  0006D0  16BD               	andwf	4029,f,c	;volatile
  1546                           
  1547                           ;user.c: 100: T2CONbits.T2CKPS = 0b00;
  1548  0006D2  0EFC               	movlw	-4
  1549  0006D4  16CA               	andwf	4042,f,c	;volatile
  1550                           
  1551                           ;user.c: 101: T2CONbits.TMR2ON = 1;
  1552  0006D6  84CA               	bsf	4042,2,c	;volatile
  1553                           
  1554                           ;user.c: 102: CCP1CONbits.CCP1M = 0b1111;
  1555  0006D8  80BD               	bsf	4029,0,c	;volatile
  1556  0006DA  82BD               	bsf	4029,1,c	;volatile
  1557  0006DC  84BD               	bsf	4029,2,c	;volatile
  1558  0006DE  86BD               	bsf	4029,3,c	;volatile
  1559  0006E0  0012               	return		;funcret
  1560  0006E2                     __end_of_InitApp:
  1561                           	opt stack 0
  1562                           tblptru	equ	0xFF8
  1563                           tblptrh	equ	0xFF7
  1564                           tblptrl	equ	0xFF6
  1565                           tablat	equ	0xFF5
  1566                           prodh	equ	0xFF4
  1567                           prodl	equ	0xFF3
  1568                           intcon	equ	0xFF2
  1569                           intcon2	equ	0xFF1
  1570                           intcon3	equ	0xFF0
  1571                           postinc0	equ	0xFEE
  1572                           wreg	equ	0xFE8
  1573                           postdec1	equ	0xFE5
  1574                           fsr1l	equ	0xFE1
  1575                           status	equ	0xFD8
  1576                           
  1577 ;; *************** function _ConfigureOscillator *****************
  1578 ;; Defined at:
  1579 ;;		line 24 in file "system.c"
  1580 ;; Parameters:    Size  Location     Type
  1581 ;;		None
  1582 ;; Auto vars:     Size  Location     Type
  1583 ;;		None
  1584 ;; Return value:  Size  Location     Type
  1585 ;;                  1    wreg      void 
  1586 ;; Registers used:
  1587 ;;		wreg, status,2
  1588 ;; Tracked objects:
  1589 ;;		On entry : 0/0
  1590 ;;		On exit  : 0/0
  1591 ;;		Unchanged: 0/0
  1592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1593 ;;      Params:         0       0       0       0       0       0       0       0       0
  1594 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1595 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1596 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1597 ;;Total ram usage:        0 bytes
  1598 ;; Hardware stack levels used:    1
  1599 ;; Hardware stack levels required when called:    3
  1600 ;; This function calls:
  1601 ;;		Nothing
  1602 ;; This function is called by:
  1603 ;;		_main
  1604 ;; This function uses a non-reentrant model
  1605 ;;
  1606                           
  1607                           	psect	text4
  1608  0007B4                     __ptext4:
  1609                           	opt stack 0
  1610  0007B4                     _ConfigureOscillator:
  1611                           	opt stack 27
  1612                           
  1613                           ;system.c: 27: OSCCONbits.IRCF = 0b111;
  1614                           
  1615                           ;incstack = 0
  1616  0007B4  88D3               	bsf	4051,4,c	;volatile
  1617  0007B6  8AD3               	bsf	4051,5,c	;volatile
  1618  0007B8  8CD3               	bsf	4051,6,c	;volatile
  1619                           
  1620                           ;system.c: 28: OSCCONbits.SCS = 0b11;
  1621  0007BA  0E03               	movlw	3
  1622  0007BC  12D3               	iorwf	4051,f,c	;volatile
  1623  0007BE  0012               	return		;funcret
  1624  0007C0                     __end_of_ConfigureOscillator:
  1625                           	opt stack 0
  1626                           tblptru	equ	0xFF8
  1627                           tblptrh	equ	0xFF7
  1628                           tblptrl	equ	0xFF6
  1629                           tablat	equ	0xFF5
  1630                           prodh	equ	0xFF4
  1631                           prodl	equ	0xFF3
  1632                           intcon	equ	0xFF2
  1633                           intcon2	equ	0xFF1
  1634                           intcon3	equ	0xFF0
  1635                           postinc0	equ	0xFEE
  1636                           wreg	equ	0xFE8
  1637                           postdec1	equ	0xFE5
  1638                           fsr1l	equ	0xFE1
  1639                           status	equ	0xFD8
  1640                           
  1641 ;; *************** function _high_isr *****************
  1642 ;; Defined at:
  1643 ;;		line 63 in file "interrupts.c"
  1644 ;; Parameters:    Size  Location     Type
  1645 ;;		None
  1646 ;; Auto vars:     Size  Location     Type
  1647 ;;		None
  1648 ;; Return value:  Size  Location     Type
  1649 ;;                  1    wreg      void 
  1650 ;; Registers used:
  1651 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1652 ;; Tracked objects:
  1653 ;;		On entry : 0/0
  1654 ;;		On exit  : 0/0
  1655 ;;		Unchanged: 0/0
  1656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1657 ;;      Params:         0       0       0       0       0       0       0       0       0
  1658 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1659 ;;      Temps:         19       0       0       0       0       0       0       0       0
  1660 ;;      Totals:        19       0       0       0       0       0       0       0       0
  1661 ;;Total ram usage:       19 bytes
  1662 ;; Hardware stack levels used:    1
  1663 ;; Hardware stack levels required when called:    2
  1664 ;; This function calls:
  1665 ;;		_mot_3_step_count
  1666 ;; This function is called by:
  1667 ;;		Interrupt level 2
  1668 ;; This function uses a non-reentrant model
  1669 ;;
  1670                           
  1671                           	psect	intcode
  1672  000008                     __pintcode:
  1673                           	opt stack 0
  1674  000008                     _high_isr:
  1675                           	opt stack 27
  1676                           
  1677                           ;incstack = 0
  1678  000008  8254               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  1679  00000A  EDD7  F001         	call	int_func,f	;refresh shadow registers
  1680                           tblptru	equ	0xFF8
  1681                           tblptrh	equ	0xFF7
  1682                           tblptrl	equ	0xFF6
  1683                           tablat	equ	0xFF5
  1684                           prodh	equ	0xFF4
  1685                           prodl	equ	0xFF3
  1686                           intcon	equ	0xFF2
  1687                           intcon2	equ	0xFF1
  1688                           intcon3	equ	0xFF0
  1689                           postinc0	equ	0xFEE
  1690                           wreg	equ	0xFE8
  1691                           postdec1	equ	0xFE5
  1692                           fsr1l	equ	0xFE1
  1693                           status	equ	0xFD8
  1694                           
  1695                           	psect	intcode_body
  1696  0003AE                     __pintcode_body:
  1697                           	opt stack 27
  1698  0003AE                     int_func:
  1699                           	opt stack 27
  1700  0003AE  0006               	pop		; remove dummy address from shadow register refresh
  1701  0003B0  CFFA F031          	movff	pclath,??_high_isr+1
  1702  0003B4  CFFB F032          	movff	pclatu,??_high_isr+2
  1703  0003B8  CFE9 F033          	movff	fsr0l,??_high_isr+3
  1704  0003BC  CFEA F034          	movff	fsr0h,??_high_isr+4
  1705  0003C0  CFE1 F035          	movff	fsr1l,??_high_isr+5
  1706  0003C4  CFE2 F036          	movff	fsr1h,??_high_isr+6
  1707  0003C8  CFD9 F037          	movff	fsr2l,??_high_isr+7
  1708  0003CC  CFDA F038          	movff	fsr2h,??_high_isr+8
  1709  0003D0  CFF3 F039          	movff	prodl,??_high_isr+9
  1710  0003D4  CFF4 F03A          	movff	prodh,??_high_isr+10
  1711  0003D8  CFF6 F03B          	movff	tblptrl,??_high_isr+11
  1712  0003DC  CFF7 F03C          	movff	tblptrh,??_high_isr+12
  1713  0003E0  CFF8 F03D          	movff	tblptru,??_high_isr+13
  1714  0003E4  CFF5 F03E          	movff	tablat,??_high_isr+14
  1715  0003E8  C054  F03F         	movff	btemp,??_high_isr+15
  1716  0003EC  C055  F040         	movff	btemp+1,??_high_isr+16
  1717  0003F0  C056  F041         	movff	btemp+2,??_high_isr+17
  1718  0003F4  C057  F042         	movff	btemp+3,??_high_isr+18
  1719                           
  1720                           ;interrupts.c: 64: if (INTCONbits.TMR0IF) {
  1721  0003F8  A4F2               	btfss	intcon,2,c	;volatile
  1722  0003FA  D0B6               	goto	i2l87
  1723                           
  1724                           ;interrupts.c: 66: INTCONbits.TMR0IF = 0;
  1725  0003FC  94F2               	bcf	intcon,2,c	;volatile
  1726                           
  1727                           ;interrupts.c: 67: TMR0 = 250;
  1728  0003FE  0E00               	movlw	0
  1729  000400  6ED7               	movwf	4055,c	;volatile
  1730  000402  0EFA               	movlw	250
  1731  000404  6ED6               	movwf	4054,c	;volatile
  1732                           
  1733                           ;interrupts.c: 68: MOT_1_count++;
  1734  000406  4A0F               	infsnz	_MOT_1_count,f,c
  1735  000408  2A10               	incf	_MOT_1_count+1,f,c
  1736                           
  1737                           ;interrupts.c: 69: MOT_2_count++;
  1738  00040A  4A0D               	infsnz	_MOT_2_count,f,c
  1739  00040C  2A0E               	incf	_MOT_2_count+1,f,c
  1740                           
  1741                           ;interrupts.c: 70: MOT_3_count++;
  1742  00040E  4A0B               	infsnz	_MOT_3_count,f,c
  1743  000410  2A0C               	incf	_MOT_3_count+1,f,c
  1744                           
  1745                           ;interrupts.c: 71: MOT_4_count++;
  1746  000412  4A09               	infsnz	_MOT_4_count,f,c
  1747  000414  2A0A               	incf	_MOT_4_count+1,f,c
  1748                           
  1749                           ;interrupts.c: 73: if (MOT_1) {
  1750  000416  5053               	movf	_MOT_1,w,c
  1751  000418  B4D8               	btfsc	status,2,c
  1752  00041A  D032               	goto	i2l92
  1753                           
  1754                           ;interrupts.c: 74: if (MOT_1_count == count_1) {
  1755  00041C  504D               	movf	_count_1,w,c
  1756  00041E  180F               	xorwf	_MOT_1_count,w,c
  1757  000420  E12F               	bnz	i2l88
  1758  000422  504E               	movf	_count_1+1,w,c
  1759  000424  1810               	xorwf	_MOT_1_count+1,w,c
  1760  000426  A4D8               	btfss	status,2,c
  1761  000428  D02B               	goto	i2l92
  1762                           
  1763                           ;interrupts.c: 75: LATAbits.LA3 = !PORTAbits.RA3;
  1764  00042A  B680               	btfsc	3968,3,c	;volatile
  1765  00042C  D003               	goto	i2u79_40
  1766  00042E  6A30               	clrf	??_high_isr& (0+255),c
  1767  000430  2A30               	incf	??_high_isr& (0+255),f,c
  1768  000432  D001               	goto	i2u80_48
  1769  000434                     i2u79_40:
  1770  000434  6A30               	clrf	??_high_isr& (0+255),c
  1771  000436                     i2u80_48:
  1772  000436  4630               	rlncf	??_high_isr,f,c
  1773  000438  4630               	rlncf	??_high_isr,f,c
  1774  00043A  4630               	rlncf	??_high_isr,f,c
  1775  00043C  5089               	movf	3977,w,c	;volatile
  1776  00043E  1830               	xorwf	??_high_isr,w,c
  1777  000440  0BF7               	andlw	-9
  1778  000442  1830               	xorwf	??_high_isr,w,c
  1779  000444  6E89               	movwf	3977,c	;volatile
  1780                           
  1781                           ;interrupts.c: 76: MOT_1_count = 0;
  1782  000446  0E00               	movlw	0
  1783  000448  6E10               	movwf	_MOT_1_count+1,c
  1784  00044A  0E00               	movlw	0
  1785  00044C  6E0F               	movwf	_MOT_1_count,c
  1786                           
  1787                           ;interrupts.c: 78: if (zero_flag) {
  1788  00044E  5023               	movf	_zero_flag,w,c
  1789  000450  B4D8               	btfsc	status,2,c
  1790  000452  D016               	goto	i2l92
  1791                           
  1792                           ;interrupts.c: 79: mot_1_steps++;
  1793  000454  4A07               	infsnz	_mot_1_steps,f,c
  1794  000456  2A08               	incf	_mot_1_steps+1,f,c
  1795                           
  1796                           ;interrupts.c: 80: if (mot_1_steps == 200) {
  1797  000458  0EC8               	movlw	200
  1798  00045A  1807               	xorwf	_mot_1_steps,w,c
  1799  00045C  1008               	iorwf	_mot_1_steps+1,w,c
  1800  00045E  A4D8               	btfss	status,2,c
  1801  000460  D006               	goto	i2l91
  1802                           
  1803                           ;interrupts.c: 82: mot_1_steps = 0;
  1804  000462  0E00               	movlw	0
  1805  000464  6E08               	movwf	_mot_1_steps+1,c
  1806  000466  0E00               	movlw	0
  1807  000468  6E07               	movwf	_mot_1_steps,c
  1808                           
  1809                           ;interrupts.c: 83: turns_count++;
  1810  00046A  4A01               	infsnz	_turns_count,f,c
  1811  00046C  2A02               	incf	_turns_count+1,f,c
  1812  00046E                     i2l91:
  1813                           
  1814                           ;interrupts.c: 84: }
  1815                           ;interrupts.c: 85: if (turns_count == (turns)) {
  1816  00046E  5051               	movf	_turns,w,c
  1817  000470  1801               	xorwf	_turns_count,w,c
  1818  000472  E106               	bnz	i2l88
  1819  000474  5052               	movf	_turns+1,w,c
  1820  000476  1802               	xorwf	_turns_count+1,w,c
  1821  000478  A4D8               	btfss	status,2,c
  1822  00047A  D002               	goto	i2l92
  1823                           
  1824                           ;interrupts.c: 86: finish = 1;
  1825  00047C  0E01               	movlw	1
  1826  00047E  6E22               	movwf	_finish,c
  1827  000480                     i2l92:
  1828  000480                     i2l88:
  1829                           
  1830                           ;interrupts.c: 87: }
  1831                           ;interrupts.c: 88: }
  1832                           ;interrupts.c: 89: }
  1833                           ;interrupts.c: 90: }
  1834                           ;interrupts.c: 91: if (MOT_2) {
  1835  000480  5021               	movf	_MOT_2,w,c
  1836  000482  B4D8               	btfsc	status,2,c
  1837  000484  D018               	goto	i2l94
  1838                           
  1839                           ;interrupts.c: 92: if (MOT_2_count == count_2) {
  1840  000486  504B               	movf	_count_2,w,c
  1841  000488  180D               	xorwf	_MOT_2_count,w,c
  1842  00048A  E115               	bnz	i2l1416
  1843  00048C  504C               	movf	_count_2+1,w,c
  1844  00048E  180E               	xorwf	_MOT_2_count+1,w,c
  1845  000490  A4D8               	btfss	status,2,c
  1846  000492  D011               	goto	i2l94
  1847                           
  1848                           ;interrupts.c: 93: LATAbits.LA5 = !PORTAbits.RA5;
  1849  000494  BA80               	btfsc	3968,5,c	;volatile
  1850  000496  D003               	goto	i2u86_40
  1851  000498  6A30               	clrf	??_high_isr& (0+255),c
  1852  00049A  2A30               	incf	??_high_isr& (0+255),f,c
  1853  00049C  D001               	goto	i2u87_48
  1854  00049E                     i2u86_40:
  1855  00049E  6A30               	clrf	??_high_isr& (0+255),c
  1856  0004A0                     i2u87_48:
  1857  0004A0  3A30               	swapf	??_high_isr,f,c
  1858  0004A2  4630               	rlncf	??_high_isr,f,c
  1859  0004A4  5089               	movf	3977,w,c	;volatile
  1860  0004A6  1830               	xorwf	??_high_isr,w,c
  1861  0004A8  0BDF               	andlw	-33
  1862  0004AA  1830               	xorwf	??_high_isr,w,c
  1863  0004AC  6E89               	movwf	3977,c	;volatile
  1864                           
  1865                           ;interrupts.c: 94: MOT_2_count = 0;
  1866  0004AE  0E00               	movlw	0
  1867  0004B0  6E0E               	movwf	_MOT_2_count+1,c
  1868  0004B2  0E00               	movlw	0
  1869  0004B4  6E0D               	movwf	_MOT_2_count,c
  1870  0004B6                     i2l94:
  1871  0004B6                     i2l1416:
  1872                           
  1873                           ;interrupts.c: 95: }
  1874                           ;interrupts.c: 96: }
  1875                           ;interrupts.c: 97: if (MOT_3) {
  1876  0004B6  5020               	movf	_MOT_3,w,c
  1877  0004B8  B4D8               	btfsc	status,2,c
  1878  0004BA  D037               	goto	i2l98
  1879                           
  1880                           ;interrupts.c: 98: if (MOT_3_count == count_3) {
  1881  0004BC  5049               	movf	_count_3,w,c
  1882  0004BE  180B               	xorwf	_MOT_3_count,w,c
  1883  0004C0  E134               	bnz	i2l95
  1884  0004C2  504A               	movf	_count_3+1,w,c
  1885  0004C4  180C               	xorwf	_MOT_3_count+1,w,c
  1886  0004C6  A4D8               	btfss	status,2,c
  1887  0004C8  D030               	goto	i2l98
  1888                           
  1889                           ;interrupts.c: 99: LATCbits.LC1 = !PORTCbits.RC1;
  1890  0004CA  B282               	btfsc	3970,1,c	;volatile
  1891  0004CC  D003               	goto	i2u90_40
  1892  0004CE  6A30               	clrf	??_high_isr& (0+255),c
  1893  0004D0  2A30               	incf	??_high_isr& (0+255),f,c
  1894  0004D2  D001               	goto	i2u91_48
  1895  0004D4                     i2u90_40:
  1896  0004D4  6A30               	clrf	??_high_isr& (0+255),c
  1897  0004D6                     i2u91_48:
  1898  0004D6  4630               	rlncf	??_high_isr,f,c
  1899  0004D8  508B               	movf	3979,w,c	;volatile
  1900  0004DA  1830               	xorwf	??_high_isr,w,c
  1901  0004DC  0BFD               	andlw	-3
  1902  0004DE  1830               	xorwf	??_high_isr,w,c
  1903  0004E0  6E8B               	movwf	3979,c	;volatile
  1904                           
  1905                           ;interrupts.c: 100: MOT_3_count = 0;
  1906  0004E2  0E00               	movlw	0
  1907  0004E4  6E0C               	movwf	_MOT_3_count+1,c
  1908  0004E6  0E00               	movlw	0
  1909  0004E8  6E0B               	movwf	_MOT_3_count,c
  1910                           
  1911                           ;interrupts.c: 101: if (zero_flag == 1) {
  1912  0004EA  0423               	decf	_zero_flag,w,c
  1913  0004EC  A4D8               	btfss	status,2,c
  1914  0004EE  D01D               	goto	i2l98
  1915                           
  1916                           ;interrupts.c: 103: mot_3_steps++;
  1917  0004F0  4A05               	infsnz	_mot_3_steps,f,c
  1918  0004F2  2A06               	incf	_mot_3_steps+1,f,c
  1919                           
  1920                           ;interrupts.c: 104: if (mot_3_steps >= mot_3_step_count(length, 1)) {
  1921  0004F4  C04F  F02A         	movff	_length,mot_3_step_count@l
  1922  0004F8  C050  F02B         	movff	_length+1,mot_3_step_count@l+1
  1923  0004FC  0E00               	movlw	0
  1924  0004FE  6E2D               	movwf	mot_3_step_count@ms+1,c
  1925  000500  0E01               	movlw	1
  1926  000502  6E2C               	movwf	mot_3_step_count@ms,c
  1927  000504  ECB9  F003         	call	_mot_3_step_count	;wreg free
  1928  000508  502A               	movf	?_mot_3_step_count,w,c
  1929  00050A  5C05               	subwf	_mot_3_steps,w,c
  1930  00050C  502B               	movf	?_mot_3_step_count+1,w,c
  1931  00050E  5806               	subwfb	_mot_3_steps+1,w,c
  1932  000510  A0D8               	btfss	status,0,c
  1933  000512  D00B               	goto	i2l98
  1934                           
  1935                           ;interrupts.c: 105: DIR_3 = !DIR_3;
  1936  000514  501F               	movf	_DIR_3,w,c
  1937  000516  A4D8               	btfss	status,2,c
  1938  000518  D002               	goto	i2u94_40
  1939  00051A  0E01               	movlw	1
  1940  00051C  D001               	goto	i2u95_40
  1941  00051E                     i2u94_40:
  1942  00051E  0E00               	movlw	0
  1943  000520                     i2u95_40:
  1944  000520  6E1F               	movwf	_DIR_3,c
  1945                           
  1946                           ;interrupts.c: 106: mot_3_steps = 0;
  1947  000522  0E00               	movlw	0
  1948  000524  6E06               	movwf	_mot_3_steps+1,c
  1949  000526  0E00               	movlw	0
  1950  000528  6E05               	movwf	_mot_3_steps,c
  1951  00052A                     i2l98:
  1952  00052A                     i2l95:
  1953                           
  1954                           ;interrupts.c: 107: }
  1955                           ;interrupts.c: 108: }
  1956                           ;interrupts.c: 109: }
  1957                           ;interrupts.c: 110: }
  1958                           ;interrupts.c: 111: if (MOT_4) {
  1959  00052A  501E               	movf	_MOT_4,w,c
  1960  00052C  B4D8               	btfsc	status,2,c
  1961  00052E  D05D               	goto	i2l113
  1962                           
  1963                           ;interrupts.c: 112: if (MOT_4_count == count_4) {
  1964  000530  5047               	movf	_count_4,w,c
  1965  000532  1809               	xorwf	_MOT_4_count,w,c
  1966  000534  E15A               	bnz	i2l101
  1967  000536  5048               	movf	_count_4+1,w,c
  1968  000538  180A               	xorwf	_MOT_4_count+1,w,c
  1969  00053A  A4D8               	btfss	status,2,c
  1970  00053C  D056               	goto	i2l113
  1971                           
  1972                           ;interrupts.c: 113: LATBbits.LB6 = !PORTBbits.RB6;
  1973  00053E  BC81               	btfsc	3969,6,c	;volatile
  1974  000540  D003               	goto	i2u98_40
  1975  000542  6A30               	clrf	??_high_isr& (0+255),c
  1976  000544  2A30               	incf	??_high_isr& (0+255),f,c
  1977  000546  D001               	goto	i2u99_48
  1978  000548                     i2u98_40:
  1979  000548  6A30               	clrf	??_high_isr& (0+255),c
  1980  00054A                     i2u99_48:
  1981  00054A  3A30               	swapf	??_high_isr,f,c
  1982  00054C  4630               	rlncf	??_high_isr,f,c
  1983  00054E  4630               	rlncf	??_high_isr,f,c
  1984  000550  508A               	movf	3978,w,c	;volatile
  1985  000552  1830               	xorwf	??_high_isr,w,c
  1986  000554  0BBF               	andlw	-65
  1987  000556  1830               	xorwf	??_high_isr,w,c
  1988  000558  6E8A               	movwf	3978,c	;volatile
  1989                           
  1990                           ;interrupts.c: 114: MOT_4_count = 0;
  1991  00055A  0E00               	movlw	0
  1992  00055C  6E0A               	movwf	_MOT_4_count+1,c
  1993  00055E  0E00               	movlw	0
  1994  000560  6E09               	movwf	_MOT_4_count,c
  1995                           
  1996                           ;interrupts.c: 115: mot_4_steps++;
  1997  000562  4A03               	infsnz	_mot_4_steps,f,c
  1998  000564  2A04               	incf	_mot_4_steps+1,f,c
  1999                           
  2000                           ;interrupts.c: 117: }
  2001                           ;interrupts.c: 118: }
  2002                           ;interrupts.c: 120: } else if (PIR1bits.RCIF) {
  2003  000566  D041               	goto	i2l113
  2004  000568                     i2l87:
  2005  000568  AA9E               	btfss	3998,5,c	;volatile
  2006  00056A  D016               	goto	i2l102
  2007                           
  2008                           ;interrupts.c: 122: PIR1bits.RCIF = 0;
  2009  00056C  9A9E               	bcf	3998,5,c	;volatile
  2010                           
  2011                           ;interrupts.c: 123: palabra[n] = RCREG;
  2012  00056E  0E60               	movlw	low _palabra
  2013  000570  2415               	addwf	_n,w,c
  2014  000572  6ED9               	movwf	fsr2l,c
  2015  000574  0E00               	movlw	high _palabra
  2016  000576  2016               	addwfc	_n+1,w,c
  2017  000578  6EDA               	movwf	fsr2h,c
  2018  00057A  CFAE FFDF          	movff	4014,indf2	;volatile
  2019                           
  2020                           ;interrupts.c: 124: n++;
  2021  00057E  4A15               	infsnz	_n,f,c
  2022  000580  2A16               	incf	_n+1,f,c
  2023                           
  2024                           ;interrupts.c: 125: if (RCREG == '\n') {
  2025  000582  0E0A               	movlw	10
  2026  000584  18AE               	xorwf	4014,w,c	;volatile
  2027  000586  A4D8               	btfss	status,2,c
  2028  000588  D030               	goto	i2l113
  2029                           
  2030                           ;interrupts.c: 128: recibi = 1;
  2031  00058A  0E01               	movlw	1
  2032  00058C  6E1C               	movwf	_recibi,c
  2033                           
  2034                           ;interrupts.c: 129: n = 0;
  2035  00058E  0E00               	movlw	0
  2036  000590  6E16               	movwf	_n+1,c
  2037  000592  0E00               	movlw	0
  2038  000594  6E15               	movwf	_n,c
  2039                           
  2040                           ;interrupts.c: 130: }
  2041                           ;interrupts.c: 131: } else if (PIR1bits.ADIF) {
  2042  000596  D029               	goto	i2l113
  2043  000598                     i2l102:
  2044  000598  AC9E               	btfss	3998,6,c	;volatile
  2045  00059A  D006               	goto	i2l105
  2046                           
  2047                           ;interrupts.c: 133: PIR1bits.ADIF = 0;
  2048  00059C  9C9E               	bcf	3998,6,c	;volatile
  2049                           
  2050                           ;interrupts.c: 139: ADC_value_press = ADRES;
  2051  00059E  CFC3 F011          	movff	4035,_ADC_value_press	;volatile
  2052  0005A2  CFC4 F012          	movff	4036,_ADC_value_press+1	;volatile
  2053                           
  2054                           ;interrupts.c: 141: } else if (INTCON3bits.INT1IF) {
  2055  0005A6  D021               	goto	i2l113
  2056  0005A8                     i2l105:
  2057  0005A8  A0F0               	btfss	intcon3,0,c	;volatile
  2058  0005AA  D009               	goto	i2l107
  2059                           
  2060                           ;interrupts.c: 143: INTCON3bits.INT1IF = 0;
  2061  0005AC  90F0               	bcf	intcon3,0,c	;volatile
  2062                           
  2063                           ;interrupts.c: 145: if (busy_flag) {
  2064  0005AE  501D               	movf	_busy_flag,w,c
  2065  0005B0  A4D8               	btfss	status,2,c
  2066  0005B2  D00B               	goto	i2u108_40
  2067                           
  2068                           ;interrupts.c: 154: DIR_3 = !DIR_3;
  2069                           
  2070                           ;interrupts.c: 152: } else {
  2071                           
  2072                           ;interrupts.c: 150: MOT_4 = 0;
  2073                           
  2074                           ;interrupts.c: 149: MOT_3 = 0;
  2075                           
  2076                           ;interrupts.c: 148: MOT_2 = 0;
  2077                           
  2078                           ;interrupts.c: 147: MOT_1 = 0;
  2079  0005B4  501F               	movf	_DIR_3,w,c
  2080  0005B6  A4D8               	btfss	status,2,c
  2081  0005B8  D016               	goto	i2u109_40
  2082  0005BA  0E01               	movlw	1
  2083  0005BC  D015               	goto	i2u110_40
  2084  0005BE                     i2l107:
  2085  0005BE  A2F0               	btfss	intcon3,1,c	;volatile
  2086  0005C0  D014               	goto	i2l113
  2087                           
  2088                           ;interrupts.c: 159: INTCON3bits.INT2IF = 0;
  2089  0005C2  92F0               	bcf	intcon3,1,c	;volatile
  2090                           
  2091                           ;interrupts.c: 161: if (busy_flag) {
  2092  0005C4  501D               	movf	_busy_flag,w,c
  2093  0005C6  B4D8               	btfsc	status,2,c
  2094  0005C8  D009               	goto	i2l112
  2095  0005CA                     i2u108_40:
  2096                           
  2097                           ;interrupts.c: 163: MOT_1 = 0;
  2098  0005CA  0E00               	movlw	0
  2099  0005CC  6E53               	movwf	_MOT_1,c
  2100                           
  2101                           ;interrupts.c: 164: MOT_2 = 0;
  2102  0005CE  0E00               	movlw	0
  2103  0005D0  6E21               	movwf	_MOT_2,c
  2104                           
  2105                           ;interrupts.c: 165: MOT_3 = 0;
  2106  0005D2  0E00               	movlw	0
  2107  0005D4  6E20               	movwf	_MOT_3,c
  2108                           
  2109                           ;interrupts.c: 166: MOT_4 = 0;
  2110  0005D6  0E00               	movlw	0
  2111  0005D8  6E1E               	movwf	_MOT_4,c
  2112                           
  2113                           ;interrupts.c: 168: } else {
  2114  0005DA  D007               	goto	i2l113
  2115  0005DC                     i2l112:
  2116                           
  2117                           ;interrupts.c: 170: DIR_3 = !DIR_3;
  2118  0005DC  501F               	movf	_DIR_3,w,c
  2119  0005DE  A4D8               	btfss	status,2,c
  2120  0005E0  D002               	goto	i2u109_40
  2121  0005E2  0E01               	movlw	1
  2122  0005E4  D001               	goto	i2u110_40
  2123  0005E6                     i2u109_40:
  2124  0005E6  0E00               	movlw	0
  2125  0005E8                     i2u110_40:
  2126  0005E8  6E1F               	movwf	_DIR_3,c
  2127  0005EA                     i2l113:
  2128  0005EA                     i2l101:
  2129  0005EA  C042  F057         	movff	??_high_isr+18,btemp+3
  2130  0005EE  C041  F056         	movff	??_high_isr+17,btemp+2
  2131  0005F2  C040  F055         	movff	??_high_isr+16,btemp+1
  2132  0005F6  C03F  F054         	movff	??_high_isr+15,btemp
  2133  0005FA  C03E  FFF5         	movff	??_high_isr+14,tablat
  2134  0005FE  C03D  FFF8         	movff	??_high_isr+13,tblptru
  2135  000602  C03C  FFF7         	movff	??_high_isr+12,tblptrh
  2136  000606  C03B  FFF6         	movff	??_high_isr+11,tblptrl
  2137  00060A  C03A  FFF4         	movff	??_high_isr+10,prodh
  2138  00060E  C039  FFF3         	movff	??_high_isr+9,prodl
  2139  000612  C038  FFDA         	movff	??_high_isr+8,fsr2h
  2140  000616  C037  FFD9         	movff	??_high_isr+7,fsr2l
  2141  00061A  C036  FFE2         	movff	??_high_isr+6,fsr1h
  2142  00061E  C035  FFE1         	movff	??_high_isr+5,fsr1l
  2143  000622  C034  FFEA         	movff	??_high_isr+4,fsr0h
  2144  000626  C033  FFE9         	movff	??_high_isr+3,fsr0l
  2145  00062A  C032  FFFB         	movff	??_high_isr+2,pclatu
  2146  00062E  C031  FFFA         	movff	??_high_isr+1,pclath
  2147  000632  9254               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  2148  000634  0011               	retfie		f
  2149  000636                     __end_of_high_isr:
  2150                           	opt stack 0
  2151                           pclatu	equ	0xFFB
  2152                           pclath	equ	0xFFA
  2153                           tblptru	equ	0xFF8
  2154                           tblptrh	equ	0xFF7
  2155                           tblptrl	equ	0xFF6
  2156                           tablat	equ	0xFF5
  2157                           prodh	equ	0xFF4
  2158                           prodl	equ	0xFF3
  2159                           intcon	equ	0xFF2
  2160                           intcon2	equ	0xFF1
  2161                           intcon3	equ	0xFF0
  2162                           postinc0	equ	0xFEE
  2163                           fsr0h	equ	0xFEA
  2164                           fsr0l	equ	0xFE9
  2165                           wreg	equ	0xFE8
  2166                           postdec1	equ	0xFE5
  2167                           fsr1h	equ	0xFE2
  2168                           fsr1l	equ	0xFE1
  2169                           indf2	equ	0xFDF
  2170                           fsr2h	equ	0xFDA
  2171                           fsr2l	equ	0xFD9
  2172                           status	equ	0xFD8
  2173                           
  2174 ;; *************** function _mot_3_step_count *****************
  2175 ;; Defined at:
  2176 ;;		line 234 in file "main.c"
  2177 ;; Parameters:    Size  Location     Type
  2178 ;;  l               2    6[COMRAM] unsigned int 
  2179 ;;  ms              2    8[COMRAM] unsigned int 
  2180 ;; Auto vars:     Size  Location     Type
  2181 ;;		None
  2182 ;; Return value:  Size  Location     Type
  2183 ;;                  2    6[COMRAM] unsigned int 
  2184 ;; Registers used:
  2185 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2186 ;; Tracked objects:
  2187 ;;		On entry : 0/0
  2188 ;;		On exit  : 0/0
  2189 ;;		Unchanged: 0/0
  2190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2191 ;;      Params:         4       0       0       0       0       0       0       0       0
  2192 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2193 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2194 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2195 ;;Total ram usage:        6 bytes
  2196 ;; Hardware stack levels used:    1
  2197 ;; Hardware stack levels required when called:    1
  2198 ;; This function calls:
  2199 ;;		i2___wmul
  2200 ;; This function is called by:
  2201 ;;		_high_isr
  2202 ;; This function uses a non-reentrant model
  2203 ;;
  2204                           
  2205                           	psect	text6
  2206  000772                     __ptext6:
  2207                           	opt stack 0
  2208  000772                     _mot_3_step_count:
  2209                           	opt stack 27
  2210                           
  2211                           ;main.c: 236: return (ms*l)/2;
  2212                           
  2213                           ;incstack = 0
  2214  000772  C02C  F024         	movff	mot_3_step_count@ms,i2___wmul@multiplier
  2215  000776  C02D  F025         	movff	mot_3_step_count@ms+1,i2___wmul@multiplier+1
  2216  00077A  C02A  F026         	movff	mot_3_step_count@l,i2___wmul@multiplicand
  2217  00077E  C02B  F027         	movff	mot_3_step_count@l+1,i2___wmul@multiplicand+1
  2218  000782  ECA6  F003         	call	i2___wmul	;wreg free
  2219  000786  90D8               	bcf	status,0,c
  2220  000788  3025               	rrcf	?i2___wmul+1,w,c
  2221  00078A  6E2E               	movwf	??_mot_3_step_count& (0+255),c
  2222  00078C  3024               	rrcf	?i2___wmul,w,c
  2223  00078E  6E2A               	movwf	?_mot_3_step_count,c
  2224  000790  C02E  F02B         	movff	??_mot_3_step_count,?_mot_3_step_count+1
  2225  000794  0012               	return	
  2226  000796                     __end_of_mot_3_step_count:
  2227                           	opt stack 0
  2228                           pclatu	equ	0xFFB
  2229                           pclath	equ	0xFFA
  2230                           tblptru	equ	0xFF8
  2231                           tblptrh	equ	0xFF7
  2232                           tblptrl	equ	0xFF6
  2233                           tablat	equ	0xFF5
  2234                           prodh	equ	0xFF4
  2235                           prodl	equ	0xFF3
  2236                           intcon	equ	0xFF2
  2237                           intcon2	equ	0xFF1
  2238                           intcon3	equ	0xFF0
  2239                           postinc0	equ	0xFEE
  2240                           fsr0h	equ	0xFEA
  2241                           fsr0l	equ	0xFE9
  2242                           wreg	equ	0xFE8
  2243                           postdec1	equ	0xFE5
  2244                           fsr1h	equ	0xFE2
  2245                           fsr1l	equ	0xFE1
  2246                           indf2	equ	0xFDF
  2247                           fsr2h	equ	0xFDA
  2248                           fsr2l	equ	0xFD9
  2249                           status	equ	0xFD8
  2250                           
  2251 ;; *************** function i2___wmul *****************
  2252 ;; Defined at:
  2253 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
  2254 ;; Parameters:    Size  Location     Type
  2255 ;;  multiplier      2    0[COMRAM] unsigned int 
  2256 ;;  multiplicand    2    2[COMRAM] unsigned int 
  2257 ;; Auto vars:     Size  Location     Type
  2258 ;;  __wmul          2    4[COMRAM] unsigned int 
  2259 ;; Return value:  Size  Location     Type
  2260 ;;                  2    0[COMRAM] unsigned int 
  2261 ;; Registers used:
  2262 ;;		wreg, status,2, status,0, prodl, prodh
  2263 ;; Tracked objects:
  2264 ;;		On entry : 0/0
  2265 ;;		On exit  : 0/0
  2266 ;;		Unchanged: 0/0
  2267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2268 ;;      Params:         4       0       0       0       0       0       0       0       0
  2269 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2270 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2271 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2272 ;;Total ram usage:        6 bytes
  2273 ;; Hardware stack levels used:    1
  2274 ;; This function calls:
  2275 ;;		Nothing
  2276 ;; This function is called by:
  2277 ;;		_mot_3_step_count
  2278 ;; This function uses a non-reentrant model
  2279 ;;
  2280                           
  2281                           	psect	text7
  2282  00074C                     __ptext7:
  2283                           	opt stack 0
  2284  00074C                     i2___wmul:
  2285                           	opt stack 27
  2286                           
  2287                           ;incstack = 0
  2288  00074C  5024               	movf	i2___wmul@multiplier,w,c
  2289  00074E  0226               	mulwf	i2___wmul@multiplicand,c
  2290  000750  CFF3 F028          	movff	prodl,i2___wmul@product
  2291  000754  CFF4 F029          	movff	prodh,i2___wmul@product+1
  2292  000758  5024               	movf	i2___wmul@multiplier,w,c
  2293  00075A  0227               	mulwf	i2___wmul@multiplicand+1,c
  2294  00075C  50F3               	movf	prodl,w,c
  2295  00075E  2629               	addwf	i2___wmul@product+1,f,c
  2296  000760  5025               	movf	i2___wmul@multiplier+1,w,c
  2297  000762  0226               	mulwf	i2___wmul@multiplicand,c
  2298  000764  50F3               	movf	prodl,w,c
  2299  000766  2629               	addwf	i2___wmul@product+1,f,c
  2300  000768  C028  F024         	movff	i2___wmul@product,?i2___wmul
  2301  00076C  C029  F025         	movff	i2___wmul@product+1,?i2___wmul+1
  2302  000770  0012               	return	
  2303  000772                     __end_ofi2___wmul:
  2304                           	opt stack 0
  2305  0000                     pclatu	equ	0xFFB
  2306                           pclath	equ	0xFFA
  2307                           tblptru	equ	0xFF8
  2308                           tblptrh	equ	0xFF7
  2309                           tblptrl	equ	0xFF6
  2310                           tablat	equ	0xFF5
  2311                           prodh	equ	0xFF4
  2312                           prodl	equ	0xFF3
  2313                           intcon	equ	0xFF2
  2314                           intcon2	equ	0xFF1
  2315                           intcon3	equ	0xFF0
  2316                           postinc0	equ	0xFEE
  2317                           fsr0h	equ	0xFEA
  2318                           fsr0l	equ	0xFE9
  2319                           wreg	equ	0xFE8
  2320                           postdec1	equ	0xFE5
  2321                           fsr1h	equ	0xFE2
  2322                           fsr1l	equ	0xFE1
  2323                           indf2	equ	0xFDF
  2324                           fsr2h	equ	0xFDA
  2325                           fsr2l	equ	0xFD9
  2326                           status	equ	0xFD8
  2327                           pclatu	equ	0xFFB
  2328                           pclath	equ	0xFFA
  2329                           tblptru	equ	0xFF8
  2330                           tblptrh	equ	0xFF7
  2331                           tblptrl	equ	0xFF6
  2332                           tablat	equ	0xFF5
  2333                           prodh	equ	0xFF4
  2334                           prodl	equ	0xFF3
  2335                           intcon	equ	0xFF2
  2336                           intcon2	equ	0xFF1
  2337                           intcon3	equ	0xFF0
  2338                           postinc0	equ	0xFEE
  2339                           fsr0h	equ	0xFEA
  2340                           fsr0l	equ	0xFE9
  2341                           wreg	equ	0xFE8
  2342                           postdec1	equ	0xFE5
  2343                           fsr1h	equ	0xFE2
  2344                           fsr1l	equ	0xFE1
  2345                           indf2	equ	0xFDF
  2346                           fsr2h	equ	0xFDA
  2347                           fsr2l	equ	0xFD9
  2348                           status	equ	0xFD8
  2349                           
  2350                           	psect	rparam
  2351  0000                     pclatu	equ	0xFFB
  2352                           pclath	equ	0xFFA
  2353                           tblptru	equ	0xFF8
  2354                           tblptrh	equ	0xFF7
  2355                           tblptrl	equ	0xFF6
  2356                           tablat	equ	0xFF5
  2357                           prodh	equ	0xFF4
  2358                           prodl	equ	0xFF3
  2359                           intcon	equ	0xFF2
  2360                           intcon2	equ	0xFF1
  2361                           intcon3	equ	0xFF0
  2362                           postinc0	equ	0xFEE
  2363                           fsr0h	equ	0xFEA
  2364                           fsr0l	equ	0xFE9
  2365                           wreg	equ	0xFE8
  2366                           postdec1	equ	0xFE5
  2367                           fsr1h	equ	0xFE2
  2368                           fsr1l	equ	0xFE1
  2369                           indf2	equ	0xFDF
  2370                           fsr2h	equ	0xFDA
  2371                           fsr2l	equ	0xFD9
  2372                           status	equ	0xFD8
  2373                           
  2374                           	psect	temp
  2375  000054                     btemp:
  2376                           	opt stack 0
  2377  000054                     	ds	1
  2378  0000                     int$flags	set	btemp
  2379  0000                     wtemp6	set	btemp+1
  2380                           pclatu	equ	0xFFB
  2381                           pclath	equ	0xFFA
  2382                           tblptru	equ	0xFF8
  2383                           tblptrh	equ	0xFF7
  2384                           tblptrl	equ	0xFF6
  2385                           tablat	equ	0xFF5
  2386                           prodh	equ	0xFF4
  2387                           prodl	equ	0xFF3
  2388                           intcon	equ	0xFF2
  2389                           intcon2	equ	0xFF1
  2390                           intcon3	equ	0xFF0
  2391                           postinc0	equ	0xFEE
  2392                           fsr0h	equ	0xFEA
  2393                           fsr0l	equ	0xFE9
  2394                           wreg	equ	0xFE8
  2395                           postdec1	equ	0xFE5
  2396                           fsr1h	equ	0xFE2
  2397                           fsr1l	equ	0xFE1
  2398                           indf2	equ	0xFDF
  2399                           fsr2h	equ	0xFDA
  2400                           fsr2l	equ	0xFD9
  2401                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        16
    BSS         72
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     31      83
    BANK0           160      8      45
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    _high_isr->_mot_3_step_count
    _mot_3_step_count->i2___wmul

Critical Paths under _main in BANK0

    _main->___wmul

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    2539
                                              6 BANK0      2     2      0
                _ConfigureOscillator
                            _InitApp
                             ___wmul
                         _trans_Char
 ---------------------------------------------------------------------------------
 (1) _trans_Char                                           1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4    2508
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigureOscillator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _high_isr                                            19    19      0     405
                                             12 COMRAM    19    19      0
                   _mot_3_step_count
 ---------------------------------------------------------------------------------
 (3) _mot_3_step_count                                     6     2      4     405
                                              6 COMRAM     6     2      4
                           i2___wmul
 ---------------------------------------------------------------------------------
 (4) i2___wmul                                             6     2      4     209
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfigureOscillator
   _InitApp
   ___wmul
   _trans_Char

 _high_isr (ROOT)
   _mot_3_step_count
     i2___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      8      2D       5       28.1%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     1F      53       1       88.3%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      80      20        0.0%
DATA                 0      0      80       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Fri Aug 16 21:02:42 2019

                           _n 0015           ___wmul@multiplicand 0087                   __CFG_BORV$3 000000  
                __CFG_CP0$OFF 000000                  __CFG_CP1$OFF 000000                  __CFG_CP2$OFF 000000  
                __CFG_CP3$OFF 000000                           l200 02D4                           l210 0342  
                         l212 035A                           l204 0322                           l205 030A  
                         l216 038A                           l217 0394                           l190 0372  
                         l191 00BA                           l193 028C                           l195 02A4  
                         l197 02EA                           l189 001A                           l198 02C2  
                __CFG_CPB$OFF 000000                           _PR2 000FCB                  __CFG_CPD$OFF 000000  
                         _RX9 007D5E                           _TX9 007D66                  __CFG_BOR$OFF 000000  
                         wreg 000FE8                  __CFG_LVP$OFF 000000                  __CFG_WDT$OFF 000000  
                        l1668 07AA                          _BRGH 007D62                          _CREN 007D5C  
                        _LATA 000F89                          _LATB 000F8A                          _LATC 000F8B  
                        u1515 0026                          u1620 029E                          u1516 0028  
                        u1525 0030                          u1710 0304                          u1630 02A0  
                        u1526 0032                          u1535 003A                          u1720 0306  
                        u1560 005E                          u1536 003C                          u1545 0044  
                        u1810 0354                          u1546 0046                          u1555 004E  
                        u1820 0356                          u1740 031C                          u1556 0050  
                        u1750 031E                          u1840 036C                          u1850 036E  
                        u1578 0062                          u1907 037E                          u1780 033C  
                        u1790 033E                          _RCIE 007CED                          i2l91 046E  
                        i2l92 0480                          i2l94 04B6                          i2l95 052A  
                        i2l87 0568                          i2l88 0480                          i2l98 052A  
                        _TMR0 000FD6                          _SPEN 007D5F                          _TXIE 007CEC  
                        _TXIF 007CF4                          _TXEN 007D65                          _SYNC 007D64  
                        _main 0012                          _send 0074                          fsr0h 000FEA  
                        fsr1h 000FE2                          fsr2h 000FDA                          fsr0l 000FE9  
                        indf2 000FDF                          fsr1l 000FE1                          fsr2l 000FD9  
                        btemp 0054                          prodh 000FF4                          prodl 000FF3  
                        start 000E                 __CFG_IESO$OFF 000000                 __CFG_MCLRE$ON 000000  
                ___param_bank 000000               __end_of_InitApp 06E2                 __CFG_PLLDIV$1 000000  
              __CFG_CCP2MX$ON 000000                         ?_main 0024                         _ADRES 000FC3  
                       _BRG16 007DC3                         _DIR_1 001A                         _DIR_2 0019  
                       _DIR_3 001F                         _DIR_4 0018                         i2l101 05EA  
                       i2l102 0598                         i2l112 05DC                         i2l113 05EA  
                       i2l105 05A8                         i2l107 05BE                         _RCREG 000FAE  
                       _MOT_1 0053                         _MOT_2 0021                         _MOT_3 0020  
                       _MOT_4 001E                         _SPBRG 000FAF                         _PORTA 000F80  
                       _PORTB 000F81                         _PORTC 000F82                 __CFG_USBDIV$1 000000  
                       _TXREG 000FAD           _ConfigureOscillator 07B4                 __CFG_PWRT$OFF 000000  
               __CFG_WRT0$OFF 000000                 __CFG_WRT1$OFF 000000                 __CFG_WRT2$OFF 000000  
               __CFG_WRT3$OFF 000000                __CFG_EBTR0$OFF 000000                __CFG_FCMEN$OFF 000000  
              __CFG_EBTR1$OFF 000000                __CFG_EBTR2$OFF 000000                __CFG_EBTR3$OFF 000000  
               __CFG_WRTB$OFF 000000                 __CFG_WRTC$OFF 000000                 __CFG_WRTD$OFF 000000  
              __CFG_EBTRB$OFF 000000                         _speed 007D                         _turns 0051  
                 _turns_count 0001                         pclath 000FFA                         tablat 000FF5  
            __end_ofi2___wmul 0772                         status 000FD8                         wtemp6 0055  
        ?_ConfigureOscillator 0024               __initialization 06E2                  __end_of_main 03AE  
                      ??_main 008B                 __activetblptr 000000                        _ADCON1 000FC1  
                      _ADCON2 000FC0                        _CCPR1L 000FBE                        _GODONE 007E11  
                      i2l1416 04B6                     ??_InitApp 0085         ??_ConfigureOscillator 0085  
              __CFG_XINST$OFF 000000              __end_of_high_isr 0636     __size_of_mot_3_step_count 0024  
                      ___wmul 0724                        _enable 0017                        _finish 0022  
                      _length 004F                        _recibi 001C                        clear_0 0708  
                      clear_1 0714                        _motor1 0045                        _motor2 0083  
                __pdataCOMRAM 0043                        tblptrh 000FF7                        tblptrl 000FF6  
                      tblptru 000FF8                    __accesstop 0060       __end_of__initialization 071A  
             __CFG_PBADEN$OFF 000000                 ___rparam_used 000001                __pcstackCOMRAM 0024  
                   ?i2___wmul 0024                 trans_Char@out 0085                    __pbssBANK0 0060  
                  __pnvCOMRAM 0053                       ?___wmul 0085                    ??i2___wmul 0028  
                     i2u80_48 0436                       i2u90_40 04D4                       i2u91_48 04D6  
                     i2u94_40 051E                       i2u86_40 049E                       i2u95_40 0520  
                     i2u79_40 0434                       i2u87_48 04A0                       i2u98_40 0548  
                     i2u99_48 054A                     ?_high_isr 0024               __CFG_VREGEN$OFF 000000  
                     _InitApp 0636                       __Hparam 0000                       __Lparam 0000  
            _mot_3_step_count 0772               __size_of___wmul 0028                       _caliber 0081  
             __CFG_STVREN$OFF 000000                       __pcinit 06E2                       __ramtop 0800  
                     __ptext0 0012                       __ptext1 07A6                       __ptext2 0724  
                     __ptext3 0636                       __ptext4 07B4                       __ptext6 0772  
                     __ptext7 074C                     _T0CONbits 000FD5                       _count_1 004D  
                     _count_2 004B                       _count_3 0049                       _count_4 0047  
                     _palabra 0060                     _T2CONbits 000FCA              _mot_4_step_count 007B  
                  ??_high_isr 0030                __pintcode_body 03AE          end_of_initialization 071A  
                     int_func 03AE           i2___wmul@multiplier 0024                       postdec1 000FE5  
                     postinc0 000FEE                     _PORTAbits 000F80                     _PORTBbits 000F81  
                   _PORTCbits 000F82                     _TRISAbits 000F92                     _TRISBbits 000F93  
                   _TRISCbits 000F94                    _trans_Char 07A6   __end_of_ConfigureOscillator 07C0  
                 _CCP1CONbits 000FBD                __end_of___wmul 074C                 __pidataCOMRAM 0796  
            i2___wmul@product 0028           start_initialization 06E2             __size_ofi2___wmul 0026  
                    ??___wmul 0089              __CFG_LPT1OSC$OFF 000000                   __pbssCOMRAM 0001  
               __pcstackBANK0 0085                   ?_trans_Char 0024      __end_of_mot_3_step_count 0796  
           __size_of_high_isr 062E                      ?_InitApp 0024                     __pintcode 0008  
                   _busy_flag 001D                ___wmul@product 0089                      _LATAbits 000F89  
                    _LATBbits 000F8A                      _LATCbits 000F8B                      _PIE1bits 000F9D  
                    _RA0state 001B                      i2u110_40 05E8                      i2u108_40 05CA  
                    i2u109_40 05E6                      _PIR1bits 000F9E                      _RCONbits 000FD0  
            __CFG_WDTPS$32768 000000           __size_of_trans_Char 000E                    _ADCON0bits 000FC2  
           ___wmul@multiplier 0085                      i2___wmul 074C                      _PWM_duty 0043  
             _ADC_value_press 0011                     _zero_flag 0023                   _INTCON2bits 000FF1  
                 _INTCON3bits 000FF0                     copy_data0 06F6              __size_of_InitApp 00AC  
                    __Hrparam 0000                      __Lrparam 0000         i2___wmul@multiplicand 0026  
                    _diameter 007F                      _high_isr 0008                 __size_of_main 039C  
                 _mot_1_steps 0007                   _mot_3_steps 0005                   _mot_4_steps 0003  
__size_of_ConfigureOscillator 000C                      _overflow 0013                      int$flags 0054  
          mot_3_step_count@ms 002C         __CFG_CPUDIV$OSC1_PLL2 000000                    _INTCONbits 000FF2  
                ??_trans_Char 0085                   _MOT_1_count 000F                   _MOT_2_count 000D  
                 _MOT_3_count 000B                   _MOT_4_count 0009             ?_mot_3_step_count 002A  
                    intlevel2 0000            ??_mot_3_step_count 002E                    _OSCCONbits 000FD3  
           mot_3_step_count@l 002A            __end_of_trans_Char 07B4           __CFG_FOSC$INTOSC_EC 000000  

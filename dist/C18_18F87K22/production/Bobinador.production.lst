

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sat Aug 17 01:51:10 2019

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F2550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    20                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    24                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    25                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    26  0000                     
    27                           ; Version 1.45
    28                           ; Generated 16/11/2017 GMT
    29                           ; 
    30                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    31                           ; All rights reserved.
    32                           ; 
    33                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    34                           ; 
    35                           ; Redistribution and use in source and binary forms, with or without modification, are
    36                           ; permitted provided that the following conditions are met:
    37                           ; 
    38                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    39                           ;        conditions and the following disclaimer.
    40                           ; 
    41                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    42                           ;        of conditions and the following disclaimer in the documentation and/or other
    43                           ;        materials provided with the distribution.
    44                           ; 
    45                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    46                           ;        software without specific prior written permission.
    47                           ; 
    48                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    49                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    50                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    51                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    52                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    53                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    54                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    55                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    56                           ; 
    57                           ; 
    58                           ; Code-generator required, PIC18F2550 Definitions
    59                           ; 
    60                           ; SFR Addresses
    61  0000                     
    62                           	psect	idataCOMRAM
    63  000722                     __pidataCOMRAM:
    64                           	opt stack 0
    65                           
    66                           ;initializer for _PWM_duty
    67  000722  0032               	dw	50
    68                           
    69                           ;initializer for _motor1
    70  000724  0001               	dw	1
    71                           
    72                           ;initializer for _count_4
    73  000726  0005               	dw	5
    74                           
    75                           ;initializer for _count_3
    76  000728  0084               	dw	132
    77                           
    78                           ;initializer for _count_2
    79  00072A  0005               	dw	5
    80                           
    81                           ;initializer for _count_1
    82  00072C  0002               	dw	2
    83                           
    84                           ;initializer for _length
    85  00072E  2422               	dw	9250
    86                           
    87                           ;initializer for _zero_flag
    88  000730  01                 	db	1
    89                           
    90                           	psect	idataBANK0
    91  00073E                     __pidataBANK0:
    92                           	opt stack 0
    93                           
    94                           ;initializer for _turns
    95  00073E  0FA0               	dw	4000
    96  0000                     _ADRES	set	4035
    97  0000                     _TMR1	set	4046
    98  0000                     _TMR0	set	4054
    99  0000                     _T2CONbits	set	4042
   100  0000                     _CCP1CONbits	set	4029
   101  0000                     _PR2	set	4043
   102  0000                     _SPBRG	set	4015
   103  0000                     _IPR1bits	set	3999
   104  0000                     _INTCON2bits	set	4081
   105  0000                     _RCONbits	set	4048
   106  0000                     _TRISBbits	set	3987
   107  0000                     _TRISCbits	set	3988
   108  0000                     _PIE1bits	set	3997
   109  0000                     _ADCON2	set	4032
   110  0000                     _ADCON0bits	set	4034
   111  0000                     _TRISAbits	set	3986
   112  0000                     _ADCON1	set	4033
   113  0000                     _LATC	set	3979
   114  0000                     _PORTC	set	3970
   115  0000                     _LATB	set	3978
   116  0000                     _PORTB	set	3969
   117  0000                     _LATA	set	3977
   118  0000                     _PORTA	set	3968
   119  0000                     _OSCCONbits	set	4051
   120  0000                     _T0CONbits	set	4053
   121  0000                     _T1CONbits	set	4045
   122  0000                     _TXREG	set	4013
   123  0000                     _LATBbits	set	3978
   124  0000                     _CCPR1L	set	4030
   125  0000                     _INTCON3bits	set	4080
   126  0000                     _RCREG	set	4014
   127  0000                     _PIR1bits	set	3998
   128  0000                     _PORTCbits	set	3970
   129  0000                     _LATCbits	set	3979
   130  0000                     _PORTAbits	set	3968
   131  0000                     _LATAbits	set	3977
   132  0000                     _INTCONbits	set	4082
   133  0000                     _TXIE	set	31980
   134  0000                     _RCIE	set	31981
   135  0000                     _RX9	set	32094
   136  0000                     _TX9	set	32102
   137  0000                     _CREN	set	32092
   138  0000                     _TXEN	set	32101
   139  0000                     _SYNC	set	32100
   140  0000                     _SPEN	set	32095
   141  0000                     _BRG16	set	32195
   142  0000                     _BRGH	set	32098
   143  0000                     _TXIF	set	31988
   144  0000                     _GODONE	set	32273
   145                           
   146                           ; #config settings
   147  0000                     
   148                           	psect	cinit
   149  000640                     __pcinit:
   150                           	opt stack 0
   151  000640                     start_initialization:
   152                           	opt stack 0
   153  000640                     __initialization:
   154                           	opt stack 0
   155                           
   156                           ; Initialize objects allocated to BANK0 (2 bytes)
   157                           ; load TBLPTR registers with __pidataBANK0
   158  000640  0E3E               	movlw	low __pidataBANK0
   159  000642  6EF6               	movwf	tblptrl,c
   160  000644  0E07               	movlw	high __pidataBANK0
   161  000646  6EF7               	movwf	tblptrh,c
   162  000648  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   163  00064A  6EF8               	movwf	tblptru,c
   164  00064C  0009               	tblrd		*+	;fetch initializer
   165  00064E  CFF5 F08D          	movff	tablat,__pdataBANK0
   166  000652  0009               	tblrd		*+	;fetch initializer
   167  000654  CFF5 F08E          	movff	tablat,__pdataBANK0+1
   168                           
   169                           ; Initialize objects allocated to COMRAM (15 bytes)
   170                           ; load TBLPTR registers with __pidataCOMRAM
   171  000658  0E22               	movlw	low __pidataCOMRAM
   172  00065A  6EF6               	movwf	tblptrl,c
   173  00065C  0E07               	movlw	high __pidataCOMRAM
   174  00065E  6EF7               	movwf	tblptrh,c
   175  000660  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   176  000662  6EF8               	movwf	tblptru,c
   177  000664  EE00  F045         	lfsr	0,__pdataCOMRAM
   178  000668  EE10 F00F          	lfsr	1,15
   179  00066C                     copy_data0:
   180  00066C  0009               	tblrd		*+
   181  00066E  CFF5 FFEE          	movff	tablat,postinc0
   182  000672  50E5               	movf	postdec1,w,c
   183  000674  50E1               	movf	fsr1l,w,c
   184  000676  E1FA               	bnz	copy_data0
   185                           
   186                           ; Clear objects allocated to BANK0 (37 bytes)
   187  000678  EE00  F060         	lfsr	0,__pbssBANK0
   188  00067C  0E25               	movlw	37
   189  00067E                     clear_0:
   190  00067E  6AEE               	clrf	postinc0,c
   191  000680  06E8               	decf	wreg,f,c
   192  000682  E1FD               	bnz	clear_0
   193                           
   194                           ; Clear objects allocated to COMRAM (37 bytes)
   195  000684  EE00  F001         	lfsr	0,__pbssCOMRAM
   196  000688  0E25               	movlw	37
   197  00068A                     clear_1:
   198  00068A  6AEE               	clrf	postinc0,c
   199  00068C  06E8               	decf	wreg,f,c
   200  00068E  E1FD               	bnz	clear_1
   201  000690                     end_of_initialization:
   202                           	opt stack 0
   203  000690                     __end_of__initialization:
   204                           	opt stack 0
   205  000690  9054               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   206  000692  9254               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   207  000694  0100               	movlb	0
   208  000696  EF09  F000         	goto	_main	;jump to C main() function
   209                           tblptru	equ	0xFF8
   210                           tblptrh	equ	0xFF7
   211                           tblptrl	equ	0xFF6
   212                           tablat	equ	0xFF5
   213                           postinc0	equ	0xFEE
   214                           wreg	equ	0xFE8
   215                           postdec1	equ	0xFE5
   216                           fsr1l	equ	0xFE1
   217                           
   218                           	psect	bssCOMRAM
   219  000001                     __pbssCOMRAM:
   220                           	opt stack 0
   221  000001                     _zero_count:
   222                           	opt stack 0
   223  000001                     	ds	2
   224  000003                     _turns_count:
   225                           	opt stack 0
   226  000003                     	ds	2
   227  000005                     _mot_4_steps:
   228                           	opt stack 0
   229  000005                     	ds	2
   230  000007                     _mot_3_steps:
   231                           	opt stack 0
   232  000007                     	ds	2
   233  000009                     _mot_1_steps:
   234                           	opt stack 0
   235  000009                     	ds	2
   236  00000B                     _MOT_4_count:
   237                           	opt stack 0
   238  00000B                     	ds	2
   239  00000D                     _MOT_3_count:
   240                           	opt stack 0
   241  00000D                     	ds	2
   242  00000F                     _MOT_2_count:
   243                           	opt stack 0
   244  00000F                     	ds	2
   245  000011                     _MOT_1_count:
   246                           	opt stack 0
   247  000011                     	ds	2
   248  000013                     _ADC_value_press:
   249                           	opt stack 0
   250  000013                     	ds	2
   251  000015                     _overflow:
   252                           	opt stack 0
   253  000015                     	ds	2
   254  000017                     _n:
   255                           	opt stack 0
   256  000017                     	ds	2
   257  000019                     _enable:
   258                           	opt stack 0
   259  000019                     	ds	1
   260  00001A                     _finish:
   261                           	opt stack 0
   262  00001A                     	ds	1
   263  00001B                     _DIR_4:
   264                           	opt stack 0
   265  00001B                     	ds	1
   266  00001C                     _DIR_2:
   267                           	opt stack 0
   268  00001C                     	ds	1
   269  00001D                     _DIR_1:
   270                           	opt stack 0
   271  00001D                     	ds	1
   272  00001E                     _RA0state:
   273                           	opt stack 0
   274  00001E                     	ds	1
   275  00001F                     _recibi:
   276                           	opt stack 0
   277  00001F                     	ds	1
   278  000020                     _MOT_4:
   279                           	opt stack 0
   280  000020                     	ds	1
   281  000021                     _MOT_2:
   282                           	opt stack 0
   283  000021                     	ds	1
   284  000022                     _busy_flag:
   285                           	opt stack 0
   286  000022                     	ds	1
   287  000023                     _DIR_3:
   288                           	opt stack 0
   289  000023                     	ds	1
   290  000024                     _MOT_3:
   291                           	opt stack 0
   292  000024                     	ds	1
   293  000025                     _MOT_1:
   294                           	opt stack 0
   295  000025                     	ds	1
   296                           tblptru	equ	0xFF8
   297                           tblptrh	equ	0xFF7
   298                           tblptrl	equ	0xFF6
   299                           tablat	equ	0xFF5
   300                           postinc0	equ	0xFEE
   301                           wreg	equ	0xFE8
   302                           postdec1	equ	0xFE5
   303                           fsr1l	equ	0xFE1
   304                           
   305                           	psect	dataCOMRAM
   306  000045                     __pdataCOMRAM:
   307                           	opt stack 0
   308  000045                     _PWM_duty:
   309                           	opt stack 0
   310  000045                     	ds	2
   311  000047                     _motor1:
   312                           	opt stack 0
   313  000047                     	ds	2
   314  000049                     _count_4:
   315                           	opt stack 0
   316  000049                     	ds	2
   317  00004B                     _count_3:
   318                           	opt stack 0
   319  00004B                     	ds	2
   320  00004D                     _count_2:
   321                           	opt stack 0
   322  00004D                     	ds	2
   323  00004F                     _count_1:
   324                           	opt stack 0
   325  00004F                     	ds	2
   326  000051                     _length:
   327                           	opt stack 0
   328  000051                     	ds	2
   329  000053                     _zero_flag:
   330                           	opt stack 0
   331  000053                     	ds	1
   332                           tblptru	equ	0xFF8
   333                           tblptrh	equ	0xFF7
   334                           tblptrl	equ	0xFF6
   335                           tablat	equ	0xFF5
   336                           postinc0	equ	0xFEE
   337                           wreg	equ	0xFE8
   338                           postdec1	equ	0xFE5
   339                           fsr1l	equ	0xFE1
   340                           
   341                           	psect	bssBANK0
   342  000060                     __pbssBANK0:
   343                           	opt stack 0
   344  000060                     _palabra:
   345                           	opt stack 0
   346  000060                     	ds	20
   347  000074                     _send:
   348                           	opt stack 0
   349  000074                     	ds	7
   350  00007B                     _mot_4_step_count:
   351                           	opt stack 0
   352  00007B                     	ds	2
   353  00007D                     _speed:
   354                           	opt stack 0
   355  00007D                     	ds	2
   356  00007F                     _diameter:
   357                           	opt stack 0
   358  00007F                     	ds	2
   359  000081                     _caliber:
   360                           	opt stack 0
   361  000081                     	ds	2
   362  000083                     _motor2:
   363                           	opt stack 0
   364  000083                     	ds	2
   365                           tblptru	equ	0xFF8
   366                           tblptrh	equ	0xFF7
   367                           tblptrl	equ	0xFF6
   368                           tablat	equ	0xFF5
   369                           postinc0	equ	0xFEE
   370                           wreg	equ	0xFE8
   371                           postdec1	equ	0xFE5
   372                           fsr1l	equ	0xFE1
   373                           
   374                           	psect	dataBANK0
   375  00008D                     __pdataBANK0:
   376                           	opt stack 0
   377  00008D                     _turns:
   378                           	opt stack 0
   379  00008D                     	ds	2
   380                           tblptru	equ	0xFF8
   381                           tblptrh	equ	0xFF7
   382                           tblptrl	equ	0xFF6
   383                           tablat	equ	0xFF5
   384                           postinc0	equ	0xFEE
   385                           wreg	equ	0xFE8
   386                           postdec1	equ	0xFE5
   387                           fsr1l	equ	0xFE1
   388                           
   389                           	psect	cstackBANK0
   390  000085                     __pcstackBANK0:
   391                           	opt stack 0
   392  000085                     ?___wmul:
   393                           	opt stack 0
   394  000085                     ___wmul@multiplier:
   395                           	opt stack 0
   396                           
   397                           ; 2 bytes @ 0x0
   398  000085                     	ds	2
   399  000087                     ___wmul@multiplicand:
   400                           	opt stack 0
   401                           
   402                           ; 2 bytes @ 0x2
   403  000087                     	ds	2
   404  000089                     ___wmul@product:
   405                           	opt stack 0
   406                           
   407                           ; 2 bytes @ 0x4
   408  000089                     	ds	2
   409  00008B                     ??_main:
   410                           
   411                           ; 1 bytes @ 0x6
   412  00008B                     	ds	2
   413                           tblptru	equ	0xFF8
   414                           tblptrh	equ	0xFF7
   415                           tblptrl	equ	0xFF6
   416                           tablat	equ	0xFF5
   417                           postinc0	equ	0xFEE
   418                           wreg	equ	0xFE8
   419                           postdec1	equ	0xFE5
   420                           fsr1l	equ	0xFE1
   421                           
   422                           	psect	cstackCOMRAM
   423  000026                     __pcstackCOMRAM:
   424                           	opt stack 0
   425  000026                     ?i2___wmul:
   426                           	opt stack 0
   427  000026                     i2___wmul@multiplier:
   428                           	opt stack 0
   429                           
   430                           ; 2 bytes @ 0x0
   431  000026                     	ds	2
   432  000028                     i2___wmul@multiplicand:
   433                           	opt stack 0
   434                           
   435                           ; 2 bytes @ 0x2
   436  000028                     	ds	2
   437  00002A                     i2___wmul@product:
   438                           	opt stack 0
   439                           
   440                           ; 2 bytes @ 0x4
   441  00002A                     	ds	2
   442  00002C                     ?_mot_3_step_count:
   443                           	opt stack 0
   444  00002C                     mot_3_step_count@l:
   445                           	opt stack 0
   446                           
   447                           ; 2 bytes @ 0x6
   448  00002C                     	ds	2
   449  00002E                     mot_3_step_count@ms:
   450                           	opt stack 0
   451                           
   452                           ; 2 bytes @ 0x8
   453  00002E                     	ds	2
   454  000030                     ??_mot_3_step_count:
   455                           
   456                           ; 1 bytes @ 0xA
   457  000030                     	ds	2
   458  000032                     ??_high_isr:
   459                           
   460                           ; 1 bytes @ 0xC
   461  000032                     	ds	19
   462                           tblptru	equ	0xFF8
   463                           tblptrh	equ	0xFF7
   464                           tblptrl	equ	0xFF6
   465                           tablat	equ	0xFF5
   466                           postinc0	equ	0xFEE
   467                           wreg	equ	0xFE8
   468                           postdec1	equ	0xFE5
   469                           fsr1l	equ	0xFE1
   470                           
   471 ;;
   472 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   473 ;;
   474 ;; *************** function _main *****************
   475 ;; Defined at:
   476 ;;		line 78 in file "main.c"
   477 ;; Parameters:    Size  Location     Type
   478 ;;		None
   479 ;; Auto vars:     Size  Location     Type
   480 ;;		None
   481 ;; Return value:  Size  Location     Type
   482 ;;                  1    wreg      void 
   483 ;; Registers used:
   484 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   485 ;; Tracked objects:
   486 ;;		On entry : 0/0
   487 ;;		On exit  : 0/0
   488 ;;		Unchanged: 0/0
   489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   490 ;;      Params:         0       0       0       0       0       0       0       0       0
   491 ;;      Locals:         0       0       0       0       0       0       0       0       0
   492 ;;      Temps:          0       2       0       0       0       0       0       0       0
   493 ;;      Totals:         0       2       0       0       0       0       0       0       0
   494 ;;Total ram usage:        2 bytes
   495 ;; Hardware stack levels required when called:    4
   496 ;; This function calls:
   497 ;;		_ConfigureOscillator
   498 ;;		_InitApp
   499 ;;		___wmul
   500 ;;		_zero_mark
   501 ;; This function is called by:
   502 ;;		Startup code after reset
   503 ;; This function uses a non-reentrant model
   504 ;;
   505                           
   506                           	psect	text0
   507  000012                     __ptext0:
   508                           	opt stack 0
   509  000012                     _main:
   510                           	opt stack 27
   511                           
   512                           ;main.c: 80: ConfigureOscillator();
   513                           
   514                           ;incstack = 0
   515  000012  EC99  F003         	call	_ConfigureOscillator	;wreg free
   516                           
   517                           ;main.c: 83: InitApp();
   518  000016  ECC2  F002         	call	_InitApp	;wreg free
   519  00001A                     
   520                           ;main.c: 86: CCPR1L = PWM_duty;
   521  00001A  C045  FFBE         	movff	_PWM_duty,4030	;volatile
   522                           
   523                           ;main.c: 88: LATAbits.LA2 = DIR_1;
   524  00001E  B01D               	btfsc	_DIR_1,0,c
   525  000020  D002               	bra	u1205
   526  000022  9489               	bcf	3977,2,c	;volatile
   527  000024  D001               	bra	u1206
   528  000026                     u1205:
   529  000026  8489               	bsf	3977,2,c	;volatile
   530  000028                     u1206:
   531                           
   532                           ;main.c: 89: LATAbits.LA4 = DIR_2;
   533  000028  B01C               	btfsc	_DIR_2,0,c
   534  00002A  D002               	bra	u1215
   535  00002C  9889               	bcf	3977,4,c	;volatile
   536  00002E  D001               	bra	u1216
   537  000030                     u1215:
   538  000030  8889               	bsf	3977,4,c	;volatile
   539  000032                     u1216:
   540                           
   541                           ;main.c: 90: LATCbits.LC0 = DIR_3;
   542  000032  B023               	btfsc	_DIR_3,0,c
   543  000034  D002               	bra	u1225
   544  000036  908B               	bcf	3979,0,c	;volatile
   545  000038  D001               	bra	u1226
   546  00003A                     u1225:
   547  00003A  808B               	bsf	3979,0,c	;volatile
   548  00003C                     u1226:
   549                           
   550                           ;main.c: 91: LATBbits.LB7 = DIR_4;
   551  00003C  B01B               	btfsc	_DIR_4,0,c
   552  00003E  D002               	bra	u1235
   553  000040  9E8A               	bcf	3978,7,c	;volatile
   554  000042  D001               	bra	u1236
   555  000044                     u1235:
   556  000044  8E8A               	bsf	3978,7,c	;volatile
   557  000046                     u1236:
   558                           
   559                           ;main.c: 92: LATBbits.LB5 = enable;
   560  000046  B019               	btfsc	_enable,0,c
   561  000048  D002               	bra	u1245
   562  00004A  9A8A               	bcf	3978,5,c	;volatile
   563  00004C  D001               	bra	u1246
   564  00004E                     u1245:
   565  00004E  8A8A               	bsf	3978,5,c	;volatile
   566  000050                     u1246:
   567                           
   568                           ;main.c: 93: LATBbits.LB4 = !enable;
   569  000050  5019               	movf	_enable,w,c
   570  000052  A4D8               	btfss	status,2,c
   571  000054  D004               	goto	u1250
   572  000056  0100               	movlb	0	; () banked
   573  000058  6B8B               	clrf	??_main& (0+255),b
   574  00005A  2B8B               	incf	??_main& (0+255),f,b
   575  00005C  D002               	goto	u1268
   576  00005E                     u1250:
   577  00005E  0100               	movlb	0	; () banked
   578  000060  6B8B               	clrf	??_main& (0+255),b
   579  000062                     u1268:
   580  000062  3B8B               	swapf	??_main& (0+255),f,b
   581  000064  508A               	movf	3978,w,c	;volatile
   582  000066  198B               	xorwf	??_main& (0+255),w,b
   583  000068  0BEF               	andlw	-17
   584  00006A  198B               	xorwf	??_main& (0+255),w,b
   585  00006C  6E8A               	movwf	3978,c	;volatile
   586                           
   587                           ; BSR set to: 0
   588                           ;main.c: 101: if (recibi == 1) {
   589  00006E  041F               	decf	_recibi,w,c
   590  000070  A4D8               	btfss	status,2,c
   591  000072  D165               	goto	l184
   592                           
   593                           ; BSR set to: 0
   594                           ;main.c: 103: recibi = 0;
   595  000074  0E00               	movlw	0
   596  000076  6E1F               	movwf	_recibi,c
   597                           
   598                           ; BSR set to: 0
   599                           ;main.c: 106: if (palabra[0] == 'B') {
   600  000078  0E42               	movlw	66
   601  00007A  1960               	xorwf	_palabra& (0+255),w,b
   602  00007C  A4D8               	btfss	status,2,c
   603  00007E  D01B               	goto	l185
   604                           
   605                           ; BSR set to: 0
   606                           ;main.c: 108: PWM_duty = ((palabra[1] - 48) * 10) + ((palabra[2] - 48));
   607  000080  0ED0               	movlw	208
   608  000082  2561               	addwf	(_palabra+1)& (0+255),w,b
   609  000084  6F85               	movwf	___wmul@multiplier& (0+255),b
   610  000086  6B86               	clrf	(___wmul@multiplier+1)& (0+255),b
   611  000088  0EFF               	movlw	255
   612  00008A  2386               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   613  00008C  0E00               	movlw	0
   614  00008E  6F88               	movwf	(___wmul@multiplicand+1)& (0+255),b
   615  000090  0E0A               	movlw	10
   616  000092  6F87               	movwf	___wmul@multiplicand& (0+255),b
   617  000094  EC4D  F003         	call	___wmul	;wreg free
   618  000098  0100               	movlb	0	; () banked
   619  00009A  5162               	movf	(_palabra+2)& (0+255),w,b
   620  00009C  6F8B               	movwf	??_main& (0+255),b
   621  00009E  6B8C               	clrf	(??_main+1)& (0+255),b
   622  0000A0  5185               	movf	?___wmul& (0+255),w,b
   623  0000A2  278B               	addwf	??_main& (0+255),f,b
   624  0000A4  5186               	movf	(?___wmul+1)& (0+255),w,b
   625  0000A6  238C               	addwfc	(??_main+1)& (0+255),f,b
   626  0000A8  0ED0               	movlw	208
   627  0000AA  258B               	addwf	??_main& (0+255),w,b
   628  0000AC  6E45               	movwf	_PWM_duty,c
   629  0000AE  0EFF               	movlw	255
   630  0000B0  218C               	addwfc	(??_main+1)& (0+255),w,b
   631  0000B2  6E46               	movwf	_PWM_duty+1,c
   632                           
   633                           ;main.c: 109: } else if (palabra[0] == 'A') {
   634  0000B4  D7B2               	goto	l183
   635  0000B6                     l185:
   636                           
   637                           ; BSR set to: 0
   638                           
   639                           ; BSR set to: 0
   640  0000B6  0E41               	movlw	65
   641  0000B8  1960               	xorwf	_palabra& (0+255),w,b
   642  0000BA  A4D8               	btfss	status,2,c
   643  0000BC  D0E5               	goto	l187
   644                           
   645                           ; BSR set to: 0
   646                           ;main.c: 111: caliber = ((palabra[1] - 48) * 10) + ((palabra[2] - 48));
   647  0000BE  0ED0               	movlw	208
   648  0000C0  2561               	addwf	(_palabra+1)& (0+255),w,b
   649  0000C2  6F85               	movwf	___wmul@multiplier& (0+255),b
   650  0000C4  6B86               	clrf	(___wmul@multiplier+1)& (0+255),b
   651  0000C6  0EFF               	movlw	255
   652  0000C8  2386               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   653  0000CA  0E00               	movlw	0
   654  0000CC  6F88               	movwf	(___wmul@multiplicand+1)& (0+255),b
   655  0000CE  0E0A               	movlw	10
   656  0000D0  6F87               	movwf	___wmul@multiplicand& (0+255),b
   657  0000D2  EC4D  F003         	call	___wmul	;wreg free
   658  0000D6  0100               	movlb	0	; () banked
   659  0000D8  5162               	movf	(_palabra+2)& (0+255),w,b
   660  0000DA  6F8B               	movwf	??_main& (0+255),b
   661  0000DC  6B8C               	clrf	(??_main+1)& (0+255),b
   662  0000DE  5185               	movf	?___wmul& (0+255),w,b
   663  0000E0  278B               	addwf	??_main& (0+255),f,b
   664  0000E2  5186               	movf	(?___wmul+1)& (0+255),w,b
   665  0000E4  238C               	addwfc	(??_main+1)& (0+255),f,b
   666  0000E6  0ED0               	movlw	208
   667  0000E8  258B               	addwf	??_main& (0+255),w,b
   668  0000EA  6F81               	movwf	_caliber& (0+255),b
   669  0000EC  0EFF               	movlw	255
   670  0000EE  218C               	addwfc	(??_main+1)& (0+255),w,b
   671  0000F0  6F82               	movwf	(_caliber+1)& (0+255),b
   672                           
   673                           ;main.c: 112: diameter = ((palabra[3] - 48) * 1000) + ((palabra[4] - 48) * 100) + ((pala
      +                          bra[5] - 48) * 10) + ((palabra[6] - 48));
   674  0000F2  0ED0               	movlw	208
   675  0000F4  2563               	addwf	(_palabra+3)& (0+255),w,b
   676  0000F6  6F85               	movwf	___wmul@multiplier& (0+255),b
   677  0000F8  6B86               	clrf	(___wmul@multiplier+1)& (0+255),b
   678  0000FA  0EFF               	movlw	255
   679  0000FC  2386               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   680  0000FE  0E03               	movlw	3
   681  000100  6F88               	movwf	(___wmul@multiplicand+1)& (0+255),b
   682  000102  0EE8               	movlw	232
   683  000104  6F87               	movwf	___wmul@multiplicand& (0+255),b
   684  000106  EC4D  F003         	call	___wmul	;wreg free
   685  00010A  0100               	movlb	0	; () banked
   686  00010C  5166               	movf	(_palabra+6)& (0+255),w,b
   687  00010E  6F8B               	movwf	??_main& (0+255),b
   688  000110  6B8C               	clrf	(??_main+1)& (0+255),b
   689  000112  5185               	movf	?___wmul& (0+255),w,b
   690  000114  278B               	addwf	??_main& (0+255),f,b
   691  000116  5186               	movf	(?___wmul+1)& (0+255),w,b
   692  000118  238C               	addwfc	(??_main+1)& (0+255),f,b
   693  00011A  0ED0               	movlw	208
   694  00011C  2564               	addwf	(_palabra+4)& (0+255),w,b
   695  00011E  6F85               	movwf	___wmul@multiplier& (0+255),b
   696  000120  6B86               	clrf	(___wmul@multiplier+1)& (0+255),b
   697  000122  0EFF               	movlw	255
   698  000124  2386               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   699  000126  0E00               	movlw	0
   700  000128  6F88               	movwf	(___wmul@multiplicand+1)& (0+255),b
   701  00012A  0E64               	movlw	100
   702  00012C  6F87               	movwf	___wmul@multiplicand& (0+255),b
   703  00012E  EC4D  F003         	call	___wmul	;wreg free
   704  000132  0100               	movlb	0	; () banked
   705  000134  5185               	movf	?___wmul& (0+255),w,b
   706  000136  278B               	addwf	??_main& (0+255),f,b
   707  000138  5186               	movf	(?___wmul+1)& (0+255),w,b
   708  00013A  238C               	addwfc	(??_main+1)& (0+255),f,b
   709  00013C  0ED0               	movlw	208
   710  00013E  2565               	addwf	(_palabra+5)& (0+255),w,b
   711  000140  6F85               	movwf	___wmul@multiplier& (0+255),b
   712  000142  6B86               	clrf	(___wmul@multiplier+1)& (0+255),b
   713  000144  0EFF               	movlw	255
   714  000146  2386               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   715  000148  0E00               	movlw	0
   716  00014A  6F88               	movwf	(___wmul@multiplicand+1)& (0+255),b
   717  00014C  0E0A               	movlw	10
   718  00014E  6F87               	movwf	___wmul@multiplicand& (0+255),b
   719  000150  EC4D  F003         	call	___wmul	;wreg free
   720  000154  0100               	movlb	0	; () banked
   721  000156  5185               	movf	?___wmul& (0+255),w,b
   722  000158  278B               	addwf	??_main& (0+255),f,b
   723  00015A  5186               	movf	(?___wmul+1)& (0+255),w,b
   724  00015C  238C               	addwfc	(??_main+1)& (0+255),f,b
   725  00015E  0ED0               	movlw	208
   726  000160  258B               	addwf	??_main& (0+255),w,b
   727  000162  6F7F               	movwf	_diameter& (0+255),b
   728  000164  0EFF               	movlw	255
   729  000166  218C               	addwfc	(??_main+1)& (0+255),w,b
   730  000168  6F80               	movwf	(_diameter+1)& (0+255),b
   731                           
   732                           ;main.c: 113: length = ((palabra[7] - 48) * 10000) + ((palabra[8] - 48) * 1000) + ((pala
      +                          bra[9] - 48) * 100) + ((palabra[10] - 48) * 10) + ((palabra[11] - 48));
   733  00016A  0ED0               	movlw	208
   734  00016C  2567               	addwf	(_palabra+7)& (0+255),w,b
   735  00016E  6F85               	movwf	___wmul@multiplier& (0+255),b
   736  000170  6B86               	clrf	(___wmul@multiplier+1)& (0+255),b
   737  000172  0EFF               	movlw	255
   738  000174  2386               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   739  000176  0E27               	movlw	39
   740  000178  6F88               	movwf	(___wmul@multiplicand+1)& (0+255),b
   741  00017A  0E10               	movlw	16
   742  00017C  6F87               	movwf	___wmul@multiplicand& (0+255),b
   743  00017E  EC4D  F003         	call	___wmul	;wreg free
   744  000182  0100               	movlb	0	; () banked
   745  000184  516B               	movf	(_palabra+11)& (0+255),w,b
   746  000186  6F8B               	movwf	??_main& (0+255),b
   747  000188  6B8C               	clrf	(??_main+1)& (0+255),b
   748  00018A  5185               	movf	?___wmul& (0+255),w,b
   749  00018C  278B               	addwf	??_main& (0+255),f,b
   750  00018E  5186               	movf	(?___wmul+1)& (0+255),w,b
   751  000190  238C               	addwfc	(??_main+1)& (0+255),f,b
   752  000192  0ED0               	movlw	208
   753  000194  2568               	addwf	(_palabra+8)& (0+255),w,b
   754  000196  6F85               	movwf	___wmul@multiplier& (0+255),b
   755  000198  6B86               	clrf	(___wmul@multiplier+1)& (0+255),b
   756  00019A  0EFF               	movlw	255
   757  00019C  2386               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   758  00019E  0E03               	movlw	3
   759  0001A0  6F88               	movwf	(___wmul@multiplicand+1)& (0+255),b
   760  0001A2  0EE8               	movlw	232
   761  0001A4  6F87               	movwf	___wmul@multiplicand& (0+255),b
   762  0001A6  EC4D  F003         	call	___wmul	;wreg free
   763  0001AA  0100               	movlb	0	; () banked
   764  0001AC  5185               	movf	?___wmul& (0+255),w,b
   765  0001AE  278B               	addwf	??_main& (0+255),f,b
   766  0001B0  5186               	movf	(?___wmul+1)& (0+255),w,b
   767  0001B2  238C               	addwfc	(??_main+1)& (0+255),f,b
   768  0001B4  0ED0               	movlw	208
   769  0001B6  2569               	addwf	(_palabra+9)& (0+255),w,b
   770  0001B8  6F85               	movwf	___wmul@multiplier& (0+255),b
   771  0001BA  6B86               	clrf	(___wmul@multiplier+1)& (0+255),b
   772  0001BC  0EFF               	movlw	255
   773  0001BE  2386               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   774  0001C0  0E00               	movlw	0
   775  0001C2  6F88               	movwf	(___wmul@multiplicand+1)& (0+255),b
   776  0001C4  0E64               	movlw	100
   777  0001C6  6F87               	movwf	___wmul@multiplicand& (0+255),b
   778  0001C8  EC4D  F003         	call	___wmul	;wreg free
   779  0001CC  0100               	movlb	0	; () banked
   780  0001CE  5185               	movf	?___wmul& (0+255),w,b
   781  0001D0  278B               	addwf	??_main& (0+255),f,b
   782  0001D2  5186               	movf	(?___wmul+1)& (0+255),w,b
   783  0001D4  238C               	addwfc	(??_main+1)& (0+255),f,b
   784  0001D6  0ED0               	movlw	208
   785  0001D8  256A               	addwf	(_palabra+10)& (0+255),w,b
   786  0001DA  6F85               	movwf	___wmul@multiplier& (0+255),b
   787  0001DC  6B86               	clrf	(___wmul@multiplier+1)& (0+255),b
   788  0001DE  0EFF               	movlw	255
   789  0001E0  2386               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   790  0001E2  0E00               	movlw	0
   791  0001E4  6F88               	movwf	(___wmul@multiplicand+1)& (0+255),b
   792  0001E6  0E0A               	movlw	10
   793  0001E8  6F87               	movwf	___wmul@multiplicand& (0+255),b
   794  0001EA  EC4D  F003         	call	___wmul	;wreg free
   795  0001EE  0100               	movlb	0	; () banked
   796  0001F0  5185               	movf	?___wmul& (0+255),w,b
   797  0001F2  278B               	addwf	??_main& (0+255),f,b
   798  0001F4  5186               	movf	(?___wmul+1)& (0+255),w,b
   799  0001F6  238C               	addwfc	(??_main+1)& (0+255),f,b
   800  0001F8  0ED0               	movlw	208
   801  0001FA  258B               	addwf	??_main& (0+255),w,b
   802  0001FC  6E51               	movwf	_length,c
   803  0001FE  0EFF               	movlw	255
   804  000200  218C               	addwfc	(??_main+1)& (0+255),w,b
   805  000202  6E52               	movwf	_length+1,c
   806                           
   807                           ;main.c: 114: turns = ((palabra[12] - 48) * 1000) + ((palabra[13] - 48) * 100) + ((palab
      +                          ra[14] - 48) * 10) + ((palabra[15] - 48));
   808  000204  0ED0               	movlw	208
   809  000206  256C               	addwf	(_palabra+12)& (0+255),w,b
   810  000208  6F85               	movwf	___wmul@multiplier& (0+255),b
   811  00020A  6B86               	clrf	(___wmul@multiplier+1)& (0+255),b
   812  00020C  0EFF               	movlw	255
   813  00020E  2386               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   814  000210  0E03               	movlw	3
   815  000212  6F88               	movwf	(___wmul@multiplicand+1)& (0+255),b
   816  000214  0EE8               	movlw	232
   817  000216  6F87               	movwf	___wmul@multiplicand& (0+255),b
   818  000218  EC4D  F003         	call	___wmul	;wreg free
   819  00021C  0100               	movlb	0	; () banked
   820  00021E  516F               	movf	(_palabra+15)& (0+255),w,b
   821  000220  6F8B               	movwf	??_main& (0+255),b
   822  000222  6B8C               	clrf	(??_main+1)& (0+255),b
   823  000224  5185               	movf	?___wmul& (0+255),w,b
   824  000226  278B               	addwf	??_main& (0+255),f,b
   825  000228  5186               	movf	(?___wmul+1)& (0+255),w,b
   826  00022A  238C               	addwfc	(??_main+1)& (0+255),f,b
   827  00022C  0ED0               	movlw	208
   828  00022E  256D               	addwf	(_palabra+13)& (0+255),w,b
   829  000230  6F85               	movwf	___wmul@multiplier& (0+255),b
   830  000232  6B86               	clrf	(___wmul@multiplier+1)& (0+255),b
   831  000234  0EFF               	movlw	255
   832  000236  2386               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   833  000238  0E00               	movlw	0
   834  00023A  6F88               	movwf	(___wmul@multiplicand+1)& (0+255),b
   835  00023C  0E64               	movlw	100
   836  00023E  6F87               	movwf	___wmul@multiplicand& (0+255),b
   837  000240  EC4D  F003         	call	___wmul	;wreg free
   838  000244  0100               	movlb	0	; () banked
   839  000246  5185               	movf	?___wmul& (0+255),w,b
   840  000248  278B               	addwf	??_main& (0+255),f,b
   841  00024A  5186               	movf	(?___wmul+1)& (0+255),w,b
   842  00024C  238C               	addwfc	(??_main+1)& (0+255),f,b
   843  00024E  0ED0               	movlw	208
   844  000250  256E               	addwf	(_palabra+14)& (0+255),w,b
   845  000252  6F85               	movwf	___wmul@multiplier& (0+255),b
   846  000254  6B86               	clrf	(___wmul@multiplier+1)& (0+255),b
   847  000256  0EFF               	movlw	255
   848  000258  2386               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   849  00025A  0E00               	movlw	0
   850  00025C  6F88               	movwf	(___wmul@multiplicand+1)& (0+255),b
   851  00025E  0E0A               	movlw	10
   852  000260  6F87               	movwf	___wmul@multiplicand& (0+255),b
   853  000262  EC4D  F003         	call	___wmul	;wreg free
   854  000266  0100               	movlb	0	; () banked
   855  000268  5185               	movf	?___wmul& (0+255),w,b
   856  00026A  278B               	addwf	??_main& (0+255),f,b
   857  00026C  5186               	movf	(?___wmul+1)& (0+255),w,b
   858  00026E  238C               	addwfc	(??_main+1)& (0+255),f,b
   859  000270  0ED0               	movlw	208
   860  000272  258B               	addwf	??_main& (0+255),w,b
   861  000274  6F8D               	movwf	_turns& (0+255),b
   862  000276  0EFF               	movlw	255
   863  000278  218C               	addwfc	(??_main+1)& (0+255),w,b
   864  00027A  6F8E               	movwf	(_turns+1)& (0+255),b
   865                           
   866                           ; BSR set to: 0
   867                           ;main.c: 115: speed = palabra[15];
   868  00027C  C06F  F07D         	movff	_palabra+15,_speed
   869  000280  6B7E               	clrf	(_speed+1)& (0+255),b
   870                           
   871                           ; BSR set to: 0
   872                           ;main.c: 117: busy_flag = 1;
   873  000282  0E01               	movlw	1
   874  000284  6E22               	movwf	_busy_flag,c
   875                           
   876                           ;main.c: 118: } else if (palabra[0] == 'C') {
   877  000286  D6C9               	goto	l183
   878  000288                     l187:
   879                           
   880                           ; BSR set to: 0
   881                           
   882                           ; BSR set to: 0
   883  000288  0E43               	movlw	67
   884  00028A  1960               	xorwf	_palabra& (0+255),w,b
   885  00028C  A4D8               	btfss	status,2,c
   886  00028E  D008               	goto	l189
   887                           
   888                           ; BSR set to: 0
   889                           ;main.c: 120: enable = !enable;
   890  000290  5019               	movf	_enable,w,c
   891  000292  A4D8               	btfss	status,2,c
   892  000294  D002               	goto	u1310
   893  000296  0E01               	movlw	1
   894  000298  D001               	goto	u1320
   895  00029A                     u1310:
   896  00029A  0E00               	movlw	0
   897  00029C                     u1320:
   898  00029C  6E19               	movwf	_enable,c
   899                           
   900                           ;main.c: 121: } else if ((palabra[0] == 'D') && (zero_flag)) {
   901  00029E  D6BD               	goto	l183
   902  0002A0                     l189:
   903                           
   904                           ; BSR set to: 0
   905                           
   906                           ; BSR set to: 0
   907  0002A0  0E44               	movlw	68
   908  0002A2  1960               	xorwf	_palabra& (0+255),w,b
   909  0002A4  A4D8               	btfss	status,2,c
   910  0002A6  D022               	goto	l191
   911                           
   912                           ; BSR set to: 0
   913  0002A8  5053               	movf	_zero_flag,w,c
   914  0002AA  B4D8               	btfsc	status,2,c
   915  0002AC  D01F               	goto	l191
   916                           
   917                           ; BSR set to: 0
   918                           ;main.c: 123: if (palabra[1] == '0') {
   919  0002AE  0E30               	movlw	48
   920  0002B0  1961               	xorwf	(_palabra+1)& (0+255),w,b
   921  0002B2  A4D8               	btfss	status,2,c
   922  0002B4  D004               	goto	l192
   923                           
   924                           ; BSR set to: 0
   925                           ;main.c: 125: MOT_3 = 1;
   926  0002B6  0E01               	movlw	1
   927  0002B8  6E24               	movwf	_MOT_3,c
   928                           
   929                           ;main.c: 126: DIR_3 = 0;
   930  0002BA  0E00               	movlw	0
   931  0002BC  D007               	goto	L1
   932  0002BE                     l192:
   933                           
   934                           ; BSR set to: 0
   935                           
   936                           ; BSR set to: 0
   937  0002BE  0E31               	movlw	49
   938  0002C0  1961               	xorwf	(_palabra+1)& (0+255),w,b
   939  0002C2  A4D8               	btfss	status,2,c
   940  0002C4  D005               	goto	l194
   941                           
   942                           ; BSR set to: 0
   943                           ;main.c: 129: MOT_3 = 1;
   944  0002C6  0E01               	movlw	1
   945  0002C8  6E24               	movwf	_MOT_3,c
   946                           
   947                           ;main.c: 130: DIR_3 = 1;
   948  0002CA  0E01               	movlw	1
   949  0002CC                     L1:
   950  0002CC  6E23               	movwf	_DIR_3,c
   951                           
   952                           ;main.c: 131: } else if (palabra[1] == '2') {
   953  0002CE  D6A5               	goto	l183
   954  0002D0                     l194:
   955                           
   956                           ; BSR set to: 0
   957                           
   958                           ; BSR set to: 0
   959  0002D0  0E32               	movlw	50
   960  0002D2  1961               	xorwf	(_palabra+1)& (0+255),w,b
   961  0002D4  B4D8               	btfsc	status,2,c
   962  0002D6  D030               	goto	u1480
   963                           
   964                           ; BSR set to: 0
   965                           
   966                           ; BSR set to: 0
   967                           
   968                           ;main.c: 134: } else if (palabra[1] == '3') {
   969                           
   970                           ; BSR set to: 0
   971                           ;main.c: 133: MOT_3 = 0;
   972  0002D8  0E33               	movlw	51
   973  0002DA  1961               	xorwf	(_palabra+1)& (0+255),w,b
   974  0002DC  A4D8               	btfss	status,2,c
   975  0002DE  D69D               	goto	l183
   976                           
   977                           ; BSR set to: 0
   978                           ;main.c: 136: if (MOT_3 == 0) {
   979  0002E0  5024               	movf	_MOT_3,w,c
   980  0002E2  A4D8               	btfss	status,2,c
   981  0002E4  D69A               	goto	l183
   982                           
   983                           ; BSR set to: 0
   984                           ;main.c: 138: zero_mark();
   985  0002E6  EC86  F003         	call	_zero_mark	;wreg free
   986                           
   987                           ;main.c: 139: }
   988                           ;main.c: 141: }
   989                           ;main.c: 144: } else if (palabra[0] == 'M') {
   990  0002EA  D697               	goto	l183
   991  0002EC                     l191:
   992  0002EC  0E4D               	movlw	77
   993  0002EE  0100               	movlb	0	; () banked
   994  0002F0  1960               	xorwf	_palabra& (0+255),w,b
   995  0002F2  A4D8               	btfss	status,2,c
   996  0002F4  D692               	goto	l183
   997                           
   998                           ; BSR set to: 0
   999                           ;main.c: 146: if (palabra[1] == '1') {
  1000  0002F6  0E31               	movlw	49
  1001  0002F8  1961               	xorwf	(_palabra+1)& (0+255),w,b
  1002  0002FA  A4D8               	btfss	status,2,c
  1003  0002FC  D008               	goto	l202
  1004                           
  1005                           ; BSR set to: 0
  1006                           ;main.c: 147: MOT_1 = !MOT_1;
  1007  0002FE  5025               	movf	_MOT_1,w,c
  1008  000300  A4D8               	btfss	status,2,c
  1009  000302  D002               	goto	u1420
  1010  000304  0E01               	movlw	1
  1011  000306  D001               	goto	u1430
  1012  000308                     u1420:
  1013  000308  0E00               	movlw	0
  1014  00030A                     u1430:
  1015  00030A  6E25               	movwf	_MOT_1,c
  1016                           
  1017                           ;main.c: 148: } else if (palabra[1] == '2') {
  1018  00030C  D686               	goto	l183
  1019  00030E                     l202:
  1020                           
  1021                           ; BSR set to: 0
  1022                           
  1023                           ; BSR set to: 0
  1024  00030E  0E32               	movlw	50
  1025  000310  1961               	xorwf	(_palabra+1)& (0+255),w,b
  1026  000312  A4D8               	btfss	status,2,c
  1027  000314  D008               	goto	l204
  1028                           
  1029                           ; BSR set to: 0
  1030                           ;main.c: 149: MOT_2 = !MOT_2;
  1031  000316  5021               	movf	_MOT_2,w,c
  1032  000318  A4D8               	btfss	status,2,c
  1033  00031A  D002               	goto	u1450
  1034  00031C  0E01               	movlw	1
  1035  00031E  D001               	goto	u1460
  1036  000320                     u1450:
  1037  000320  0E00               	movlw	0
  1038  000322                     u1460:
  1039  000322  6E21               	movwf	_MOT_2,c
  1040                           
  1041                           ;main.c: 150: } else if (palabra[1] == '3') {
  1042  000324  D67A               	goto	l183
  1043  000326                     l204:
  1044                           
  1045                           ; BSR set to: 0
  1046                           
  1047                           ; BSR set to: 0
  1048  000326  0E33               	movlw	51
  1049  000328  1961               	xorwf	(_palabra+1)& (0+255),w,b
  1050  00032A  A4D8               	btfss	status,2,c
  1051  00032C  D676               	goto	l183
  1052                           
  1053                           ; BSR set to: 0
  1054                           ;main.c: 151: MOT_3 = !MOT_3;
  1055  00032E  5024               	movf	_MOT_3,w,c
  1056  000330  A4D8               	btfss	status,2,c
  1057  000332  D002               	goto	u1480
  1058  000334  0E01               	movlw	1
  1059  000336  D001               	goto	u1490
  1060  000338                     u1480:
  1061  000338  0E00               	movlw	0
  1062  00033A                     u1490:
  1063  00033A  6E24               	movwf	_MOT_3,c
  1064                           
  1065                           ; BSR set to: 0
  1066                           ;main.c: 152: }
  1067                           ;main.c: 153: }
  1068                           ;main.c: 156: } else if (GODONE == 0) {
  1069                           
  1070                           ; BSR set to: 0
  1071                           
  1072                           ; BSR set to: 0
  1073                           
  1074                           ; BSR set to: 0
  1075                           
  1076                           ; BSR set to: 0
  1077                           
  1078                           ; BSR set to: 0
  1079                           
  1080                           ; BSR set to: 0
  1081                           
  1082                           ; BSR set to: 0
  1083  00033C  D66E               	goto	l183
  1084  00033E                     l184:
  1085                           
  1086                           ; BSR set to: 0
  1087  00033E  B2C2               	btfsc	4034,1,c	;volatile
  1088  000340  D66C               	goto	l183
  1089                           
  1090                           ; BSR set to: 0
  1091                           ;main.c: 158: _delay((unsigned long)((4)*(8000000/4000.0)));
  1092  000342  0E0B               	movlw	11
  1093  000344  0100               	movlb	0	; () banked
  1094  000346  6F8B               	movwf	??_main& (0+255),b
  1095  000348  0E62               	movlw	98
  1096  00034A                     u1517:
  1097  00034A  2EE8               	decfsz	wreg,f,c
  1098  00034C  D7FE               	bra	u1517
  1099  00034E  2F8B               	decfsz	??_main& (0+255),f,b
  1100  000350  D7FC               	bra	u1517
  1101  000352  F000               	nop	
  1102                           
  1103                           ;main.c: 160: GODONE = 1;
  1104  000354  82C2               	bsf	4034,1,c	;volatile
  1105  000356  D661               	goto	l183
  1106  000358                     __end_of_main:
  1107                           	opt stack 0
  1108                           tblptru	equ	0xFF8
  1109                           tblptrh	equ	0xFF7
  1110                           tblptrl	equ	0xFF6
  1111                           tablat	equ	0xFF5
  1112                           postinc0	equ	0xFEE
  1113                           wreg	equ	0xFE8
  1114                           postdec1	equ	0xFE5
  1115                           fsr1l	equ	0xFE1
  1116                           status	equ	0xFD8
  1117                           
  1118 ;; *************** function _zero_mark *****************
  1119 ;; Defined at:
  1120 ;;		line 218 in file "main.c"
  1121 ;; Parameters:    Size  Location     Type
  1122 ;;		None
  1123 ;; Auto vars:     Size  Location     Type
  1124 ;;		None
  1125 ;; Return value:  Size  Location     Type
  1126 ;;                  1    wreg      void 
  1127 ;; Registers used:
  1128 ;;		wreg, status,2
  1129 ;; Tracked objects:
  1130 ;;		On entry : 0/0
  1131 ;;		On exit  : 0/0
  1132 ;;		Unchanged: 0/0
  1133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1134 ;;      Params:         0       0       0       0       0       0       0       0       0
  1135 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1136 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1137 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1138 ;;Total ram usage:        0 bytes
  1139 ;; Hardware stack levels used:    1
  1140 ;; Hardware stack levels required when called:    3
  1141 ;; This function calls:
  1142 ;;		Nothing
  1143 ;; This function is called by:
  1144 ;;		_main
  1145 ;; This function uses a non-reentrant model
  1146 ;;
  1147                           
  1148                           	psect	text1
  1149  00070C                     __ptext1:
  1150                           	opt stack 0
  1151  00070C                     _zero_mark:
  1152                           	opt stack 27
  1153                           
  1154                           ;main.c: 219: DIR_3 = 1;
  1155                           
  1156                           ;incstack = 0
  1157  00070C  0E01               	movlw	1
  1158  00070E  6E23               	movwf	_DIR_3,c
  1159                           
  1160                           ;main.c: 220: T1CONbits.TMR1ON = 0;
  1161  000710  90CD               	bcf	4045,0,c	;volatile
  1162                           
  1163                           ;main.c: 221: T0CONbits.TMR0ON = 1;
  1164  000712  8ED5               	bsf	4053,7,c	;volatile
  1165                           
  1166                           ;main.c: 222: zero_flag = 0;
  1167  000714  0E00               	movlw	0
  1168  000716  6E53               	movwf	_zero_flag,c
  1169                           
  1170                           ;main.c: 223: MOT_1 = 1;
  1171  000718  0E01               	movlw	1
  1172  00071A  6E25               	movwf	_MOT_1,c
  1173                           
  1174                           ;main.c: 224: MOT_3 = 1;
  1175  00071C  0E01               	movlw	1
  1176  00071E  6E24               	movwf	_MOT_3,c
  1177  000720  0012               	return		;funcret
  1178  000722                     __end_of_zero_mark:
  1179                           	opt stack 0
  1180                           tblptru	equ	0xFF8
  1181                           tblptrh	equ	0xFF7
  1182                           tblptrl	equ	0xFF6
  1183                           tablat	equ	0xFF5
  1184                           postinc0	equ	0xFEE
  1185                           wreg	equ	0xFE8
  1186                           postdec1	equ	0xFE5
  1187                           fsr1l	equ	0xFE1
  1188                           status	equ	0xFD8
  1189                           
  1190 ;; *************** function ___wmul *****************
  1191 ;; Defined at:
  1192 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
  1193 ;; Parameters:    Size  Location     Type
  1194 ;;  multiplier      2    0[BANK0 ] unsigned int 
  1195 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  1196 ;; Auto vars:     Size  Location     Type
  1197 ;;  product         2    4[BANK0 ] unsigned int 
  1198 ;; Return value:  Size  Location     Type
  1199 ;;                  2    0[BANK0 ] unsigned int 
  1200 ;; Registers used:
  1201 ;;		wreg, status,2, status,0, prodl, prodh
  1202 ;; Tracked objects:
  1203 ;;		On entry : 0/0
  1204 ;;		On exit  : 0/0
  1205 ;;		Unchanged: 0/0
  1206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1207 ;;      Params:         0       4       0       0       0       0       0       0       0
  1208 ;;      Locals:         0       2       0       0       0       0       0       0       0
  1209 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1210 ;;      Totals:         0       6       0       0       0       0       0       0       0
  1211 ;;Total ram usage:        6 bytes
  1212 ;; Hardware stack levels used:    1
  1213 ;; Hardware stack levels required when called:    3
  1214 ;; This function calls:
  1215 ;;		Nothing
  1216 ;; This function is called by:
  1217 ;;		_main
  1218 ;; This function uses a non-reentrant model
  1219 ;;
  1220                           
  1221                           	psect	text2
  1222  00069A                     __ptext2:
  1223                           	opt stack 0
  1224  00069A                     ___wmul:
  1225                           	opt stack 27
  1226                           
  1227                           ;incstack = 0
  1228  00069A  0100               	movlb	0	; () banked
  1229  00069C  5185               	movf	___wmul@multiplier& (0+255),w,b
  1230  00069E  0387               	mulwf	___wmul@multiplicand& (0+255),b
  1231  0006A0  CFF3 F089          	movff	prodl,___wmul@product
  1232  0006A4  CFF4 F08A          	movff	prodh,___wmul@product+1
  1233  0006A8  5185               	movf	___wmul@multiplier& (0+255),w,b
  1234  0006AA  0388               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  1235  0006AC  50F3               	movf	prodl,w,c
  1236  0006AE  278A               	addwf	(___wmul@product+1)& (0+255),f,b
  1237  0006B0  5186               	movf	(___wmul@multiplier+1)& (0+255),w,b
  1238  0006B2  0387               	mulwf	___wmul@multiplicand& (0+255),b
  1239  0006B4  50F3               	movf	prodl,w,c
  1240  0006B6  278A               	addwf	(___wmul@product+1)& (0+255),f,b
  1241                           
  1242                           ; BSR set to: 0
  1243  0006B8  C089  F085         	movff	___wmul@product,?___wmul
  1244  0006BC  C08A  F086         	movff	___wmul@product+1,?___wmul+1
  1245  0006C0  0012               	return	
  1246  0006C2                     __end_of___wmul:
  1247                           	opt stack 0
  1248                           tblptru	equ	0xFF8
  1249                           tblptrh	equ	0xFF7
  1250                           tblptrl	equ	0xFF6
  1251                           tablat	equ	0xFF5
  1252                           prodh	equ	0xFF4
  1253                           prodl	equ	0xFF3
  1254                           postinc0	equ	0xFEE
  1255                           wreg	equ	0xFE8
  1256                           postdec1	equ	0xFE5
  1257                           fsr1l	equ	0xFE1
  1258                           status	equ	0xFD8
  1259                           
  1260 ;; *************** function _InitApp *****************
  1261 ;; Defined at:
  1262 ;;		line 33 in file "user.c"
  1263 ;; Parameters:    Size  Location     Type
  1264 ;;		None
  1265 ;; Auto vars:     Size  Location     Type
  1266 ;;		None
  1267 ;; Return value:  Size  Location     Type
  1268 ;;                  1    wreg      void 
  1269 ;; Registers used:
  1270 ;;		wreg, status,2
  1271 ;; Tracked objects:
  1272 ;;		On entry : 0/0
  1273 ;;		On exit  : 0/0
  1274 ;;		Unchanged: 0/0
  1275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1276 ;;      Params:         0       0       0       0       0       0       0       0       0
  1277 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1278 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1279 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1280 ;;Total ram usage:        0 bytes
  1281 ;; Hardware stack levels used:    1
  1282 ;; Hardware stack levels required when called:    3
  1283 ;; This function calls:
  1284 ;;		Nothing
  1285 ;; This function is called by:
  1286 ;;		_main
  1287 ;; This function uses a non-reentrant model
  1288 ;;
  1289                           
  1290                           	psect	text3
  1291  000584                     __ptext3:
  1292                           	opt stack 0
  1293  000584                     _InitApp:
  1294                           	opt stack 27
  1295                           
  1296                           ;user.c: 35: PORTA = 0;
  1297                           
  1298                           ; BSR set to: 0
  1299                           ;incstack = 0
  1300  000584  0E00               	movlw	0
  1301  000586  6E80               	movwf	3968,c	;volatile
  1302                           
  1303                           ;user.c: 36: LATA = 0;
  1304  000588  0E00               	movlw	0
  1305  00058A  6E89               	movwf	3977,c	;volatile
  1306                           
  1307                           ;user.c: 37: PORTB = 0;
  1308  00058C  0E00               	movlw	0
  1309  00058E  6E81               	movwf	3969,c	;volatile
  1310                           
  1311                           ;user.c: 38: LATB = 0;
  1312  000590  0E00               	movlw	0
  1313  000592  6E8A               	movwf	3978,c	;volatile
  1314                           
  1315                           ;user.c: 39: PORTC = 0;
  1316  000594  0E00               	movlw	0
  1317  000596  6E82               	movwf	3970,c	;volatile
  1318                           
  1319                           ;user.c: 40: LATC = 0;
  1320  000598  0E00               	movlw	0
  1321  00059A  6E8B               	movwf	3979,c	;volatile
  1322                           
  1323                           ;user.c: 42: ADCON1 = 0b1101;
  1324  00059C  0E0D               	movlw	13
  1325  00059E  6EC1               	movwf	4033,c	;volatile
  1326                           
  1327                           ;user.c: 43: TRISAbits.TRISA0 = 1;
  1328  0005A0  8092               	bsf	3986,0,c	;volatile
  1329                           
  1330                           ;user.c: 44: ADCON0bits.CHS = 0;
  1331  0005A2  94C2               	bcf	4034,2,c	;volatile
  1332  0005A4  96C2               	bcf	4034,3,c	;volatile
  1333  0005A6  98C2               	bcf	4034,4,c	;volatile
  1334  0005A8  9AC2               	bcf	4034,5,c	;volatile
  1335                           
  1336                           ;user.c: 45: ADCON2 = 0b10101100;
  1337  0005AA  0EAC               	movlw	172
  1338  0005AC  6EC0               	movwf	4032,c	;volatile
  1339                           
  1340                           ;user.c: 46: PIE1bits.ADIE = 1;
  1341  0005AE  8C9D               	bsf	3997,6,c	;volatile
  1342                           
  1343                           ;user.c: 47: PIR1bits.ADIF = 0;
  1344  0005B0  9C9E               	bcf	3998,6,c	;volatile
  1345                           
  1346                           ;user.c: 48: ADCON0bits.ADON = 1;
  1347  0005B2  80C2               	bsf	4034,0,c	;volatile
  1348                           
  1349                           ;user.c: 50: TRISAbits.RA2 = 0;
  1350  0005B4  9492               	bcf	3986,2,c	;volatile
  1351                           
  1352                           ;user.c: 51: TRISAbits.RA3 = 0;
  1353  0005B6  9692               	bcf	3986,3,c	;volatile
  1354                           
  1355                           ;user.c: 52: TRISAbits.RA4 = 0;
  1356  0005B8  9892               	bcf	3986,4,c	;volatile
  1357                           
  1358                           ;user.c: 53: TRISAbits.RA5 = 0;
  1359  0005BA  9A92               	bcf	3986,5,c	;volatile
  1360                           
  1361                           ;user.c: 54: TRISCbits.RC0 = 0;
  1362  0005BC  9094               	bcf	3988,0,c	;volatile
  1363                           
  1364                           ;user.c: 55: TRISCbits.RC1 = 0;
  1365  0005BE  9294               	bcf	3988,1,c	;volatile
  1366                           
  1367                           ;user.c: 56: TRISBbits.RB7 = 0;
  1368  0005C0  9E93               	bcf	3987,7,c	;volatile
  1369                           
  1370                           ;user.c: 57: TRISBbits.RB6 = 0;
  1371  0005C2  9C93               	bcf	3987,6,c	;volatile
  1372                           
  1373                           ;user.c: 58: TRISCbits.RC2 = 0;
  1374  0005C4  9494               	bcf	3988,2,c	;volatile
  1375                           
  1376                           ;user.c: 59: TRISBbits.RB4 = 0;
  1377  0005C6  9893               	bcf	3987,4,c	;volatile
  1378                           
  1379                           ;user.c: 60: TRISBbits.RB5 = 0;
  1380  0005C8  9A93               	bcf	3987,5,c	;volatile
  1381                           
  1382                           ;user.c: 62: RCONbits.IPEN = 0;
  1383  0005CA  9ED0               	bcf	4048,7,c	;volatile
  1384                           
  1385                           ;user.c: 64: INTCONbits.GIE = 1;
  1386  0005CC  8EF2               	bsf	intcon,7,c	;volatile
  1387                           
  1388                           ;user.c: 65: INTCONbits.PEIE = 1;
  1389  0005CE  8CF2               	bsf	intcon,6,c	;volatile
  1390                           
  1391                           ;user.c: 66: INTCONbits.TMR0IE = 1;
  1392  0005D0  8AF2               	bsf	intcon,5,c	;volatile
  1393                           
  1394                           ;user.c: 67: INTCONbits.TMR0IF = 0;
  1395  0005D2  94F2               	bcf	intcon,2,c	;volatile
  1396                           
  1397                           ;user.c: 68: INTCON2bits.TMR0IP = 1;
  1398  0005D4  84F1               	bsf	intcon2,2,c	;volatile
  1399                           
  1400                           ;user.c: 69: T0CONbits.T08BIT = 1;
  1401  0005D6  8CD5               	bsf	4053,6,c	;volatile
  1402                           
  1403                           ;user.c: 70: T0CONbits.T0CS = 0;
  1404  0005D8  9AD5               	bcf	4053,5,c	;volatile
  1405                           
  1406                           ;user.c: 71: T0CONbits.PSA = 0;
  1407  0005DA  96D5               	bcf	4053,3,c	;volatile
  1408                           
  1409                           ;user.c: 72: T0CONbits.T0PS = 0b101;
  1410  0005DC  50D5               	movf	4053,w,c	;volatile
  1411  0005DE  0BF8               	andlw	-8
  1412  0005E0  0905               	iorlw	5
  1413  0005E2  6ED5               	movwf	4053,c	;volatile
  1414                           
  1415                           ;user.c: 73: T0CONbits.TMR0ON = 0;
  1416  0005E4  9ED5               	bcf	4053,7,c	;volatile
  1417                           
  1418                           ;user.c: 74: TMR0 = 0x6;
  1419  0005E6  0E00               	movlw	0
  1420  0005E8  6ED7               	movwf	4055,c	;volatile
  1421  0005EA  0E06               	movlw	6
  1422  0005EC  6ED6               	movwf	4054,c	;volatile
  1423                           
  1424                           ;user.c: 76: PIE1bits.TMR1IE = 1;
  1425  0005EE  809D               	bsf	3997,0,c	;volatile
  1426                           
  1427                           ;user.c: 77: PIR1bits.TMR1IF = 0;
  1428  0005F0  909E               	bcf	3998,0,c	;volatile
  1429                           
  1430                           ;user.c: 78: IPR1bits.TMR1IP = 1;
  1431  0005F2  809F               	bsf	3999,0,c	;volatile
  1432                           
  1433                           ;user.c: 79: T1CONbits.TMR1CS = 0;
  1434  0005F4  92CD               	bcf	4045,1,c	;volatile
  1435                           
  1436                           ;user.c: 80: T1CONbits.T1CKPS = 0b00;
  1437  0005F6  0ECF               	movlw	-49
  1438  0005F8  16CD               	andwf	4045,f,c	;volatile
  1439                           
  1440                           ;user.c: 81: T1CONbits.TMR1ON = 1;
  1441  0005FA  80CD               	bsf	4045,0,c	;volatile
  1442                           
  1443                           ;user.c: 85: TRISBbits.RB1 = 1;
  1444  0005FC  8293               	bsf	3987,1,c	;volatile
  1445                           
  1446                           ;user.c: 86: TRISBbits.RB2 = 1;
  1447  0005FE  8493               	bsf	3987,2,c	;volatile
  1448                           
  1449                           ;user.c: 87: INTCON3bits.INT1IE = 1;
  1450  000600  86F0               	bsf	intcon3,3,c	;volatile
  1451                           
  1452                           ;user.c: 88: INTCON3bits.INT2IE = 1;
  1453  000602  88F0               	bsf	intcon3,4,c	;volatile
  1454                           
  1455                           ;user.c: 89: INTCON3bits.INT1IF = 0;
  1456  000604  90F0               	bcf	intcon3,0,c	;volatile
  1457                           
  1458                           ;user.c: 90: INTCON3bits.INT2IF = 0;
  1459  000606  92F0               	bcf	intcon3,1,c	;volatile
  1460                           
  1461                           ;user.c: 91: INTCON2bits.INTEDG1 = 0;
  1462  000608  9AF1               	bcf	intcon2,5,c	;volatile
  1463                           
  1464                           ;user.c: 92: INTCON2bits.INTEDG2 = 0;
  1465  00060A  98F1               	bcf	intcon2,4,c	;volatile
  1466                           
  1467                           ;user.c: 94: TRISCbits.RC6 = 0;
  1468  00060C  9C94               	bcf	3988,6,c	;volatile
  1469                           
  1470                           ;user.c: 95: TRISCbits.RC7 = 1;
  1471  00060E  8E94               	bsf	3988,7,c	;volatile
  1472                           
  1473                           ;user.c: 96: BRGH = 1;
  1474  000610  84AC               	bsf	4012,2,c	;volatile
  1475                           
  1476                           ;user.c: 97: BRG16 = 1;
  1477  000612  86B8               	bsf	4024,3,c	;volatile
  1478                           
  1479                           ;user.c: 98: SPBRG = 207;
  1480  000614  0ECF               	movlw	207
  1481  000616  6EAF               	movwf	4015,c	;volatile
  1482                           
  1483                           ;user.c: 99: SPEN = 1;
  1484  000618  8EAB               	bsf	4011,7,c	;volatile
  1485                           
  1486                           ;user.c: 100: SYNC = 0;
  1487  00061A  98AC               	bcf	4012,4,c	;volatile
  1488                           
  1489                           ;user.c: 101: TXEN = 1;
  1490  00061C  8AAC               	bsf	4012,5,c	;volatile
  1491                           
  1492                           ;user.c: 102: CREN = 1;
  1493  00061E  88AB               	bsf	4011,4,c	;volatile
  1494                           
  1495                           ;user.c: 103: TX9 = 0;
  1496  000620  9CAC               	bcf	4012,6,c	;volatile
  1497                           
  1498                           ;user.c: 104: RX9 = 0;
  1499  000622  9CAB               	bcf	4011,6,c	;volatile
  1500                           
  1501                           ;user.c: 105: RCIE = 1;
  1502  000624  8A9D               	bsf	3997,5,c	;volatile
  1503                           
  1504                           ;user.c: 106: TXIE = 0;
  1505  000626  989D               	bcf	3997,4,c	;volatile
  1506                           
  1507                           ;user.c: 108: PR2 = 99;
  1508  000628  0E63               	movlw	99
  1509  00062A  6ECB               	movwf	4043,c	;volatile
  1510                           
  1511                           ;user.c: 109: CCP1CONbits.DC1B = 0;
  1512  00062C  0ECF               	movlw	-49
  1513  00062E  16BD               	andwf	4029,f,c	;volatile
  1514                           
  1515                           ;user.c: 110: T2CONbits.T2CKPS = 0b00;
  1516  000630  0EFC               	movlw	-4
  1517  000632  16CA               	andwf	4042,f,c	;volatile
  1518                           
  1519                           ;user.c: 111: T2CONbits.TMR2ON = 1;
  1520  000634  84CA               	bsf	4042,2,c	;volatile
  1521                           
  1522                           ;user.c: 112: CCP1CONbits.CCP1M = 0b1111;
  1523  000636  80BD               	bsf	4029,0,c	;volatile
  1524  000638  82BD               	bsf	4029,1,c	;volatile
  1525  00063A  84BD               	bsf	4029,2,c	;volatile
  1526  00063C  86BD               	bsf	4029,3,c	;volatile
  1527  00063E  0012               	return		;funcret
  1528  000640                     __end_of_InitApp:
  1529                           	opt stack 0
  1530                           tblptru	equ	0xFF8
  1531                           tblptrh	equ	0xFF7
  1532                           tblptrl	equ	0xFF6
  1533                           tablat	equ	0xFF5
  1534                           prodh	equ	0xFF4
  1535                           prodl	equ	0xFF3
  1536                           intcon	equ	0xFF2
  1537                           intcon2	equ	0xFF1
  1538                           intcon3	equ	0xFF0
  1539                           postinc0	equ	0xFEE
  1540                           wreg	equ	0xFE8
  1541                           postdec1	equ	0xFE5
  1542                           fsr1l	equ	0xFE1
  1543                           status	equ	0xFD8
  1544                           
  1545 ;; *************** function _ConfigureOscillator *****************
  1546 ;; Defined at:
  1547 ;;		line 24 in file "system.c"
  1548 ;; Parameters:    Size  Location     Type
  1549 ;;		None
  1550 ;; Auto vars:     Size  Location     Type
  1551 ;;		None
  1552 ;; Return value:  Size  Location     Type
  1553 ;;                  1    wreg      void 
  1554 ;; Registers used:
  1555 ;;		wreg, status,2
  1556 ;; Tracked objects:
  1557 ;;		On entry : 0/0
  1558 ;;		On exit  : 0/0
  1559 ;;		Unchanged: 0/0
  1560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1561 ;;      Params:         0       0       0       0       0       0       0       0       0
  1562 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1563 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1564 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1565 ;;Total ram usage:        0 bytes
  1566 ;; Hardware stack levels used:    1
  1567 ;; Hardware stack levels required when called:    3
  1568 ;; This function calls:
  1569 ;;		Nothing
  1570 ;; This function is called by:
  1571 ;;		_main
  1572 ;; This function uses a non-reentrant model
  1573 ;;
  1574                           
  1575                           	psect	text4
  1576  000732                     __ptext4:
  1577                           	opt stack 0
  1578  000732                     _ConfigureOscillator:
  1579                           	opt stack 27
  1580                           
  1581                           ;system.c: 27: OSCCONbits.IRCF = 0b111;
  1582                           
  1583                           ;incstack = 0
  1584  000732  88D3               	bsf	4051,4,c	;volatile
  1585  000734  8AD3               	bsf	4051,5,c	;volatile
  1586  000736  8CD3               	bsf	4051,6,c	;volatile
  1587                           
  1588                           ;system.c: 28: OSCCONbits.SCS = 0b11;
  1589  000738  0E03               	movlw	3
  1590  00073A  12D3               	iorwf	4051,f,c	;volatile
  1591  00073C  0012               	return		;funcret
  1592  00073E                     __end_of_ConfigureOscillator:
  1593                           	opt stack 0
  1594                           tblptru	equ	0xFF8
  1595                           tblptrh	equ	0xFF7
  1596                           tblptrl	equ	0xFF6
  1597                           tablat	equ	0xFF5
  1598                           prodh	equ	0xFF4
  1599                           prodl	equ	0xFF3
  1600                           intcon	equ	0xFF2
  1601                           intcon2	equ	0xFF1
  1602                           intcon3	equ	0xFF0
  1603                           postinc0	equ	0xFEE
  1604                           wreg	equ	0xFE8
  1605                           postdec1	equ	0xFE5
  1606                           fsr1l	equ	0xFE1
  1607                           status	equ	0xFD8
  1608                           
  1609 ;; *************** function _high_isr *****************
  1610 ;; Defined at:
  1611 ;;		line 72 in file "interrupts.c"
  1612 ;; Parameters:    Size  Location     Type
  1613 ;;		None
  1614 ;; Auto vars:     Size  Location     Type
  1615 ;;		None
  1616 ;; Return value:  Size  Location     Type
  1617 ;;                  1    wreg      void 
  1618 ;; Registers used:
  1619 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1620 ;; Tracked objects:
  1621 ;;		On entry : 0/0
  1622 ;;		On exit  : 0/0
  1623 ;;		Unchanged: 0/0
  1624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1625 ;;      Params:         0       0       0       0       0       0       0       0       0
  1626 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1627 ;;      Temps:         19       0       0       0       0       0       0       0       0
  1628 ;;      Totals:        19       0       0       0       0       0       0       0       0
  1629 ;;Total ram usage:       19 bytes
  1630 ;; Hardware stack levels used:    1
  1631 ;; Hardware stack levels required when called:    2
  1632 ;; This function calls:
  1633 ;;		_mot_3_step_count
  1634 ;; This function is called by:
  1635 ;;		Interrupt level 2
  1636 ;; This function uses a non-reentrant model
  1637 ;;
  1638                           
  1639                           	psect	intcode
  1640  000008                     __pintcode:
  1641                           	opt stack 0
  1642  000008                     _high_isr:
  1643                           	opt stack 27
  1644                           
  1645                           ;incstack = 0
  1646  000008  8254               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  1647  00000A  EDAC  F001         	call	int_func,f	;refresh shadow registers
  1648                           tblptru	equ	0xFF8
  1649                           tblptrh	equ	0xFF7
  1650                           tblptrl	equ	0xFF6
  1651                           tablat	equ	0xFF5
  1652                           prodh	equ	0xFF4
  1653                           prodl	equ	0xFF3
  1654                           intcon	equ	0xFF2
  1655                           intcon2	equ	0xFF1
  1656                           intcon3	equ	0xFF0
  1657                           postinc0	equ	0xFEE
  1658                           wreg	equ	0xFE8
  1659                           postdec1	equ	0xFE5
  1660                           fsr1l	equ	0xFE1
  1661                           status	equ	0xFD8
  1662                           
  1663                           	psect	intcode_body
  1664  000358                     __pintcode_body:
  1665                           	opt stack 27
  1666  000358                     int_func:
  1667                           	opt stack 27
  1668  000358  0006               	pop		; remove dummy address from shadow register refresh
  1669  00035A  CFFA F033          	movff	pclath,??_high_isr+1
  1670  00035E  CFFB F034          	movff	pclatu,??_high_isr+2
  1671  000362  CFE9 F035          	movff	fsr0l,??_high_isr+3
  1672  000366  CFEA F036          	movff	fsr0h,??_high_isr+4
  1673  00036A  CFE1 F037          	movff	fsr1l,??_high_isr+5
  1674  00036E  CFE2 F038          	movff	fsr1h,??_high_isr+6
  1675  000372  CFD9 F039          	movff	fsr2l,??_high_isr+7
  1676  000376  CFDA F03A          	movff	fsr2h,??_high_isr+8
  1677  00037A  CFF3 F03B          	movff	prodl,??_high_isr+9
  1678  00037E  CFF4 F03C          	movff	prodh,??_high_isr+10
  1679  000382  CFF6 F03D          	movff	tblptrl,??_high_isr+11
  1680  000386  CFF7 F03E          	movff	tblptrh,??_high_isr+12
  1681  00038A  CFF8 F03F          	movff	tblptru,??_high_isr+13
  1682  00038E  CFF5 F040          	movff	tablat,??_high_isr+14
  1683  000392  C054  F041         	movff	btemp,??_high_isr+15
  1684  000396  C055  F042         	movff	btemp+1,??_high_isr+16
  1685  00039A  C056  F043         	movff	btemp+2,??_high_isr+17
  1686  00039E  C057  F044         	movff	btemp+3,??_high_isr+18
  1687                           
  1688                           ;interrupts.c: 73: if (INTCONbits.TMR0IF) {
  1689  0003A2  A4F2               	btfss	intcon,2,c	;volatile
  1690  0003A4  D06F               	goto	i2l81
  1691                           
  1692                           ;interrupts.c: 75: INTCONbits.TMR0IF = 0;
  1693  0003A6  94F2               	bcf	intcon,2,c	;volatile
  1694                           
  1695                           ;interrupts.c: 76: TMR0 = 250;
  1696  0003A8  0E00               	movlw	0
  1697  0003AA  6ED7               	movwf	4055,c	;volatile
  1698  0003AC  0EFA               	movlw	250
  1699  0003AE  6ED6               	movwf	4054,c	;volatile
  1700                           
  1701                           ;interrupts.c: 77: MOT_1_count++;
  1702  0003B0  4A11               	infsnz	_MOT_1_count,f,c
  1703  0003B2  2A12               	incf	_MOT_1_count+1,f,c
  1704                           
  1705                           ;interrupts.c: 78: MOT_2_count++;
  1706  0003B4  4A0F               	infsnz	_MOT_2_count,f,c
  1707  0003B6  2A10               	incf	_MOT_2_count+1,f,c
  1708                           
  1709                           ;interrupts.c: 79: MOT_3_count++;
  1710  0003B8  4A0D               	infsnz	_MOT_3_count,f,c
  1711  0003BA  2A0E               	incf	_MOT_3_count+1,f,c
  1712                           
  1713                           ;interrupts.c: 80: MOT_4_count++;
  1714  0003BC  4A0B               	infsnz	_MOT_4_count,f,c
  1715  0003BE  2A0C               	incf	_MOT_4_count+1,f,c
  1716                           
  1717                           ;interrupts.c: 82: if (MOT_1) {
  1718  0003C0  5025               	movf	_MOT_1,w,c
  1719  0003C2  B4D8               	btfsc	status,2,c
  1720  0003C4  D026               	goto	i2l84
  1721                           
  1722                           ;interrupts.c: 83: if (MOT_1_count == count_1) {
  1723  0003C6  504F               	movf	_count_1,w,c
  1724  0003C8  1811               	xorwf	_MOT_1_count,w,c
  1725  0003CA  E123               	bnz	i2l1401
  1726  0003CC  5050               	movf	_count_1+1,w,c
  1727  0003CE  1812               	xorwf	_MOT_1_count+1,w,c
  1728  0003D0  A4D8               	btfss	status,2,c
  1729  0003D2  D01F               	goto	i2l84
  1730                           
  1731                           ;interrupts.c: 84: MOT_1_count = 0;
  1732  0003D4  0E00               	movlw	0
  1733  0003D6  6E12               	movwf	_MOT_1_count+1,c
  1734  0003D8  0E00               	movlw	0
  1735  0003DA  6E11               	movwf	_MOT_1_count,c
  1736                           
  1737                           ;interrupts.c: 85: LATAbits.LA3 = !PORTAbits.RA3;
  1738  0003DC  B680               	btfsc	3968,3,c	;volatile
  1739  0003DE  D003               	goto	i2u64_40
  1740  0003E0  6A32               	clrf	??_high_isr& (0+255),c
  1741  0003E2  2A32               	incf	??_high_isr& (0+255),f,c
  1742  0003E4  D001               	goto	i2u65_48
  1743  0003E6                     i2u64_40:
  1744  0003E6  6A32               	clrf	??_high_isr& (0+255),c
  1745  0003E8                     i2u65_48:
  1746  0003E8  4632               	rlncf	??_high_isr,f,c
  1747  0003EA  4632               	rlncf	??_high_isr,f,c
  1748  0003EC  4632               	rlncf	??_high_isr,f,c
  1749  0003EE  5089               	movf	3977,w,c	;volatile
  1750  0003F0  1832               	xorwf	??_high_isr,w,c
  1751  0003F2  0BF7               	andlw	-9
  1752  0003F4  1832               	xorwf	??_high_isr,w,c
  1753  0003F6  6E89               	movwf	3977,c	;volatile
  1754                           
  1755                           ;interrupts.c: 86: mot_1_steps++;
  1756  0003F8  4A09               	infsnz	_mot_1_steps,f,c
  1757  0003FA  2A0A               	incf	_mot_1_steps+1,f,c
  1758                           
  1759                           ;interrupts.c: 87: if (mot_1_steps == 200) {
  1760  0003FC  0EC8               	movlw	200
  1761  0003FE  1809               	xorwf	_mot_1_steps,w,c
  1762  000400  100A               	iorwf	_mot_1_steps+1,w,c
  1763  000402  A4D8               	btfss	status,2,c
  1764  000404  D006               	goto	i2l84
  1765                           
  1766                           ;interrupts.c: 89: mot_1_steps = 0;
  1767  000406  0E00               	movlw	0
  1768  000408  6E0A               	movwf	_mot_1_steps+1,c
  1769  00040A  0E00               	movlw	0
  1770  00040C  6E09               	movwf	_mot_1_steps,c
  1771                           
  1772                           ;interrupts.c: 90: turns_count++;
  1773  00040E  4A03               	infsnz	_turns_count,f,c
  1774  000410  2A04               	incf	_turns_count+1,f,c
  1775  000412                     i2l84:
  1776  000412                     i2l1401:
  1777                           
  1778                           ;interrupts.c: 91: }
  1779                           ;interrupts.c: 98: }
  1780                           ;interrupts.c: 99: }
  1781                           ;interrupts.c: 106: if (MOT_3) {
  1782  000412  5024               	movf	_MOT_3,w,c
  1783  000414  B4D8               	btfsc	status,2,c
  1784  000416  D090               	goto	i2l103
  1785                           
  1786                           ;interrupts.c: 107: if (MOT_3_count == count_3) {
  1787  000418  504B               	movf	_count_3,w,c
  1788  00041A  180D               	xorwf	_MOT_3_count,w,c
  1789  00041C  E103               	bnz	i2u68_41
  1790  00041E  504C               	movf	_count_3+1,w,c
  1791  000420  180E               	xorwf	_MOT_3_count+1,w,c
  1792  000422  A4D8               	btfss	status,2,c
  1793  000424                     i2u68_41:
  1794  000424  D089               	goto	i2l103
  1795                           
  1796                           ;interrupts.c: 108: MOT_3_count = 0;
  1797  000426  0E00               	movlw	0
  1798  000428  6E0E               	movwf	_MOT_3_count+1,c
  1799  00042A  0E00               	movlw	0
  1800  00042C  6E0D               	movwf	_MOT_3_count,c
  1801                           
  1802                           ;interrupts.c: 109: LATCbits.LC1 = !PORTCbits.RC1;
  1803  00042E  B282               	btfsc	3970,1,c	;volatile
  1804  000430  D003               	goto	i2u69_40
  1805  000432  6A32               	clrf	??_high_isr& (0+255),c
  1806  000434  2A32               	incf	??_high_isr& (0+255),f,c
  1807  000436  D001               	goto	i2u70_48
  1808  000438                     i2u69_40:
  1809  000438  6A32               	clrf	??_high_isr& (0+255),c
  1810  00043A                     i2u70_48:
  1811  00043A  4632               	rlncf	??_high_isr,f,c
  1812  00043C  508B               	movf	3979,w,c	;volatile
  1813  00043E  1832               	xorwf	??_high_isr,w,c
  1814  000440  0BFD               	andlw	-3
  1815  000442  1832               	xorwf	??_high_isr,w,c
  1816  000444  6E8B               	movwf	3979,c	;volatile
  1817                           
  1818                           ;interrupts.c: 110: mot_3_steps++;
  1819  000446  4A07               	infsnz	_mot_3_steps,f,c
  1820  000448  2A08               	incf	_mot_3_steps+1,f,c
  1821                           
  1822                           ;interrupts.c: 112: if (mot_3_steps == mot_3_step_count(length, 1)) {
  1823  00044A  C051  F02C         	movff	_length,mot_3_step_count@l
  1824  00044E  C052  F02D         	movff	_length+1,mot_3_step_count@l+1
  1825  000452  0E00               	movlw	0
  1826  000454  6E2F               	movwf	mot_3_step_count@ms+1,c
  1827  000456  0E01               	movlw	1
  1828  000458  6E2E               	movwf	mot_3_step_count@ms,c
  1829  00045A  EC74  F003         	call	_mot_3_step_count	;wreg free
  1830  00045E  5007               	movf	_mot_3_steps,w,c
  1831  000460  182C               	xorwf	?_mot_3_step_count,w,c
  1832  000462  E16A               	bnz	i2l88
  1833  000464  5008               	movf	_mot_3_steps+1,w,c
  1834  000466  182D               	xorwf	?_mot_3_step_count+1,w,c
  1835  000468  A4D8               	btfss	status,2,c
  1836  00046A  D066               	goto	i2l103
  1837                           
  1838                           ;interrupts.c: 114: DIR_3 = !DIR_3;
  1839  00046C  5023               	movf	_DIR_3,w,c
  1840  00046E  A4D8               	btfss	status,2,c
  1841  000470  D002               	goto	i2u72_40
  1842  000472  0E01               	movlw	1
  1843  000474  D001               	goto	i2u73_40
  1844  000476                     i2u72_40:
  1845  000476  0E00               	movlw	0
  1846  000478                     i2u73_40:
  1847  000478  6E23               	movwf	_DIR_3,c
  1848                           
  1849                           ;interrupts.c: 115: mot_3_steps = 0;
  1850  00047A  0E00               	movlw	0
  1851  00047C  6E08               	movwf	_mot_3_steps+1,c
  1852  00047E  0E00               	movlw	0
  1853  000480  6E07               	movwf	_mot_3_steps,c
  1854                           
  1855                           ;interrupts.c: 116: }
  1856                           ;interrupts.c: 117: }
  1857                           ;interrupts.c: 118: }
  1858                           ;interrupts.c: 128: } else if (PIR1bits.TMR1IF) {
  1859  000482  D05A               	goto	i2l103
  1860  000484                     i2l81:
  1861  000484  A09E               	btfss	3998,0,c	;volatile
  1862  000486  D017               	goto	i2l89
  1863                           
  1864                           ;interrupts.c: 130: if(MOT_3) {
  1865  000488  5024               	movf	_MOT_3,w,c
  1866  00048A  B4D8               	btfsc	status,2,c
  1867  00048C  D00C               	goto	i2l90
  1868                           
  1869                           ;interrupts.c: 131: LATCbits.LC1 = !PORTCbits.RC1;
  1870  00048E  B282               	btfsc	3970,1,c	;volatile
  1871  000490  D003               	goto	i2u76_40
  1872  000492  6A32               	clrf	??_high_isr& (0+255),c
  1873  000494  2A32               	incf	??_high_isr& (0+255),f,c
  1874  000496  D001               	goto	i2u77_48
  1875  000498                     i2u76_40:
  1876  000498  6A32               	clrf	??_high_isr& (0+255),c
  1877  00049A                     i2u77_48:
  1878  00049A  4632               	rlncf	??_high_isr,f,c
  1879  00049C  508B               	movf	3979,w,c	;volatile
  1880  00049E  1832               	xorwf	??_high_isr,w,c
  1881  0004A0  0BFD               	andlw	-3
  1882  0004A2  1832               	xorwf	??_high_isr,w,c
  1883  0004A4  6E8B               	movwf	3979,c	;volatile
  1884  0004A6                     i2l90:
  1885                           
  1886                           ;interrupts.c: 132: }
  1887                           ;interrupts.c: 133: PIR1bits.TMR1IF = 0;
  1888  0004A6  909E               	bcf	3998,0,c	;volatile
  1889                           
  1890                           ;interrupts.c: 135: TMR1 = 0xD8F0;
  1891  0004A8  0ED8               	movlw	216
  1892  0004AA  6ECF               	movwf	4047,c	;volatile
  1893  0004AC  0EF0               	movlw	240
  1894  0004AE  6ECE               	movwf	4046,c	;volatile
  1895                           
  1896                           ;interrupts.c: 136: zero_count++;
  1897  0004B0  4A01               	infsnz	_zero_count,f,c
  1898  0004B2  2A02               	incf	_zero_count+1,f,c
  1899                           
  1900                           ;interrupts.c: 138: } else if (PIR1bits.RCIF) {
  1901  0004B4  D041               	goto	i2l103
  1902  0004B6                     i2l89:
  1903  0004B6  AA9E               	btfss	3998,5,c	;volatile
  1904  0004B8  D016               	goto	i2l92
  1905                           
  1906                           ;interrupts.c: 140: PIR1bits.RCIF = 0;
  1907  0004BA  9A9E               	bcf	3998,5,c	;volatile
  1908                           
  1909                           ;interrupts.c: 141: palabra[n] = RCREG;
  1910  0004BC  0E60               	movlw	low _palabra
  1911  0004BE  2417               	addwf	_n,w,c
  1912  0004C0  6ED9               	movwf	fsr2l,c
  1913  0004C2  0E00               	movlw	high _palabra
  1914  0004C4  2018               	addwfc	_n+1,w,c
  1915  0004C6  6EDA               	movwf	fsr2h,c
  1916  0004C8  CFAE FFDF          	movff	4014,indf2	;volatile
  1917                           
  1918                           ;interrupts.c: 142: n++;
  1919  0004CC  4A17               	infsnz	_n,f,c
  1920  0004CE  2A18               	incf	_n+1,f,c
  1921                           
  1922                           ;interrupts.c: 143: if (RCREG == '\n') {
  1923  0004D0  0E0A               	movlw	10
  1924  0004D2  18AE               	xorwf	4014,w,c	;volatile
  1925  0004D4  A4D8               	btfss	status,2,c
  1926  0004D6  D030               	goto	i2l103
  1927                           
  1928                           ;interrupts.c: 146: recibi = 1;
  1929  0004D8  0E01               	movlw	1
  1930  0004DA  6E1F               	movwf	_recibi,c
  1931                           
  1932                           ;interrupts.c: 147: n = 0;
  1933  0004DC  0E00               	movlw	0
  1934  0004DE  6E18               	movwf	_n+1,c
  1935  0004E0  0E00               	movlw	0
  1936  0004E2  6E17               	movwf	_n,c
  1937                           
  1938                           ;interrupts.c: 148: }
  1939                           ;interrupts.c: 149: } else if (PIR1bits.ADIF) {
  1940  0004E4  D029               	goto	i2l103
  1941  0004E6                     i2l92:
  1942  0004E6  AC9E               	btfss	3998,6,c	;volatile
  1943  0004E8  D006               	goto	i2l95
  1944                           
  1945                           ;interrupts.c: 151: PIR1bits.ADIF = 0;
  1946  0004EA  9C9E               	bcf	3998,6,c	;volatile
  1947                           
  1948                           ;interrupts.c: 157: ADC_value_press = ADRES;
  1949  0004EC  CFC3 F013          	movff	4035,_ADC_value_press	;volatile
  1950  0004F0  CFC4 F014          	movff	4036,_ADC_value_press+1	;volatile
  1951                           
  1952                           ;interrupts.c: 159: } else if (INTCON3bits.INT1IF) {
  1953  0004F4  D021               	goto	i2l103
  1954  0004F6                     i2l95:
  1955  0004F6  A0F0               	btfss	intcon3,0,c	;volatile
  1956  0004F8  D009               	goto	i2l97
  1957                           
  1958                           ;interrupts.c: 161: INTCON3bits.INT1IF = 0;
  1959  0004FA  90F0               	bcf	intcon3,0,c	;volatile
  1960                           
  1961                           ;interrupts.c: 163: if (busy_flag) {
  1962  0004FC  5022               	movf	_busy_flag,w,c
  1963  0004FE  A4D8               	btfss	status,2,c
  1964  000500  D00B               	goto	i2u86_40
  1965                           
  1966                           ;interrupts.c: 172: DIR_3 = !DIR_3;
  1967                           
  1968                           ;interrupts.c: 170: } else {
  1969                           
  1970                           ;interrupts.c: 168: MOT_4 = 0;
  1971                           
  1972                           ;interrupts.c: 167: MOT_3 = 0;
  1973                           
  1974                           ;interrupts.c: 166: MOT_2 = 0;
  1975                           
  1976                           ;interrupts.c: 165: MOT_1 = 0;
  1977  000502  5023               	movf	_DIR_3,w,c
  1978  000504  A4D8               	btfss	status,2,c
  1979  000506  D016               	goto	i2u87_40
  1980  000508  0E01               	movlw	1
  1981  00050A  D015               	goto	i2u88_40
  1982  00050C                     i2l97:
  1983  00050C  A2F0               	btfss	intcon3,1,c	;volatile
  1984  00050E  D014               	goto	i2l103
  1985                           
  1986                           ;interrupts.c: 177: INTCON3bits.INT2IF = 0;
  1987  000510  92F0               	bcf	intcon3,1,c	;volatile
  1988                           
  1989                           ;interrupts.c: 179: if (busy_flag) {
  1990  000512  5022               	movf	_busy_flag,w,c
  1991  000514  B4D8               	btfsc	status,2,c
  1992  000516  D009               	goto	i2l102
  1993  000518                     i2u86_40:
  1994                           
  1995                           ;interrupts.c: 181: MOT_1 = 0;
  1996  000518  0E00               	movlw	0
  1997  00051A  6E25               	movwf	_MOT_1,c
  1998                           
  1999                           ;interrupts.c: 182: MOT_2 = 0;
  2000  00051C  0E00               	movlw	0
  2001  00051E  6E21               	movwf	_MOT_2,c
  2002                           
  2003                           ;interrupts.c: 183: MOT_3 = 0;
  2004  000520  0E00               	movlw	0
  2005  000522  6E24               	movwf	_MOT_3,c
  2006                           
  2007                           ;interrupts.c: 184: MOT_4 = 0;
  2008  000524  0E00               	movlw	0
  2009  000526  6E20               	movwf	_MOT_4,c
  2010                           
  2011                           ;interrupts.c: 186: } else {
  2012  000528  D007               	goto	i2l103
  2013  00052A                     i2l102:
  2014                           
  2015                           ;interrupts.c: 188: DIR_3 = !DIR_3;
  2016  00052A  5023               	movf	_DIR_3,w,c
  2017  00052C  A4D8               	btfss	status,2,c
  2018  00052E  D002               	goto	i2u87_40
  2019  000530  0E01               	movlw	1
  2020  000532  D001               	goto	i2u88_40
  2021  000534                     i2u87_40:
  2022  000534  0E00               	movlw	0
  2023  000536                     i2u88_40:
  2024  000536  6E23               	movwf	_DIR_3,c
  2025  000538                     i2l103:
  2026  000538                     i2l88:
  2027  000538  C044  F057         	movff	??_high_isr+18,btemp+3
  2028  00053C  C043  F056         	movff	??_high_isr+17,btemp+2
  2029  000540  C042  F055         	movff	??_high_isr+16,btemp+1
  2030  000544  C041  F054         	movff	??_high_isr+15,btemp
  2031  000548  C040  FFF5         	movff	??_high_isr+14,tablat
  2032  00054C  C03F  FFF8         	movff	??_high_isr+13,tblptru
  2033  000550  C03E  FFF7         	movff	??_high_isr+12,tblptrh
  2034  000554  C03D  FFF6         	movff	??_high_isr+11,tblptrl
  2035  000558  C03C  FFF4         	movff	??_high_isr+10,prodh
  2036  00055C  C03B  FFF3         	movff	??_high_isr+9,prodl
  2037  000560  C03A  FFDA         	movff	??_high_isr+8,fsr2h
  2038  000564  C039  FFD9         	movff	??_high_isr+7,fsr2l
  2039  000568  C038  FFE2         	movff	??_high_isr+6,fsr1h
  2040  00056C  C037  FFE1         	movff	??_high_isr+5,fsr1l
  2041  000570  C036  FFEA         	movff	??_high_isr+4,fsr0h
  2042  000574  C035  FFE9         	movff	??_high_isr+3,fsr0l
  2043  000578  C034  FFFB         	movff	??_high_isr+2,pclatu
  2044  00057C  C033  FFFA         	movff	??_high_isr+1,pclath
  2045  000580  9254               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  2046  000582  0011               	retfie		f
  2047  000584                     __end_of_high_isr:
  2048                           	opt stack 0
  2049                           pclatu	equ	0xFFB
  2050                           pclath	equ	0xFFA
  2051                           tblptru	equ	0xFF8
  2052                           tblptrh	equ	0xFF7
  2053                           tblptrl	equ	0xFF6
  2054                           tablat	equ	0xFF5
  2055                           prodh	equ	0xFF4
  2056                           prodl	equ	0xFF3
  2057                           intcon	equ	0xFF2
  2058                           intcon2	equ	0xFF1
  2059                           intcon3	equ	0xFF0
  2060                           postinc0	equ	0xFEE
  2061                           fsr0h	equ	0xFEA
  2062                           fsr0l	equ	0xFE9
  2063                           wreg	equ	0xFE8
  2064                           postdec1	equ	0xFE5
  2065                           fsr1h	equ	0xFE2
  2066                           fsr1l	equ	0xFE1
  2067                           indf2	equ	0xFDF
  2068                           fsr2h	equ	0xFDA
  2069                           fsr2l	equ	0xFD9
  2070                           status	equ	0xFD8
  2071                           
  2072 ;; *************** function _mot_3_step_count *****************
  2073 ;; Defined at:
  2074 ;;		line 209 in file "main.c"
  2075 ;; Parameters:    Size  Location     Type
  2076 ;;  l               2    6[COMRAM] unsigned int 
  2077 ;;  ms              2    8[COMRAM] unsigned int 
  2078 ;; Auto vars:     Size  Location     Type
  2079 ;;		None
  2080 ;; Return value:  Size  Location     Type
  2081 ;;                  2    6[COMRAM] unsigned int 
  2082 ;; Registers used:
  2083 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2084 ;; Tracked objects:
  2085 ;;		On entry : 0/0
  2086 ;;		On exit  : 0/0
  2087 ;;		Unchanged: 0/0
  2088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2089 ;;      Params:         4       0       0       0       0       0       0       0       0
  2090 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2091 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2092 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2093 ;;Total ram usage:        6 bytes
  2094 ;; Hardware stack levels used:    1
  2095 ;; Hardware stack levels required when called:    1
  2096 ;; This function calls:
  2097 ;;		i2___wmul
  2098 ;; This function is called by:
  2099 ;;		_high_isr
  2100 ;; This function uses a non-reentrant model
  2101 ;;
  2102                           
  2103                           	psect	text6
  2104  0006E8                     __ptext6:
  2105                           	opt stack 0
  2106  0006E8                     _mot_3_step_count:
  2107                           	opt stack 27
  2108                           
  2109                           ;main.c: 211: return (ms * l) / 2;
  2110                           
  2111                           ;incstack = 0
  2112  0006E8  C02E  F026         	movff	mot_3_step_count@ms,i2___wmul@multiplier
  2113  0006EC  C02F  F027         	movff	mot_3_step_count@ms+1,i2___wmul@multiplier+1
  2114  0006F0  C02C  F028         	movff	mot_3_step_count@l,i2___wmul@multiplicand
  2115  0006F4  C02D  F029         	movff	mot_3_step_count@l+1,i2___wmul@multiplicand+1
  2116  0006F8  EC61  F003         	call	i2___wmul	;wreg free
  2117  0006FC  90D8               	bcf	status,0,c
  2118  0006FE  3027               	rrcf	?i2___wmul+1,w,c
  2119  000700  6E30               	movwf	??_mot_3_step_count& (0+255),c
  2120  000702  3026               	rrcf	?i2___wmul,w,c
  2121  000704  6E2C               	movwf	?_mot_3_step_count,c
  2122  000706  C030  F02D         	movff	??_mot_3_step_count,?_mot_3_step_count+1
  2123  00070A  0012               	return	
  2124  00070C                     __end_of_mot_3_step_count:
  2125                           	opt stack 0
  2126                           pclatu	equ	0xFFB
  2127                           pclath	equ	0xFFA
  2128                           tblptru	equ	0xFF8
  2129                           tblptrh	equ	0xFF7
  2130                           tblptrl	equ	0xFF6
  2131                           tablat	equ	0xFF5
  2132                           prodh	equ	0xFF4
  2133                           prodl	equ	0xFF3
  2134                           intcon	equ	0xFF2
  2135                           intcon2	equ	0xFF1
  2136                           intcon3	equ	0xFF0
  2137                           postinc0	equ	0xFEE
  2138                           fsr0h	equ	0xFEA
  2139                           fsr0l	equ	0xFE9
  2140                           wreg	equ	0xFE8
  2141                           postdec1	equ	0xFE5
  2142                           fsr1h	equ	0xFE2
  2143                           fsr1l	equ	0xFE1
  2144                           indf2	equ	0xFDF
  2145                           fsr2h	equ	0xFDA
  2146                           fsr2l	equ	0xFD9
  2147                           status	equ	0xFD8
  2148                           
  2149 ;; *************** function i2___wmul *****************
  2150 ;; Defined at:
  2151 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
  2152 ;; Parameters:    Size  Location     Type
  2153 ;;  multiplier      2    0[COMRAM] unsigned int 
  2154 ;;  multiplicand    2    2[COMRAM] unsigned int 
  2155 ;; Auto vars:     Size  Location     Type
  2156 ;;  __wmul          2    4[COMRAM] unsigned int 
  2157 ;; Return value:  Size  Location     Type
  2158 ;;                  2    0[COMRAM] unsigned int 
  2159 ;; Registers used:
  2160 ;;		wreg, status,2, status,0, prodl, prodh
  2161 ;; Tracked objects:
  2162 ;;		On entry : 0/0
  2163 ;;		On exit  : 0/0
  2164 ;;		Unchanged: 0/0
  2165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2166 ;;      Params:         4       0       0       0       0       0       0       0       0
  2167 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2168 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2169 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2170 ;;Total ram usage:        6 bytes
  2171 ;; Hardware stack levels used:    1
  2172 ;; This function calls:
  2173 ;;		Nothing
  2174 ;; This function is called by:
  2175 ;;		_mot_3_step_count
  2176 ;; This function uses a non-reentrant model
  2177 ;;
  2178                           
  2179                           	psect	text7
  2180  0006C2                     __ptext7:
  2181                           	opt stack 0
  2182  0006C2                     i2___wmul:
  2183                           	opt stack 27
  2184                           
  2185                           ;incstack = 0
  2186  0006C2  5026               	movf	i2___wmul@multiplier,w,c
  2187  0006C4  0228               	mulwf	i2___wmul@multiplicand,c
  2188  0006C6  CFF3 F02A          	movff	prodl,i2___wmul@product
  2189  0006CA  CFF4 F02B          	movff	prodh,i2___wmul@product+1
  2190  0006CE  5026               	movf	i2___wmul@multiplier,w,c
  2191  0006D0  0229               	mulwf	i2___wmul@multiplicand+1,c
  2192  0006D2  50F3               	movf	prodl,w,c
  2193  0006D4  262B               	addwf	i2___wmul@product+1,f,c
  2194  0006D6  5027               	movf	i2___wmul@multiplier+1,w,c
  2195  0006D8  0228               	mulwf	i2___wmul@multiplicand,c
  2196  0006DA  50F3               	movf	prodl,w,c
  2197  0006DC  262B               	addwf	i2___wmul@product+1,f,c
  2198  0006DE  C02A  F026         	movff	i2___wmul@product,?i2___wmul
  2199  0006E2  C02B  F027         	movff	i2___wmul@product+1,?i2___wmul+1
  2200  0006E6  0012               	return	
  2201  0006E8                     __end_ofi2___wmul:
  2202                           	opt stack 0
  2203  0000                     pclatu	equ	0xFFB
  2204                           pclath	equ	0xFFA
  2205                           tblptru	equ	0xFF8
  2206                           tblptrh	equ	0xFF7
  2207                           tblptrl	equ	0xFF6
  2208                           tablat	equ	0xFF5
  2209                           prodh	equ	0xFF4
  2210                           prodl	equ	0xFF3
  2211                           intcon	equ	0xFF2
  2212                           intcon2	equ	0xFF1
  2213                           intcon3	equ	0xFF0
  2214                           postinc0	equ	0xFEE
  2215                           fsr0h	equ	0xFEA
  2216                           fsr0l	equ	0xFE9
  2217                           wreg	equ	0xFE8
  2218                           postdec1	equ	0xFE5
  2219                           fsr1h	equ	0xFE2
  2220                           fsr1l	equ	0xFE1
  2221                           indf2	equ	0xFDF
  2222                           fsr2h	equ	0xFDA
  2223                           fsr2l	equ	0xFD9
  2224                           status	equ	0xFD8
  2225                           pclatu	equ	0xFFB
  2226                           pclath	equ	0xFFA
  2227                           tblptru	equ	0xFF8
  2228                           tblptrh	equ	0xFF7
  2229                           tblptrl	equ	0xFF6
  2230                           tablat	equ	0xFF5
  2231                           prodh	equ	0xFF4
  2232                           prodl	equ	0xFF3
  2233                           intcon	equ	0xFF2
  2234                           intcon2	equ	0xFF1
  2235                           intcon3	equ	0xFF0
  2236                           postinc0	equ	0xFEE
  2237                           fsr0h	equ	0xFEA
  2238                           fsr0l	equ	0xFE9
  2239                           wreg	equ	0xFE8
  2240                           postdec1	equ	0xFE5
  2241                           fsr1h	equ	0xFE2
  2242                           fsr1l	equ	0xFE1
  2243                           indf2	equ	0xFDF
  2244                           fsr2h	equ	0xFDA
  2245                           fsr2l	equ	0xFD9
  2246                           status	equ	0xFD8
  2247                           
  2248                           	psect	rparam
  2249  0000                     pclatu	equ	0xFFB
  2250                           pclath	equ	0xFFA
  2251                           tblptru	equ	0xFF8
  2252                           tblptrh	equ	0xFF7
  2253                           tblptrl	equ	0xFF6
  2254                           tablat	equ	0xFF5
  2255                           prodh	equ	0xFF4
  2256                           prodl	equ	0xFF3
  2257                           intcon	equ	0xFF2
  2258                           intcon2	equ	0xFF1
  2259                           intcon3	equ	0xFF0
  2260                           postinc0	equ	0xFEE
  2261                           fsr0h	equ	0xFEA
  2262                           fsr0l	equ	0xFE9
  2263                           wreg	equ	0xFE8
  2264                           postdec1	equ	0xFE5
  2265                           fsr1h	equ	0xFE2
  2266                           fsr1l	equ	0xFE1
  2267                           indf2	equ	0xFDF
  2268                           fsr2h	equ	0xFDA
  2269                           fsr2l	equ	0xFD9
  2270                           status	equ	0xFD8
  2271                           
  2272                           	psect	temp
  2273  000054                     btemp:
  2274                           	opt stack 0
  2275  000054                     	ds	1
  2276  0000                     int$flags	set	btemp
  2277  0000                     wtemp6	set	btemp+1
  2278                           pclatu	equ	0xFFB
  2279                           pclath	equ	0xFFA
  2280                           tblptru	equ	0xFF8
  2281                           tblptrh	equ	0xFF7
  2282                           tblptrl	equ	0xFF6
  2283                           tablat	equ	0xFF5
  2284                           prodh	equ	0xFF4
  2285                           prodl	equ	0xFF3
  2286                           intcon	equ	0xFF2
  2287                           intcon2	equ	0xFF1
  2288                           intcon3	equ	0xFF0
  2289                           postinc0	equ	0xFEE
  2290                           fsr0h	equ	0xFEA
  2291                           fsr0l	equ	0xFE9
  2292                           wreg	equ	0xFE8
  2293                           postdec1	equ	0xFE5
  2294                           fsr1h	equ	0xFE2
  2295                           fsr1l	equ	0xFE1
  2296                           indf2	equ	0xFDF
  2297                           fsr2h	equ	0xFDA
  2298                           fsr2l	equ	0xFD9
  2299                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        17
    BSS         74
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     31      83
    BANK0           160      8      47
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    _high_isr->_mot_3_step_count
    _mot_3_step_count->i2___wmul

Critical Paths under _main in BANK0

    _main->___wmul

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    2508
                                              6 BANK0      2     2      0
                _ConfigureOscillator
                            _InitApp
                             ___wmul
                          _zero_mark
 ---------------------------------------------------------------------------------
 (1) _zero_mark                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4    2508
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigureOscillator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _high_isr                                            19    19      0     405
                                             12 COMRAM    19    19      0
                   _mot_3_step_count
 ---------------------------------------------------------------------------------
 (3) _mot_3_step_count                                     6     2      4     405
                                              6 COMRAM     6     2      4
                           i2___wmul
 ---------------------------------------------------------------------------------
 (4) i2___wmul                                             6     2      4     209
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfigureOscillator
   _InitApp
   ___wmul
   _zero_mark

 _high_isr (ROOT)
   _mot_3_step_count
     i2___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      8      2F       5       29.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     1F      53       1       88.3%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      82      20        0.0%
DATA                 0      0      82       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sat Aug 17 01:51:10 2019

                           _n 0017           ___wmul@multiplicand 0087                   __CFG_BORV$3 000000  
                __CFG_CP0$OFF 000000                  __CFG_CP1$OFF 000000                  __CFG_CP2$OFF 000000  
                __CFG_CP3$OFF 000000                           l202 030E                           l204 0326  
                         l191 02EC                           l183 001A                           l192 02BE  
                         l184 033E                           l185 00B6                           l194 02D0  
                         l187 0288                           l189 02A0                  __CFG_CPB$OFF 000000  
                         _PR2 000FCB                  __CFG_CPD$OFF 000000                           _RX9 007D5E  
                         _TX9 007D66                  __CFG_BOR$OFF 000000                           wreg 000FE8  
                __CFG_LVP$OFF 000000                  __CFG_WDT$OFF 000000                          _BRGH 007D62  
                        _CREN 007D5C                          u1205 0026                          u1310 029A  
                        u1206 0028                          u1215 0030                          u1320 029C  
                        u1216 0032                          u1225 003A                          u1250 005E  
                        u1226 003C                          u1235 0044                          u1420 0308  
                        u1236 0046                          u1245 004E                          _LATA 000F89  
                        u1430 030A                          u1246 0050                          _LATB 000F8A  
                        _LATC 000F8B                          u1450 0320                          u1460 0322  
                        u1268 0062                          u1517 034A                          u1480 0338  
                        u1490 033A                          _RCIE 007CED                          i2l81 0484  
                        i2l90 04A6                          i2l92 04E6                          i2l84 0412  
                        i2l95 04F6                          i2l88 0538                          i2l97 050C  
                        i2l89 04B6                          _TMR0 000FD6                          _TMR1 000FCE  
                        _SPEN 007D5F                          _TXIE 007CEC                          _TXIF 007CF4  
                        _TXEN 007D65                          _SYNC 007D64                          _main 0012  
                        _send 0074                          fsr0h 000FEA                          fsr1h 000FE2  
                        fsr2h 000FDA                          fsr0l 000FE9                          indf2 000FDF  
                        fsr1l 000FE1                          fsr2l 000FD9                          btemp 0054  
                        prodh 000FF4                          prodl 000FF3                          start 000E  
               __CFG_IESO$OFF 000000                 __CFG_MCLRE$ON 000000                  ___param_bank 000000  
             __end_of_InitApp 0640                 __CFG_PLLDIV$1 000000                __CFG_CCP2MX$ON 000000  
                       ?_main 0026                         _ADRES 000FC3                         _BRG16 007DC3  
                       _DIR_1 001D                         _DIR_2 001C                         _DIR_3 0023  
                       _DIR_4 001B                         i2l102 052A                         i2l103 0538  
                       _RCREG 000FAE                         _MOT_1 0025                         _MOT_2 0021  
                       _MOT_3 0024                         _MOT_4 0020                         _SPBRG 000FAF  
                       _PORTA 000F80                         _PORTB 000F81                         _PORTC 000F82  
               __CFG_USBDIV$1 000000                         _TXREG 000FAD           _ConfigureOscillator 0732  
               __CFG_PWRT$OFF 000000                 __CFG_WRT0$OFF 000000                 __CFG_WRT1$OFF 000000  
               __CFG_WRT2$OFF 000000                 __CFG_WRT3$OFF 000000                __CFG_EBTR0$OFF 000000  
              __CFG_FCMEN$OFF 000000                __CFG_EBTR1$OFF 000000                __CFG_EBTR2$OFF 000000  
              __CFG_EBTR3$OFF 000000                 __CFG_WRTB$OFF 000000                 __CFG_WRTC$OFF 000000  
               __CFG_WRTD$OFF 000000                __CFG_EBTRB$OFF 000000                         _speed 007D  
                       _turns 008D                   _turns_count 0003                         pclath 000FFA  
                       tablat 000FF5              __end_ofi2___wmul 06E8                         status 000FD8  
                       wtemp6 0055          ?_ConfigureOscillator 0026               __initialization 0640  
                __end_of_main 0358                        ??_main 008B                 __activetblptr 000000  
                      _ADCON1 000FC1                        _ADCON2 000FC0                        _CCPR1L 000FBE  
                      _GODONE 007E11                        i2l1401 0412                     ??_InitApp 0085  
       ??_ConfigureOscillator 0085                __CFG_XINST$OFF 000000              __end_of_high_isr 0584  
   __size_of_mot_3_step_count 0024                        ___wmul 069A                        _enable 0019  
                      _finish 001A                        _length 0051                        _recibi 001F  
                      clear_0 067E                        clear_1 068A                        _motor1 0047  
                      _motor2 0083                  __pdataCOMRAM 0045                        tblptrh 000FF7  
                      tblptrl 000FF6                        tblptru 000FF8                    __accesstop 0060  
     __end_of__initialization 0690               __CFG_PBADEN$OFF 000000                 ___rparam_used 000001  
              __pcstackCOMRAM 0026                  __pidataBANK0 073E                     ?i2___wmul 0026  
                  __pbssBANK0 0060                       ?___wmul 0085                    ??i2___wmul 002A  
                     i2u70_48 043A                       i2u72_40 0476                       i2u64_40 03E6  
                     i2u73_40 0478                       i2u65_48 03E8                       i2u76_40 0498  
                     i2u68_41 0424                       i2u69_40 0438                       i2u86_40 0518  
                     i2u77_48 049A                       i2u87_40 0534                       i2u88_40 0536  
                   ?_high_isr 0026               __CFG_VREGEN$OFF 000000            __size_of_zero_mark 0016  
                     _InitApp 0584                       __Hparam 0000                       __Lparam 0000  
            _mot_3_step_count 06E8               __size_of___wmul 0028                       _caliber 0081  
             __CFG_STVREN$OFF 000000                       __pcinit 0640                       __ramtop 0800  
                     __ptext0 0012                       __ptext1 070C                       __ptext2 069A  
                     __ptext3 0584                       __ptext4 0732                       __ptext6 06E8  
                     __ptext7 06C2                     _T0CONbits 000FD5                       _count_1 004F  
                     _count_2 004D                       _count_3 004B                       _count_4 0049  
                   _T1CONbits 000FCD                       _palabra 0060                     _T2CONbits 000FCA  
            _mot_4_step_count 007B                    ??_high_isr 0032                __pintcode_body 0358  
        end_of_initialization 0690                       int_func 0358           i2___wmul@multiplier 0026  
                     postdec1 000FE5                       postinc0 000FEE                     _PORTAbits 000F80  
                   _PORTCbits 000F82             __end_of_zero_mark 0722                     _TRISAbits 000F92  
                   _TRISBbits 000F93                     _TRISCbits 000F94   __end_of_ConfigureOscillator 073E  
                 _CCP1CONbits 000FBD                    _zero_count 0001                __end_of___wmul 06C2  
               __pidataCOMRAM 0722              i2___wmul@product 002A           start_initialization 0640  
           __size_ofi2___wmul 0026                      ??___wmul 0089                   __pdataBANK0 008D  
            __CFG_LPT1OSC$OFF 000000                   __pbssCOMRAM 0001                 __pcstackBANK0 0085  
    __end_of_mot_3_step_count 070C             __size_of_high_isr 057C                      ?_InitApp 0026  
                   __pintcode 0008                     _busy_flag 0022                ___wmul@product 0089  
                    _LATAbits 000F89                      _LATBbits 000F8A                      _LATCbits 000F8B  
                    _IPR1bits 000F9F                      _PIE1bits 000F9D                      _RA0state 001E  
                    _PIR1bits 000F9E                      _RCONbits 000FD0              __CFG_WDTPS$32768 000000  
                  _ADCON0bits 000FC2             ___wmul@multiplier 0085                      i2___wmul 06C2  
                    _PWM_duty 0045               _ADC_value_press 0013                     _zero_flag 0053  
                   _zero_mark 070C                   _INTCON2bits 000FF1                   _INTCON3bits 000FF0  
                   copy_data0 066C              __size_of_InitApp 00BC                      __Hrparam 0000  
                    __Lrparam 0000         i2___wmul@multiplicand 0028                      _diameter 007F  
                  ?_zero_mark 0026                      _high_isr 0008                 __size_of_main 0346  
                 _mot_1_steps 0009                   _mot_3_steps 0007                   _mot_4_steps 0005  
__size_of_ConfigureOscillator 000C                      _overflow 0015                      int$flags 0054  
          mot_3_step_count@ms 002E         __CFG_CPUDIV$OSC1_PLL2 000000                    _INTCONbits 000FF2  
                 _MOT_1_count 0011                   _MOT_2_count 000F                   _MOT_3_count 000D  
                 _MOT_4_count 000B             ?_mot_3_step_count 002C                      intlevel2 0000  
          ??_mot_3_step_count 0030                    _OSCCONbits 000FD3             mot_3_step_count@l 002C  
         __CFG_FOSC$INTOSC_EC 000000                   ??_zero_mark 0085  

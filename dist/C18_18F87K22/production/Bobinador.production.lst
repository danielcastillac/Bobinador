

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Mon Aug 12 16:06:10 2019

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F2550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    16                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    17                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    18                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    19                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    20  0000                     
    21                           ; Version 1.45
    22                           ; Generated 16/11/2017 GMT
    23                           ; 
    24                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC18F2550 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     
    56                           	psect	idataCOMRAM
    57  0005F0                     __pidataCOMRAM:
    58                           	opt stack 0
    59                           
    60                           ;initializer for _PWM_duty
    61  0005F0  0032               	dw	50
    62                           
    63                           ;initializer for _motor1
    64  0005F2  0001               	dw	1
    65  0000                     _ADRES	set	4035
    66  0000                     _TMR0	set	4054
    67  0000                     _T2CONbits	set	4042
    68  0000                     _CCP1CONbits	set	4029
    69  0000                     _PR2	set	4043
    70  0000                     _SPBRG	set	4015
    71  0000                     _T0CONbits	set	4053
    72  0000                     _INTCON2bits	set	4081
    73  0000                     _RCONbits	set	4048
    74  0000                     _TRISBbits	set	3987
    75  0000                     _TRISCbits	set	3988
    76  0000                     _PIE1bits	set	3997
    77  0000                     _ADCON2	set	4032
    78  0000                     _TRISAbits	set	3986
    79  0000                     _ADCON1	set	4033
    80  0000                     _LATC	set	3979
    81  0000                     _PORTC	set	3970
    82  0000                     _LATB	set	3978
    83  0000                     _PORTB	set	3969
    84  0000                     _LATA	set	3977
    85  0000                     _PORTA	set	3968
    86  0000                     _OSCCONbits	set	4051
    87  0000                     _CCPR1L	set	4030
    88  0000                     _INTCON3bits	set	4080
    89  0000                     _ADCON0bits	set	4034
    90  0000                     _TXREG	set	4013
    91  0000                     _RCREG	set	4014
    92  0000                     _PIR1bits	set	3998
    93  0000                     _PORTBbits	set	3969
    94  0000                     _LATBbits	set	3978
    95  0000                     _PORTCbits	set	3970
    96  0000                     _LATCbits	set	3979
    97  0000                     _PORTAbits	set	3968
    98  0000                     _LATAbits	set	3977
    99  0000                     _INTCONbits	set	4082
   100  0000                     _TXIE	set	31980
   101  0000                     _RCIE	set	31981
   102  0000                     _RX9	set	32094
   103  0000                     _TX9	set	32102
   104  0000                     _CREN	set	32092
   105  0000                     _TXEN	set	32101
   106  0000                     _SYNC	set	32100
   107  0000                     _SPEN	set	32095
   108  0000                     _BRG16	set	32195
   109  0000                     _BRGH	set	32098
   110  0000                     _GODONE	set	32273
   111  0000                     _TXIF	set	31988
   112                           
   113                           ; #config settings
   114  0000                     
   115                           	psect	cinit
   116  000586                     __pcinit:
   117                           	opt stack 0
   118  000586                     start_initialization:
   119                           	opt stack 0
   120  000586                     __initialization:
   121                           	opt stack 0
   122                           
   123                           ; Initialize objects allocated to COMRAM (4 bytes)
   124                           ; load TBLPTR registers with __pidataCOMRAM
   125  000586  0EF0               	movlw	low __pidataCOMRAM
   126  000588  6EF6               	movwf	tblptrl,c
   127  00058A  0E05               	movlw	high __pidataCOMRAM
   128  00058C  6EF7               	movwf	tblptrh,c
   129  00058E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   130  000590  6EF8               	movwf	tblptru,c
   131  000592  EE00  F04F         	lfsr	0,__pdataCOMRAM
   132  000596  EE10 F004          	lfsr	1,4
   133  00059A                     copy_data0:
   134  00059A  0009               	tblrd		*+
   135  00059C  CFF5 FFEE          	movff	tablat,postinc0
   136  0005A0  50E5               	movf	postdec1,w,c
   137  0005A2  50E1               	movf	fsr1l,w,c
   138  0005A4  E1FA               	bnz	copy_data0
   139                           
   140                           ; Clear objects allocated to COMRAM (59 bytes)
   141  0005A6  EE00  F001         	lfsr	0,__pbssCOMRAM
   142  0005AA  0E3B               	movlw	59
   143  0005AC                     clear_0:
   144  0005AC  6AEE               	clrf	postinc0,c
   145  0005AE  06E8               	decf	wreg,f,c
   146  0005B0  E1FD               	bnz	clear_0
   147  0005B2                     end_of_initialization:
   148                           	opt stack 0
   149  0005B2                     __end_of__initialization:
   150                           	opt stack 0
   151  0005B2  9053               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   152  0005B4  9253               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   153  0005B6  0100               	movlb	0
   154  0005B8  EF09  F000         	goto	_main	;jump to C main() function
   155                           tblptru	equ	0xFF8
   156                           tblptrh	equ	0xFF7
   157                           tblptrl	equ	0xFF6
   158                           tablat	equ	0xFF5
   159                           postinc0	equ	0xFEE
   160                           wreg	equ	0xFE8
   161                           postdec1	equ	0xFE5
   162                           fsr1l	equ	0xFE1
   163                           
   164                           	psect	bssCOMRAM
   165  000001                     __pbssCOMRAM:
   166                           	opt stack 0
   167  000001                     _palabra:
   168                           	opt stack 0
   169  000001                     	ds	20
   170  000015                     _speed:
   171                           	opt stack 0
   172  000015                     	ds	2
   173  000017                     _turns:
   174                           	opt stack 0
   175  000017                     	ds	2
   176  000019                     _length:
   177                           	opt stack 0
   178  000019                     	ds	2
   179  00001B                     _diameter:
   180                           	opt stack 0
   181  00001B                     	ds	2
   182  00001D                     _caliber:
   183                           	opt stack 0
   184  00001D                     	ds	2
   185  00001F                     _motor2:
   186                           	opt stack 0
   187  00001F                     	ds	2
   188  000021                     _MOT_4_count:
   189                           	opt stack 0
   190  000021                     	ds	2
   191  000023                     _MOT_3_count:
   192                           	opt stack 0
   193  000023                     	ds	2
   194  000025                     _MOT_2_count:
   195                           	opt stack 0
   196  000025                     	ds	2
   197  000027                     _MOT_1_count:
   198                           	opt stack 0
   199  000027                     	ds	2
   200  000029                     _ADC_value_dist:
   201                           	opt stack 0
   202  000029                     	ds	2
   203  00002B                     _ADC_value_press:
   204                           	opt stack 0
   205  00002B                     	ds	2
   206  00002D                     _overflow:
   207                           	opt stack 0
   208  00002D                     	ds	2
   209  00002F                     _n:
   210                           	opt stack 0
   211  00002F                     	ds	2
   212  000031                     _busy_flag:
   213                           	opt stack 0
   214  000031                     	ds	1
   215  000032                     _DIR_4:
   216                           	opt stack 0
   217  000032                     	ds	1
   218  000033                     _DIR_3:
   219                           	opt stack 0
   220  000033                     	ds	1
   221  000034                     _DIR_2:
   222                           	opt stack 0
   223  000034                     	ds	1
   224  000035                     _DIR_1:
   225                           	opt stack 0
   226  000035                     	ds	1
   227  000036                     _RA0state:
   228                           	opt stack 0
   229  000036                     	ds	1
   230  000037                     _MOT_4:
   231                           	opt stack 0
   232  000037                     	ds	1
   233  000038                     _MOT_3:
   234                           	opt stack 0
   235  000038                     	ds	1
   236  000039                     _MOT_2:
   237                           	opt stack 0
   238  000039                     	ds	1
   239  00003A                     _MOT_1:
   240                           	opt stack 0
   241  00003A                     	ds	1
   242  00003B                     _recibi:
   243                           	opt stack 0
   244  00003B                     	ds	1
   245                           tblptru	equ	0xFF8
   246                           tblptrh	equ	0xFF7
   247                           tblptrl	equ	0xFF6
   248                           tablat	equ	0xFF5
   249                           postinc0	equ	0xFEE
   250                           wreg	equ	0xFE8
   251                           postdec1	equ	0xFE5
   252                           fsr1l	equ	0xFE1
   253                           
   254                           	psect	dataCOMRAM
   255  00004F                     __pdataCOMRAM:
   256                           	opt stack 0
   257  00004F                     _PWM_duty:
   258                           	opt stack 0
   259  00004F                     	ds	2
   260  000051                     _motor1:
   261                           	opt stack 0
   262  000051                     	ds	2
   263                           tblptru	equ	0xFF8
   264                           tblptrh	equ	0xFF7
   265                           tblptrl	equ	0xFF6
   266                           tablat	equ	0xFF5
   267                           postinc0	equ	0xFEE
   268                           wreg	equ	0xFE8
   269                           postdec1	equ	0xFE5
   270                           fsr1l	equ	0xFE1
   271                           
   272                           	psect	cstackBANK0
   273  000060                     __pcstackBANK0:
   274                           	opt stack 0
   275  000060                     ?___wmul:
   276                           	opt stack 0
   277  000060                     ___wmul@multiplier:
   278                           	opt stack 0
   279                           
   280                           ; 2 bytes @ 0x0
   281  000060                     	ds	2
   282  000062                     ___wmul@multiplicand:
   283                           	opt stack 0
   284                           
   285                           ; 2 bytes @ 0x2
   286  000062                     	ds	2
   287  000064                     ___wmul@product:
   288                           	opt stack 0
   289                           
   290                           ; 2 bytes @ 0x4
   291  000064                     	ds	2
   292  000066                     ??_main:
   293                           
   294                           ; 1 bytes @ 0x6
   295  000066                     	ds	2
   296                           tblptru	equ	0xFF8
   297                           tblptrh	equ	0xFF7
   298                           tblptrl	equ	0xFF6
   299                           tablat	equ	0xFF5
   300                           postinc0	equ	0xFEE
   301                           wreg	equ	0xFE8
   302                           postdec1	equ	0xFE5
   303                           fsr1l	equ	0xFE1
   304                           
   305                           	psect	cstackCOMRAM
   306  00003C                     __pcstackCOMRAM:
   307                           	opt stack 0
   308  00003C                     ??_high_isr:
   309  00003C                     
   310                           ; 1 bytes @ 0x0
   311  00003C                     	ds	19
   312                           tblptru	equ	0xFF8
   313                           tblptrh	equ	0xFF7
   314                           tblptrl	equ	0xFF6
   315                           tablat	equ	0xFF5
   316                           postinc0	equ	0xFEE
   317                           wreg	equ	0xFE8
   318                           postdec1	equ	0xFE5
   319                           fsr1l	equ	0xFE1
   320                           
   321 ;;
   322 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   323 ;;
   324 ;; *************** function _main *****************
   325 ;; Defined at:
   326 ;;		line 61 in file "main.c"
   327 ;; Parameters:    Size  Location     Type
   328 ;;		None
   329 ;; Auto vars:     Size  Location     Type
   330 ;;		None
   331 ;; Return value:  Size  Location     Type
   332 ;;                  1    wreg      void 
   333 ;; Registers used:
   334 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   335 ;; Tracked objects:
   336 ;;		On entry : 0/0
   337 ;;		On exit  : 0/0
   338 ;;		Unchanged: 0/0
   339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   340 ;;      Params:         0       0       0       0       0       0       0       0       0
   341 ;;      Locals:         0       0       0       0       0       0       0       0       0
   342 ;;      Temps:          0       2       0       0       0       0       0       0       0
   343 ;;      Totals:         0       2       0       0       0       0       0       0       0
   344 ;;Total ram usage:        2 bytes
   345 ;; Hardware stack levels required when called:    2
   346 ;; This function calls:
   347 ;;		_ConfigureOscillator
   348 ;;		_InitApp
   349 ;;		___wmul
   350 ;; This function is called by:
   351 ;;		Startup code after reset
   352 ;; This function uses a non-reentrant model
   353 ;;
   354                           
   355                           	psect	text0
   356  000012                     __ptext0:
   357                           	opt stack 0
   358  000012                     _main:
   359                           	opt stack 29
   360                           
   361                           ;main.c: 63: ConfigureOscillator();
   362                           
   363                           ;incstack = 0
   364  000012  ECF2  F002         	call	_ConfigureOscillator	;wreg free
   365                           
   366                           ;main.c: 66: InitApp();
   367  000016  EC72  F002         	call	_InitApp	;wreg free
   368  00001A                     
   369                           ;main.c: 70: CCPR1L = PWM_duty;
   370  00001A  C04F  FFBE         	movff	_PWM_duty,4030	;volatile
   371                           
   372                           ;main.c: 72: LATAbits.LA2 = DIR_1;
   373  00001E  B035               	btfsc	_DIR_1,0,c
   374  000020  D002               	bra	u605
   375  000022  9489               	bcf	3977,2,c	;volatile
   376  000024  D001               	bra	u606
   377  000026                     u605:
   378  000026  8489               	bsf	3977,2,c	;volatile
   379  000028                     u606:
   380                           
   381                           ;main.c: 73: LATAbits.LA4 = DIR_2;
   382  000028  B034               	btfsc	_DIR_2,0,c
   383  00002A  D002               	bra	u615
   384  00002C  9889               	bcf	3977,4,c	;volatile
   385  00002E  D001               	bra	u616
   386  000030                     u615:
   387  000030  8889               	bsf	3977,4,c	;volatile
   388  000032                     u616:
   389                           
   390                           ;main.c: 74: LATCbits.LC0 = DIR_3;
   391  000032  B033               	btfsc	_DIR_3,0,c
   392  000034  D002               	bra	u625
   393  000036  908B               	bcf	3979,0,c	;volatile
   394  000038  D001               	bra	u626
   395  00003A                     u625:
   396  00003A  808B               	bsf	3979,0,c	;volatile
   397  00003C                     u626:
   398                           
   399                           ;main.c: 75: LATBbits.LB7 = DIR_4;
   400  00003C  B032               	btfsc	_DIR_4,0,c
   401  00003E  D002               	bra	u635
   402  000040  9E8A               	bcf	3978,7,c	;volatile
   403  000042  D001               	bra	u636
   404  000044                     u635:
   405  000044  8E8A               	bsf	3978,7,c	;volatile
   406  000046                     u636:
   407                           
   408                           ;main.c: 77: if (busy_flag) {
   409  000046  5031               	movf	_busy_flag,w,c
   410  000048  B4D8               	btfsc	status,2,c
   411  00004A  D004               	goto	u650
   412                           
   413                           ;main.c: 78: TXREG = 'C';
   414  00004C  0E43               	movlw	67
   415  00004E  6EAD               	movwf	4013,c	;volatile
   416  000050  A89E               	btfss	3998,4,c	;volatile
   417  000052  D7FE               	goto	l153
   418  000054                     u650:
   419                           
   420                           ;main.c: 80: }
   421                           ;main.c: 82: if (recibi == 1) {
   422  000054  043B               	decf	_recibi,w,c
   423  000056  A4D8               	btfss	status,2,c
   424  000058  D126               	goto	l155
   425                           
   426                           ;main.c: 84: recibi = 0;
   427  00005A  0E00               	movlw	0
   428  00005C  6E3B               	movwf	_recibi,c
   429                           
   430                           ;main.c: 86: if (palabra[0] == 'B') {
   431  00005E  0E42               	movlw	66
   432  000060  1801               	xorwf	_palabra,w,c
   433  000062  A4D8               	btfss	status,2,c
   434  000064  D023               	goto	l156
   435                           
   436                           ;main.c: 88: DIR_1 = !DIR_1;
   437  000066  5035               	movf	_DIR_1,w,c
   438  000068  A4D8               	btfss	status,2,c
   439  00006A  D002               	goto	u680
   440  00006C  0E01               	movlw	1
   441  00006E  D001               	goto	u690
   442  000070                     u680:
   443  000070  0E00               	movlw	0
   444  000072                     u690:
   445  000072  6E35               	movwf	_DIR_1,c
   446                           
   447                           ;main.c: 89: PWM_duty = ((palabra[1] - 48) * 10) + ((palabra[2] - 48));
   448  000074  0ED0               	movlw	208
   449  000076  2402               	addwf	_palabra+1,w,c
   450  000078  0100               	movlb	0	; () banked
   451  00007A  6F60               	movwf	___wmul@multiplier& (0+255),b
   452  00007C  6B61               	clrf	(___wmul@multiplier+1)& (0+255),b
   453  00007E  0EFF               	movlw	255
   454  000080  2361               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   455  000082  0E00               	movlw	0
   456  000084  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
   457  000086  0E0A               	movlw	10
   458  000088  6F62               	movwf	___wmul@multiplicand& (0+255),b
   459  00008A  ECDE  F002         	call	___wmul	;wreg free
   460  00008E  5003               	movf	_palabra+2,w,c
   461  000090  0100               	movlb	0	; () banked
   462  000092  6F66               	movwf	??_main& (0+255),b
   463  000094  6B67               	clrf	(??_main+1)& (0+255),b
   464  000096  5160               	movf	?___wmul& (0+255),w,b
   465  000098  2766               	addwf	??_main& (0+255),f,b
   466  00009A  5161               	movf	(?___wmul+1)& (0+255),w,b
   467  00009C  2367               	addwfc	(??_main+1)& (0+255),f,b
   468  00009E  0ED0               	movlw	208
   469  0000A0  2566               	addwf	??_main& (0+255),w,b
   470  0000A2  6E4F               	movwf	_PWM_duty,c
   471  0000A4  0EFF               	movlw	255
   472  0000A6  2167               	addwfc	(??_main+1)& (0+255),w,b
   473  0000A8  6E50               	movwf	_PWM_duty+1,c
   474                           
   475                           ;main.c: 90: } else if (palabra[0] == 'A') {
   476  0000AA  D7B7               	goto	l150
   477  0000AC                     l156:
   478                           
   479                           ; BSR set to: 0
   480  0000AC  0E41               	movlw	65
   481  0000AE  1801               	xorwf	_palabra,w,c
   482  0000B0  A4D8               	btfss	status,2,c
   483  0000B2  D0E6               	goto	l158
   484                           
   485                           ;main.c: 92: caliber = ((palabra[1] - 48) * 10) + ((palabra[2] - 48));
   486  0000B4  0ED0               	movlw	208
   487  0000B6  2402               	addwf	_palabra+1,w,c
   488  0000B8  0100               	movlb	0	; () banked
   489  0000BA  6F60               	movwf	___wmul@multiplier& (0+255),b
   490  0000BC  6B61               	clrf	(___wmul@multiplier+1)& (0+255),b
   491  0000BE  0EFF               	movlw	255
   492  0000C0  2361               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   493  0000C2  0E00               	movlw	0
   494  0000C4  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
   495  0000C6  0E0A               	movlw	10
   496  0000C8  6F62               	movwf	___wmul@multiplicand& (0+255),b
   497  0000CA  ECDE  F002         	call	___wmul	;wreg free
   498  0000CE  5003               	movf	_palabra+2,w,c
   499  0000D0  0100               	movlb	0	; () banked
   500  0000D2  6F66               	movwf	??_main& (0+255),b
   501  0000D4  6B67               	clrf	(??_main+1)& (0+255),b
   502  0000D6  5160               	movf	?___wmul& (0+255),w,b
   503  0000D8  2766               	addwf	??_main& (0+255),f,b
   504  0000DA  5161               	movf	(?___wmul+1)& (0+255),w,b
   505  0000DC  2367               	addwfc	(??_main+1)& (0+255),f,b
   506  0000DE  0ED0               	movlw	208
   507  0000E0  2566               	addwf	??_main& (0+255),w,b
   508  0000E2  6E1D               	movwf	_caliber,c
   509  0000E4  0EFF               	movlw	255
   510  0000E6  2167               	addwfc	(??_main+1)& (0+255),w,b
   511  0000E8  6E1E               	movwf	_caliber+1,c
   512                           
   513                           ;main.c: 93: diameter = ((palabra[3] - 48) * 1000) + ((palabra[4] - 48) * 100) + ((palab
      +                          ra[5] - 48) * 10) + ((palabra[6] - 48));
   514  0000EA  0ED0               	movlw	208
   515  0000EC  2404               	addwf	_palabra+3,w,c
   516  0000EE  6F60               	movwf	___wmul@multiplier& (0+255),b
   517  0000F0  6B61               	clrf	(___wmul@multiplier+1)& (0+255),b
   518  0000F2  0EFF               	movlw	255
   519  0000F4  2361               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   520  0000F6  0E03               	movlw	3
   521  0000F8  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
   522  0000FA  0EE8               	movlw	232
   523  0000FC  6F62               	movwf	___wmul@multiplicand& (0+255),b
   524  0000FE  ECDE  F002         	call	___wmul	;wreg free
   525  000102  5007               	movf	_palabra+6,w,c
   526  000104  0100               	movlb	0	; () banked
   527  000106  6F66               	movwf	??_main& (0+255),b
   528  000108  6B67               	clrf	(??_main+1)& (0+255),b
   529  00010A  5160               	movf	?___wmul& (0+255),w,b
   530  00010C  2766               	addwf	??_main& (0+255),f,b
   531  00010E  5161               	movf	(?___wmul+1)& (0+255),w,b
   532  000110  2367               	addwfc	(??_main+1)& (0+255),f,b
   533  000112  0ED0               	movlw	208
   534  000114  2405               	addwf	_palabra+4,w,c
   535  000116  6F60               	movwf	___wmul@multiplier& (0+255),b
   536  000118  6B61               	clrf	(___wmul@multiplier+1)& (0+255),b
   537  00011A  0EFF               	movlw	255
   538  00011C  2361               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   539  00011E  0E00               	movlw	0
   540  000120  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
   541  000122  0E64               	movlw	100
   542  000124  6F62               	movwf	___wmul@multiplicand& (0+255),b
   543  000126  ECDE  F002         	call	___wmul	;wreg free
   544  00012A  0100               	movlb	0	; () banked
   545  00012C  5160               	movf	?___wmul& (0+255),w,b
   546  00012E  2766               	addwf	??_main& (0+255),f,b
   547  000130  5161               	movf	(?___wmul+1)& (0+255),w,b
   548  000132  2367               	addwfc	(??_main+1)& (0+255),f,b
   549  000134  0ED0               	movlw	208
   550  000136  2406               	addwf	_palabra+5,w,c
   551  000138  6F60               	movwf	___wmul@multiplier& (0+255),b
   552  00013A  6B61               	clrf	(___wmul@multiplier+1)& (0+255),b
   553  00013C  0EFF               	movlw	255
   554  00013E  2361               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   555  000140  0E00               	movlw	0
   556  000142  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
   557  000144  0E0A               	movlw	10
   558  000146  6F62               	movwf	___wmul@multiplicand& (0+255),b
   559  000148  ECDE  F002         	call	___wmul	;wreg free
   560  00014C  0100               	movlb	0	; () banked
   561  00014E  5160               	movf	?___wmul& (0+255),w,b
   562  000150  2766               	addwf	??_main& (0+255),f,b
   563  000152  5161               	movf	(?___wmul+1)& (0+255),w,b
   564  000154  2367               	addwfc	(??_main+1)& (0+255),f,b
   565  000156  0ED0               	movlw	208
   566  000158  2566               	addwf	??_main& (0+255),w,b
   567  00015A  6E1B               	movwf	_diameter,c
   568  00015C  0EFF               	movlw	255
   569  00015E  2167               	addwfc	(??_main+1)& (0+255),w,b
   570  000160  6E1C               	movwf	_diameter+1,c
   571                           
   572                           ;main.c: 94: length = ((palabra[7] - 48) * 10000) + ((palabra[8] - 48) * 1000) + ((palab
      +                          ra[9] - 48) * 100) + ((palabra[10] - 48) * 10) + ((palabra[11] - 48));
   573  000162  0ED0               	movlw	208
   574  000164  2408               	addwf	_palabra+7,w,c
   575  000166  6F60               	movwf	___wmul@multiplier& (0+255),b
   576  000168  6B61               	clrf	(___wmul@multiplier+1)& (0+255),b
   577  00016A  0EFF               	movlw	255
   578  00016C  2361               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   579  00016E  0E27               	movlw	39
   580  000170  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
   581  000172  0E10               	movlw	16
   582  000174  6F62               	movwf	___wmul@multiplicand& (0+255),b
   583  000176  ECDE  F002         	call	___wmul	;wreg free
   584  00017A  500C               	movf	_palabra+11,w,c
   585  00017C  0100               	movlb	0	; () banked
   586  00017E  6F66               	movwf	??_main& (0+255),b
   587  000180  6B67               	clrf	(??_main+1)& (0+255),b
   588  000182  5160               	movf	?___wmul& (0+255),w,b
   589  000184  2766               	addwf	??_main& (0+255),f,b
   590  000186  5161               	movf	(?___wmul+1)& (0+255),w,b
   591  000188  2367               	addwfc	(??_main+1)& (0+255),f,b
   592  00018A  0ED0               	movlw	208
   593  00018C  2409               	addwf	_palabra+8,w,c
   594  00018E  6F60               	movwf	___wmul@multiplier& (0+255),b
   595  000190  6B61               	clrf	(___wmul@multiplier+1)& (0+255),b
   596  000192  0EFF               	movlw	255
   597  000194  2361               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   598  000196  0E03               	movlw	3
   599  000198  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
   600  00019A  0EE8               	movlw	232
   601  00019C  6F62               	movwf	___wmul@multiplicand& (0+255),b
   602  00019E  ECDE  F002         	call	___wmul	;wreg free
   603  0001A2  0100               	movlb	0	; () banked
   604  0001A4  5160               	movf	?___wmul& (0+255),w,b
   605  0001A6  2766               	addwf	??_main& (0+255),f,b
   606  0001A8  5161               	movf	(?___wmul+1)& (0+255),w,b
   607  0001AA  2367               	addwfc	(??_main+1)& (0+255),f,b
   608  0001AC  0ED0               	movlw	208
   609  0001AE  240A               	addwf	_palabra+9,w,c
   610  0001B0  6F60               	movwf	___wmul@multiplier& (0+255),b
   611  0001B2  6B61               	clrf	(___wmul@multiplier+1)& (0+255),b
   612  0001B4  0EFF               	movlw	255
   613  0001B6  2361               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   614  0001B8  0E00               	movlw	0
   615  0001BA  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
   616  0001BC  0E64               	movlw	100
   617  0001BE  6F62               	movwf	___wmul@multiplicand& (0+255),b
   618  0001C0  ECDE  F002         	call	___wmul	;wreg free
   619  0001C4  0100               	movlb	0	; () banked
   620  0001C6  5160               	movf	?___wmul& (0+255),w,b
   621  0001C8  2766               	addwf	??_main& (0+255),f,b
   622  0001CA  5161               	movf	(?___wmul+1)& (0+255),w,b
   623  0001CC  2367               	addwfc	(??_main+1)& (0+255),f,b
   624  0001CE  0ED0               	movlw	208
   625  0001D0  240B               	addwf	_palabra+10,w,c
   626  0001D2  6F60               	movwf	___wmul@multiplier& (0+255),b
   627  0001D4  6B61               	clrf	(___wmul@multiplier+1)& (0+255),b
   628  0001D6  0EFF               	movlw	255
   629  0001D8  2361               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   630  0001DA  0E00               	movlw	0
   631  0001DC  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
   632  0001DE  0E0A               	movlw	10
   633  0001E0  6F62               	movwf	___wmul@multiplicand& (0+255),b
   634  0001E2  ECDE  F002         	call	___wmul	;wreg free
   635  0001E6  0100               	movlb	0	; () banked
   636  0001E8  5160               	movf	?___wmul& (0+255),w,b
   637  0001EA  2766               	addwf	??_main& (0+255),f,b
   638  0001EC  5161               	movf	(?___wmul+1)& (0+255),w,b
   639  0001EE  2367               	addwfc	(??_main+1)& (0+255),f,b
   640  0001F0  0ED0               	movlw	208
   641  0001F2  2566               	addwf	??_main& (0+255),w,b
   642  0001F4  6E19               	movwf	_length,c
   643  0001F6  0EFF               	movlw	255
   644  0001F8  2167               	addwfc	(??_main+1)& (0+255),w,b
   645  0001FA  6E1A               	movwf	_length+1,c
   646                           
   647                           ;main.c: 95: turns = ((palabra[12] - 48) * 1000) + ((palabra[13] - 48) * 100) + ((palabr
      +                          a[14] - 48) * 10) + ((palabra[15] - 48));
   648  0001FC  0ED0               	movlw	208
   649  0001FE  240D               	addwf	_palabra+12,w,c
   650  000200  6F60               	movwf	___wmul@multiplier& (0+255),b
   651  000202  6B61               	clrf	(___wmul@multiplier+1)& (0+255),b
   652  000204  0EFF               	movlw	255
   653  000206  2361               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   654  000208  0E03               	movlw	3
   655  00020A  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
   656  00020C  0EE8               	movlw	232
   657  00020E  6F62               	movwf	___wmul@multiplicand& (0+255),b
   658  000210  ECDE  F002         	call	___wmul	;wreg free
   659  000214  5010               	movf	_palabra+15,w,c
   660  000216  0100               	movlb	0	; () banked
   661  000218  6F66               	movwf	??_main& (0+255),b
   662  00021A  6B67               	clrf	(??_main+1)& (0+255),b
   663  00021C  5160               	movf	?___wmul& (0+255),w,b
   664  00021E  2766               	addwf	??_main& (0+255),f,b
   665  000220  5161               	movf	(?___wmul+1)& (0+255),w,b
   666  000222  2367               	addwfc	(??_main+1)& (0+255),f,b
   667  000224  0ED0               	movlw	208
   668  000226  240E               	addwf	_palabra+13,w,c
   669  000228  6F60               	movwf	___wmul@multiplier& (0+255),b
   670  00022A  6B61               	clrf	(___wmul@multiplier+1)& (0+255),b
   671  00022C  0EFF               	movlw	255
   672  00022E  2361               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   673  000230  0E00               	movlw	0
   674  000232  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
   675  000234  0E64               	movlw	100
   676  000236  6F62               	movwf	___wmul@multiplicand& (0+255),b
   677  000238  ECDE  F002         	call	___wmul	;wreg free
   678  00023C  0100               	movlb	0	; () banked
   679  00023E  5160               	movf	?___wmul& (0+255),w,b
   680  000240  2766               	addwf	??_main& (0+255),f,b
   681  000242  5161               	movf	(?___wmul+1)& (0+255),w,b
   682  000244  2367               	addwfc	(??_main+1)& (0+255),f,b
   683  000246  0ED0               	movlw	208
   684  000248  240F               	addwf	_palabra+14,w,c
   685  00024A  6F60               	movwf	___wmul@multiplier& (0+255),b
   686  00024C  6B61               	clrf	(___wmul@multiplier+1)& (0+255),b
   687  00024E  0EFF               	movlw	255
   688  000250  2361               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   689  000252  0E00               	movlw	0
   690  000254  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
   691  000256  0E0A               	movlw	10
   692  000258  6F62               	movwf	___wmul@multiplicand& (0+255),b
   693  00025A  ECDE  F002         	call	___wmul	;wreg free
   694  00025E  0100               	movlb	0	; () banked
   695  000260  5160               	movf	?___wmul& (0+255),w,b
   696  000262  2766               	addwf	??_main& (0+255),f,b
   697  000264  5161               	movf	(?___wmul+1)& (0+255),w,b
   698  000266  2367               	addwfc	(??_main+1)& (0+255),f,b
   699  000268  0ED0               	movlw	208
   700  00026A  2566               	addwf	??_main& (0+255),w,b
   701  00026C  6E17               	movwf	_turns,c
   702  00026E  0EFF               	movlw	255
   703  000270  2167               	addwfc	(??_main+1)& (0+255),w,b
   704  000272  6E18               	movwf	_turns+1,c
   705                           
   706                           ; BSR set to: 0
   707                           ;main.c: 96: speed = palabra[15];
   708  000274  C010  F015         	movff	_palabra+15,_speed
   709  000278  6A16               	clrf	_speed+1,c
   710                           
   711                           ; BSR set to: 0
   712                           ;main.c: 98: busy_flag = 1;
   713  00027A  0E01               	movlw	1
   714  00027C  6E31               	movwf	_busy_flag,c
   715                           
   716                           ;main.c: 99: } else if (palabra[0] == 'D') {
   717  00027E  D6CD               	goto	l150
   718  000280                     l158:
   719                           
   720                           ; BSR set to: 0
   721  000280  0E44               	movlw	68
   722  000282  1801               	xorwf	_palabra,w,c
   723  000284  A4D8               	btfss	status,2,c
   724  000286  D6C9               	goto	l150
   725                           
   726                           ;main.c: 101: if (palabra[1] == '0') {
   727  000288  0E30               	movlw	48
   728  00028A  1802               	xorwf	_palabra+1,w,c
   729  00028C  A4D8               	btfss	status,2,c
   730  00028E  D002               	goto	l161
   731                           
   732                           ;main.c: 103: DIR_3 = 0;
   733  000290  0E00               	movlw	0
   734  000292  D005               	goto	L1
   735  000294                     l161:
   736  000294  0E31               	movlw	49
   737  000296  1802               	xorwf	_palabra+1,w,c
   738  000298  A4D8               	btfss	status,2,c
   739  00029A  D6BF               	goto	l150
   740                           
   741                           ;main.c: 107: DIR_3 = 1;
   742  00029C  0E01               	movlw	1
   743  00029E                     L1:
   744  00029E  6E33               	movwf	_DIR_3,c
   745                           
   746                           ;main.c: 108: MOT_3 = 1;
   747  0002A0  0E01               	movlw	1
   748  0002A2  6E38               	movwf	_MOT_3,c
   749                           
   750                           ;main.c: 113: }
   751                           ;main.c: 115: }
   752                           ;main.c: 118: } else if (GODONE == 0) {
   753                           
   754                           ;main.c: 110: } else if (palabra[1] == '2') {
   755  0002A4  D6BA               	goto	l150
   756  0002A6                     l155:
   757  0002A6  B2C2               	btfsc	4034,1,c	;volatile
   758  0002A8  D6B8               	goto	l150
   759                           
   760                           ;main.c: 120: GODONE = 1;
   761  0002AA  82C2               	bsf	4034,1,c	;volatile
   762  0002AC  D6B6               	goto	l150
   763  0002AE                     __end_of_main:
   764                           	opt stack 0
   765                           tblptru	equ	0xFF8
   766                           tblptrh	equ	0xFF7
   767                           tblptrl	equ	0xFF6
   768                           tablat	equ	0xFF5
   769                           postinc0	equ	0xFEE
   770                           wreg	equ	0xFE8
   771                           postdec1	equ	0xFE5
   772                           fsr1l	equ	0xFE1
   773                           status	equ	0xFD8
   774                           
   775 ;; *************** function ___wmul *****************
   776 ;; Defined at:
   777 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
   778 ;; Parameters:    Size  Location     Type
   779 ;;  multiplier      2    0[BANK0 ] unsigned int 
   780 ;;  multiplicand    2    2[BANK0 ] unsigned int 
   781 ;; Auto vars:     Size  Location     Type
   782 ;;  product         2    4[BANK0 ] unsigned int 
   783 ;; Return value:  Size  Location     Type
   784 ;;                  2    0[BANK0 ] unsigned int 
   785 ;; Registers used:
   786 ;;		wreg, status,2, status,0, prodl, prodh
   787 ;; Tracked objects:
   788 ;;		On entry : 0/0
   789 ;;		On exit  : 0/0
   790 ;;		Unchanged: 0/0
   791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   792 ;;      Params:         0       4       0       0       0       0       0       0       0
   793 ;;      Locals:         0       2       0       0       0       0       0       0       0
   794 ;;      Temps:          0       0       0       0       0       0       0       0       0
   795 ;;      Totals:         0       6       0       0       0       0       0       0       0
   796 ;;Total ram usage:        6 bytes
   797 ;; Hardware stack levels used:    1
   798 ;; Hardware stack levels required when called:    1
   799 ;; This function calls:
   800 ;;		Nothing
   801 ;; This function is called by:
   802 ;;		_main
   803 ;; This function uses a non-reentrant model
   804 ;;
   805                           
   806                           	psect	text1
   807  0005BC                     __ptext1:
   808                           	opt stack 0
   809  0005BC                     ___wmul:
   810                           	opt stack 29
   811                           
   812                           ;incstack = 0
   813  0005BC  0100               	movlb	0	; () banked
   814  0005BE  5160               	movf	___wmul@multiplier& (0+255),w,b
   815  0005C0  0362               	mulwf	___wmul@multiplicand& (0+255),b
   816  0005C2  CFF3 F064          	movff	prodl,___wmul@product
   817  0005C6  CFF4 F065          	movff	prodh,___wmul@product+1
   818  0005CA  5160               	movf	___wmul@multiplier& (0+255),w,b
   819  0005CC  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
   820  0005CE  50F3               	movf	prodl,w,c
   821  0005D0  2765               	addwf	(___wmul@product+1)& (0+255),f,b
   822  0005D2  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
   823  0005D4  0362               	mulwf	___wmul@multiplicand& (0+255),b
   824  0005D6  50F3               	movf	prodl,w,c
   825  0005D8  2765               	addwf	(___wmul@product+1)& (0+255),f,b
   826                           
   827                           ; BSR set to: 0
   828  0005DA  C064  F060         	movff	___wmul@product,?___wmul
   829  0005DE  C065  F061         	movff	___wmul@product+1,?___wmul+1
   830  0005E2  0012               	return	
   831  0005E4                     __end_of___wmul:
   832                           	opt stack 0
   833                           tblptru	equ	0xFF8
   834                           tblptrh	equ	0xFF7
   835                           tblptrl	equ	0xFF6
   836                           tablat	equ	0xFF5
   837                           prodh	equ	0xFF4
   838                           prodl	equ	0xFF3
   839                           postinc0	equ	0xFEE
   840                           wreg	equ	0xFE8
   841                           postdec1	equ	0xFE5
   842                           fsr1l	equ	0xFE1
   843                           status	equ	0xFD8
   844                           
   845 ;; *************** function _InitApp *****************
   846 ;; Defined at:
   847 ;;		line 33 in file "user.c"
   848 ;; Parameters:    Size  Location     Type
   849 ;;		None
   850 ;; Auto vars:     Size  Location     Type
   851 ;;		None
   852 ;; Return value:  Size  Location     Type
   853 ;;                  1    wreg      void 
   854 ;; Registers used:
   855 ;;		wreg, status,2
   856 ;; Tracked objects:
   857 ;;		On entry : 0/0
   858 ;;		On exit  : 0/0
   859 ;;		Unchanged: 0/0
   860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   861 ;;      Params:         0       0       0       0       0       0       0       0       0
   862 ;;      Locals:         0       0       0       0       0       0       0       0       0
   863 ;;      Temps:          0       0       0       0       0       0       0       0       0
   864 ;;      Totals:         0       0       0       0       0       0       0       0       0
   865 ;;Total ram usage:        0 bytes
   866 ;; Hardware stack levels used:    1
   867 ;; Hardware stack levels required when called:    1
   868 ;; This function calls:
   869 ;;		Nothing
   870 ;; This function is called by:
   871 ;;		_main
   872 ;; This function uses a non-reentrant model
   873 ;;
   874                           
   875                           	psect	text2
   876  0004E4                     __ptext2:
   877                           	opt stack 0
   878  0004E4                     _InitApp:
   879                           	opt stack 29
   880                           
   881                           ;user.c: 35: PORTA = 0;
   882                           
   883                           ; BSR set to: 0
   884                           ;incstack = 0
   885  0004E4  0E00               	movlw	0
   886  0004E6  6E80               	movwf	3968,c	;volatile
   887                           
   888                           ;user.c: 36: LATA = 0;
   889  0004E8  0E00               	movlw	0
   890  0004EA  6E89               	movwf	3977,c	;volatile
   891                           
   892                           ;user.c: 37: PORTB = 0;
   893  0004EC  0E00               	movlw	0
   894  0004EE  6E81               	movwf	3969,c	;volatile
   895                           
   896                           ;user.c: 38: LATB = 0;
   897  0004F0  0E00               	movlw	0
   898  0004F2  6E8A               	movwf	3978,c	;volatile
   899                           
   900                           ;user.c: 39: PORTC = 0;
   901  0004F4  0E00               	movlw	0
   902  0004F6  6E82               	movwf	3970,c	;volatile
   903                           
   904                           ;user.c: 40: LATC = 0;
   905  0004F8  0E00               	movlw	0
   906  0004FA  6E8B               	movwf	3979,c	;volatile
   907                           
   908                           ;user.c: 42: ADCON1 = 0b1101;
   909  0004FC  0E0D               	movlw	13
   910  0004FE  6EC1               	movwf	4033,c	;volatile
   911                           
   912                           ;user.c: 43: TRISAbits.TRISA0 = 1;
   913  000500  8092               	bsf	3986,0,c	;volatile
   914                           
   915                           ;user.c: 44: TRISAbits.TRISA1 = 1;
   916  000502  8292               	bsf	3986,1,c	;volatile
   917                           
   918                           ;user.c: 45: ADCON0bits.CHS = 0;
   919  000504  94C2               	bcf	4034,2,c	;volatile
   920  000506  96C2               	bcf	4034,3,c	;volatile
   921  000508  98C2               	bcf	4034,4,c	;volatile
   922  00050A  9AC2               	bcf	4034,5,c	;volatile
   923                           
   924                           ;user.c: 46: ADCON2 = 0b10101100;
   925  00050C  0EAC               	movlw	172
   926  00050E  6EC0               	movwf	4032,c	;volatile
   927                           
   928                           ;user.c: 47: PIE1bits.ADIE = 1;
   929  000510  8C9D               	bsf	3997,6,c	;volatile
   930                           
   931                           ;user.c: 48: PIR1bits.ADIF = 0;
   932  000512  9C9E               	bcf	3998,6,c	;volatile
   933                           
   934                           ;user.c: 49: ADCON0bits.ADON = 1;
   935  000514  80C2               	bsf	4034,0,c	;volatile
   936                           
   937                           ;user.c: 51: TRISAbits.RA2 = 0;
   938  000516  9492               	bcf	3986,2,c	;volatile
   939                           
   940                           ;user.c: 52: TRISAbits.RA3 = 0;
   941  000518  9692               	bcf	3986,3,c	;volatile
   942                           
   943                           ;user.c: 53: TRISAbits.RA4 = 0;
   944  00051A  9892               	bcf	3986,4,c	;volatile
   945                           
   946                           ;user.c: 54: TRISAbits.RA5 = 0;
   947  00051C  9A92               	bcf	3986,5,c	;volatile
   948                           
   949                           ;user.c: 55: TRISCbits.RC0 = 0;
   950  00051E  9094               	bcf	3988,0,c	;volatile
   951                           
   952                           ;user.c: 56: TRISCbits.RC1 = 0;
   953  000520  9294               	bcf	3988,1,c	;volatile
   954                           
   955                           ;user.c: 57: TRISBbits.RB7 = 0;
   956  000522  9E93               	bcf	3987,7,c	;volatile
   957                           
   958                           ;user.c: 58: TRISBbits.RB6 = 0;
   959  000524  9C93               	bcf	3987,6,c	;volatile
   960                           
   961                           ;user.c: 59: TRISCbits.RC2 = 0;
   962  000526  9494               	bcf	3988,2,c	;volatile
   963                           
   964                           ;user.c: 61: RCONbits.IPEN = 0;
   965  000528  9ED0               	bcf	4048,7,c	;volatile
   966                           
   967                           ;user.c: 63: INTCONbits.GIE = 1;
   968  00052A  8EF2               	bsf	intcon,7,c	;volatile
   969                           
   970                           ;user.c: 64: INTCONbits.PEIE = 1;
   971  00052C  8CF2               	bsf	intcon,6,c	;volatile
   972                           
   973                           ;user.c: 65: INTCONbits.TMR0IE = 1;
   974  00052E  8AF2               	bsf	intcon,5,c	;volatile
   975                           
   976                           ;user.c: 66: INTCONbits.TMR0IF = 0;
   977  000530  94F2               	bcf	intcon,2,c	;volatile
   978                           
   979                           ;user.c: 67: INTCON2bits.TMR0IP = 1;
   980  000532  84F1               	bsf	intcon2,2,c	;volatile
   981                           
   982                           ;user.c: 68: T0CONbits.T08BIT = 1;
   983  000534  8CD5               	bsf	4053,6,c	;volatile
   984                           
   985                           ;user.c: 69: T0CONbits.T0CS = 0;
   986  000536  9AD5               	bcf	4053,5,c	;volatile
   987                           
   988                           ;user.c: 70: T0CONbits.PSA = 0;
   989  000538  96D5               	bcf	4053,3,c	;volatile
   990                           
   991                           ;user.c: 71: T0CONbits.T0PS = 0b101;
   992  00053A  50D5               	movf	4053,w,c	;volatile
   993  00053C  0BF8               	andlw	-8
   994  00053E  0905               	iorlw	5
   995  000540  6ED5               	movwf	4053,c	;volatile
   996                           
   997                           ;user.c: 72: TMR0 = 0x6;
   998  000542  0E00               	movlw	0
   999  000544  6ED7               	movwf	4055,c	;volatile
  1000  000546  0E06               	movlw	6
  1001  000548  6ED6               	movwf	4054,c	;volatile
  1002                           
  1003                           ;user.c: 74: INTCON3bits.INT1IE = 1;
  1004  00054A  86F0               	bsf	intcon3,3,c	;volatile
  1005                           
  1006                           ;user.c: 75: INTCON3bits.INT2IE = 1;
  1007  00054C  88F0               	bsf	intcon3,4,c	;volatile
  1008                           
  1009                           ;user.c: 76: INTCON3bits.INT1IF = 0;
  1010  00054E  90F0               	bcf	intcon3,0,c	;volatile
  1011                           
  1012                           ;user.c: 77: INTCON3bits.INT2IF = 0;
  1013  000550  92F0               	bcf	intcon3,1,c	;volatile
  1014                           
  1015                           ;user.c: 79: TRISCbits.RC6 = 0;
  1016  000552  9C94               	bcf	3988,6,c	;volatile
  1017                           
  1018                           ;user.c: 80: TRISCbits.RC7 = 1;
  1019  000554  8E94               	bsf	3988,7,c	;volatile
  1020                           
  1021                           ;user.c: 81: BRGH = 1;
  1022  000556  84AC               	bsf	4012,2,c	;volatile
  1023                           
  1024                           ;user.c: 82: BRG16 = 1;
  1025  000558  86B8               	bsf	4024,3,c	;volatile
  1026                           
  1027                           ;user.c: 83: SPBRG = 207;
  1028  00055A  0ECF               	movlw	207
  1029  00055C  6EAF               	movwf	4015,c	;volatile
  1030                           
  1031                           ;user.c: 84: SPEN = 1;
  1032  00055E  8EAB               	bsf	4011,7,c	;volatile
  1033                           
  1034                           ;user.c: 85: SYNC = 0;
  1035  000560  98AC               	bcf	4012,4,c	;volatile
  1036                           
  1037                           ;user.c: 86: TXEN = 1;
  1038  000562  8AAC               	bsf	4012,5,c	;volatile
  1039                           
  1040                           ;user.c: 87: CREN = 1;
  1041  000564  88AB               	bsf	4011,4,c	;volatile
  1042                           
  1043                           ;user.c: 88: TX9 = 0;
  1044  000566  9CAC               	bcf	4012,6,c	;volatile
  1045                           
  1046                           ;user.c: 89: RX9 = 0;
  1047  000568  9CAB               	bcf	4011,6,c	;volatile
  1048                           
  1049                           ;user.c: 90: RCIE = 1;
  1050  00056A  8A9D               	bsf	3997,5,c	;volatile
  1051                           
  1052                           ;user.c: 91: TXIE = 0;
  1053  00056C  989D               	bcf	3997,4,c	;volatile
  1054                           
  1055                           ;user.c: 93: PR2 = 99;
  1056  00056E  0E63               	movlw	99
  1057  000570  6ECB               	movwf	4043,c	;volatile
  1058                           
  1059                           ;user.c: 94: CCP1CONbits.DC1B = 0;
  1060  000572  0ECF               	movlw	-49
  1061  000574  16BD               	andwf	4029,f,c	;volatile
  1062                           
  1063                           ;user.c: 95: T2CONbits.T2CKPS = 0b00;
  1064  000576  0EFC               	movlw	-4
  1065  000578  16CA               	andwf	4042,f,c	;volatile
  1066                           
  1067                           ;user.c: 96: T2CONbits.TMR2ON = 1;
  1068  00057A  84CA               	bsf	4042,2,c	;volatile
  1069                           
  1070                           ;user.c: 97: CCP1CONbits.CCP1M = 0b1111;
  1071  00057C  80BD               	bsf	4029,0,c	;volatile
  1072  00057E  82BD               	bsf	4029,1,c	;volatile
  1073  000580  84BD               	bsf	4029,2,c	;volatile
  1074  000582  86BD               	bsf	4029,3,c	;volatile
  1075  000584  0012               	return		;funcret
  1076  000586                     __end_of_InitApp:
  1077                           	opt stack 0
  1078                           tblptru	equ	0xFF8
  1079                           tblptrh	equ	0xFF7
  1080                           tblptrl	equ	0xFF6
  1081                           tablat	equ	0xFF5
  1082                           prodh	equ	0xFF4
  1083                           prodl	equ	0xFF3
  1084                           intcon	equ	0xFF2
  1085                           intcon2	equ	0xFF1
  1086                           intcon3	equ	0xFF0
  1087                           postinc0	equ	0xFEE
  1088                           wreg	equ	0xFE8
  1089                           postdec1	equ	0xFE5
  1090                           fsr1l	equ	0xFE1
  1091                           status	equ	0xFD8
  1092                           
  1093 ;; *************** function _ConfigureOscillator *****************
  1094 ;; Defined at:
  1095 ;;		line 24 in file "system.c"
  1096 ;; Parameters:    Size  Location     Type
  1097 ;;		None
  1098 ;; Auto vars:     Size  Location     Type
  1099 ;;		None
  1100 ;; Return value:  Size  Location     Type
  1101 ;;                  1    wreg      void 
  1102 ;; Registers used:
  1103 ;;		wreg, status,2
  1104 ;; Tracked objects:
  1105 ;;		On entry : 0/0
  1106 ;;		On exit  : 0/0
  1107 ;;		Unchanged: 0/0
  1108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1109 ;;      Params:         0       0       0       0       0       0       0       0       0
  1110 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1111 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1112 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1113 ;;Total ram usage:        0 bytes
  1114 ;; Hardware stack levels used:    1
  1115 ;; Hardware stack levels required when called:    1
  1116 ;; This function calls:
  1117 ;;		Nothing
  1118 ;; This function is called by:
  1119 ;;		_main
  1120 ;; This function uses a non-reentrant model
  1121 ;;
  1122                           
  1123                           	psect	text3
  1124  0005E4                     __ptext3:
  1125                           	opt stack 0
  1126  0005E4                     _ConfigureOscillator:
  1127                           	opt stack 29
  1128                           
  1129                           ;system.c: 27: OSCCONbits.IRCF = 0b111;
  1130                           
  1131                           ;incstack = 0
  1132  0005E4  88D3               	bsf	4051,4,c	;volatile
  1133  0005E6  8AD3               	bsf	4051,5,c	;volatile
  1134  0005E8  8CD3               	bsf	4051,6,c	;volatile
  1135                           
  1136                           ;system.c: 28: OSCCONbits.SCS = 0b11;
  1137  0005EA  0E03               	movlw	3
  1138  0005EC  12D3               	iorwf	4051,f,c	;volatile
  1139  0005EE  0012               	return		;funcret
  1140  0005F0                     __end_of_ConfigureOscillator:
  1141                           	opt stack 0
  1142                           tblptru	equ	0xFF8
  1143                           tblptrh	equ	0xFF7
  1144                           tblptrl	equ	0xFF6
  1145                           tablat	equ	0xFF5
  1146                           prodh	equ	0xFF4
  1147                           prodl	equ	0xFF3
  1148                           intcon	equ	0xFF2
  1149                           intcon2	equ	0xFF1
  1150                           intcon3	equ	0xFF0
  1151                           postinc0	equ	0xFEE
  1152                           wreg	equ	0xFE8
  1153                           postdec1	equ	0xFE5
  1154                           fsr1l	equ	0xFE1
  1155                           status	equ	0xFD8
  1156                           
  1157 ;; *************** function _high_isr *****************
  1158 ;; Defined at:
  1159 ;;		line 41 in file "interrupts.c"
  1160 ;; Parameters:    Size  Location     Type
  1161 ;;		None
  1162 ;; Auto vars:     Size  Location     Type
  1163 ;;		None
  1164 ;; Return value:  Size  Location     Type
  1165 ;;                  1    wreg      void 
  1166 ;; Registers used:
  1167 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1168 ;; Tracked objects:
  1169 ;;		On entry : 0/0
  1170 ;;		On exit  : 0/0
  1171 ;;		Unchanged: 0/0
  1172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1173 ;;      Params:         0       0       0       0       0       0       0       0       0
  1174 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1175 ;;      Temps:         19       0       0       0       0       0       0       0       0
  1176 ;;      Totals:        19       0       0       0       0       0       0       0       0
  1177 ;;Total ram usage:       19 bytes
  1178 ;; Hardware stack levels used:    1
  1179 ;; This function calls:
  1180 ;;		Nothing
  1181 ;; This function is called by:
  1182 ;;		Interrupt level 2
  1183 ;; This function uses a non-reentrant model
  1184 ;;
  1185                           
  1186                           	psect	intcode
  1187  000008                     __pintcode:
  1188                           	opt stack 0
  1189  000008                     _high_isr:
  1190                           	opt stack 29
  1191                           
  1192                           ;incstack = 0
  1193  000008  8253               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  1194  00000A  ED57  F001         	call	int_func,f	;refresh shadow registers
  1195                           tblptru	equ	0xFF8
  1196                           tblptrh	equ	0xFF7
  1197                           tblptrl	equ	0xFF6
  1198                           tablat	equ	0xFF5
  1199                           prodh	equ	0xFF4
  1200                           prodl	equ	0xFF3
  1201                           intcon	equ	0xFF2
  1202                           intcon2	equ	0xFF1
  1203                           intcon3	equ	0xFF0
  1204                           postinc0	equ	0xFEE
  1205                           wreg	equ	0xFE8
  1206                           postdec1	equ	0xFE5
  1207                           fsr1l	equ	0xFE1
  1208                           status	equ	0xFD8
  1209                           
  1210                           	psect	intcode_body
  1211  0002AE                     __pintcode_body:
  1212                           	opt stack 29
  1213  0002AE                     int_func:
  1214                           	opt stack 29
  1215  0002AE  0006               	pop		; remove dummy address from shadow register refresh
  1216  0002B0  CFFA F03D          	movff	pclath,??_high_isr+1
  1217  0002B4  CFFB F03E          	movff	pclatu,??_high_isr+2
  1218  0002B8  CFE9 F03F          	movff	fsr0l,??_high_isr+3
  1219  0002BC  CFEA F040          	movff	fsr0h,??_high_isr+4
  1220  0002C0  CFE1 F041          	movff	fsr1l,??_high_isr+5
  1221  0002C4  CFE2 F042          	movff	fsr1h,??_high_isr+6
  1222  0002C8  CFD9 F043          	movff	fsr2l,??_high_isr+7
  1223  0002CC  CFDA F044          	movff	fsr2h,??_high_isr+8
  1224  0002D0  CFF3 F045          	movff	prodl,??_high_isr+9
  1225  0002D4  CFF4 F046          	movff	prodh,??_high_isr+10
  1226  0002D8  CFF6 F047          	movff	tblptrl,??_high_isr+11
  1227  0002DC  CFF7 F048          	movff	tblptrh,??_high_isr+12
  1228  0002E0  CFF8 F049          	movff	tblptru,??_high_isr+13
  1229  0002E4  CFF5 F04A          	movff	tablat,??_high_isr+14
  1230  0002E8  C053  F04B         	movff	btemp,??_high_isr+15
  1231  0002EC  C054  F04C         	movff	btemp+1,??_high_isr+16
  1232  0002F0  C055  F04D         	movff	btemp+2,??_high_isr+17
  1233  0002F4  C056  F04E         	movff	btemp+3,??_high_isr+18
  1234                           
  1235                           ;interrupts.c: 42: if (INTCONbits.TMR0IF) {
  1236  0002F8  A4F2               	btfss	intcon,2,c	;volatile
  1237  0002FA  D082               	goto	i2l63
  1238                           
  1239                           ;interrupts.c: 44: INTCONbits.TMR0IF = 0;
  1240  0002FC  94F2               	bcf	intcon,2,c	;volatile
  1241                           
  1242                           ;interrupts.c: 45: overflow++;
  1243  0002FE  4A2D               	infsnz	_overflow,f,c
  1244  000300  2A2E               	incf	_overflow+1,f,c
  1245                           
  1246                           ;interrupts.c: 46: LATAbits.LA3 = !PORTAbits.RA3;
  1247  000302  B680               	btfsc	3968,3,c	;volatile
  1248  000304  D003               	goto	i2u2_40
  1249  000306  6A3C               	clrf	??_high_isr& (0+255),c
  1250  000308  2A3C               	incf	??_high_isr& (0+255),f,c
  1251  00030A  D001               	goto	i2u3_48
  1252  00030C                     i2u2_40:
  1253  00030C  6A3C               	clrf	??_high_isr& (0+255),c
  1254  00030E                     i2u3_48:
  1255  00030E  463C               	rlncf	??_high_isr,f,c
  1256  000310  463C               	rlncf	??_high_isr,f,c
  1257  000312  463C               	rlncf	??_high_isr,f,c
  1258  000314  5089               	movf	3977,w,c	;volatile
  1259  000316  183C               	xorwf	??_high_isr,w,c
  1260  000318  0BF7               	andlw	-9
  1261  00031A  183C               	xorwf	??_high_isr,w,c
  1262  00031C  6E89               	movwf	3977,c	;volatile
  1263                           
  1264                           ;interrupts.c: 47: TMR0 = 50;
  1265  00031E  0E00               	movlw	0
  1266  000320  6ED7               	movwf	4055,c	;volatile
  1267  000322  0E32               	movlw	50
  1268  000324  6ED6               	movwf	4054,c	;volatile
  1269                           
  1270                           ;interrupts.c: 48: MOT_1_count++;
  1271  000326  4A27               	infsnz	_MOT_1_count,f,c
  1272  000328  2A28               	incf	_MOT_1_count+1,f,c
  1273                           
  1274                           ;interrupts.c: 49: MOT_2_count++;
  1275  00032A  4A25               	infsnz	_MOT_2_count,f,c
  1276  00032C  2A26               	incf	_MOT_2_count+1,f,c
  1277                           
  1278                           ;interrupts.c: 50: MOT_3_count++;
  1279  00032E  4A23               	infsnz	_MOT_3_count,f,c
  1280  000330  2A24               	incf	_MOT_3_count+1,f,c
  1281                           
  1282                           ;interrupts.c: 51: MOT_4_count++;
  1283  000332  4A21               	infsnz	_MOT_4_count,f,c
  1284  000334  2A22               	incf	_MOT_4_count+1,f,c
  1285                           
  1286                           ;interrupts.c: 53: if (MOT_1) {
  1287  000336  503A               	movf	_MOT_1,w,c
  1288  000338  B4D8               	btfsc	status,2,c
  1289  00033A  D016               	goto	i2l65
  1290                           
  1291                           ;interrupts.c: 54: if (MOT_1_count == 5) {
  1292  00033C  0E05               	movlw	5
  1293  00033E  1827               	xorwf	_MOT_1_count,w,c
  1294  000340  1028               	iorwf	_MOT_1_count+1,w,c
  1295  000342  A4D8               	btfss	status,2,c
  1296  000344  D011               	goto	i2l65
  1297                           
  1298                           ;interrupts.c: 55: LATAbits.LA5 = !PORTAbits.RA5;
  1299  000346  BA80               	btfsc	3968,5,c	;volatile
  1300  000348  D003               	goto	i2u6_40
  1301  00034A  6A3C               	clrf	??_high_isr& (0+255),c
  1302  00034C  2A3C               	incf	??_high_isr& (0+255),f,c
  1303  00034E  D001               	goto	i2u7_48
  1304  000350                     i2u6_40:
  1305  000350  6A3C               	clrf	??_high_isr& (0+255),c
  1306  000352                     i2u7_48:
  1307  000352  3A3C               	swapf	??_high_isr,f,c
  1308  000354  463C               	rlncf	??_high_isr,f,c
  1309  000356  5089               	movf	3977,w,c	;volatile
  1310  000358  183C               	xorwf	??_high_isr,w,c
  1311  00035A  0BDF               	andlw	-33
  1312  00035C  183C               	xorwf	??_high_isr,w,c
  1313  00035E  6E89               	movwf	3977,c	;volatile
  1314                           
  1315                           ;interrupts.c: 56: MOT_2_count = 0;
  1316  000360  0E00               	movlw	0
  1317  000362  6E26               	movwf	_MOT_2_count+1,c
  1318  000364  0E00               	movlw	0
  1319  000366  6E25               	movwf	_MOT_2_count,c
  1320  000368                     i2l65:
  1321                           
  1322                           ;interrupts.c: 57: }
  1323                           ;interrupts.c: 58: }
  1324                           ;interrupts.c: 59: if (MOT_2) {
  1325  000368  5039               	movf	_MOT_2,w,c
  1326  00036A  B4D8               	btfsc	status,2,c
  1327  00036C  D016               	goto	i2l67
  1328                           
  1329                           ;interrupts.c: 60: if (MOT_2_count == 5) {
  1330  00036E  0E05               	movlw	5
  1331  000370  1825               	xorwf	_MOT_2_count,w,c
  1332  000372  1026               	iorwf	_MOT_2_count+1,w,c
  1333  000374  A4D8               	btfss	status,2,c
  1334  000376  D011               	goto	i2l67
  1335                           
  1336                           ;interrupts.c: 61: LATAbits.LA5 = !PORTAbits.RA5;
  1337  000378  BA80               	btfsc	3968,5,c	;volatile
  1338  00037A  D003               	goto	i2u10_40
  1339  00037C  6A3C               	clrf	??_high_isr& (0+255),c
  1340  00037E  2A3C               	incf	??_high_isr& (0+255),f,c
  1341  000380  D001               	goto	i2u11_48
  1342  000382                     i2u10_40:
  1343  000382  6A3C               	clrf	??_high_isr& (0+255),c
  1344  000384                     i2u11_48:
  1345  000384  3A3C               	swapf	??_high_isr,f,c
  1346  000386  463C               	rlncf	??_high_isr,f,c
  1347  000388  5089               	movf	3977,w,c	;volatile
  1348  00038A  183C               	xorwf	??_high_isr,w,c
  1349  00038C  0BDF               	andlw	-33
  1350  00038E  183C               	xorwf	??_high_isr,w,c
  1351  000390  6E89               	movwf	3977,c	;volatile
  1352                           
  1353                           ;interrupts.c: 62: MOT_2_count = 0;
  1354  000392  0E00               	movlw	0
  1355  000394  6E26               	movwf	_MOT_2_count+1,c
  1356  000396  0E00               	movlw	0
  1357  000398  6E25               	movwf	_MOT_2_count,c
  1358  00039A                     i2l67:
  1359                           
  1360                           ;interrupts.c: 63: }
  1361                           ;interrupts.c: 64: }
  1362                           ;interrupts.c: 65: if (MOT_3) {
  1363  00039A  5038               	movf	_MOT_3,w,c
  1364  00039C  B4D8               	btfsc	status,2,c
  1365  00039E  D015               	goto	i2l69
  1366                           
  1367                           ;interrupts.c: 66: if (MOT_3_count == 5) {
  1368  0003A0  0E05               	movlw	5
  1369  0003A2  1823               	xorwf	_MOT_3_count,w,c
  1370  0003A4  1024               	iorwf	_MOT_3_count+1,w,c
  1371  0003A6  A4D8               	btfss	status,2,c
  1372  0003A8  D010               	goto	i2l69
  1373                           
  1374                           ;interrupts.c: 67: LATCbits.LC1 = !PORTCbits.RC1;
  1375  0003AA  B282               	btfsc	3970,1,c	;volatile
  1376  0003AC  D003               	goto	i2u14_40
  1377  0003AE  6A3C               	clrf	??_high_isr& (0+255),c
  1378  0003B0  2A3C               	incf	??_high_isr& (0+255),f,c
  1379  0003B2  D001               	goto	i2u15_48
  1380  0003B4                     i2u14_40:
  1381  0003B4  6A3C               	clrf	??_high_isr& (0+255),c
  1382  0003B6                     i2u15_48:
  1383  0003B6  463C               	rlncf	??_high_isr,f,c
  1384  0003B8  508B               	movf	3979,w,c	;volatile
  1385  0003BA  183C               	xorwf	??_high_isr,w,c
  1386  0003BC  0BFD               	andlw	-3
  1387  0003BE  183C               	xorwf	??_high_isr,w,c
  1388  0003C0  6E8B               	movwf	3979,c	;volatile
  1389                           
  1390                           ;interrupts.c: 68: MOT_3_count = 0;
  1391  0003C2  0E00               	movlw	0
  1392  0003C4  6E24               	movwf	_MOT_3_count+1,c
  1393  0003C6  0E00               	movlw	0
  1394  0003C8  6E23               	movwf	_MOT_3_count,c
  1395  0003CA                     i2l69:
  1396                           
  1397                           ;interrupts.c: 69: }
  1398                           ;interrupts.c: 70: }
  1399                           ;interrupts.c: 71: if (MOT_4) {
  1400  0003CA  5037               	movf	_MOT_4,w,c
  1401  0003CC  B4D8               	btfsc	status,2,c
  1402  0003CE  D064               	goto	i2l86
  1403                           
  1404                           ;interrupts.c: 72: if (MOT_4_count == 5) {
  1405  0003D0  0E05               	movlw	5
  1406  0003D2  1821               	xorwf	_MOT_4_count,w,c
  1407  0003D4  1022               	iorwf	_MOT_4_count+1,w,c
  1408  0003D6  A4D8               	btfss	status,2,c
  1409  0003D8  D05F               	goto	i2l86
  1410                           
  1411                           ;interrupts.c: 73: LATBbits.LB6 = !PORTBbits.RB6;
  1412  0003DA  BC81               	btfsc	3969,6,c	;volatile
  1413  0003DC  D003               	goto	i2u18_40
  1414  0003DE  6A3C               	clrf	??_high_isr& (0+255),c
  1415  0003E0  2A3C               	incf	??_high_isr& (0+255),f,c
  1416  0003E2  D001               	goto	i2u19_48
  1417  0003E4                     i2u18_40:
  1418  0003E4  6A3C               	clrf	??_high_isr& (0+255),c
  1419  0003E6                     i2u19_48:
  1420  0003E6  3A3C               	swapf	??_high_isr,f,c
  1421  0003E8  463C               	rlncf	??_high_isr,f,c
  1422  0003EA  463C               	rlncf	??_high_isr,f,c
  1423  0003EC  508A               	movf	3978,w,c	;volatile
  1424  0003EE  183C               	xorwf	??_high_isr,w,c
  1425  0003F0  0BBF               	andlw	-65
  1426  0003F2  183C               	xorwf	??_high_isr,w,c
  1427  0003F4  6E8A               	movwf	3978,c	;volatile
  1428                           
  1429                           ;interrupts.c: 74: MOT_4_count = 0;
  1430  0003F6  0E00               	movlw	0
  1431  0003F8  6E22               	movwf	_MOT_4_count+1,c
  1432  0003FA  0E00               	movlw	0
  1433  0003FC  6E21               	movwf	_MOT_4_count,c
  1434                           
  1435                           ;interrupts.c: 75: }
  1436                           ;interrupts.c: 76: }
  1437                           ;interrupts.c: 78: } else if (PIR1bits.RCIF) {
  1438  0003FE  D04C               	goto	i2l86
  1439  000400                     i2l63:
  1440  000400  AA9E               	btfss	3998,5,c	;volatile
  1441  000402  D01A               	goto	i2l73
  1442                           
  1443                           ;interrupts.c: 80: PIR1bits.RCIF = 0;
  1444  000404  9A9E               	bcf	3998,5,c	;volatile
  1445                           
  1446                           ;interrupts.c: 81: palabra[n] = RCREG;
  1447  000406  0E01               	movlw	low _palabra
  1448  000408  242F               	addwf	_n,w,c
  1449  00040A  6ED9               	movwf	fsr2l,c
  1450  00040C  0E00               	movlw	high _palabra
  1451  00040E  2030               	addwfc	_n+1,w,c
  1452  000410  6EDA               	movwf	fsr2h,c
  1453  000412  CFAE FFDF          	movff	4014,indf2	;volatile
  1454                           
  1455                           ;interrupts.c: 82: n++;
  1456  000416  4A2F               	infsnz	_n,f,c
  1457  000418  2A30               	incf	_n+1,f,c
  1458                           
  1459                           ;interrupts.c: 83: if (RCREG == '\n') {
  1460  00041A  0E0A               	movlw	10
  1461  00041C  18AE               	xorwf	4014,w,c	;volatile
  1462  00041E  A4D8               	btfss	status,2,c
  1463  000420  D03B               	goto	i2l86
  1464                           
  1465                           ;interrupts.c: 84: TXREG = palabra[0];
  1466  000422  C001  FFAD         	movff	_palabra,4013	;volatile
  1467  000426  A89E               	btfss	3998,4,c	;volatile
  1468  000428  D7FE               	goto	i2l76
  1469                           
  1470                           ;interrupts.c: 86: recibi = 1;
  1471  00042A  0E01               	movlw	1
  1472  00042C  6E3B               	movwf	_recibi,c
  1473                           
  1474                           ;interrupts.c: 87: n = 0;
  1475  00042E  0E00               	movlw	0
  1476  000430  6E30               	movwf	_n+1,c
  1477  000432  0E00               	movlw	0
  1478  000434  6E2F               	movwf	_n,c
  1479                           
  1480                           ;interrupts.c: 88: }
  1481                           ;interrupts.c: 89: } else if (PIR1bits.ADIF) {
  1482  000436  D030               	goto	i2l86
  1483  000438                     i2l73:
  1484  000438  AC9E               	btfss	3998,6,c	;volatile
  1485  00043A  D028               	goto	i2l79
  1486                           
  1487                           ;interrupts.c: 91: PIR1bits.ADIF = 0;
  1488  00043C  9C9E               	bcf	3998,6,c	;volatile
  1489                           
  1490                           ;interrupts.c: 92: if (ADCON0bits.CHS == 0b0000) {
  1491  00043E  30C2               	rrcf	4034,w,c	;volatile
  1492  000440  32E8               	rrcf	wreg,f,c
  1493  000442  0B0F               	andlw	15
  1494  000444  0900               	iorlw	0
  1495  000446  A4D8               	btfss	status,2,c
  1496  000448  D005               	goto	i2l80
  1497                           
  1498                           ;interrupts.c: 93: ADC_value_press = ADRES;
  1499  00044A  CFC3 F02B          	movff	4035,_ADC_value_press	;volatile
  1500  00044E  CFC4 F02C          	movff	4036,_ADC_value_press+1	;volatile
  1501                           
  1502                           ;interrupts.c: 94: } else if (ADCON0bits.CHS == 0b0001) {
  1503  000452  D00A               	goto	i2l82
  1504  000454                     i2l80:
  1505  000454  30C2               	rrcf	4034,w,c	;volatile
  1506  000456  32E8               	rrcf	wreg,f,c
  1507  000458  0B0F               	andlw	15
  1508  00045A  06E8               	decf	wreg,f,c
  1509  00045C  A4D8               	btfss	status,2,c
  1510  00045E  D004               	goto	i2l82
  1511                           
  1512                           ;interrupts.c: 95: ADC_value_dist = ADRES;
  1513  000460  CFC3 F029          	movff	4035,_ADC_value_dist	;volatile
  1514  000464  CFC4 F02A          	movff	4036,_ADC_value_dist+1	;volatile
  1515  000468                     i2l82:
  1516                           
  1517                           ;interrupts.c: 96: }
  1518                           ;interrupts.c: 97: ADCON0bits.CHS = !ADCON0bits.CHS;
  1519  000468  30C2               	rrcf	4034,w,c	;volatile
  1520  00046A  32E8               	rrcf	wreg,f,c
  1521  00046C  0B0F               	andlw	15
  1522  00046E  0900               	iorlw	0
  1523  000470  A4D8               	btfss	status,2,c
  1524  000472  D003               	goto	i2u26_40
  1525  000474  6A3C               	clrf	??_high_isr& (0+255),c
  1526  000476  2A3C               	incf	??_high_isr& (0+255),f,c
  1527  000478  D001               	goto	i2u27_48
  1528  00047A                     i2u26_40:
  1529  00047A  6A3C               	clrf	??_high_isr& (0+255),c
  1530  00047C                     i2u27_48:
  1531  00047C  463C               	rlncf	??_high_isr,f,c
  1532  00047E  463C               	rlncf	??_high_isr,f,c
  1533  000480  50C2               	movf	4034,w,c	;volatile
  1534  000482  183C               	xorwf	??_high_isr,w,c
  1535  000484  0BC3               	andlw	-61
  1536  000486  183C               	xorwf	??_high_isr,w,c
  1537  000488  6EC2               	movwf	4034,c	;volatile
  1538                           
  1539                           ;interrupts.c: 99: } else if (INTCON3bits.INT1IF) {
  1540  00048A  D006               	goto	i2l86
  1541  00048C                     i2l79:
  1542  00048C  A0F0               	btfss	intcon3,0,c	;volatile
  1543  00048E  D002               	goto	i2l84
  1544                           
  1545                           ;interrupts.c: 101: INTCON3bits.INT1IF = 0;
  1546  000490  90F0               	bcf	intcon3,0,c	;volatile
  1547                           
  1548                           ;interrupts.c: 103: } else if (INTCON3bits.INT2IF) {
  1549  000492  D002               	goto	i2l86
  1550  000494                     i2l84:
  1551  000494  B2F0               	btfsc	intcon3,1,c	;volatile
  1552                           
  1553                           ;interrupts.c: 105: INTCON3bits.INT2IF = 0;
  1554  000496  92F0               	bcf	intcon3,1,c	;volatile
  1555  000498                     i2l86:
  1556  000498  C04E  F056         	movff	??_high_isr+18,btemp+3
  1557  00049C  C04D  F055         	movff	??_high_isr+17,btemp+2
  1558  0004A0  C04C  F054         	movff	??_high_isr+16,btemp+1
  1559  0004A4  C04B  F053         	movff	??_high_isr+15,btemp
  1560  0004A8  C04A  FFF5         	movff	??_high_isr+14,tablat
  1561  0004AC  C049  FFF8         	movff	??_high_isr+13,tblptru
  1562  0004B0  C048  FFF7         	movff	??_high_isr+12,tblptrh
  1563  0004B4  C047  FFF6         	movff	??_high_isr+11,tblptrl
  1564  0004B8  C046  FFF4         	movff	??_high_isr+10,prodh
  1565  0004BC  C045  FFF3         	movff	??_high_isr+9,prodl
  1566  0004C0  C044  FFDA         	movff	??_high_isr+8,fsr2h
  1567  0004C4  C043  FFD9         	movff	??_high_isr+7,fsr2l
  1568  0004C8  C042  FFE2         	movff	??_high_isr+6,fsr1h
  1569  0004CC  C041  FFE1         	movff	??_high_isr+5,fsr1l
  1570  0004D0  C040  FFEA         	movff	??_high_isr+4,fsr0h
  1571  0004D4  C03F  FFE9         	movff	??_high_isr+3,fsr0l
  1572  0004D8  C03E  FFFB         	movff	??_high_isr+2,pclatu
  1573  0004DC  C03D  FFFA         	movff	??_high_isr+1,pclath
  1574  0004E0  9253               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  1575  0004E2  0011               	retfie		f
  1576  0004E4                     __end_of_high_isr:
  1577                           	opt stack 0
  1578  0000                     pclatu	equ	0xFFB
  1579                           pclath	equ	0xFFA
  1580                           tblptru	equ	0xFF8
  1581                           tblptrh	equ	0xFF7
  1582                           tblptrl	equ	0xFF6
  1583                           tablat	equ	0xFF5
  1584                           prodh	equ	0xFF4
  1585                           prodl	equ	0xFF3
  1586                           intcon	equ	0xFF2
  1587                           intcon2	equ	0xFF1
  1588                           intcon3	equ	0xFF0
  1589                           postinc0	equ	0xFEE
  1590                           fsr0h	equ	0xFEA
  1591                           fsr0l	equ	0xFE9
  1592                           wreg	equ	0xFE8
  1593                           postdec1	equ	0xFE5
  1594                           fsr1h	equ	0xFE2
  1595                           fsr1l	equ	0xFE1
  1596                           indf2	equ	0xFDF
  1597                           fsr2h	equ	0xFDA
  1598                           fsr2l	equ	0xFD9
  1599                           status	equ	0xFD8
  1600                           pclatu	equ	0xFFB
  1601                           pclath	equ	0xFFA
  1602                           tblptru	equ	0xFF8
  1603                           tblptrh	equ	0xFF7
  1604                           tblptrl	equ	0xFF6
  1605                           tablat	equ	0xFF5
  1606                           prodh	equ	0xFF4
  1607                           prodl	equ	0xFF3
  1608                           intcon	equ	0xFF2
  1609                           intcon2	equ	0xFF1
  1610                           intcon3	equ	0xFF0
  1611                           postinc0	equ	0xFEE
  1612                           fsr0h	equ	0xFEA
  1613                           fsr0l	equ	0xFE9
  1614                           wreg	equ	0xFE8
  1615                           postdec1	equ	0xFE5
  1616                           fsr1h	equ	0xFE2
  1617                           fsr1l	equ	0xFE1
  1618                           indf2	equ	0xFDF
  1619                           fsr2h	equ	0xFDA
  1620                           fsr2l	equ	0xFD9
  1621                           status	equ	0xFD8
  1622                           
  1623                           	psect	rparam
  1624  0000                     pclatu	equ	0xFFB
  1625                           pclath	equ	0xFFA
  1626                           tblptru	equ	0xFF8
  1627                           tblptrh	equ	0xFF7
  1628                           tblptrl	equ	0xFF6
  1629                           tablat	equ	0xFF5
  1630                           prodh	equ	0xFF4
  1631                           prodl	equ	0xFF3
  1632                           intcon	equ	0xFF2
  1633                           intcon2	equ	0xFF1
  1634                           intcon3	equ	0xFF0
  1635                           postinc0	equ	0xFEE
  1636                           fsr0h	equ	0xFEA
  1637                           fsr0l	equ	0xFE9
  1638                           wreg	equ	0xFE8
  1639                           postdec1	equ	0xFE5
  1640                           fsr1h	equ	0xFE2
  1641                           fsr1l	equ	0xFE1
  1642                           indf2	equ	0xFDF
  1643                           fsr2h	equ	0xFDA
  1644                           fsr2l	equ	0xFD9
  1645                           status	equ	0xFD8
  1646                           
  1647                           	psect	temp
  1648  000053                     btemp:
  1649                           	opt stack 0
  1650  000053                     	ds	1
  1651  0000                     int$flags	set	btemp
  1652  0000                     wtemp6	set	btemp+1
  1653                           pclatu	equ	0xFFB
  1654                           pclath	equ	0xFFA
  1655                           tblptru	equ	0xFF8
  1656                           tblptrh	equ	0xFF7
  1657                           tblptrl	equ	0xFF6
  1658                           tablat	equ	0xFF5
  1659                           prodh	equ	0xFF4
  1660                           prodl	equ	0xFF3
  1661                           intcon	equ	0xFF2
  1662                           intcon2	equ	0xFF1
  1663                           intcon3	equ	0xFF0
  1664                           postinc0	equ	0xFEE
  1665                           fsr0h	equ	0xFEA
  1666                           fsr0l	equ	0xFE9
  1667                           wreg	equ	0xFE8
  1668                           postdec1	equ	0xFE5
  1669                           fsr1h	equ	0xFE2
  1670                           fsr1l	equ	0xFE1
  1671                           indf2	equ	0xFDF
  1672                           fsr2h	equ	0xFDA
  1673                           fsr2l	equ	0xFD9
  1674                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        4
    BSS         59
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     19      82
    BANK0           160      8       8
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->___wmul

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    2392
                                              6 BANK0      2     2      0
                _ConfigureOscillator
                            _InitApp
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4    2392
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigureOscillator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _high_isr                                            19    19      0       0
                                              0 COMRAM    19    19      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfigureOscillator
   _InitApp
   ___wmul

 _high_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      8       8       5        5.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     13      52       1       87.2%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      5A      20        0.0%
DATA                 0      0      5A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Mon Aug 12 16:06:10 2019

                           _n 002F           ___wmul@multiplicand 0062                   __CFG_BORV$3 000000  
                __CFG_CP0$OFF 000000                  __CFG_CP1$OFF 000000                  __CFG_CP2$OFF 000000  
                __CFG_CP3$OFF 000000                           l150 001A                           l161 0294  
                         l153 0050                           l155 02A6                           l156 00AC  
                         l158 0280                  __CFG_CPB$OFF 000000                           _PR2 000FCB  
                __CFG_CPD$OFF 000000                           u605 0026                           u606 0028  
                         u615 0030                           u616 0032                           u625 003A  
                         u650 0054                           u626 003C                           u635 0044  
                         u636 0046                           u680 0070                           u690 0072  
                         _RX9 007D5E                           _TX9 007D66                  __CFG_BOR$OFF 000000  
                         wreg 000FE8                  __CFG_LVP$OFF 000000                  __CFG_WDT$OFF 000000  
                        _BRGH 007D62                          _CREN 007D5C                          _LATA 000F89  
                        _LATB 000F8A                          _LATC 000F8B                          _RCIE 007CED  
                        i2l63 0400                          i2l80 0454                          i2l73 0438  
                        i2l65 0368                          i2l82 0468                          i2l67 039A  
                        i2l84 0494                          i2l76 0426                          i2l69 03CA  
                        i2l86 0498                          i2l79 048C                          _TMR0 000FD6  
                        _SPEN 007D5F                          _TXIE 007CEC                          _TXIF 007CF4  
                        _TXEN 007D65                          _SYNC 007D64                          _main 0012  
                        fsr0h 000FEA                          fsr1h 000FE2                          fsr2h 000FDA  
                        fsr0l 000FE9                          indf2 000FDF                          fsr1l 000FE1  
                        fsr2l 000FD9                          btemp 0053                          prodh 000FF4  
                        prodl 000FF3                          start 000E                 __CFG_IESO$OFF 000000  
               __CFG_MCLRE$ON 000000                  ___param_bank 000000               __end_of_InitApp 0586  
               __CFG_PLLDIV$1 000000                __CFG_CCP2MX$ON 000000                         ?_main 003C  
                       _ADRES 000FC3                         _BRG16 007DC3                         _DIR_1 0035  
                       _DIR_2 0034                         _DIR_3 0033                         _DIR_4 0032  
                       _RCREG 000FAE                         _MOT_1 003A                         _MOT_2 0039  
                       _MOT_3 0038                         _MOT_4 0037                         _SPBRG 000FAF  
                       _PORTA 000F80                         _PORTB 000F81                         _PORTC 000F82  
               __CFG_USBDIV$1 000000                         _TXREG 000FAD           _ConfigureOscillator 05E4  
               __CFG_PWRT$OFF 000000                 __CFG_WRT0$OFF 000000                 __CFG_WRT1$OFF 000000  
               __CFG_WRT2$OFF 000000                 __CFG_WRT3$OFF 000000                __CFG_EBTR0$OFF 000000  
              __CFG_FCMEN$OFF 000000                __CFG_EBTR1$OFF 000000                __CFG_EBTR2$OFF 000000  
              __CFG_EBTR3$OFF 000000                 __CFG_WRTB$OFF 000000                 __CFG_WRTC$OFF 000000  
               __CFG_WRTD$OFF 000000                __CFG_EBTRB$OFF 000000                         _speed 0015  
                       _turns 0017                         pclath 000FFA                         tablat 000FF5  
                       status 000FD8                         wtemp6 0054          ?_ConfigureOscillator 003C  
             __initialization 0586                  __end_of_main 02AE                        ??_main 0066  
               __activetblptr 000000                        _ADCON1 000FC1                        _ADCON2 000FC0  
                      _CCPR1L 000FBE                        _GODONE 007E11                        i2u2_40 030C  
                      i2u3_48 030E                        i2u6_40 0350                        i2u7_48 0352  
                   ??_InitApp 0060         ??_ConfigureOscillator 0060                __CFG_XINST$OFF 000000  
            __end_of_high_isr 04E4                        ___wmul 05BC                        _length 0019  
                      _recibi 003B                        clear_0 05AC                        _motor1 0051  
                      _motor2 001F                  __pdataCOMRAM 004F                        tblptrh 000FF7  
                      tblptrl 000FF6                        tblptru 000FF8                    __accesstop 0060  
     __end_of__initialization 05B2               __CFG_PBADEN$OFF 000000                 ___rparam_used 000001  
              __pcstackCOMRAM 003C                       ?___wmul 0060                       i2u10_40 0382  
                     i2u11_48 0384                       i2u14_40 03B4                       i2u15_48 03B6  
                     i2u26_40 047A                       i2u18_40 03E4                       i2u27_48 047C  
                     i2u19_48 03E6                     ?_high_isr 003C               __CFG_VREGEN$OFF 000000  
                     _InitApp 04E4                       __Hparam 0000                       __Lparam 0000  
             __size_of___wmul 0028                       _caliber 001D               __CFG_STVREN$OFF 000000  
                     __pcinit 0586                       __ramtop 0800                       __ptext0 0012  
                     __ptext1 05BC                       __ptext2 04E4                       __ptext3 05E4  
                   _T0CONbits 000FD5                       _palabra 0001                     _T2CONbits 000FCA  
                  ??_high_isr 003C                __pintcode_body 02AE          end_of_initialization 05B2  
                     int_func 02AE                       postdec1 000FE5                       postinc0 000FEE  
                   _PORTAbits 000F80                     _PORTBbits 000F81                     _PORTCbits 000F82  
                   _TRISAbits 000F92                     _TRISBbits 000F93                     _TRISCbits 000F94  
 __end_of_ConfigureOscillator 05F0                   _CCP1CONbits 000FBD                __end_of___wmul 05E4  
               __pidataCOMRAM 05F0           start_initialization 0586                      ??___wmul 0064  
            __CFG_LPT1OSC$OFF 000000                   __pbssCOMRAM 0001                 __pcstackBANK0 0060  
           __size_of_high_isr 04DC                      ?_InitApp 003C                     __pintcode 0008  
                   _busy_flag 0031                ___wmul@product 0064                      _LATAbits 000F89  
                    _LATBbits 000F8A                      _LATCbits 000F8B                      _PIE1bits 000F9D  
                    _RA0state 0036                      _PIR1bits 000F9E                      _RCONbits 000FD0  
            __CFG_WDTPS$32768 000000                    _ADCON0bits 000FC2             ___wmul@multiplier 0060  
                    _PWM_duty 004F               _ADC_value_press 002B                   _INTCON2bits 000FF1  
                 _INTCON3bits 000FF0                     copy_data0 059A              __size_of_InitApp 00A2  
                    __Hrparam 0000                      __Lrparam 0000                      _diameter 001B  
                    _high_isr 0008                 __size_of_main 029C  __size_of_ConfigureOscillator 000C  
                    _overflow 002D                      int$flags 0053                _ADC_value_dist 0029  
       __CFG_CPUDIV$OSC1_PLL2 000000                    _INTCONbits 000FF2                   _MOT_1_count 0027  
                 _MOT_2_count 0025                   _MOT_3_count 0023                   _MOT_4_count 0021  
                    intlevel2 0000                    _OSCCONbits 000FD3           __CFG_FOSC$INTOSC_EC 000000  

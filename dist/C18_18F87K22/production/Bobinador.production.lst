

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Mon Aug 26 06:47:06 2019

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F2550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    25                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    30                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    31                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    32  0000                     
    33                           ; Version 1.45
    34                           ; Generated 16/11/2017 GMT
    35                           ; 
    36                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution.
    50                           ; 
    51                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    52                           ;        software without specific prior written permission.
    53                           ; 
    54                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    55                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    56                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    57                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    58                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    59                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    60                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    61                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    62                           ; 
    63                           ; 
    64                           ; Code-generator required, PIC18F2550 Definitions
    65                           ; 
    66                           ; SFR Addresses
    67  0000                     
    68                           	psect	idataCOMRAM
    69  00095E                     __pidataCOMRAM:
    70                           	opt stack 0
    71                           
    72                           ;initializer for _PWM_duty
    73  00095E  0032               	dw	50
    74                           
    75                           ;initializer for _count_3
    76  000960  0084               	dw	132
    77                           
    78                           ;initializer for _count_1
    79  000962  0002               	dw	2
    80                           
    81                           ;initializer for _length
    82  000964  2422               	dw	9250
    83                           
    84                           ;initializer for _turns
    85  000966  0FA0               	dw	4000
    86                           
    87                           ;initializer for _zero_flag
    88  000968  01                 	db	1
    89                           
    90                           ;initializer for _MOT_4
    91  000969  01                 	db	1
    92                           
    93                           	psect	idataBANK0
    94  000976                     __pidataBANK0:
    95                           	opt stack 0
    96                           
    97                           ;initializer for _motor1
    98  000976  0001               	dw	1
    99                           
   100                           ;initializer for _count_4
   101  000978  0005               	dw	5
   102                           
   103                           ;initializer for _count_2
   104  00097A  0001               	dw	1
   105  0000                     _ADRES	set	4035
   106  0000                     _TMR1	set	4046
   107  0000                     _TMR0	set	4054
   108  0000                     _T2CONbits	set	4042
   109  0000                     _CCP1CONbits	set	4029
   110  0000                     _PR2	set	4043
   111  0000                     _SPBRG	set	4015
   112  0000                     _IPR1bits	set	3999
   113  0000                     _INTCON2bits	set	4081
   114  0000                     _RCONbits	set	4048
   115  0000                     _TRISBbits	set	3987
   116  0000                     _TRISCbits	set	3988
   117  0000                     _PIE1bits	set	3997
   118  0000                     _ADCON2	set	4032
   119  0000                     _ADCON0bits	set	4034
   120  0000                     _TRISAbits	set	3986
   121  0000                     _ADCON1	set	4033
   122  0000                     _LATC	set	3979
   123  0000                     _PORTC	set	3970
   124  0000                     _LATB	set	3978
   125  0000                     _PORTB	set	3969
   126  0000                     _LATA	set	3977
   127  0000                     _PORTA	set	3968
   128  0000                     _OSCCONbits	set	4051
   129  0000                     _T0CONbits	set	4053
   130  0000                     _T1CONbits	set	4045
   131  0000                     _TXREG	set	4013
   132  0000                     _CCPR1L	set	4030
   133  0000                     _INTCON3bits	set	4080
   134  0000                     _RCREG	set	4014
   135  0000                     _PORTBbits	set	3969
   136  0000                     _LATBbits	set	3978
   137  0000                     _PIR1bits	set	3998
   138  0000                     _PORTCbits	set	3970
   139  0000                     _LATCbits	set	3979
   140  0000                     _PORTAbits	set	3968
   141  0000                     _LATAbits	set	3977
   142  0000                     _INTCONbits	set	4082
   143  0000                     _TXIE	set	31980
   144  0000                     _RCIE	set	31981
   145  0000                     _RX9	set	32094
   146  0000                     _TX9	set	32102
   147  0000                     _CREN	set	32092
   148  0000                     _TXEN	set	32101
   149  0000                     _SYNC	set	32100
   150  0000                     _SPEN	set	32095
   151  0000                     _BRG16	set	32195
   152  0000                     _BRGH	set	32098
   153  0000                     _TXIF	set	31988
   154  0000                     _GODONE	set	32273
   155                           
   156                           ; #config settings
   157  0000                     
   158                           	psect	cinit
   159  0007A8                     __pcinit:
   160                           	opt stack 0
   161  0007A8                     start_initialization:
   162                           	opt stack 0
   163  0007A8                     __initialization:
   164                           	opt stack 0
   165                           
   166                           ; Initialize objects allocated to BANK0 (6 bytes)
   167                           ; load TBLPTR registers with __pidataBANK0
   168  0007A8  0E76               	movlw	low __pidataBANK0
   169  0007AA  6EF6               	movwf	tblptrl,c
   170  0007AC  0E09               	movlw	high __pidataBANK0
   171  0007AE  6EF7               	movwf	tblptrh,c
   172  0007B0  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   173  0007B2  6EF8               	movwf	tblptru,c
   174  0007B4  EE00  F08B         	lfsr	0,__pdataBANK0
   175  0007B8  EE10 F006          	lfsr	1,6
   176  0007BC                     copy_data0:
   177  0007BC  0009               	tblrd		*+
   178  0007BE  CFF5 FFEE          	movff	tablat,postinc0
   179  0007C2  50E5               	movf	postdec1,w,c
   180  0007C4  50E1               	movf	fsr1l,w,c
   181  0007C6  E1FA               	bnz	copy_data0
   182                           
   183                           ; Initialize objects allocated to COMRAM (12 bytes)
   184                           ; load TBLPTR registers with __pidataCOMRAM
   185  0007C8  0E5E               	movlw	low __pidataCOMRAM
   186  0007CA  6EF6               	movwf	tblptrl,c
   187  0007CC  0E09               	movlw	high __pidataCOMRAM
   188  0007CE  6EF7               	movwf	tblptrh,c
   189  0007D0  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   190  0007D2  6EF8               	movwf	tblptru,c
   191  0007D4  EE00  F048         	lfsr	0,__pdataCOMRAM
   192  0007D8  EE10 F00C          	lfsr	1,12
   193  0007DC                     copy_data1:
   194  0007DC  0009               	tblrd		*+
   195  0007DE  CFF5 FFEE          	movff	tablat,postinc0
   196  0007E2  50E5               	movf	postdec1,w,c
   197  0007E4  50E1               	movf	fsr1l,w,c
   198  0007E6  E1FA               	bnz	copy_data1
   199                           
   200                           ; Clear objects allocated to BANK0 (35 bytes)
   201  0007E8  EE00  F060         	lfsr	0,__pbssBANK0
   202  0007EC  0E23               	movlw	35
   203  0007EE                     clear_0:
   204  0007EE  6AEE               	clrf	postinc0,c
   205  0007F0  06E8               	decf	wreg,f,c
   206  0007F2  E1FD               	bnz	clear_0
   207                           
   208                           ; Clear objects allocated to COMRAM (39 bytes)
   209  0007F4  EE00  F001         	lfsr	0,__pbssCOMRAM
   210  0007F8  0E27               	movlw	39
   211  0007FA                     clear_1:
   212  0007FA  6AEE               	clrf	postinc0,c
   213  0007FC  06E8               	decf	wreg,f,c
   214  0007FE  E1FD               	bnz	clear_1
   215  000800                     end_of_initialization:
   216                           	opt stack 0
   217  000800                     __end_of__initialization:
   218                           	opt stack 0
   219  000800  9054               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   220  000802  9254               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   221  000804  0E00               	movlw	low (__Lmediumconst shr (0+16))
   222  000806  6EF8               	movwf	tblptru,c
   223  000808  0100               	movlb	0
   224  00080A  EF09  F000         	goto	_main	;jump to C main() function
   225                           tblptru	equ	0xFF8
   226                           tblptrh	equ	0xFF7
   227                           tblptrl	equ	0xFF6
   228                           tablat	equ	0xFF5
   229                           postinc0	equ	0xFEE
   230                           wreg	equ	0xFE8
   231                           postdec1	equ	0xFE5
   232                           fsr1l	equ	0xFE1
   233                           
   234                           	psect	bssCOMRAM
   235  000001                     __pbssCOMRAM:
   236                           	opt stack 0
   237  000001                     _caliber:
   238                           	opt stack 0
   239  000001                     	ds	2
   240  000003                     _turns_count:
   241                           	opt stack 0
   242  000003                     	ds	2
   243  000005                     _mot_4_steps:
   244                           	opt stack 0
   245  000005                     	ds	2
   246  000007                     _mot_3_steps:
   247                           	opt stack 0
   248  000007                     	ds	2
   249  000009                     _mot_1_steps:
   250                           	opt stack 0
   251  000009                     	ds	2
   252  00000B                     _MOT_3_count:
   253                           	opt stack 0
   254  00000B                     	ds	2
   255  00000D                     _MOT_1_count:
   256                           	opt stack 0
   257  00000D                     	ds	2
   258  00000F                     _ADC_value_press:
   259                           	opt stack 0
   260  00000F                     	ds	2
   261  000011                     _overflow:
   262                           	opt stack 0
   263  000011                     	ds	2
   264  000013                     _n:
   265                           	opt stack 0
   266  000013                     	ds	2
   267  000015                     _ADC_previous_value:
   268                           	opt stack 0
   269  000015                     	ds	2
   270  000017                     _steps_4:
   271                           	opt stack 0
   272  000017                     	ds	2
   273  000019                     _unwind_flag:
   274                           	opt stack 0
   275  000019                     	ds	1
   276  00001A                     _enable:
   277                           	opt stack 0
   278  00001A                     	ds	1
   279  00001B                     _finish_flag:
   280                           	opt stack 0
   281  00001B                     	ds	1
   282  00001C                     _param_flag:
   283                           	opt stack 0
   284  00001C                     	ds	1
   285  00001D                     _DIR_4:
   286                           	opt stack 0
   287  00001D                     	ds	1
   288  00001E                     _DIR_2:
   289                           	opt stack 0
   290  00001E                     	ds	1
   291  00001F                     _DIR_1:
   292                           	opt stack 0
   293  00001F                     	ds	1
   294  000020                     _RA0state:
   295                           	opt stack 0
   296  000020                     	ds	1
   297  000021                     _recibi:
   298                           	opt stack 0
   299  000021                     	ds	1
   300  000022                     _winding:
   301                           	opt stack 0
   302  000022                     	ds	1
   303  000023                     _move_4:
   304                           	opt stack 0
   305  000023                     	ds	1
   306  000024                     _MOT_2:
   307                           	opt stack 0
   308  000024                     	ds	1
   309  000025                     _DIR_3:
   310                           	opt stack 0
   311  000025                     	ds	1
   312  000026                     _MOT_3:
   313                           	opt stack 0
   314  000026                     	ds	1
   315  000027                     _MOT_1:
   316                           	opt stack 0
   317  000027                     	ds	1
   318                           tblptru	equ	0xFF8
   319                           tblptrh	equ	0xFF7
   320                           tblptrl	equ	0xFF6
   321                           tablat	equ	0xFF5
   322                           postinc0	equ	0xFEE
   323                           wreg	equ	0xFE8
   324                           postdec1	equ	0xFE5
   325                           fsr1l	equ	0xFE1
   326                           
   327                           	psect	dataCOMRAM
   328  000048                     __pdataCOMRAM:
   329                           	opt stack 0
   330  000048                     _PWM_duty:
   331                           	opt stack 0
   332  000048                     	ds	2
   333  00004A                     _count_3:
   334                           	opt stack 0
   335  00004A                     	ds	2
   336  00004C                     _count_1:
   337                           	opt stack 0
   338  00004C                     	ds	2
   339  00004E                     _length:
   340                           	opt stack 0
   341  00004E                     	ds	2
   342  000050                     _turns:
   343                           	opt stack 0
   344  000050                     	ds	2
   345  000052                     _zero_flag:
   346                           	opt stack 0
   347  000052                     	ds	1
   348  000053                     _MOT_4:
   349                           	opt stack 0
   350  000053                     	ds	1
   351                           tblptru	equ	0xFF8
   352                           tblptrh	equ	0xFF7
   353                           tblptrl	equ	0xFF6
   354                           tablat	equ	0xFF5
   355                           postinc0	equ	0xFEE
   356                           wreg	equ	0xFE8
   357                           postdec1	equ	0xFE5
   358                           fsr1l	equ	0xFE1
   359                           
   360                           	psect	bssBANK0
   361  000060                     __pbssBANK0:
   362                           	opt stack 0
   363  000060                     _palabra:
   364                           	opt stack 0
   365  000060                     	ds	20
   366  000074                     _send:
   367                           	opt stack 0
   368  000074                     	ds	7
   369  00007B                     _mot_4_step_count:
   370                           	opt stack 0
   371  00007B                     	ds	2
   372  00007D                     _motor2:
   373                           	opt stack 0
   374  00007D                     	ds	2
   375  00007F                     _MOT_4_count:
   376                           	opt stack 0
   377  00007F                     	ds	2
   378  000081                     _MOT_2_count:
   379                           	opt stack 0
   380  000081                     	ds	2
   381                           tblptru	equ	0xFF8
   382                           tblptrh	equ	0xFF7
   383                           tblptrl	equ	0xFF6
   384                           tablat	equ	0xFF5
   385                           postinc0	equ	0xFEE
   386                           wreg	equ	0xFE8
   387                           postdec1	equ	0xFE5
   388                           fsr1l	equ	0xFE1
   389                           
   390                           	psect	dataBANK0
   391  00008B                     __pdataBANK0:
   392                           	opt stack 0
   393  00008B                     _motor1:
   394                           	opt stack 0
   395  00008B                     	ds	2
   396  00008D                     _count_4:
   397                           	opt stack 0
   398  00008D                     	ds	2
   399  00008F                     _count_2:
   400                           	opt stack 0
   401  00008F                     	ds	2
   402                           tblptru	equ	0xFF8
   403                           tblptrh	equ	0xFF7
   404                           tblptrl	equ	0xFF6
   405                           tablat	equ	0xFF5
   406                           postinc0	equ	0xFEE
   407                           wreg	equ	0xFE8
   408                           postdec1	equ	0xFE5
   409                           fsr1l	equ	0xFE1
   410                           
   411                           	psect	cstackBANK0
   412  000083                     __pcstackBANK0:
   413                           	opt stack 0
   414  000083                     ?___wmul:
   415                           	opt stack 0
   416  000083                     trans_Char@out:
   417                           	opt stack 0
   418  000083                     speed_select@var:
   419                           	opt stack 0
   420  000083                     ___wmul@multiplier:
   421                           	opt stack 0
   422                           
   423                           ; 2 bytes @ 0x0
   424  000083                     	ds	2
   425  000085                     ??_speed_select:
   426  000085                     ___wmul@multiplicand:
   427                           	opt stack 0
   428                           
   429                           ; 2 bytes @ 0x2
   430  000085                     	ds	2
   431  000087                     ___wmul@product:
   432                           	opt stack 0
   433                           
   434                           ; 2 bytes @ 0x4
   435  000087                     	ds	2
   436  000089                     ??_main:
   437                           
   438                           ; 1 bytes @ 0x6
   439  000089                     	ds	2
   440                           tblptru	equ	0xFF8
   441                           tblptrh	equ	0xFF7
   442                           tblptrl	equ	0xFF6
   443                           tablat	equ	0xFF5
   444                           postinc0	equ	0xFEE
   445                           wreg	equ	0xFE8
   446                           postdec1	equ	0xFE5
   447                           fsr1l	equ	0xFE1
   448                           
   449                           	psect	cstackCOMRAM
   450  000028                     __pcstackCOMRAM:
   451                           	opt stack 0
   452  000028                     ?i2___wmul:
   453                           	opt stack 0
   454  000028                     i2___wmul@multiplier:
   455                           	opt stack 0
   456                           
   457                           ; 2 bytes @ 0x0
   458  000028                     	ds	2
   459  00002A                     i2___wmul@multiplicand:
   460                           	opt stack 0
   461                           
   462                           ; 2 bytes @ 0x2
   463  00002A                     	ds	2
   464  00002C                     i2___wmul@product:
   465                           	opt stack 0
   466                           
   467                           ; 2 bytes @ 0x4
   468  00002C                     	ds	2
   469  00002E                     ?_mot_3_step_count:
   470                           	opt stack 0
   471  00002E                     mot_3_step_count@l:
   472                           	opt stack 0
   473                           
   474                           ; 2 bytes @ 0x6
   475  00002E                     	ds	2
   476  000030                     mot_3_step_count@ms:
   477                           	opt stack 0
   478                           
   479                           ; 2 bytes @ 0x8
   480  000030                     	ds	2
   481  000032                     ??_mot_3_step_count:
   482                           
   483                           ; 1 bytes @ 0xA
   484  000032                     	ds	2
   485  000034                     ??_high_isr:
   486                           
   487                           ; 1 bytes @ 0xC
   488  000034                     	ds	20
   489                           tblptru	equ	0xFF8
   490                           tblptrh	equ	0xFF7
   491                           tblptrl	equ	0xFF6
   492                           tablat	equ	0xFF5
   493                           postinc0	equ	0xFEE
   494                           wreg	equ	0xFE8
   495                           postdec1	equ	0xFE5
   496                           fsr1l	equ	0xFE1
   497                           
   498 ;;
   499 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   500 ;;
   501 ;; *************** function _main *****************
   502 ;; Defined at:
   503 ;;		line 90 in file "main.c"
   504 ;; Parameters:    Size  Location     Type
   505 ;;		None
   506 ;; Auto vars:     Size  Location     Type
   507 ;;		None
   508 ;; Return value:  Size  Location     Type
   509 ;;                  1    wreg      void 
   510 ;; Registers used:
   511 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   512 ;; Tracked objects:
   513 ;;		On entry : 0/0
   514 ;;		On exit  : 0/0
   515 ;;		Unchanged: 0/0
   516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   517 ;;      Params:         0       0       0       0       0       0       0       0       0
   518 ;;      Locals:         0       0       0       0       0       0       0       0       0
   519 ;;      Temps:          0       2       0       0       0       0       0       0       0
   520 ;;      Totals:         0       2       0       0       0       0       0       0       0
   521 ;;Total ram usage:        2 bytes
   522 ;; Hardware stack levels required when called:    4
   523 ;; This function calls:
   524 ;;		_ConfigureOscillator
   525 ;;		_InitApp
   526 ;;		___wmul
   527 ;;		_finish
   528 ;;		_reset
   529 ;;		_speed_select
   530 ;;		_trans_Char
   531 ;;		_unwind
   532 ;;		_zero_mark
   533 ;; This function is called by:
   534 ;;		Startup code after reset
   535 ;; This function uses a non-reentrant model
   536 ;;
   537                           
   538                           	psect	text0
   539  000012                     __ptext0:
   540                           	opt stack 0
   541  000012                     _main:
   542                           	opt stack 27
   543                           
   544                           ;main.c: 92: ConfigureOscillator();
   545                           
   546                           ;incstack = 0
   547  000012  ECB5  F004         	call	_ConfigureOscillator	;wreg free
   548                           
   549                           ;main.c: 95: InitApp();
   550  000016  EC76  F003         	call	_InitApp	;wreg free
   551  00001A                     
   552                           ;main.c: 98: CCPR1L = PWM_duty;
   553  00001A  C048  FFBE         	movff	_PWM_duty,4030	;volatile
   554                           
   555                           ;main.c: 100: LATAbits.LA2 = DIR_1;
   556  00001E  B01F               	btfsc	_DIR_1,0,c
   557  000020  D002               	bra	u1795
   558  000022  9489               	bcf	3977,2,c	;volatile
   559  000024  D001               	bra	u1796
   560  000026                     u1795:
   561  000026  8489               	bsf	3977,2,c	;volatile
   562  000028                     u1796:
   563                           
   564                           ;main.c: 101: LATAbits.LA4 = DIR_2;
   565  000028  B01E               	btfsc	_DIR_2,0,c
   566  00002A  D002               	bra	u1805
   567  00002C  9889               	bcf	3977,4,c	;volatile
   568  00002E  D001               	bra	u1806
   569  000030                     u1805:
   570  000030  8889               	bsf	3977,4,c	;volatile
   571  000032                     u1806:
   572                           
   573                           ;main.c: 102: LATCbits.LC0 = DIR_3;
   574  000032  B025               	btfsc	_DIR_3,0,c
   575  000034  D002               	bra	u1815
   576  000036  908B               	bcf	3979,0,c	;volatile
   577  000038  D001               	bra	u1816
   578  00003A                     u1815:
   579  00003A  808B               	bsf	3979,0,c	;volatile
   580  00003C                     u1816:
   581                           
   582                           ;main.c: 103: LATBbits.LB7 = DIR_4;
   583  00003C  B01D               	btfsc	_DIR_4,0,c
   584  00003E  D002               	bra	u1825
   585  000040  9E8A               	bcf	3978,7,c	;volatile
   586  000042  D001               	bra	u1826
   587  000044                     u1825:
   588  000044  8E8A               	bsf	3978,7,c	;volatile
   589  000046                     u1826:
   590                           
   591                           ;main.c: 104: LATBbits.LB5 = enable;
   592  000046  B01A               	btfsc	_enable,0,c
   593  000048  D002               	bra	u1835
   594  00004A  9A8A               	bcf	3978,5,c	;volatile
   595  00004C  D001               	bra	u1836
   596  00004E                     u1835:
   597  00004E  8A8A               	bsf	3978,5,c	;volatile
   598  000050                     u1836:
   599                           
   600                           ;main.c: 105: LATBbits.LB4 = !enable;
   601  000050  501A               	movf	_enable,w,c
   602  000052  A4D8               	btfss	status,2,c
   603  000054  D004               	goto	u1840
   604  000056  0100               	movlb	0	; () banked
   605  000058  6B89               	clrf	??_main& (0+255),b
   606  00005A  2B89               	incf	??_main& (0+255),f,b
   607  00005C  D002               	goto	u1858
   608  00005E                     u1840:
   609  00005E  0100               	movlb	0	; () banked
   610  000060  6B89               	clrf	??_main& (0+255),b
   611  000062                     u1858:
   612  000062  3B89               	swapf	??_main& (0+255),f,b
   613  000064  508A               	movf	3978,w,c	;volatile
   614  000066  1989               	xorwf	??_main& (0+255),w,b
   615  000068  0BEF               	andlw	-17
   616  00006A  1989               	xorwf	??_main& (0+255),w,b
   617  00006C  6E8A               	movwf	3978,c	;volatile
   618                           
   619                           ; BSR set to: 0
   620                           ;main.c: 107: if (recibi == 1) {
   621  00006E  0421               	decf	_recibi,w,c
   622  000070  A4D8               	btfss	status,2,c
   623  000072  D1CA               	goto	l221
   624                           
   625                           ; BSR set to: 0
   626                           ;main.c: 109: recibi = 0;
   627  000074  0E00               	movlw	0
   628  000076  6E21               	movwf	_recibi,c
   629                           
   630                           ; BSR set to: 0
   631                           ;main.c: 111: if (palabra[0] == 'A') {
   632  000078  0E41               	movlw	65
   633  00007A  1960               	xorwf	_palabra& (0+255),w,b
   634  00007C  A4D8               	btfss	status,2,c
   635  00007E  D09B               	goto	l222
   636                           
   637                           ; BSR set to: 0
   638                           ;main.c: 113: caliber = ((palabra[1] - 48) * 10) + ((palabra[2] - 48));
   639  000080  0ED0               	movlw	208
   640  000082  2561               	addwf	(_palabra+1)& (0+255),w,b
   641  000084  6F83               	movwf	___wmul@multiplier& (0+255),b
   642  000086  6B84               	clrf	(___wmul@multiplier+1)& (0+255),b
   643  000088  0EFF               	movlw	255
   644  00008A  2384               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   645  00008C  0E00               	movlw	0
   646  00008E  6F86               	movwf	(___wmul@multiplicand+1)& (0+255),b
   647  000090  0E0A               	movlw	10
   648  000092  6F85               	movwf	___wmul@multiplicand& (0+255),b
   649  000094  EC30  F004         	call	___wmul	;wreg free
   650  000098  0100               	movlb	0	; () banked
   651  00009A  5162               	movf	(_palabra+2)& (0+255),w,b
   652  00009C  6F89               	movwf	??_main& (0+255),b
   653  00009E  6B8A               	clrf	(??_main+1)& (0+255),b
   654  0000A0  5183               	movf	?___wmul& (0+255),w,b
   655  0000A2  2789               	addwf	??_main& (0+255),f,b
   656  0000A4  5184               	movf	(?___wmul+1)& (0+255),w,b
   657  0000A6  238A               	addwfc	(??_main+1)& (0+255),f,b
   658  0000A8  0ED0               	movlw	208
   659  0000AA  2589               	addwf	??_main& (0+255),w,b
   660  0000AC  6E01               	movwf	_caliber,c
   661  0000AE  0EFF               	movlw	255
   662  0000B0  218A               	addwfc	(??_main+1)& (0+255),w,b
   663  0000B2  6E02               	movwf	_caliber+1,c
   664                           
   665                           ;main.c: 114: length = ((palabra[3] - 48) * 1000) + ((palabra[4] - 48) * 100) + ((palabr
      +                          a[5] - 48) * 10) + ((palabra[6] - 48));
   666  0000B4  0ED0               	movlw	208
   667  0000B6  2563               	addwf	(_palabra+3)& (0+255),w,b
   668  0000B8  6F83               	movwf	___wmul@multiplier& (0+255),b
   669  0000BA  6B84               	clrf	(___wmul@multiplier+1)& (0+255),b
   670  0000BC  0EFF               	movlw	255
   671  0000BE  2384               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   672  0000C0  0E03               	movlw	3
   673  0000C2  6F86               	movwf	(___wmul@multiplicand+1)& (0+255),b
   674  0000C4  0EE8               	movlw	232
   675  0000C6  6F85               	movwf	___wmul@multiplicand& (0+255),b
   676  0000C8  EC30  F004         	call	___wmul	;wreg free
   677  0000CC  0100               	movlb	0	; () banked
   678  0000CE  5166               	movf	(_palabra+6)& (0+255),w,b
   679  0000D0  6F89               	movwf	??_main& (0+255),b
   680  0000D2  6B8A               	clrf	(??_main+1)& (0+255),b
   681  0000D4  5183               	movf	?___wmul& (0+255),w,b
   682  0000D6  2789               	addwf	??_main& (0+255),f,b
   683  0000D8  5184               	movf	(?___wmul+1)& (0+255),w,b
   684  0000DA  238A               	addwfc	(??_main+1)& (0+255),f,b
   685  0000DC  0ED0               	movlw	208
   686  0000DE  2564               	addwf	(_palabra+4)& (0+255),w,b
   687  0000E0  6F83               	movwf	___wmul@multiplier& (0+255),b
   688  0000E2  6B84               	clrf	(___wmul@multiplier+1)& (0+255),b
   689  0000E4  0EFF               	movlw	255
   690  0000E6  2384               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   691  0000E8  0E00               	movlw	0
   692  0000EA  6F86               	movwf	(___wmul@multiplicand+1)& (0+255),b
   693  0000EC  0E64               	movlw	100
   694  0000EE  6F85               	movwf	___wmul@multiplicand& (0+255),b
   695  0000F0  EC30  F004         	call	___wmul	;wreg free
   696  0000F4  0100               	movlb	0	; () banked
   697  0000F6  5183               	movf	?___wmul& (0+255),w,b
   698  0000F8  2789               	addwf	??_main& (0+255),f,b
   699  0000FA  5184               	movf	(?___wmul+1)& (0+255),w,b
   700  0000FC  238A               	addwfc	(??_main+1)& (0+255),f,b
   701  0000FE  0ED0               	movlw	208
   702  000100  2565               	addwf	(_palabra+5)& (0+255),w,b
   703  000102  6F83               	movwf	___wmul@multiplier& (0+255),b
   704  000104  6B84               	clrf	(___wmul@multiplier+1)& (0+255),b
   705  000106  0EFF               	movlw	255
   706  000108  2384               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   707  00010A  0E00               	movlw	0
   708  00010C  6F86               	movwf	(___wmul@multiplicand+1)& (0+255),b
   709  00010E  0E0A               	movlw	10
   710  000110  6F85               	movwf	___wmul@multiplicand& (0+255),b
   711  000112  EC30  F004         	call	___wmul	;wreg free
   712  000116  0100               	movlb	0	; () banked
   713  000118  5183               	movf	?___wmul& (0+255),w,b
   714  00011A  2789               	addwf	??_main& (0+255),f,b
   715  00011C  5184               	movf	(?___wmul+1)& (0+255),w,b
   716  00011E  238A               	addwfc	(??_main+1)& (0+255),f,b
   717  000120  0ED0               	movlw	208
   718  000122  2589               	addwf	??_main& (0+255),w,b
   719  000124  6E4E               	movwf	_length,c
   720  000126  0EFF               	movlw	255
   721  000128  218A               	addwfc	(??_main+1)& (0+255),w,b
   722  00012A  6E4F               	movwf	_length+1,c
   723                           
   724                           ;main.c: 115: turns = ((palabra[7] - 48) * 1000) + ((palabra[8] - 48) * 100) + ((palabra
      +                          [9] - 48) * 10) + ((palabra[10] - 48));
   725  00012C  0ED0               	movlw	208
   726  00012E  2567               	addwf	(_palabra+7)& (0+255),w,b
   727  000130  6F83               	movwf	___wmul@multiplier& (0+255),b
   728  000132  6B84               	clrf	(___wmul@multiplier+1)& (0+255),b
   729  000134  0EFF               	movlw	255
   730  000136  2384               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   731  000138  0E03               	movlw	3
   732  00013A  6F86               	movwf	(___wmul@multiplicand+1)& (0+255),b
   733  00013C  0EE8               	movlw	232
   734  00013E  6F85               	movwf	___wmul@multiplicand& (0+255),b
   735  000140  EC30  F004         	call	___wmul	;wreg free
   736  000144  0100               	movlb	0	; () banked
   737  000146  516A               	movf	(_palabra+10)& (0+255),w,b
   738  000148  6F89               	movwf	??_main& (0+255),b
   739  00014A  6B8A               	clrf	(??_main+1)& (0+255),b
   740  00014C  5183               	movf	?___wmul& (0+255),w,b
   741  00014E  2789               	addwf	??_main& (0+255),f,b
   742  000150  5184               	movf	(?___wmul+1)& (0+255),w,b
   743  000152  238A               	addwfc	(??_main+1)& (0+255),f,b
   744  000154  0ED0               	movlw	208
   745  000156  2568               	addwf	(_palabra+8)& (0+255),w,b
   746  000158  6F83               	movwf	___wmul@multiplier& (0+255),b
   747  00015A  6B84               	clrf	(___wmul@multiplier+1)& (0+255),b
   748  00015C  0EFF               	movlw	255
   749  00015E  2384               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   750  000160  0E00               	movlw	0
   751  000162  6F86               	movwf	(___wmul@multiplicand+1)& (0+255),b
   752  000164  0E64               	movlw	100
   753  000166  6F85               	movwf	___wmul@multiplicand& (0+255),b
   754  000168  EC30  F004         	call	___wmul	;wreg free
   755  00016C  0100               	movlb	0	; () banked
   756  00016E  5183               	movf	?___wmul& (0+255),w,b
   757  000170  2789               	addwf	??_main& (0+255),f,b
   758  000172  5184               	movf	(?___wmul+1)& (0+255),w,b
   759  000174  238A               	addwfc	(??_main+1)& (0+255),f,b
   760  000176  0ED0               	movlw	208
   761  000178  2569               	addwf	(_palabra+9)& (0+255),w,b
   762  00017A  6F83               	movwf	___wmul@multiplier& (0+255),b
   763  00017C  6B84               	clrf	(___wmul@multiplier+1)& (0+255),b
   764  00017E  0EFF               	movlw	255
   765  000180  2384               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   766  000182  0E00               	movlw	0
   767  000184  6F86               	movwf	(___wmul@multiplicand+1)& (0+255),b
   768  000186  0E0A               	movlw	10
   769  000188  6F85               	movwf	___wmul@multiplicand& (0+255),b
   770  00018A  EC30  F004         	call	___wmul	;wreg free
   771  00018E  0100               	movlb	0	; () banked
   772  000190  5183               	movf	?___wmul& (0+255),w,b
   773  000192  2789               	addwf	??_main& (0+255),f,b
   774  000194  5184               	movf	(?___wmul+1)& (0+255),w,b
   775  000196  238A               	addwfc	(??_main+1)& (0+255),f,b
   776  000198  0ED0               	movlw	208
   777  00019A  2589               	addwf	??_main& (0+255),w,b
   778  00019C  6E50               	movwf	_turns,c
   779  00019E  0EFF               	movlw	255
   780  0001A0  218A               	addwfc	(??_main+1)& (0+255),w,b
   781  0001A2  6E51               	movwf	_turns+1,c
   782                           
   783                           ; BSR set to: 0
   784                           ;main.c: 117: param_flag = 1;
   785  0001A4  0E01               	movlw	1
   786  0001A6  6E1C               	movwf	_param_flag,c
   787                           
   788                           ; BSR set to: 0
   789                           ;main.c: 118: speed_select(caliber);
   790  0001A8  C001  F083         	movff	_caliber,speed_select@var
   791  0001AC  C002  F084         	movff	_caliber+1,speed_select@var+1
   792  0001B0  EC07  F004         	call	_speed_select	;wreg free
   793                           
   794                           ;main.c: 119: } else if (palabra[0] == 'B') {
   795  0001B4  D732               	goto	l220
   796  0001B6                     l222:
   797  0001B6  0E42               	movlw	66
   798  0001B8  0100               	movlb	0	; () banked
   799  0001BA  1960               	xorwf	_palabra& (0+255),w,b
   800  0001BC  A4D8               	btfss	status,2,c
   801  0001BE  D01B               	goto	l224
   802                           
   803                           ; BSR set to: 0
   804                           ;main.c: 121: PWM_duty = ((palabra[1] - 48) * 10) + ((palabra[2] - 48));
   805  0001C0  0ED0               	movlw	208
   806  0001C2  2561               	addwf	(_palabra+1)& (0+255),w,b
   807  0001C4  6F83               	movwf	___wmul@multiplier& (0+255),b
   808  0001C6  6B84               	clrf	(___wmul@multiplier+1)& (0+255),b
   809  0001C8  0EFF               	movlw	255
   810  0001CA  2384               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
   811  0001CC  0E00               	movlw	0
   812  0001CE  6F86               	movwf	(___wmul@multiplicand+1)& (0+255),b
   813  0001D0  0E0A               	movlw	10
   814  0001D2  6F85               	movwf	___wmul@multiplicand& (0+255),b
   815  0001D4  EC30  F004         	call	___wmul	;wreg free
   816  0001D8  0100               	movlb	0	; () banked
   817  0001DA  5162               	movf	(_palabra+2)& (0+255),w,b
   818  0001DC  6F89               	movwf	??_main& (0+255),b
   819  0001DE  6B8A               	clrf	(??_main+1)& (0+255),b
   820  0001E0  5183               	movf	?___wmul& (0+255),w,b
   821  0001E2  2789               	addwf	??_main& (0+255),f,b
   822  0001E4  5184               	movf	(?___wmul+1)& (0+255),w,b
   823  0001E6  238A               	addwfc	(??_main+1)& (0+255),f,b
   824  0001E8  0ED0               	movlw	208
   825  0001EA  2589               	addwf	??_main& (0+255),w,b
   826  0001EC  6E48               	movwf	_PWM_duty,c
   827  0001EE  0EFF               	movlw	255
   828  0001F0  218A               	addwfc	(??_main+1)& (0+255),w,b
   829  0001F2  6E49               	movwf	_PWM_duty+1,c
   830                           
   831                           ;main.c: 122: } else if ((palabra[0] == 'D') && (zero_flag)) {
   832  0001F4  D712               	goto	l220
   833  0001F6                     l224:
   834                           
   835                           ; BSR set to: 0
   836                           
   837                           ; BSR set to: 0
   838  0001F6  0E44               	movlw	68
   839  0001F8  1960               	xorwf	_palabra& (0+255),w,b
   840  0001FA  A4D8               	btfss	status,2,c
   841  0001FC  D020               	goto	l226
   842                           
   843                           ; BSR set to: 0
   844  0001FE  5052               	movf	_zero_flag,w,c
   845  000200  B4D8               	btfsc	status,2,c
   846  000202  D01D               	goto	l226
   847                           
   848                           ; BSR set to: 0
   849                           ;main.c: 124: if (palabra[1] == '0') {
   850  000204  0E30               	movlw	48
   851  000206  1961               	xorwf	(_palabra+1)& (0+255),w,b
   852  000208  A4D8               	btfss	status,2,c
   853  00020A  D004               	goto	l227
   854  00020C                     u1910:
   855                           
   856                           ; BSR set to: 0
   857                           ;main.c: 126: MOT_3 = 1;
   858  00020C  0E01               	movlw	1
   859  00020E  6E26               	movwf	_MOT_3,c
   860                           
   861                           ;main.c: 127: DIR_3 = 0;
   862  000210  0E00               	movlw	0
   863  000212  D03E               	goto	L3
   864  000214                     l227:
   865                           
   866                           ; BSR set to: 0
   867                           
   868                           ; BSR set to: 0
   869  000214  0E31               	movlw	49
   870  000216  1961               	xorwf	(_palabra+1)& (0+255),w,b
   871  000218  B4D8               	btfsc	status,2,c
   872  00021A  D037               	goto	L6
   873                           
   874                           ; BSR set to: 0
   875                           
   876                           ; BSR set to: 0
   877                           
   878                           ;main.c: 132: } else if (palabra[1] == '2') {
   879                           
   880                           ;main.c: 131: DIR_3 = 1;
   881                           
   882                           ; BSR set to: 0
   883                           ;main.c: 130: MOT_3 = 1;
   884  00021C  0E32               	movlw	50
   885  00021E  1961               	xorwf	(_palabra+1)& (0+255),w,b
   886  000220  B4D8               	btfsc	status,2,c
   887  000222  D073               	goto	u2150
   888                           
   889                           ; BSR set to: 0
   890                           
   891                           ; BSR set to: 0
   892                           
   893                           ;main.c: 135: } else if (palabra[1] == '3') {
   894                           
   895                           ; BSR set to: 0
   896                           ;main.c: 134: MOT_3 = 0;
   897  000224  0E33               	movlw	51
   898  000226  1961               	xorwf	(_palabra+1)& (0+255),w,b
   899  000228  A4D8               	btfss	status,2,c
   900  00022A  D6F7               	goto	l220
   901                           
   902                           ; BSR set to: 0
   903                           ;main.c: 137: if ((MOT_3 == 0) && (param_flag)) {
   904  00022C  5026               	movf	_MOT_3,w,c
   905  00022E  A4D8               	btfss	status,2,c
   906  000230  D6F4               	goto	l220
   907                           
   908                           ; BSR set to: 0
   909  000232  501C               	movf	_param_flag,w,c
   910  000234  B4D8               	btfsc	status,2,c
   911  000236  D6F1               	goto	l220
   912                           
   913                           ; BSR set to: 0
   914                           ;main.c: 139: zero_mark();
   915  000238  EC9B  F004         	call	_zero_mark	;wreg free
   916                           
   917                           ;main.c: 140: }
   918                           ;main.c: 141: }
   919                           ;main.c: 142: } else if (palabra[0] == 'Q') {
   920  00023C  D6EE               	goto	l220
   921  00023E                     l226:
   922  00023E  0E51               	movlw	81
   923  000240  0100               	movlb	0	; () banked
   924  000242  1960               	xorwf	_palabra& (0+255),w,b
   925  000244  A4D8               	btfss	status,2,c
   926  000246  D011               	goto	l236
   927                           
   928                           ; BSR set to: 0
   929                           ;main.c: 144: if (winding) {
   930  000248  5022               	movf	_winding,w,c
   931  00024A  B4D8               	btfsc	status,2,c
   932  00024C  D007               	goto	l237
   933                           
   934                           ; BSR set to: 0
   935                           ;main.c: 145: trans_Char('N');
   936  00024E  0E4E               	movlw	78
   937  000250  ECA8  F004         	call	_trans_Char
   938                           
   939                           ;main.c: 146: trans_Char('\n');
   940  000254  0E0A               	movlw	10
   941  000256  ECA8  F004         	call	_trans_Char
   942                           
   943                           ;main.c: 147: } else {
   944  00025A  D6DF               	goto	l220
   945  00025C                     l237:
   946                           
   947                           ;main.c: 148: trans_Char('Y');
   948  00025C  0E59               	movlw	89
   949  00025E  ECA8  F004         	call	_trans_Char
   950                           
   951                           ;main.c: 149: trans_Char('\n');
   952  000262  0E0A               	movlw	10
   953  000264  ECA8  F004         	call	_trans_Char
   954                           
   955                           ;main.c: 150: }
   956                           ;main.c: 151: }
   957  000268  D6D8               	goto	l220
   958  00026A                     l236:
   959                           
   960                           ;main.c: 152: else if ((palabra[0] == 'D') && (unwind_flag)) {
   961  00026A  0E44               	movlw	68
   962  00026C  0100               	movlb	0	; () banked
   963  00026E  1960               	xorwf	_palabra& (0+255),w,b
   964  000270  A4D8               	btfss	status,2,c
   965  000272  D01B               	goto	l240
   966                           
   967                           ; BSR set to: 0
   968  000274  5019               	movf	_unwind_flag,w,c
   969  000276  B4D8               	btfsc	status,2,c
   970  000278  D018               	goto	l240
   971                           
   972                           ; BSR set to: 0
   973                           ;main.c: 154: if (palabra[1] == '0') {
   974  00027A  0E30               	movlw	48
   975  00027C  1961               	xorwf	(_palabra+1)& (0+255),w,b
   976  00027E  B4D8               	btfsc	status,2,c
   977  000280  D7C5               	goto	u1910
   978                           
   979                           ; BSR set to: 0
   980                           
   981                           ; BSR set to: 0
   982                           
   983                           ;main.c: 158: } else if (palabra[1] == '1') {
   984                           
   985                           ;main.c: 157: DIR_3 = 0;
   986                           
   987                           ; BSR set to: 0
   988                           ;main.c: 156: MOT_3 = 1;
   989  000282  0E31               	movlw	49
   990  000284  1961               	xorwf	(_palabra+1)& (0+255),w,b
   991  000286  A4D8               	btfss	status,2,c
   992  000288  D005               	goto	l243
   993  00028A                     L6:
   994                           
   995                           ; BSR set to: 0
   996                           ;main.c: 160: MOT_3 = 1;
   997  00028A  0E01               	movlw	1
   998  00028C  6E26               	movwf	_MOT_3,c
   999                           
  1000                           ;main.c: 161: DIR_3 = 1;
  1001  00028E  0E01               	movlw	1
  1002  000290                     L3:
  1003  000290  6E25               	movwf	_DIR_3,c
  1004                           
  1005                           ;main.c: 162: } else if (palabra[1] == '2') {
  1006  000292  D6C3               	goto	l220
  1007  000294                     l243:
  1008                           
  1009                           ; BSR set to: 0
  1010                           
  1011                           ; BSR set to: 0
  1012  000294  0E32               	movlw	50
  1013  000296  1961               	xorwf	(_palabra+1)& (0+255),w,b
  1014  000298  B4D8               	btfsc	status,2,c
  1015  00029A  D037               	goto	u2150
  1016                           
  1017                           ; BSR set to: 0
  1018                           
  1019                           ; BSR set to: 0
  1020                           
  1021                           ;main.c: 165: } else if (palabra[1] == '3') {
  1022                           
  1023                           ; BSR set to: 0
  1024                           ;main.c: 164: MOT_3 = 0;
  1025  00029C  0E33               	movlw	51
  1026  00029E  1961               	xorwf	(_palabra+1)& (0+255),w,b
  1027  0002A0  A4D8               	btfss	status,2,c
  1028  0002A2  D6BB               	goto	l220
  1029                           
  1030                           ; BSR set to: 0
  1031                           ;main.c: 168: MOT_3 = 0;
  1032  0002A4  0E00               	movlw	0
  1033  0002A6  6E26               	movwf	_MOT_3,c
  1034  0002A8  D024               	goto	u2120
  1035  0002AA                     l240:
  1036                           
  1037                           ; BSR set to: 0
  1038                           
  1039                           ; BSR set to: 0
  1040  0002AA  0E46               	movlw	70
  1041  0002AC  1960               	xorwf	_palabra& (0+255),w,b
  1042  0002AE  A4D8               	btfss	status,2,c
  1043  0002B0  D006               	goto	l249
  1044                           
  1045                           ; BSR set to: 0
  1046                           ;main.c: 173: if (winding) {
  1047  0002B2  5022               	movf	_winding,w,c
  1048  0002B4  B4D8               	btfsc	status,2,c
  1049  0002B6  D6B1               	goto	l220
  1050                           
  1051                           ; BSR set to: 0
  1052                           ;main.c: 174: finish();
  1053  0002B8  EC69  F004         	call	_finish	;wreg free
  1054                           
  1055                           ;main.c: 175: }
  1056                           ;main.c: 176: }
  1057  0002BC  D6AE               	goto	l220
  1058  0002BE                     l249:
  1059                           
  1060                           ;main.c: 178: else if (palabra[0] == 'M') {
  1061  0002BE  0E4D               	movlw	77
  1062  0002C0  0100               	movlb	0	; () banked
  1063  0002C2  1960               	xorwf	_palabra& (0+255),w,b
  1064  0002C4  A4D8               	btfss	status,2,c
  1065  0002C6  D024               	goto	l252
  1066                           
  1067                           ; BSR set to: 0
  1068                           ;main.c: 180: if (palabra[1] == '1') {
  1069  0002C8  0E31               	movlw	49
  1070  0002CA  1961               	xorwf	(_palabra+1)& (0+255),w,b
  1071  0002CC  A4D8               	btfss	status,2,c
  1072  0002CE  D008               	goto	l253
  1073                           
  1074                           ; BSR set to: 0
  1075                           ;main.c: 181: MOT_1 = !MOT_1;
  1076  0002D0  5027               	movf	_MOT_1,w,c
  1077  0002D2  A4D8               	btfss	status,2,c
  1078  0002D4  D002               	goto	u2090
  1079  0002D6  0E01               	movlw	1
  1080  0002D8  D001               	goto	u2100
  1081  0002DA                     u2090:
  1082  0002DA  0E00               	movlw	0
  1083  0002DC                     u2100:
  1084  0002DC  6E27               	movwf	_MOT_1,c
  1085                           
  1086                           ;main.c: 182: } else if (palabra[1] == '2') {
  1087  0002DE  D69D               	goto	l220
  1088  0002E0                     l253:
  1089                           
  1090                           ; BSR set to: 0
  1091                           
  1092                           ; BSR set to: 0
  1093  0002E0  0E32               	movlw	50
  1094  0002E2  1961               	xorwf	(_palabra+1)& (0+255),w,b
  1095  0002E4  A4D8               	btfss	status,2,c
  1096  0002E6  D008               	goto	l255
  1097                           
  1098                           ; BSR set to: 0
  1099                           ;main.c: 183: MOT_2 = !MOT_2;
  1100  0002E8  5024               	movf	_MOT_2,w,c
  1101  0002EA  A4D8               	btfss	status,2,c
  1102  0002EC  D002               	goto	u2120
  1103  0002EE  0E01               	movlw	1
  1104  0002F0  D001               	goto	u2130
  1105  0002F2                     u2120:
  1106  0002F2  0E00               	movlw	0
  1107  0002F4                     u2130:
  1108  0002F4  6E24               	movwf	_MOT_2,c
  1109                           
  1110                           ;main.c: 184: } else if (palabra[1] == '3') {
  1111  0002F6  D691               	goto	l220
  1112  0002F8                     l255:
  1113                           
  1114                           ; BSR set to: 0
  1115                           
  1116                           ; BSR set to: 0
  1117  0002F8  0E33               	movlw	51
  1118  0002FA  1961               	xorwf	(_palabra+1)& (0+255),w,b
  1119  0002FC  A4D8               	btfss	status,2,c
  1120  0002FE  D68D               	goto	l220
  1121                           
  1122                           ; BSR set to: 0
  1123                           ;main.c: 185: MOT_3 = !MOT_3;
  1124  000300  5026               	movf	_MOT_3,w,c
  1125  000302  A4D8               	btfss	status,2,c
  1126  000304  D002               	goto	u2150
  1127  000306  0E01               	movlw	1
  1128  000308  D001               	goto	u2160
  1129  00030A                     u2150:
  1130  00030A  0E00               	movlw	0
  1131  00030C                     u2160:
  1132  00030C  6E26               	movwf	_MOT_3,c
  1133                           
  1134                           ; BSR set to: 0
  1135                           ;main.c: 186: }
  1136                           ;main.c: 187: } else if (palabra[0] == 'N') {
  1137                           
  1138                           ; BSR set to: 0
  1139                           
  1140                           ; BSR set to: 0
  1141  00030E  D685               	goto	l220
  1142  000310                     l252:
  1143                           
  1144                           ; BSR set to: 0
  1145                           
  1146                           ; BSR set to: 0
  1147  000310  0E4E               	movlw	78
  1148  000312  1960               	xorwf	_palabra& (0+255),w,b
  1149  000314  A4D8               	btfss	status,2,c
  1150  000316  D008               	goto	l259
  1151                           
  1152                           ; BSR set to: 0
  1153                           ;main.c: 189: enable = !enable;
  1154  000318  501A               	movf	_enable,w,c
  1155  00031A  A4D8               	btfss	status,2,c
  1156  00031C  D002               	goto	u2180
  1157  00031E  0E01               	movlw	1
  1158  000320  D001               	goto	u2190
  1159  000322                     u2180:
  1160  000322  0E00               	movlw	0
  1161  000324                     u2190:
  1162  000324  6E1A               	movwf	_enable,c
  1163                           
  1164                           ;main.c: 190: } else if (palabra[0] == 'W') {
  1165  000326  D679               	goto	l220
  1166  000328                     l259:
  1167                           
  1168                           ; BSR set to: 0
  1169                           
  1170                           ; BSR set to: 0
  1171  000328  0E57               	movlw	87
  1172  00032A  1960               	xorwf	_palabra& (0+255),w,b
  1173  00032C  A4D8               	btfss	status,2,c
  1174  00032E  D003               	goto	l261
  1175                           
  1176                           ; BSR set to: 0
  1177                           ;main.c: 192: unwind();
  1178  000330  EC8B  F004         	call	_unwind	;wreg free
  1179                           
  1180                           ;main.c: 193: } else if (palabra[0] == 'R') {
  1181  000334  D672               	goto	l220
  1182  000336                     l261:
  1183  000336  0E52               	movlw	82
  1184  000338  0100               	movlb	0	; () banked
  1185  00033A  1960               	xorwf	_palabra& (0+255),w,b
  1186  00033C  A4D8               	btfss	status,2,c
  1187  00033E  D003               	goto	l263
  1188                           
  1189                           ; BSR set to: 0
  1190                           ;main.c: 194: reset();
  1191  000340  ECBE  F004         	call	_reset	;wreg free
  1192                           
  1193                           ;main.c: 195: } else if (palabra[0] == 'E') {
  1194  000344  D66A               	goto	l220
  1195  000346                     l263:
  1196  000346  0E45               	movlw	69
  1197  000348  0100               	movlb	0	; () banked
  1198  00034A  1960               	xorwf	_palabra& (0+255),w,b
  1199  00034C  A4D8               	btfss	status,2,c
  1200  00034E  D665               	goto	l220
  1201                           
  1202                           ; BSR set to: 0
  1203                           ;main.c: 196: if (palabra[1] == 'D') {
  1204  000350  0E44               	movlw	68
  1205  000352  1961               	xorwf	(_palabra+1)& (0+255),w,b
  1206  000354  A4D8               	btfss	status,2,c
  1207  000356  D026               	goto	l266
  1208                           
  1209                           ; BSR set to: 0
  1210                           ;main.c: 198: DIR_4 = 1;
  1211  000358  0E01               	movlw	1
  1212  00035A  6E1D               	movwf	_DIR_4,c
  1213                           
  1214                           ; BSR set to: 0
  1215                           ;main.c: 199: steps_4 = ((palabra[2] - 48) * 100) + ((palabra[3] - 48) * 10) + ((palabra
      +                          [4] - 48));
  1216  00035C  0ED0               	movlw	208
  1217  00035E  2562               	addwf	(_palabra+2)& (0+255),w,b
  1218  000360  6F83               	movwf	___wmul@multiplier& (0+255),b
  1219  000362  6B84               	clrf	(___wmul@multiplier+1)& (0+255),b
  1220  000364  0EFF               	movlw	255
  1221  000366  2384               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
  1222  000368  0E00               	movlw	0
  1223  00036A  6F86               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1224  00036C  0E64               	movlw	100
  1225  00036E  6F85               	movwf	___wmul@multiplicand& (0+255),b
  1226  000370  EC30  F004         	call	___wmul	;wreg free
  1227  000374  0100               	movlb	0	; () banked
  1228  000376  5164               	movf	(_palabra+4)& (0+255),w,b
  1229  000378  6F89               	movwf	??_main& (0+255),b
  1230  00037A  6B8A               	clrf	(??_main+1)& (0+255),b
  1231  00037C  5183               	movf	?___wmul& (0+255),w,b
  1232  00037E  2789               	addwf	??_main& (0+255),f,b
  1233  000380  5184               	movf	(?___wmul+1)& (0+255),w,b
  1234  000382  238A               	addwfc	(??_main+1)& (0+255),f,b
  1235  000384  0ED0               	movlw	208
  1236  000386  2563               	addwf	(_palabra+3)& (0+255),w,b
  1237  000388  6F83               	movwf	___wmul@multiplier& (0+255),b
  1238  00038A  6B84               	clrf	(___wmul@multiplier+1)& (0+255),b
  1239  00038C  0EFF               	movlw	255
  1240  00038E  2384               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
  1241  000390  0E00               	movlw	0
  1242  000392  6F86               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1243  000394  0E0A               	movlw	10
  1244  000396  6F85               	movwf	___wmul@multiplicand& (0+255),b
  1245  000398  EC30  F004         	call	___wmul	;wreg free
  1246  00039C  D029               	goto	L4
  1247  00039E                     l2160:
  1248                           
  1249                           ; BSR set to: 0
  1250                           ;main.c: 200: move_4 = 1;
  1251  00039E  0E01               	movlw	1
  1252  0003A0  6E23               	movwf	_move_4,c
  1253                           
  1254                           ;main.c: 201: } else if (palabra[1] == 'I') {
  1255  0003A2  D63B               	goto	l220
  1256  0003A4                     l266:
  1257                           
  1258                           ; BSR set to: 0
  1259                           
  1260                           ; BSR set to: 0
  1261  0003A4  0E49               	movlw	73
  1262  0003A6  1961               	xorwf	(_palabra+1)& (0+255),w,b
  1263  0003A8  A4D8               	btfss	status,2,c
  1264  0003AA  D637               	goto	l220
  1265                           
  1266                           ; BSR set to: 0
  1267                           ;main.c: 203: DIR_4 = 0;
  1268  0003AC  0E00               	movlw	0
  1269  0003AE  6E1D               	movwf	_DIR_4,c
  1270                           
  1271                           ; BSR set to: 0
  1272                           ;main.c: 204: steps_4 = ((palabra[2] - 48) * 100) + ((palabra[3] - 48) * 10) + ((palabra
      +                          [4] - 48));
  1273  0003B0  0ED0               	movlw	208
  1274  0003B2  2562               	addwf	(_palabra+2)& (0+255),w,b
  1275  0003B4  6F83               	movwf	___wmul@multiplier& (0+255),b
  1276  0003B6  6B84               	clrf	(___wmul@multiplier+1)& (0+255),b
  1277  0003B8  0EFF               	movlw	255
  1278  0003BA  2384               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
  1279  0003BC  0E00               	movlw	0
  1280  0003BE  6F86               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1281  0003C0  0E64               	movlw	100
  1282  0003C2  6F85               	movwf	___wmul@multiplicand& (0+255),b
  1283  0003C4  EC30  F004         	call	___wmul	;wreg free
  1284  0003C8  0100               	movlb	0	; () banked
  1285  0003CA  5164               	movf	(_palabra+4)& (0+255),w,b
  1286  0003CC  6F89               	movwf	??_main& (0+255),b
  1287  0003CE  6B8A               	clrf	(??_main+1)& (0+255),b
  1288  0003D0  5183               	movf	?___wmul& (0+255),w,b
  1289  0003D2  2789               	addwf	??_main& (0+255),f,b
  1290  0003D4  5184               	movf	(?___wmul+1)& (0+255),w,b
  1291  0003D6  238A               	addwfc	(??_main+1)& (0+255),f,b
  1292  0003D8  0ED0               	movlw	208
  1293  0003DA  2563               	addwf	(_palabra+3)& (0+255),w,b
  1294  0003DC  6F83               	movwf	___wmul@multiplier& (0+255),b
  1295  0003DE  6B84               	clrf	(___wmul@multiplier+1)& (0+255),b
  1296  0003E0  0EFF               	movlw	255
  1297  0003E2  2384               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
  1298  0003E4  0E00               	movlw	0
  1299  0003E6  6F86               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1300  0003E8  0E0A               	movlw	10
  1301  0003EA  6F85               	movwf	___wmul@multiplicand& (0+255),b
  1302  0003EC  EC30  F004         	call	___wmul	;wreg free
  1303  0003F0                     L4:
  1304  0003F0  0100               	movlb	0	; () banked
  1305  0003F2  5183               	movf	?___wmul& (0+255),w,b
  1306  0003F4  2789               	addwf	??_main& (0+255),f,b
  1307  0003F6  5184               	movf	(?___wmul+1)& (0+255),w,b
  1308  0003F8  238A               	addwfc	(??_main+1)& (0+255),f,b
  1309  0003FA  0ED0               	movlw	208
  1310  0003FC  2589               	addwf	??_main& (0+255),w,b
  1311  0003FE  6E17               	movwf	_steps_4,c
  1312  000400  0EFF               	movlw	255
  1313  000402  218A               	addwfc	(??_main+1)& (0+255),w,b
  1314  000404  6E18               	movwf	_steps_4+1,c
  1315  000406  D7CB               	goto	l2160
  1316  000408                     l221:
  1317                           
  1318                           ; BSR set to: 0
  1319  000408  B2C2               	btfsc	4034,1,c	;volatile
  1320  00040A  D607               	goto	l220
  1321                           
  1322                           ; BSR set to: 0
  1323                           ;main.c: 212: _delay((unsigned long)((4)*(8000000/4000.0)));
  1324  00040C  0E0B               	movlw	11
  1325  00040E  0100               	movlb	0	; () banked
  1326  000410  6F89               	movwf	??_main& (0+255),b
  1327  000412  0E62               	movlw	98
  1328  000414                     u2277:
  1329  000414  2EE8               	decfsz	wreg,f,c
  1330  000416  D7FE               	bra	u2277
  1331  000418  2F89               	decfsz	??_main& (0+255),f,b
  1332  00041A  D7FC               	bra	u2277
  1333  00041C  F000               	nop	
  1334                           
  1335                           ;main.c: 214: GODONE = 1;
  1336  00041E  82C2               	bsf	4034,1,c	;volatile
  1337  000420  D5FC               	goto	l220
  1338  000422                     __end_of_main:
  1339                           	opt stack 0
  1340                           tblptru	equ	0xFF8
  1341                           tblptrh	equ	0xFF7
  1342                           tblptrl	equ	0xFF6
  1343                           tablat	equ	0xFF5
  1344                           postinc0	equ	0xFEE
  1345                           wreg	equ	0xFE8
  1346                           postdec1	equ	0xFE5
  1347                           fsr1l	equ	0xFE1
  1348                           status	equ	0xFD8
  1349                           
  1350 ;; *************** function _zero_mark *****************
  1351 ;; Defined at:
  1352 ;;		line 252 in file "main.c"
  1353 ;; Parameters:    Size  Location     Type
  1354 ;;		None
  1355 ;; Auto vars:     Size  Location     Type
  1356 ;;		None
  1357 ;; Return value:  Size  Location     Type
  1358 ;;                  1    wreg      void 
  1359 ;; Registers used:
  1360 ;;		wreg, status,2
  1361 ;; Tracked objects:
  1362 ;;		On entry : 0/0
  1363 ;;		On exit  : 0/0
  1364 ;;		Unchanged: 0/0
  1365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1366 ;;      Params:         0       0       0       0       0       0       0       0       0
  1367 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1368 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1369 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1370 ;;Total ram usage:        0 bytes
  1371 ;; Hardware stack levels used:    1
  1372 ;; Hardware stack levels required when called:    3
  1373 ;; This function calls:
  1374 ;;		Nothing
  1375 ;; This function is called by:
  1376 ;;		_main
  1377 ;; This function uses a non-reentrant model
  1378 ;;
  1379                           
  1380                           	psect	text1
  1381  000936                     __ptext1:
  1382                           	opt stack 0
  1383  000936                     _zero_mark:
  1384                           	opt stack 27
  1385                           
  1386                           ;main.c: 254: DIR_3 = 1;
  1387                           
  1388                           ;incstack = 0
  1389  000936  0E01               	movlw	1
  1390  000938  6E25               	movwf	_DIR_3,c
  1391                           
  1392                           ;main.c: 255: T1CONbits.TMR1ON = 0;
  1393  00093A  90CD               	bcf	4045,0,c	;volatile
  1394                           
  1395                           ;main.c: 256: T0CONbits.TMR0ON = 1;
  1396  00093C  8ED5               	bsf	4053,7,c	;volatile
  1397                           
  1398                           ;main.c: 257: zero_flag = 0;
  1399  00093E  0E00               	movlw	0
  1400  000940  6E52               	movwf	_zero_flag,c
  1401                           
  1402                           ;main.c: 258: winding = 1;
  1403  000942  0E01               	movlw	1
  1404  000944  6E22               	movwf	_winding,c
  1405                           
  1406                           ;main.c: 259: MOT_1 = 1;
  1407  000946  0E01               	movlw	1
  1408  000948  6E27               	movwf	_MOT_1,c
  1409                           
  1410                           ;main.c: 260: MOT_3 = 1;
  1411  00094A  0E01               	movlw	1
  1412  00094C  6E26               	movwf	_MOT_3,c
  1413  00094E  0012               	return		;funcret
  1414  000950                     __end_of_zero_mark:
  1415                           	opt stack 0
  1416                           tblptru	equ	0xFF8
  1417                           tblptrh	equ	0xFF7
  1418                           tblptrl	equ	0xFF6
  1419                           tablat	equ	0xFF5
  1420                           postinc0	equ	0xFEE
  1421                           wreg	equ	0xFE8
  1422                           postdec1	equ	0xFE5
  1423                           fsr1l	equ	0xFE1
  1424                           status	equ	0xFD8
  1425                           
  1426 ;; *************** function _unwind *****************
  1427 ;; Defined at:
  1428 ;;		line 269 in file "main.c"
  1429 ;; Parameters:    Size  Location     Type
  1430 ;;		None
  1431 ;; Auto vars:     Size  Location     Type
  1432 ;;		None
  1433 ;; Return value:  Size  Location     Type
  1434 ;;                  1    wreg      void 
  1435 ;; Registers used:
  1436 ;;		wreg, status,2
  1437 ;; Tracked objects:
  1438 ;;		On entry : 0/0
  1439 ;;		On exit  : 0/0
  1440 ;;		Unchanged: 0/0
  1441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1442 ;;      Params:         0       0       0       0       0       0       0       0       0
  1443 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1444 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1445 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1446 ;;Total ram usage:        0 bytes
  1447 ;; Hardware stack levels used:    1
  1448 ;; Hardware stack levels required when called:    3
  1449 ;; This function calls:
  1450 ;;		Nothing
  1451 ;; This function is called by:
  1452 ;;		_main
  1453 ;; This function uses a non-reentrant model
  1454 ;;
  1455                           
  1456                           	psect	text2
  1457  000916                     __ptext2:
  1458                           	opt stack 0
  1459  000916                     _unwind:
  1460                           	opt stack 27
  1461                           
  1462                           ;main.c: 271: enable = !enable;
  1463                           
  1464                           ;incstack = 0
  1465  000916  501A               	movf	_enable,w,c
  1466  000918  A4D8               	btfss	status,2,c
  1467  00091A  D002               	goto	u1770
  1468  00091C  0E01               	movlw	1
  1469  00091E  D001               	goto	u1780
  1470  000920                     u1770:
  1471  000920  0E00               	movlw	0
  1472  000922                     u1780:
  1473  000922  6E1A               	movwf	_enable,c
  1474                           
  1475                           ;main.c: 272: T1CONbits.TMR1ON = 1;
  1476  000924  80CD               	bsf	4045,0,c	;volatile
  1477                           
  1478                           ;main.c: 273: T0CONbits.TMR0ON = 0;
  1479  000926  9ED5               	bcf	4053,7,c	;volatile
  1480                           
  1481                           ;main.c: 274: MOT_3 = 0;
  1482  000928  0E00               	movlw	0
  1483  00092A  6E26               	movwf	_MOT_3,c
  1484                           
  1485                           ;main.c: 275: MOT_2 = 1;
  1486  00092C  0E01               	movlw	1
  1487  00092E  6E24               	movwf	_MOT_2,c
  1488                           
  1489                           ;main.c: 276: unwind_flag = 1;
  1490  000930  0E01               	movlw	1
  1491  000932  6E19               	movwf	_unwind_flag,c
  1492  000934  0012               	return		;funcret
  1493  000936                     __end_of_unwind:
  1494                           	opt stack 0
  1495                           tblptru	equ	0xFF8
  1496                           tblptrh	equ	0xFF7
  1497                           tblptrl	equ	0xFF6
  1498                           tablat	equ	0xFF5
  1499                           postinc0	equ	0xFEE
  1500                           wreg	equ	0xFE8
  1501                           postdec1	equ	0xFE5
  1502                           fsr1l	equ	0xFE1
  1503                           status	equ	0xFD8
  1504                           
  1505 ;; *************** function _trans_Char *****************
  1506 ;; Defined at:
  1507 ;;		line 235 in file "main.c"
  1508 ;; Parameters:    Size  Location     Type
  1509 ;;  out             1    wreg     unsigned char 
  1510 ;; Auto vars:     Size  Location     Type
  1511 ;;  out             1    0[BANK0 ] unsigned char 
  1512 ;; Return value:  Size  Location     Type
  1513 ;;                  1    wreg      void 
  1514 ;; Registers used:
  1515 ;;		wreg
  1516 ;; Tracked objects:
  1517 ;;		On entry : 0/0
  1518 ;;		On exit  : 0/0
  1519 ;;		Unchanged: 0/0
  1520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1521 ;;      Params:         0       0       0       0       0       0       0       0       0
  1522 ;;      Locals:         0       1       0       0       0       0       0       0       0
  1523 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1524 ;;      Totals:         0       1       0       0       0       0       0       0       0
  1525 ;;Total ram usage:        1 bytes
  1526 ;; Hardware stack levels used:    1
  1527 ;; Hardware stack levels required when called:    3
  1528 ;; This function calls:
  1529 ;;		Nothing
  1530 ;; This function is called by:
  1531 ;;		_main
  1532 ;;		_send_String
  1533 ;; This function uses a non-reentrant model
  1534 ;;
  1535                           
  1536                           	psect	text3
  1537  000950                     __ptext3:
  1538                           	opt stack 0
  1539  000950                     _trans_Char:
  1540                           	opt stack 27
  1541                           
  1542                           ;incstack = 0
  1543                           ;trans_Char@out stored from wreg
  1544  000950  0100               	movlb	0	; () banked
  1545  000952  6F83               	movwf	trans_Char@out& (0+255),b
  1546  000954                     
  1547                           ;main.c: 236: while (TXIF == 0);
  1548  000954  A89E               	btfss	3998,4,c	;volatile
  1549  000956  D7FE               	goto	l2018
  1550                           
  1551                           ;main.c: 237: TXREG = out;
  1552  000958  C083  FFAD         	movff	trans_Char@out,4013	;volatile
  1553  00095C  0012               	return		;funcret
  1554  00095E                     __end_of_trans_Char:
  1555                           	opt stack 0
  1556                           tblptru	equ	0xFF8
  1557                           tblptrh	equ	0xFF7
  1558                           tblptrl	equ	0xFF6
  1559                           tablat	equ	0xFF5
  1560                           postinc0	equ	0xFEE
  1561                           wreg	equ	0xFE8
  1562                           postdec1	equ	0xFE5
  1563                           fsr1l	equ	0xFE1
  1564                           status	equ	0xFD8
  1565                           
  1566 ;; *************** function _speed_select *****************
  1567 ;; Defined at:
  1568 ;;		line 298 in file "main.c"
  1569 ;; Parameters:    Size  Location     Type
  1570 ;;  var             2    0[BANK0 ] unsigned int 
  1571 ;; Auto vars:     Size  Location     Type
  1572 ;;		None
  1573 ;; Return value:  Size  Location     Type
  1574 ;;                  1    wreg      void 
  1575 ;; Registers used:
  1576 ;;		wreg, status,2, status,0
  1577 ;; Tracked objects:
  1578 ;;		On entry : 0/0
  1579 ;;		On exit  : 0/0
  1580 ;;		Unchanged: 0/0
  1581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1582 ;;      Params:         0       2       0       0       0       0       0       0       0
  1583 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1584 ;;      Temps:          0       2       0       0       0       0       0       0       0
  1585 ;;      Totals:         0       4       0       0       0       0       0       0       0
  1586 ;;Total ram usage:        4 bytes
  1587 ;; Hardware stack levels used:    1
  1588 ;; Hardware stack levels required when called:    3
  1589 ;; This function calls:
  1590 ;;		Nothing
  1591 ;; This function is called by:
  1592 ;;		_main
  1593 ;; This function uses a non-reentrant model
  1594 ;;
  1595                           
  1596                           	psect	text4
  1597  00080E                     __ptext4:
  1598                           	opt stack 0
  1599  00080E                     _speed_select:
  1600                           	opt stack 27
  1601                           
  1602                           ;main.c: 300: MOT_4 = 1;
  1603                           
  1604                           ;incstack = 0
  1605  00080E  0E01               	movlw	1
  1606  000810  6E53               	movwf	_MOT_4,c
  1607                           
  1608                           ;main.c: 301: DIR_4 = 0;
  1609  000812  0E00               	movlw	0
  1610  000814  6E1D               	movwf	_DIR_4,c
  1611                           
  1612                           ;main.c: 302: switch (var) {
  1613  000816  D011               	goto	l303
  1614  000818                     
  1615                           ;main.c: 305: count_1 = 2;
  1616  000818  0E00               	movlw	0
  1617  00081A  6E4D               	movwf	_count_1+1,c
  1618  00081C  0E02               	movlw	2
  1619  00081E  6E4C               	movwf	_count_1,c
  1620                           
  1621                           ;main.c: 306: count_3 = 132;
  1622  000820  0E00               	movlw	0
  1623  000822  6E4B               	movwf	_count_3+1,c
  1624  000824  0E84               	movlw	132
  1625  000826  6E4A               	movwf	_count_3,c
  1626                           
  1627                           ;main.c: 307: steps_4 = 200;
  1628  000828  0E00               	movlw	0
  1629  00082A  6E18               	movwf	_steps_4+1,c
  1630  00082C  0EC8               	movlw	200
  1631  00082E  D003               	goto	L5
  1632  000830                     
  1633                           ;main.c: 312: steps_4 = 400;
  1634  000830  0E01               	movlw	1
  1635  000832  6E18               	movwf	_steps_4+1,c
  1636  000834  0E90               	movlw	144
  1637  000836                     L5:
  1638  000836  6E17               	movwf	_steps_4,c
  1639                           
  1640                           ;main.c: 313: }
  1641  000838  D010               	goto	l305
  1642  00083A                     l303:
  1643  00083A  C083  F085         	movff	speed_select@var,??_speed_select
  1644  00083E  C084  F086         	movff	speed_select@var+1,??_speed_select+1
  1645                           
  1646                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1647                           ; Switch size 1, requested type "space"
  1648                           ; Number of cases is 1, Range of values is 0 to 0
  1649                           ; switch strategies available:
  1650                           ; Name         Instructions Cycles
  1651                           ; simple_byte            4     3 (average)
  1652                           ;	Chosen strategy is simple_byte
  1653  000842  0100               	movlb	0	; () banked
  1654  000844  5186               	movf	(??_speed_select+1)& (0+255),w,b
  1655  000846  0A00               	xorlw	0	; case 0
  1656  000848  A4D8               	btfss	status,2,c
  1657  00084A  D007               	goto	l305
  1658                           
  1659                           ; BSR set to: 0
  1660                           ; Switch size 1, requested type "space"
  1661                           ; Number of cases is 2, Range of values is 25 to 33
  1662                           ; switch strategies available:
  1663                           ; Name         Instructions Cycles
  1664                           ; simple_byte            7     4 (average)
  1665                           ;	Chosen strategy is simple_byte
  1666  00084C  5185               	movf	??_speed_select& (0+255),w,b
  1667  00084E  0A19               	xorlw	25	; case 25
  1668  000850  B4D8               	btfsc	status,2,c
  1669  000852  D7E2               	goto	l304
  1670  000854  0A38               	xorlw	56	; case 33
  1671  000856  B4D8               	btfsc	status,2,c
  1672  000858  D7EB               	goto	l306
  1673  00085A                     l305:
  1674                           
  1675                           ;main.c: 314: move_4 = 1;
  1676                           
  1677                           ; BSR set to: 0
  1678  00085A  0E01               	movlw	1
  1679  00085C  6E23               	movwf	_move_4,c
  1680  00085E  0012               	return		;funcret
  1681  000860                     __end_of_speed_select:
  1682                           	opt stack 0
  1683                           tblptru	equ	0xFF8
  1684                           tblptrh	equ	0xFF7
  1685                           tblptrl	equ	0xFF6
  1686                           tablat	equ	0xFF5
  1687                           postinc0	equ	0xFEE
  1688                           wreg	equ	0xFE8
  1689                           postdec1	equ	0xFE5
  1690                           fsr1l	equ	0xFE1
  1691                           status	equ	0xFD8
  1692                           
  1693 ;; *************** function _reset *****************
  1694 ;; Defined at:
  1695 ;;		line 292 in file "main.c"
  1696 ;; Parameters:    Size  Location     Type
  1697 ;;		None
  1698 ;; Auto vars:     Size  Location     Type
  1699 ;;		None
  1700 ;; Return value:  Size  Location     Type
  1701 ;;                  1    wreg      void 
  1702 ;; Registers used:
  1703 ;;		None
  1704 ;; Tracked objects:
  1705 ;;		On entry : 0/0
  1706 ;;		On exit  : 0/0
  1707 ;;		Unchanged: 0/0
  1708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1709 ;;      Params:         0       0       0       0       0       0       0       0       0
  1710 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1711 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1712 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1713 ;;Total ram usage:        0 bytes
  1714 ;; Hardware stack levels used:    1
  1715 ;; Hardware stack levels required when called:    3
  1716 ;; This function calls:
  1717 ;;		Nothing
  1718 ;; This function is called by:
  1719 ;;		_main
  1720 ;; This function uses a non-reentrant model
  1721 ;;
  1722                           
  1723                           	psect	text5
  1724  00097C                     __ptext5:
  1725                           	opt stack 0
  1726  00097C                     _reset:
  1727                           	opt stack 27
  1728                           
  1729                           ;incstack = 0
  1730  00097C  00FF               	reset		;# 
  1731  00097E  0012               	return		;funcret
  1732  000980                     __end_of_reset:
  1733                           	opt stack 0
  1734                           tblptru	equ	0xFF8
  1735                           tblptrh	equ	0xFF7
  1736                           tblptrl	equ	0xFF6
  1737                           tablat	equ	0xFF5
  1738                           postinc0	equ	0xFEE
  1739                           wreg	equ	0xFE8
  1740                           postdec1	equ	0xFE5
  1741                           fsr1l	equ	0xFE1
  1742                           status	equ	0xFD8
  1743                           
  1744 ;; *************** function _finish *****************
  1745 ;; Defined at:
  1746 ;;		line 279 in file "main.c"
  1747 ;; Parameters:    Size  Location     Type
  1748 ;;		None
  1749 ;; Auto vars:     Size  Location     Type
  1750 ;;		None
  1751 ;; Return value:  Size  Location     Type
  1752 ;;                  1    wreg      void 
  1753 ;; Registers used:
  1754 ;;		wreg, status,2
  1755 ;; Tracked objects:
  1756 ;;		On entry : 0/0
  1757 ;;		On exit  : 0/0
  1758 ;;		Unchanged: 0/0
  1759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1760 ;;      Params:         0       0       0       0       0       0       0       0       0
  1761 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1762 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1763 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1764 ;;Total ram usage:        0 bytes
  1765 ;; Hardware stack levels used:    1
  1766 ;; Hardware stack levels required when called:    3
  1767 ;; This function calls:
  1768 ;;		Nothing
  1769 ;; This function is called by:
  1770 ;;		_main
  1771 ;; This function uses a non-reentrant model
  1772 ;;
  1773                           
  1774                           	psect	text6
  1775  0008D2                     __ptext6:
  1776                           	opt stack 0
  1777  0008D2                     _finish:
  1778                           	opt stack 27
  1779                           
  1780                           ;main.c: 281: T1CONbits.TMR1ON = 1;
  1781                           
  1782                           ;incstack = 0
  1783  0008D2  80CD               	bsf	4045,0,c	;volatile
  1784                           
  1785                           ;main.c: 282: T0CONbits.TMR0ON = 0;
  1786  0008D4  9ED5               	bcf	4053,7,c	;volatile
  1787                           
  1788                           ;main.c: 283: MOT_1 = MOT_3 = 0;
  1789  0008D6  0E00               	movlw	0
  1790  0008D8  6E26               	movwf	_MOT_3,c
  1791  0008DA  C026  F027         	movff	_MOT_3,_MOT_1
  1792                           
  1793                           ;main.c: 284: winding = 0;
  1794  0008DE  0E00               	movlw	0
  1795  0008E0  6E22               	movwf	_winding,c
  1796                           
  1797                           ;main.c: 285: MOT_4 = 1;
  1798  0008E2  0E01               	movlw	1
  1799  0008E4  6E53               	movwf	_MOT_4,c
  1800                           
  1801                           ;main.c: 286: DIR_4 = 1;
  1802  0008E6  0E01               	movlw	1
  1803  0008E8  6E1D               	movwf	_DIR_4,c
  1804                           
  1805                           ;main.c: 287: move_4 = 1;
  1806  0008EA  0E01               	movlw	1
  1807  0008EC  6E23               	movwf	_move_4,c
  1808                           
  1809                           ;main.c: 289: finish_flag = 1;
  1810  0008EE  0E01               	movlw	1
  1811  0008F0  6E1B               	movwf	_finish_flag,c
  1812  0008F2  0012               	return		;funcret
  1813  0008F4                     __end_of_finish:
  1814                           	opt stack 0
  1815                           tblptru	equ	0xFF8
  1816                           tblptrh	equ	0xFF7
  1817                           tblptrl	equ	0xFF6
  1818                           tablat	equ	0xFF5
  1819                           postinc0	equ	0xFEE
  1820                           wreg	equ	0xFE8
  1821                           postdec1	equ	0xFE5
  1822                           fsr1l	equ	0xFE1
  1823                           status	equ	0xFD8
  1824                           
  1825 ;; *************** function ___wmul *****************
  1826 ;; Defined at:
  1827 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
  1828 ;; Parameters:    Size  Location     Type
  1829 ;;  multiplier      2    0[BANK0 ] unsigned int 
  1830 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  1831 ;; Auto vars:     Size  Location     Type
  1832 ;;  product         2    4[BANK0 ] unsigned int 
  1833 ;; Return value:  Size  Location     Type
  1834 ;;                  2    0[BANK0 ] unsigned int 
  1835 ;; Registers used:
  1836 ;;		wreg, status,2, status,0, prodl, prodh
  1837 ;; Tracked objects:
  1838 ;;		On entry : 0/0
  1839 ;;		On exit  : 0/0
  1840 ;;		Unchanged: 0/0
  1841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1842 ;;      Params:         0       4       0       0       0       0       0       0       0
  1843 ;;      Locals:         0       2       0       0       0       0       0       0       0
  1844 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1845 ;;      Totals:         0       6       0       0       0       0       0       0       0
  1846 ;;Total ram usage:        6 bytes
  1847 ;; Hardware stack levels used:    1
  1848 ;; Hardware stack levels required when called:    3
  1849 ;; This function calls:
  1850 ;;		Nothing
  1851 ;; This function is called by:
  1852 ;;		_main
  1853 ;; This function uses a non-reentrant model
  1854 ;;
  1855                           
  1856                           	psect	text7
  1857  000860                     __ptext7:
  1858                           	opt stack 0
  1859  000860                     ___wmul:
  1860                           	opt stack 27
  1861                           
  1862                           ;incstack = 0
  1863  000860  0100               	movlb	0	; () banked
  1864  000862  5183               	movf	___wmul@multiplier& (0+255),w,b
  1865  000864  0385               	mulwf	___wmul@multiplicand& (0+255),b
  1866  000866  CFF3 F087          	movff	prodl,___wmul@product
  1867  00086A  CFF4 F088          	movff	prodh,___wmul@product+1
  1868  00086E  5183               	movf	___wmul@multiplier& (0+255),w,b
  1869  000870  0386               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  1870  000872  50F3               	movf	prodl,w,c
  1871  000874  2788               	addwf	(___wmul@product+1)& (0+255),f,b
  1872  000876  5184               	movf	(___wmul@multiplier+1)& (0+255),w,b
  1873  000878  0385               	mulwf	___wmul@multiplicand& (0+255),b
  1874  00087A  50F3               	movf	prodl,w,c
  1875  00087C  2788               	addwf	(___wmul@product+1)& (0+255),f,b
  1876                           
  1877                           ; BSR set to: 0
  1878  00087E  C087  F083         	movff	___wmul@product,?___wmul
  1879  000882  C088  F084         	movff	___wmul@product+1,?___wmul+1
  1880  000886  0012               	return	
  1881  000888                     __end_of___wmul:
  1882                           	opt stack 0
  1883                           tblptru	equ	0xFF8
  1884                           tblptrh	equ	0xFF7
  1885                           tblptrl	equ	0xFF6
  1886                           tablat	equ	0xFF5
  1887                           prodh	equ	0xFF4
  1888                           prodl	equ	0xFF3
  1889                           postinc0	equ	0xFEE
  1890                           wreg	equ	0xFE8
  1891                           postdec1	equ	0xFE5
  1892                           fsr1l	equ	0xFE1
  1893                           status	equ	0xFD8
  1894                           
  1895 ;; *************** function _InitApp *****************
  1896 ;; Defined at:
  1897 ;;		line 33 in file "user.c"
  1898 ;; Parameters:    Size  Location     Type
  1899 ;;		None
  1900 ;; Auto vars:     Size  Location     Type
  1901 ;;		None
  1902 ;; Return value:  Size  Location     Type
  1903 ;;                  1    wreg      void 
  1904 ;; Registers used:
  1905 ;;		wreg, status,2
  1906 ;; Tracked objects:
  1907 ;;		On entry : 0/0
  1908 ;;		On exit  : 0/0
  1909 ;;		Unchanged: 0/0
  1910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1911 ;;      Params:         0       0       0       0       0       0       0       0       0
  1912 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1913 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1914 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1915 ;;Total ram usage:        0 bytes
  1916 ;; Hardware stack levels used:    1
  1917 ;; Hardware stack levels required when called:    3
  1918 ;; This function calls:
  1919 ;;		Nothing
  1920 ;; This function is called by:
  1921 ;;		_main
  1922 ;; This function uses a non-reentrant model
  1923 ;;
  1924                           
  1925                           	psect	text8
  1926  0006EC                     __ptext8:
  1927                           	opt stack 0
  1928  0006EC                     _InitApp:
  1929                           	opt stack 27
  1930                           
  1931                           ;user.c: 35: PORTA = 0;
  1932                           
  1933                           ; BSR set to: 0
  1934                           ;incstack = 0
  1935  0006EC  0E00               	movlw	0
  1936  0006EE  6E80               	movwf	3968,c	;volatile
  1937                           
  1938                           ;user.c: 36: LATA = 0;
  1939  0006F0  0E00               	movlw	0
  1940  0006F2  6E89               	movwf	3977,c	;volatile
  1941                           
  1942                           ;user.c: 37: PORTB = 0;
  1943  0006F4  0E00               	movlw	0
  1944  0006F6  6E81               	movwf	3969,c	;volatile
  1945                           
  1946                           ;user.c: 38: LATB = 0;
  1947  0006F8  0E00               	movlw	0
  1948  0006FA  6E8A               	movwf	3978,c	;volatile
  1949                           
  1950                           ;user.c: 39: PORTC = 0;
  1951  0006FC  0E00               	movlw	0
  1952  0006FE  6E82               	movwf	3970,c	;volatile
  1953                           
  1954                           ;user.c: 40: LATC = 0;
  1955  000700  0E00               	movlw	0
  1956  000702  6E8B               	movwf	3979,c	;volatile
  1957                           
  1958                           ;user.c: 42: ADCON1 = 0b1101;
  1959  000704  0E0D               	movlw	13
  1960  000706  6EC1               	movwf	4033,c	;volatile
  1961                           
  1962                           ;user.c: 43: TRISAbits.TRISA0 = 1;
  1963  000708  8092               	bsf	3986,0,c	;volatile
  1964                           
  1965                           ;user.c: 44: ADCON0bits.CHS = 0;
  1966  00070A  94C2               	bcf	4034,2,c	;volatile
  1967  00070C  96C2               	bcf	4034,3,c	;volatile
  1968  00070E  98C2               	bcf	4034,4,c	;volatile
  1969  000710  9AC2               	bcf	4034,5,c	;volatile
  1970                           
  1971                           ;user.c: 45: ADCON2 = 0b10101100;
  1972  000712  0EAC               	movlw	172
  1973  000714  6EC0               	movwf	4032,c	;volatile
  1974                           
  1975                           ;user.c: 46: PIE1bits.ADIE = 1;
  1976  000716  8C9D               	bsf	3997,6,c	;volatile
  1977                           
  1978                           ;user.c: 47: PIR1bits.ADIF = 0;
  1979  000718  9C9E               	bcf	3998,6,c	;volatile
  1980                           
  1981                           ;user.c: 48: ADCON0bits.ADON = 1;
  1982  00071A  80C2               	bsf	4034,0,c	;volatile
  1983                           
  1984                           ;user.c: 50: TRISAbits.RA2 = 0;
  1985  00071C  9492               	bcf	3986,2,c	;volatile
  1986                           
  1987                           ;user.c: 51: TRISAbits.RA3 = 0;
  1988  00071E  9692               	bcf	3986,3,c	;volatile
  1989                           
  1990                           ;user.c: 52: TRISAbits.RA4 = 0;
  1991  000720  9892               	bcf	3986,4,c	;volatile
  1992                           
  1993                           ;user.c: 53: TRISAbits.RA5 = 0;
  1994  000722  9A92               	bcf	3986,5,c	;volatile
  1995                           
  1996                           ;user.c: 54: TRISCbits.RC0 = 0;
  1997  000724  9094               	bcf	3988,0,c	;volatile
  1998                           
  1999                           ;user.c: 55: TRISCbits.RC1 = 0;
  2000  000726  9294               	bcf	3988,1,c	;volatile
  2001                           
  2002                           ;user.c: 56: TRISBbits.RB7 = 0;
  2003  000728  9E93               	bcf	3987,7,c	;volatile
  2004                           
  2005                           ;user.c: 57: TRISBbits.RB6 = 0;
  2006  00072A  9C93               	bcf	3987,6,c	;volatile
  2007                           
  2008                           ;user.c: 58: TRISCbits.RC2 = 0;
  2009  00072C  9494               	bcf	3988,2,c	;volatile
  2010                           
  2011                           ;user.c: 59: TRISBbits.RB4 = 0;
  2012  00072E  9893               	bcf	3987,4,c	;volatile
  2013                           
  2014                           ;user.c: 60: TRISBbits.RB5 = 0;
  2015  000730  9A93               	bcf	3987,5,c	;volatile
  2016                           
  2017                           ;user.c: 62: RCONbits.IPEN = 0;
  2018  000732  9ED0               	bcf	4048,7,c	;volatile
  2019                           
  2020                           ;user.c: 64: INTCONbits.GIE = 1;
  2021  000734  8EF2               	bsf	intcon,7,c	;volatile
  2022                           
  2023                           ;user.c: 65: INTCONbits.PEIE = 1;
  2024  000736  8CF2               	bsf	intcon,6,c	;volatile
  2025                           
  2026                           ;user.c: 66: INTCONbits.TMR0IE = 1;
  2027  000738  8AF2               	bsf	intcon,5,c	;volatile
  2028                           
  2029                           ;user.c: 67: INTCONbits.TMR0IF = 0;
  2030  00073A  94F2               	bcf	intcon,2,c	;volatile
  2031                           
  2032                           ;user.c: 68: INTCON2bits.TMR0IP = 1;
  2033  00073C  84F1               	bsf	intcon2,2,c	;volatile
  2034                           
  2035                           ;user.c: 69: T0CONbits.T08BIT = 1;
  2036  00073E  8CD5               	bsf	4053,6,c	;volatile
  2037                           
  2038                           ;user.c: 70: T0CONbits.T0CS = 0;
  2039  000740  9AD5               	bcf	4053,5,c	;volatile
  2040                           
  2041                           ;user.c: 71: T0CONbits.PSA = 0;
  2042  000742  96D5               	bcf	4053,3,c	;volatile
  2043                           
  2044                           ;user.c: 72: T0CONbits.T0PS = 0b101;
  2045  000744  50D5               	movf	4053,w,c	;volatile
  2046  000746  0BF8               	andlw	-8
  2047  000748  0905               	iorlw	5
  2048  00074A  6ED5               	movwf	4053,c	;volatile
  2049                           
  2050                           ;user.c: 73: T0CONbits.TMR0ON = 0;
  2051  00074C  9ED5               	bcf	4053,7,c	;volatile
  2052                           
  2053                           ;user.c: 74: TMR0 = 0x6;
  2054  00074E  0E00               	movlw	0
  2055  000750  6ED7               	movwf	4055,c	;volatile
  2056  000752  0E06               	movlw	6
  2057  000754  6ED6               	movwf	4054,c	;volatile
  2058                           
  2059                           ;user.c: 76: PIE1bits.TMR1IE = 1;
  2060  000756  809D               	bsf	3997,0,c	;volatile
  2061                           
  2062                           ;user.c: 77: PIR1bits.TMR1IF = 0;
  2063  000758  909E               	bcf	3998,0,c	;volatile
  2064                           
  2065                           ;user.c: 78: IPR1bits.TMR1IP = 1;
  2066  00075A  809F               	bsf	3999,0,c	;volatile
  2067                           
  2068                           ;user.c: 79: T1CONbits.TMR1CS = 0;
  2069  00075C  92CD               	bcf	4045,1,c	;volatile
  2070                           
  2071                           ;user.c: 80: T1CONbits.T1CKPS = 0b00;
  2072  00075E  0ECF               	movlw	-49
  2073  000760  16CD               	andwf	4045,f,c	;volatile
  2074                           
  2075                           ;user.c: 81: T1CONbits.TMR1ON = 1;
  2076  000762  80CD               	bsf	4045,0,c	;volatile
  2077                           
  2078                           ;user.c: 85: TRISBbits.RB1 = 1;
  2079  000764  8293               	bsf	3987,1,c	;volatile
  2080                           
  2081                           ;user.c: 86: TRISBbits.RB2 = 1;
  2082  000766  8493               	bsf	3987,2,c	;volatile
  2083                           
  2084                           ;user.c: 87: INTCON3bits.INT1IE = 1;
  2085  000768  86F0               	bsf	intcon3,3,c	;volatile
  2086                           
  2087                           ;user.c: 88: INTCON3bits.INT2IE = 1;
  2088  00076A  88F0               	bsf	intcon3,4,c	;volatile
  2089                           
  2090                           ;user.c: 89: INTCON3bits.INT1IF = 0;
  2091  00076C  90F0               	bcf	intcon3,0,c	;volatile
  2092                           
  2093                           ;user.c: 90: INTCON3bits.INT2IF = 0;
  2094  00076E  92F0               	bcf	intcon3,1,c	;volatile
  2095                           
  2096                           ;user.c: 91: INTCON2bits.INTEDG1 = 0;
  2097  000770  9AF1               	bcf	intcon2,5,c	;volatile
  2098                           
  2099                           ;user.c: 92: INTCON2bits.INTEDG2 = 0;
  2100  000772  98F1               	bcf	intcon2,4,c	;volatile
  2101                           
  2102                           ;user.c: 94: TRISCbits.RC6 = 0;
  2103  000774  9C94               	bcf	3988,6,c	;volatile
  2104                           
  2105                           ;user.c: 95: TRISCbits.RC7 = 1;
  2106  000776  8E94               	bsf	3988,7,c	;volatile
  2107                           
  2108                           ;user.c: 96: BRGH = 1;
  2109  000778  84AC               	bsf	4012,2,c	;volatile
  2110                           
  2111                           ;user.c: 97: BRG16 = 1;
  2112  00077A  86B8               	bsf	4024,3,c	;volatile
  2113                           
  2114                           ;user.c: 98: SPBRG = 207;
  2115  00077C  0ECF               	movlw	207
  2116  00077E  6EAF               	movwf	4015,c	;volatile
  2117                           
  2118                           ;user.c: 99: SPEN = 1;
  2119  000780  8EAB               	bsf	4011,7,c	;volatile
  2120                           
  2121                           ;user.c: 100: SYNC = 0;
  2122  000782  98AC               	bcf	4012,4,c	;volatile
  2123                           
  2124                           ;user.c: 101: TXEN = 1;
  2125  000784  8AAC               	bsf	4012,5,c	;volatile
  2126                           
  2127                           ;user.c: 102: CREN = 1;
  2128  000786  88AB               	bsf	4011,4,c	;volatile
  2129                           
  2130                           ;user.c: 103: TX9 = 0;
  2131  000788  9CAC               	bcf	4012,6,c	;volatile
  2132                           
  2133                           ;user.c: 104: RX9 = 0;
  2134  00078A  9CAB               	bcf	4011,6,c	;volatile
  2135                           
  2136                           ;user.c: 105: RCIE = 1;
  2137  00078C  8A9D               	bsf	3997,5,c	;volatile
  2138                           
  2139                           ;user.c: 106: TXIE = 0;
  2140  00078E  989D               	bcf	3997,4,c	;volatile
  2141                           
  2142                           ;user.c: 108: PR2 = 99;
  2143  000790  0E63               	movlw	99
  2144  000792  6ECB               	movwf	4043,c	;volatile
  2145                           
  2146                           ;user.c: 109: CCP1CONbits.DC1B = 0;
  2147  000794  0ECF               	movlw	-49
  2148  000796  16BD               	andwf	4029,f,c	;volatile
  2149                           
  2150                           ;user.c: 110: T2CONbits.T2CKPS = 0b00;
  2151  000798  0EFC               	movlw	-4
  2152  00079A  16CA               	andwf	4042,f,c	;volatile
  2153                           
  2154                           ;user.c: 111: T2CONbits.TMR2ON = 1;
  2155  00079C  84CA               	bsf	4042,2,c	;volatile
  2156                           
  2157                           ;user.c: 112: CCP1CONbits.CCP1M = 0b1111;
  2158  00079E  80BD               	bsf	4029,0,c	;volatile
  2159  0007A0  82BD               	bsf	4029,1,c	;volatile
  2160  0007A2  84BD               	bsf	4029,2,c	;volatile
  2161  0007A4  86BD               	bsf	4029,3,c	;volatile
  2162  0007A6  0012               	return		;funcret
  2163  0007A8                     __end_of_InitApp:
  2164                           	opt stack 0
  2165                           tblptru	equ	0xFF8
  2166                           tblptrh	equ	0xFF7
  2167                           tblptrl	equ	0xFF6
  2168                           tablat	equ	0xFF5
  2169                           prodh	equ	0xFF4
  2170                           prodl	equ	0xFF3
  2171                           intcon	equ	0xFF2
  2172                           intcon2	equ	0xFF1
  2173                           intcon3	equ	0xFF0
  2174                           postinc0	equ	0xFEE
  2175                           wreg	equ	0xFE8
  2176                           postdec1	equ	0xFE5
  2177                           fsr1l	equ	0xFE1
  2178                           status	equ	0xFD8
  2179                           
  2180 ;; *************** function _ConfigureOscillator *****************
  2181 ;; Defined at:
  2182 ;;		line 24 in file "system.c"
  2183 ;; Parameters:    Size  Location     Type
  2184 ;;		None
  2185 ;; Auto vars:     Size  Location     Type
  2186 ;;		None
  2187 ;; Return value:  Size  Location     Type
  2188 ;;                  1    wreg      void 
  2189 ;; Registers used:
  2190 ;;		wreg, status,2
  2191 ;; Tracked objects:
  2192 ;;		On entry : 0/0
  2193 ;;		On exit  : 0/0
  2194 ;;		Unchanged: 0/0
  2195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2196 ;;      Params:         0       0       0       0       0       0       0       0       0
  2197 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2198 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2199 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2200 ;;Total ram usage:        0 bytes
  2201 ;; Hardware stack levels used:    1
  2202 ;; Hardware stack levels required when called:    3
  2203 ;; This function calls:
  2204 ;;		Nothing
  2205 ;; This function is called by:
  2206 ;;		_main
  2207 ;; This function uses a non-reentrant model
  2208 ;;
  2209                           
  2210                           	psect	text9
  2211  00096A                     __ptext9:
  2212                           	opt stack 0
  2213  00096A                     _ConfigureOscillator:
  2214                           	opt stack 27
  2215                           
  2216                           ;system.c: 27: OSCCONbits.IRCF = 0b111;
  2217                           
  2218                           ;incstack = 0
  2219  00096A  88D3               	bsf	4051,4,c	;volatile
  2220  00096C  8AD3               	bsf	4051,5,c	;volatile
  2221  00096E  8CD3               	bsf	4051,6,c	;volatile
  2222                           
  2223                           ;system.c: 28: OSCCONbits.SCS = 0b11;
  2224  000970  0E03               	movlw	3
  2225  000972  12D3               	iorwf	4051,f,c	;volatile
  2226  000974  0012               	return		;funcret
  2227  000976                     __end_of_ConfigureOscillator:
  2228                           	opt stack 0
  2229                           tblptru	equ	0xFF8
  2230                           tblptrh	equ	0xFF7
  2231                           tblptrl	equ	0xFF6
  2232                           tablat	equ	0xFF5
  2233                           prodh	equ	0xFF4
  2234                           prodl	equ	0xFF3
  2235                           intcon	equ	0xFF2
  2236                           intcon2	equ	0xFF1
  2237                           intcon3	equ	0xFF0
  2238                           postinc0	equ	0xFEE
  2239                           wreg	equ	0xFE8
  2240                           postdec1	equ	0xFE5
  2241                           fsr1l	equ	0xFE1
  2242                           status	equ	0xFD8
  2243                           
  2244 ;; *************** function _high_isr *****************
  2245 ;; Defined at:
  2246 ;;		line 70 in file "interrupts.c"
  2247 ;; Parameters:    Size  Location     Type
  2248 ;;		None
  2249 ;; Auto vars:     Size  Location     Type
  2250 ;;		None
  2251 ;; Return value:  Size  Location     Type
  2252 ;;                  1    wreg      void 
  2253 ;; Registers used:
  2254 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2255 ;; Tracked objects:
  2256 ;;		On entry : 0/0
  2257 ;;		On exit  : 0/0
  2258 ;;		Unchanged: 0/0
  2259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2260 ;;      Params:         0       0       0       0       0       0       0       0       0
  2261 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2262 ;;      Temps:         20       0       0       0       0       0       0       0       0
  2263 ;;      Totals:        20       0       0       0       0       0       0       0       0
  2264 ;;Total ram usage:       20 bytes
  2265 ;; Hardware stack levels used:    1
  2266 ;; Hardware stack levels required when called:    2
  2267 ;; This function calls:
  2268 ;;		_mot_3_step_count
  2269 ;;		i2_finish
  2270 ;; This function is called by:
  2271 ;;		Interrupt level 2
  2272 ;; This function uses a non-reentrant model
  2273 ;;
  2274                           
  2275                           	psect	intcode
  2276  000008                     __pintcode:
  2277                           	opt stack 0
  2278  000008                     _high_isr:
  2279                           	opt stack 27
  2280                           
  2281                           ;incstack = 0
  2282  000008  8254               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  2283  00000A  ED11  F002         	call	int_func,f	;refresh shadow registers
  2284                           tblptru	equ	0xFF8
  2285                           tblptrh	equ	0xFF7
  2286                           tblptrl	equ	0xFF6
  2287                           tablat	equ	0xFF5
  2288                           prodh	equ	0xFF4
  2289                           prodl	equ	0xFF3
  2290                           intcon	equ	0xFF2
  2291                           intcon2	equ	0xFF1
  2292                           intcon3	equ	0xFF0
  2293                           postinc0	equ	0xFEE
  2294                           wreg	equ	0xFE8
  2295                           postdec1	equ	0xFE5
  2296                           fsr1l	equ	0xFE1
  2297                           status	equ	0xFD8
  2298                           
  2299                           	psect	intcode_body
  2300  000422                     __pintcode_body:
  2301                           	opt stack 27
  2302  000422                     int_func:
  2303                           	opt stack 27
  2304  000422  0006               	pop		; remove dummy address from shadow register refresh
  2305  000424  CFFA F036          	movff	pclath,??_high_isr+2
  2306  000428  CFFB F037          	movff	pclatu,??_high_isr+3
  2307  00042C  CFE9 F038          	movff	fsr0l,??_high_isr+4
  2308  000430  CFEA F039          	movff	fsr0h,??_high_isr+5
  2309  000434  CFE1 F03A          	movff	fsr1l,??_high_isr+6
  2310  000438  CFE2 F03B          	movff	fsr1h,??_high_isr+7
  2311  00043C  CFD9 F03C          	movff	fsr2l,??_high_isr+8
  2312  000440  CFDA F03D          	movff	fsr2h,??_high_isr+9
  2313  000444  CFF3 F03E          	movff	prodl,??_high_isr+10
  2314  000448  CFF4 F03F          	movff	prodh,??_high_isr+11
  2315  00044C  CFF6 F040          	movff	tblptrl,??_high_isr+12
  2316  000450  CFF7 F041          	movff	tblptrh,??_high_isr+13
  2317  000454  CFF8 F042          	movff	tblptru,??_high_isr+14
  2318  000458  CFF5 F043          	movff	tablat,??_high_isr+15
  2319  00045C  C054  F044         	movff	btemp,??_high_isr+16
  2320  000460  C055  F045         	movff	btemp+1,??_high_isr+17
  2321  000464  C056  F046         	movff	btemp+2,??_high_isr+18
  2322  000468  C057  F047         	movff	btemp+3,??_high_isr+19
  2323                           
  2324                           ;interrupts.c: 71: if (INTCONbits.TMR0IF) {
  2325  00046C  A4F2               	btfss	intcon,2,c	;volatile
  2326  00046E  D085               	goto	i2l93
  2327                           
  2328                           ;interrupts.c: 73: INTCONbits.TMR0IF = 0;
  2329  000470  94F2               	bcf	intcon,2,c	;volatile
  2330                           
  2331                           ;interrupts.c: 74: TMR0 = 250;
  2332  000472  0E00               	movlw	0
  2333  000474  6ED7               	movwf	4055,c	;volatile
  2334  000476  0EFA               	movlw	250
  2335  000478  6ED6               	movwf	4054,c	;volatile
  2336                           
  2337                           ;interrupts.c: 75: MOT_1_count++;
  2338  00047A  4A0D               	infsnz	_MOT_1_count,f,c
  2339  00047C  2A0E               	incf	_MOT_1_count+1,f,c
  2340                           
  2341                           ;interrupts.c: 76: MOT_2_count++;
  2342  00047E  0100               	movlb	0	; () banked
  2343  000480  4B81               	infsnz	_MOT_2_count& (0+255),f,b
  2344  000482  2B82               	incf	(_MOT_2_count+1)& (0+255),f,b
  2345                           
  2346                           ; BSR set to: 0
  2347                           ;interrupts.c: 77: MOT_3_count++;
  2348  000484  4A0B               	infsnz	_MOT_3_count,f,c
  2349  000486  2A0C               	incf	_MOT_3_count+1,f,c
  2350                           
  2351                           ; BSR set to: 0
  2352                           ;interrupts.c: 78: MOT_4_count++;
  2353  000488  4B7F               	infsnz	_MOT_4_count& (0+255),f,b
  2354  00048A  2B80               	incf	(_MOT_4_count+1)& (0+255),f,b
  2355                           
  2356                           ;interrupts.c: 80: if (MOT_1) {
  2357  00048C  5027               	movf	_MOT_1,w,c
  2358  00048E  B4D8               	btfsc	status,2,c
  2359  000490  D03B               	goto	i2l97
  2360                           
  2361                           ; BSR set to: 0
  2362                           ;interrupts.c: 82: if (MOT_1_count == count_1) {
  2363  000492  504C               	movf	_count_1,w,c
  2364  000494  180D               	xorwf	_MOT_1_count,w,c
  2365  000496  E138               	bnz	i2l1654
  2366  000498  504D               	movf	_count_1+1,w,c
  2367  00049A  180E               	xorwf	_MOT_1_count+1,w,c
  2368  00049C  A4D8               	btfss	status,2,c
  2369  00049E  D034               	goto	i2l97
  2370                           
  2371                           ; BSR set to: 0
  2372                           ;interrupts.c: 83: MOT_1_count = 0;
  2373  0004A0  0E00               	movlw	0
  2374  0004A2  6E0E               	movwf	_MOT_1_count+1,c
  2375  0004A4  0E00               	movlw	0
  2376  0004A6  6E0D               	movwf	_MOT_1_count,c
  2377                           
  2378                           ; BSR set to: 0
  2379                           ;interrupts.c: 84: LATAbits.LA3 = !PORTAbits.RA3;
  2380  0004A8  B680               	btfsc	3968,3,c	;volatile
  2381  0004AA  D003               	goto	i2u94_40
  2382  0004AC  6A34               	clrf	??_high_isr& (0+255),c
  2383  0004AE  2A34               	incf	??_high_isr& (0+255),f,c
  2384  0004B0  D001               	goto	i2u95_48
  2385  0004B2                     i2u94_40:
  2386  0004B2  6A34               	clrf	??_high_isr& (0+255),c
  2387  0004B4                     i2u95_48:
  2388  0004B4  4634               	rlncf	??_high_isr,f,c
  2389  0004B6  4634               	rlncf	??_high_isr,f,c
  2390  0004B8  4634               	rlncf	??_high_isr,f,c
  2391  0004BA  5089               	movf	3977,w,c	;volatile
  2392  0004BC  1834               	xorwf	??_high_isr,w,c
  2393  0004BE  0BF7               	andlw	-9
  2394  0004C0  1834               	xorwf	??_high_isr,w,c
  2395  0004C2  6E89               	movwf	3977,c	;volatile
  2396                           
  2397                           ;interrupts.c: 85: mot_1_steps++;
  2398  0004C4  4A09               	infsnz	_mot_1_steps,f,c
  2399  0004C6  2A0A               	incf	_mot_1_steps+1,f,c
  2400                           
  2401                           ;interrupts.c: 86: if (mot_1_steps == 200) {
  2402  0004C8  0EC8               	movlw	200
  2403  0004CA  1809               	xorwf	_mot_1_steps,w,c
  2404  0004CC  100A               	iorwf	_mot_1_steps+1,w,c
  2405  0004CE  A4D8               	btfss	status,2,c
  2406  0004D0  D006               	goto	i2l96
  2407                           
  2408                           ;interrupts.c: 88: mot_1_steps = 0;
  2409  0004D2  0E00               	movlw	0
  2410  0004D4  6E0A               	movwf	_mot_1_steps+1,c
  2411  0004D6  0E00               	movlw	0
  2412  0004D8  6E09               	movwf	_mot_1_steps,c
  2413                           
  2414                           ;interrupts.c: 89: turns_count++;
  2415  0004DA  4A03               	infsnz	_turns_count,f,c
  2416  0004DC  2A04               	incf	_turns_count+1,f,c
  2417  0004DE                     i2l96:
  2418                           
  2419                           ;interrupts.c: 90: }
  2420                           ;interrupts.c: 91: if (turns_count == 8*turns) {
  2421  0004DE  C050  F034         	movff	_turns,??_high_isr
  2422  0004E2  C051  F035         	movff	_turns+1,??_high_isr+1
  2423  0004E6  90D8               	bcf	status,0,c
  2424  0004E8  3634               	rlcf	??_high_isr,f,c
  2425  0004EA  3635               	rlcf	??_high_isr+1,f,c
  2426  0004EC  90D8               	bcf	status,0,c
  2427  0004EE  3634               	rlcf	??_high_isr,f,c
  2428  0004F0  3635               	rlcf	??_high_isr+1,f,c
  2429  0004F2  90D8               	bcf	status,0,c
  2430  0004F4  3634               	rlcf	??_high_isr,f,c
  2431  0004F6  3635               	rlcf	??_high_isr+1,f,c
  2432  0004F8  5003               	movf	_turns_count,w,c
  2433  0004FA  1834               	xorwf	??_high_isr,w,c
  2434  0004FC  E105               	bnz	i2l1654
  2435  0004FE  5004               	movf	_turns_count+1,w,c
  2436  000500  1835               	xorwf	??_high_isr+1,w,c
  2437  000502  B4D8               	btfsc	status,2,c
  2438                           
  2439                           ;interrupts.c: 93: finish();
  2440  000504  EC7A  F004         	call	i2_finish	;wreg free
  2441  000508                     i2l97:
  2442  000508                     i2l1654:
  2443                           
  2444                           ;interrupts.c: 94: }
  2445                           ;interrupts.c: 95: }
  2446                           ;interrupts.c: 96: }
  2447                           ;interrupts.c: 98: if (MOT_3) {
  2448  000508  5026               	movf	_MOT_3,w,c
  2449  00050A  B4D8               	btfsc	status,2,c
  2450  00050C  D0C9               	goto	i2l120
  2451                           
  2452                           ;interrupts.c: 100: if (MOT_3_count == count_3) {
  2453  00050E  504A               	movf	_count_3,w,c
  2454  000510  180B               	xorwf	_MOT_3_count,w,c
  2455  000512  E103               	bnz	i2u99_41
  2456  000514  504B               	movf	_count_3+1,w,c
  2457  000516  180C               	xorwf	_MOT_3_count+1,w,c
  2458  000518  A4D8               	btfss	status,2,c
  2459  00051A                     i2u99_41:
  2460  00051A  D0C2               	goto	i2l120
  2461                           
  2462                           ;interrupts.c: 101: MOT_3_count = 0;
  2463  00051C  0E00               	movlw	0
  2464  00051E  6E0C               	movwf	_MOT_3_count+1,c
  2465  000520  0E00               	movlw	0
  2466  000522  6E0B               	movwf	_MOT_3_count,c
  2467                           
  2468                           ;interrupts.c: 102: LATCbits.LC1 = !PORTCbits.RC1;
  2469  000524  B282               	btfsc	3970,1,c	;volatile
  2470  000526  D003               	goto	i2u100_40
  2471  000528  6A34               	clrf	??_high_isr& (0+255),c
  2472  00052A  2A34               	incf	??_high_isr& (0+255),f,c
  2473  00052C  D001               	goto	i2u101_48
  2474  00052E                     i2u100_40:
  2475  00052E  6A34               	clrf	??_high_isr& (0+255),c
  2476  000530                     i2u101_48:
  2477  000530  4634               	rlncf	??_high_isr,f,c
  2478  000532  508B               	movf	3979,w,c	;volatile
  2479  000534  1834               	xorwf	??_high_isr,w,c
  2480  000536  0BFD               	andlw	-3
  2481  000538  1834               	xorwf	??_high_isr,w,c
  2482  00053A  6E8B               	movwf	3979,c	;volatile
  2483                           
  2484                           ;interrupts.c: 103: mot_3_steps++;
  2485  00053C  4A07               	infsnz	_mot_3_steps,f,c
  2486  00053E  2A08               	incf	_mot_3_steps+1,f,c
  2487                           
  2488                           ;interrupts.c: 105: if (mot_3_steps == mot_3_step_count(length, 1)) {
  2489  000540  C04E  F02E         	movff	_length,mot_3_step_count@l
  2490  000544  C04F  F02F         	movff	_length+1,mot_3_step_count@l+1
  2491  000548  0E00               	movlw	0
  2492  00054A  6E31               	movwf	mot_3_step_count@ms+1,c
  2493  00054C  0E01               	movlw	1
  2494  00054E  6E30               	movwf	mot_3_step_count@ms,c
  2495  000550  EC57  F004         	call	_mot_3_step_count	;wreg free
  2496  000554  5007               	movf	_mot_3_steps,w,c
  2497  000556  182E               	xorwf	?_mot_3_step_count,w,c
  2498  000558  E103               	bnz	i2u102_41
  2499  00055A  5008               	movf	_mot_3_steps+1,w,c
  2500  00055C  182F               	xorwf	?_mot_3_step_count+1,w,c
  2501  00055E  A4D8               	btfss	status,2,c
  2502  000560                     i2u102_41:
  2503  000560  D09F               	goto	i2l120
  2504                           
  2505                           ;interrupts.c: 107: DIR_3 = !DIR_3;
  2506  000562  5025               	movf	_DIR_3,w,c
  2507  000564  A4D8               	btfss	status,2,c
  2508  000566  D002               	goto	i2u103_40
  2509  000568  0E01               	movlw	1
  2510  00056A  D001               	goto	i2u104_40
  2511  00056C                     i2u103_40:
  2512  00056C  0E00               	movlw	0
  2513  00056E                     i2u104_40:
  2514  00056E  6E25               	movwf	_DIR_3,c
  2515                           
  2516                           ;interrupts.c: 108: mot_3_steps = 0;
  2517  000570  0E00               	movlw	0
  2518  000572  6E08               	movwf	_mot_3_steps+1,c
  2519  000574  0E00               	movlw	0
  2520  000576  6E07               	movwf	_mot_3_steps,c
  2521                           
  2522                           ;interrupts.c: 109: }
  2523                           ;interrupts.c: 110: }
  2524                           ;interrupts.c: 111: }
  2525                           ;interrupts.c: 121: } else if (PIR1bits.TMR1IF) {
  2526  000578  D093               	goto	i2l120
  2527  00057A                     i2l93:
  2528  00057A  A09E               	btfss	3998,0,c	;volatile
  2529  00057C  D04F               	goto	i2l102
  2530                           
  2531                           ;interrupts.c: 123: PIR1bits.TMR1IF = 0;
  2532  00057E  909E               	bcf	3998,0,c	;volatile
  2533                           
  2534                           ;interrupts.c: 124: TMR1 = 0xD8F0;
  2535  000580  0ED8               	movlw	216
  2536  000582  6ECF               	movwf	4047,c	;volatile
  2537  000584  0EF0               	movlw	240
  2538  000586  6ECE               	movwf	4046,c	;volatile
  2539                           
  2540                           ;interrupts.c: 125: if (MOT_2) {
  2541  000588  5024               	movf	_MOT_2,w,c
  2542  00058A  B4D8               	btfsc	status,2,c
  2543  00058C  D00D               	goto	i2l103
  2544                           
  2545                           ;interrupts.c: 127: LATAbits.LA5 = !PORTAbits.RA5;
  2546  00058E  BA80               	btfsc	3968,5,c	;volatile
  2547  000590  D003               	goto	i2u107_40
  2548  000592  6A34               	clrf	??_high_isr& (0+255),c
  2549  000594  2A34               	incf	??_high_isr& (0+255),f,c
  2550  000596  D001               	goto	i2u108_48
  2551  000598                     i2u107_40:
  2552  000598  6A34               	clrf	??_high_isr& (0+255),c
  2553  00059A                     i2u108_48:
  2554  00059A  3A34               	swapf	??_high_isr,f,c
  2555  00059C  4634               	rlncf	??_high_isr,f,c
  2556  00059E  5089               	movf	3977,w,c	;volatile
  2557  0005A0  1834               	xorwf	??_high_isr,w,c
  2558  0005A2  0BDF               	andlw	-33
  2559  0005A4  1834               	xorwf	??_high_isr,w,c
  2560  0005A6  6E89               	movwf	3977,c	;volatile
  2561  0005A8                     i2l103:
  2562                           
  2563                           ;interrupts.c: 128: }
  2564                           ;interrupts.c: 130: if (MOT_3) {
  2565  0005A8  5026               	movf	_MOT_3,w,c
  2566  0005AA  B4D8               	btfsc	status,2,c
  2567  0005AC  D00C               	goto	i2l104
  2568                           
  2569                           ;interrupts.c: 132: LATCbits.LC1 = !PORTCbits.RC1;
  2570  0005AE  B282               	btfsc	3970,1,c	;volatile
  2571  0005B0  D003               	goto	i2u110_40
  2572  0005B2  6A34               	clrf	??_high_isr& (0+255),c
  2573  0005B4  2A34               	incf	??_high_isr& (0+255),f,c
  2574  0005B6  D001               	goto	i2u111_48
  2575  0005B8                     i2u110_40:
  2576  0005B8  6A34               	clrf	??_high_isr& (0+255),c
  2577  0005BA                     i2u111_48:
  2578  0005BA  4634               	rlncf	??_high_isr,f,c
  2579  0005BC  508B               	movf	3979,w,c	;volatile
  2580  0005BE  1834               	xorwf	??_high_isr,w,c
  2581  0005C0  0BFD               	andlw	-3
  2582  0005C2  1834               	xorwf	??_high_isr,w,c
  2583  0005C4  6E8B               	movwf	3979,c	;volatile
  2584  0005C6                     i2l104:
  2585                           
  2586                           ;interrupts.c: 133: }
  2587                           ;interrupts.c: 135: if (MOT_4) {
  2588  0005C6  5053               	movf	_MOT_4,w,c
  2589  0005C8  B4D8               	btfsc	status,2,c
  2590  0005CA  D06A               	goto	i2l120
  2591                           
  2592                           ;interrupts.c: 137: if(move_4) {
  2593  0005CC  5023               	movf	_move_4,w,c
  2594  0005CE  B4D8               	btfsc	status,2,c
  2595  0005D0  D067               	goto	i2l120
  2596                           
  2597                           ;interrupts.c: 138: LATBbits.LB6 = !PORTBbits.RB6;
  2598  0005D2  BC81               	btfsc	3969,6,c	;volatile
  2599  0005D4  D003               	goto	i2u114_40
  2600  0005D6  6A34               	clrf	??_high_isr& (0+255),c
  2601  0005D8  2A34               	incf	??_high_isr& (0+255),f,c
  2602  0005DA  D001               	goto	i2u115_48
  2603  0005DC                     i2u114_40:
  2604  0005DC  6A34               	clrf	??_high_isr& (0+255),c
  2605  0005DE                     i2u115_48:
  2606  0005DE  3A34               	swapf	??_high_isr,f,c
  2607  0005E0  4634               	rlncf	??_high_isr,f,c
  2608  0005E2  4634               	rlncf	??_high_isr,f,c
  2609  0005E4  508A               	movf	3978,w,c	;volatile
  2610  0005E6  1834               	xorwf	??_high_isr,w,c
  2611  0005E8  0BBF               	andlw	-65
  2612  0005EA  1834               	xorwf	??_high_isr,w,c
  2613  0005EC  6E8A               	movwf	3978,c	;volatile
  2614                           
  2615                           ;interrupts.c: 140: if (mot_4_steps == 2*steps_4) {
  2616  0005EE  C017  F034         	movff	_steps_4,??_high_isr
  2617  0005F2  C018  F035         	movff	_steps_4+1,??_high_isr+1
  2618  0005F6  90D8               	bcf	status,0,c
  2619  0005F8  3634               	rlcf	??_high_isr,f,c
  2620  0005FA  3635               	rlcf	??_high_isr+1,f,c
  2621  0005FC  5005               	movf	_mot_4_steps,w,c
  2622  0005FE  1834               	xorwf	??_high_isr,w,c
  2623  000600  E10A               	bnz	i2l1686
  2624  000602  5006               	movf	_mot_4_steps+1,w,c
  2625  000604  1835               	xorwf	??_high_isr+1,w,c
  2626  000606  A4D8               	btfss	status,2,c
  2627  000608  D006               	goto	i2l107
  2628                           
  2629                           ;interrupts.c: 141: move_4 = 0;
  2630  00060A  0E00               	movlw	0
  2631  00060C  6E23               	movwf	_move_4,c
  2632                           
  2633                           ;interrupts.c: 142: mot_4_steps = 0;
  2634  00060E  0E00               	movlw	0
  2635  000610  6E06               	movwf	_mot_4_steps+1,c
  2636  000612  0E00               	movlw	0
  2637  000614  6E05               	movwf	_mot_4_steps,c
  2638  000616                     i2l107:
  2639  000616                     i2l1686:
  2640                           
  2641                           ;interrupts.c: 143: }
  2642                           ;interrupts.c: 144: mot_4_steps++;
  2643  000616  4A05               	infsnz	_mot_4_steps,f,c
  2644  000618  2A06               	incf	_mot_4_steps+1,f,c
  2645                           
  2646                           ;interrupts.c: 145: }
  2647                           ;interrupts.c: 146: }
  2648                           ;interrupts.c: 153: } else if (PIR1bits.RCIF) {
  2649  00061A  D042               	goto	i2l120
  2650  00061C                     i2l102:
  2651  00061C  AA9E               	btfss	3998,5,c	;volatile
  2652  00061E  D016               	goto	i2l109
  2653                           
  2654                           ;interrupts.c: 155: PIR1bits.RCIF = 0;
  2655  000620  9A9E               	bcf	3998,5,c	;volatile
  2656                           
  2657                           ;interrupts.c: 156: palabra[n] = RCREG;
  2658  000622  0E60               	movlw	low _palabra
  2659  000624  2413               	addwf	_n,w,c
  2660  000626  6ED9               	movwf	fsr2l,c
  2661  000628  0E00               	movlw	high _palabra
  2662  00062A  2014               	addwfc	_n+1,w,c
  2663  00062C  6EDA               	movwf	fsr2h,c
  2664  00062E  CFAE FFDF          	movff	4014,indf2	;volatile
  2665                           
  2666                           ;interrupts.c: 157: n++;
  2667  000632  4A13               	infsnz	_n,f,c
  2668  000634  2A14               	incf	_n+1,f,c
  2669                           
  2670                           ;interrupts.c: 158: if (RCREG == '\n') {
  2671  000636  0E0A               	movlw	10
  2672  000638  18AE               	xorwf	4014,w,c	;volatile
  2673  00063A  A4D8               	btfss	status,2,c
  2674  00063C  D031               	goto	i2l120
  2675                           
  2676                           ;interrupts.c: 161: recibi = 1;
  2677  00063E  0E01               	movlw	1
  2678  000640  6E21               	movwf	_recibi,c
  2679                           
  2680                           ;interrupts.c: 162: n = 0;
  2681  000642  0E00               	movlw	0
  2682  000644  6E14               	movwf	_n+1,c
  2683  000646  0E00               	movlw	0
  2684  000648  6E13               	movwf	_n,c
  2685                           
  2686                           ;interrupts.c: 163: }
  2687                           ;interrupts.c: 164: } else if (PIR1bits.ADIF) {
  2688  00064A  D02A               	goto	i2l120
  2689  00064C                     i2l109:
  2690  00064C  AC9E               	btfss	3998,6,c	;volatile
  2691  00064E  D00A               	goto	i2l112
  2692                           
  2693                           ;interrupts.c: 166: PIR1bits.ADIF = 0;
  2694  000650  9C9E               	bcf	3998,6,c	;volatile
  2695                           
  2696                           ;interrupts.c: 172: ADC_previous_value = ADC_value_press;
  2697  000652  C00F  F015         	movff	_ADC_value_press,_ADC_previous_value
  2698  000656  C010  F016         	movff	_ADC_value_press+1,_ADC_previous_value+1
  2699                           
  2700                           ;interrupts.c: 173: ADC_value_press = ADRES;
  2701  00065A  CFC3 F00F          	movff	4035,_ADC_value_press	;volatile
  2702  00065E  CFC4 F010          	movff	4036,_ADC_value_press+1	;volatile
  2703                           
  2704                           ;interrupts.c: 175: } else if (INTCON3bits.INT1IF) {
  2705  000662  D01E               	goto	i2l120
  2706  000664                     i2l112:
  2707  000664  A0F0               	btfss	intcon3,0,c	;volatile
  2708  000666  D00C               	goto	i2l114
  2709                           
  2710                           ;interrupts.c: 177: INTCON3bits.INT1IF = 0;
  2711  000668  90F0               	bcf	intcon3,0,c	;volatile
  2712                           
  2713                           ;interrupts.c: 179: if (winding) {
  2714  00066A  5022               	movf	_winding,w,c
  2715  00066C  B4D8               	btfsc	status,2,c
  2716  00066E  D003               	goto	i2l115
  2717                           
  2718                           ;interrupts.c: 181: finish();
  2719  000670  EC7A  F004         	call	i2_finish	;wreg free
  2720                           
  2721                           ;interrupts.c: 186: } else {
  2722  000674  D015               	goto	i2l120
  2723  000676                     i2l115:
  2724                           
  2725                           ;interrupts.c: 188: DIR_3 = !DIR_3;
  2726  000676  5025               	movf	_DIR_3,w,c
  2727  000678  A4D8               	btfss	status,2,c
  2728  00067A  D010               	goto	i2u126_40
  2729  00067C  0E01               	movlw	1
  2730  00067E  D00F               	goto	i2u127_40
  2731  000680                     i2l114:
  2732  000680  A2F0               	btfss	intcon3,1,c	;volatile
  2733  000682  D00E               	goto	i2l120
  2734                           
  2735                           ;interrupts.c: 193: INTCON3bits.INT2IF = 0;
  2736  000684  92F0               	bcf	intcon3,1,c	;volatile
  2737                           
  2738                           ;interrupts.c: 195: if (winding) {
  2739  000686  5022               	movf	_winding,w,c
  2740  000688  B4D8               	btfsc	status,2,c
  2741  00068A  D003               	goto	i2l119
  2742                           
  2743                           ;interrupts.c: 197: finish();
  2744  00068C  EC7A  F004         	call	i2_finish	;wreg free
  2745                           
  2746                           ;interrupts.c: 202: } else {
  2747  000690  D007               	goto	i2l120
  2748  000692                     i2l119:
  2749                           
  2750                           ;interrupts.c: 204: DIR_3 = !DIR_3;
  2751  000692  5025               	movf	_DIR_3,w,c
  2752  000694  A4D8               	btfss	status,2,c
  2753  000696  D002               	goto	i2u126_40
  2754  000698  0E01               	movlw	1
  2755  00069A  D001               	goto	i2u127_40
  2756  00069C                     i2u126_40:
  2757  00069C  0E00               	movlw	0
  2758  00069E                     i2u127_40:
  2759  00069E  6E25               	movwf	_DIR_3,c
  2760  0006A0                     i2l120:
  2761  0006A0  C047  F057         	movff	??_high_isr+19,btemp+3
  2762  0006A4  C046  F056         	movff	??_high_isr+18,btemp+2
  2763  0006A8  C045  F055         	movff	??_high_isr+17,btemp+1
  2764  0006AC  C044  F054         	movff	??_high_isr+16,btemp
  2765  0006B0  C043  FFF5         	movff	??_high_isr+15,tablat
  2766  0006B4  C042  FFF8         	movff	??_high_isr+14,tblptru
  2767  0006B8  C041  FFF7         	movff	??_high_isr+13,tblptrh
  2768  0006BC  C040  FFF6         	movff	??_high_isr+12,tblptrl
  2769  0006C0  C03F  FFF4         	movff	??_high_isr+11,prodh
  2770  0006C4  C03E  FFF3         	movff	??_high_isr+10,prodl
  2771  0006C8  C03D  FFDA         	movff	??_high_isr+9,fsr2h
  2772  0006CC  C03C  FFD9         	movff	??_high_isr+8,fsr2l
  2773  0006D0  C03B  FFE2         	movff	??_high_isr+7,fsr1h
  2774  0006D4  C03A  FFE1         	movff	??_high_isr+6,fsr1l
  2775  0006D8  C039  FFEA         	movff	??_high_isr+5,fsr0h
  2776  0006DC  C038  FFE9         	movff	??_high_isr+4,fsr0l
  2777  0006E0  C037  FFFB         	movff	??_high_isr+3,pclatu
  2778  0006E4  C036  FFFA         	movff	??_high_isr+2,pclath
  2779  0006E8  9254               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  2780  0006EA  0011               	retfie		f
  2781  0006EC                     __end_of_high_isr:
  2782                           	opt stack 0
  2783                           pclatu	equ	0xFFB
  2784                           pclath	equ	0xFFA
  2785                           tblptru	equ	0xFF8
  2786                           tblptrh	equ	0xFF7
  2787                           tblptrl	equ	0xFF6
  2788                           tablat	equ	0xFF5
  2789                           prodh	equ	0xFF4
  2790                           prodl	equ	0xFF3
  2791                           intcon	equ	0xFF2
  2792                           intcon2	equ	0xFF1
  2793                           intcon3	equ	0xFF0
  2794                           postinc0	equ	0xFEE
  2795                           fsr0h	equ	0xFEA
  2796                           fsr0l	equ	0xFE9
  2797                           wreg	equ	0xFE8
  2798                           postdec1	equ	0xFE5
  2799                           fsr1h	equ	0xFE2
  2800                           fsr1l	equ	0xFE1
  2801                           indf2	equ	0xFDF
  2802                           fsr2h	equ	0xFDA
  2803                           fsr2l	equ	0xFD9
  2804                           status	equ	0xFD8
  2805                           
  2806 ;; *************** function i2_finish *****************
  2807 ;; Defined at:
  2808 ;;		line 279 in file "main.c"
  2809 ;; Parameters:    Size  Location     Type
  2810 ;;		None
  2811 ;; Auto vars:     Size  Location     Type
  2812 ;;		None
  2813 ;; Return value:  Size  Location     Type
  2814 ;;                  1    wreg      void 
  2815 ;; Registers used:
  2816 ;;		wreg, status,2
  2817 ;; Tracked objects:
  2818 ;;		On entry : 0/0
  2819 ;;		On exit  : 0/0
  2820 ;;		Unchanged: 0/0
  2821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2822 ;;      Params:         0       0       0       0       0       0       0       0       0
  2823 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2824 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2825 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2826 ;;Total ram usage:        0 bytes
  2827 ;; Hardware stack levels used:    1
  2828 ;; This function calls:
  2829 ;;		Nothing
  2830 ;; This function is called by:
  2831 ;;		_high_isr
  2832 ;; This function uses a non-reentrant model
  2833 ;;
  2834                           
  2835                           	psect	text11
  2836  0008F4                     __ptext11:
  2837                           	opt stack 0
  2838  0008F4                     i2_finish:
  2839                           	opt stack 28
  2840                           
  2841                           ;main.c: 281: T1CONbits.TMR1ON = 1;
  2842                           
  2843                           ;incstack = 0
  2844  0008F4  80CD               	bsf	4045,0,c	;volatile
  2845                           
  2846                           ;main.c: 282: T0CONbits.TMR0ON = 0;
  2847  0008F6  9ED5               	bcf	4053,7,c	;volatile
  2848                           
  2849                           ;main.c: 283: MOT_1 = MOT_3 = 0;
  2850  0008F8  0E00               	movlw	0
  2851  0008FA  6E26               	movwf	_MOT_3,c
  2852  0008FC  C026  F027         	movff	_MOT_3,_MOT_1
  2853                           
  2854                           ;main.c: 284: winding = 0;
  2855  000900  0E00               	movlw	0
  2856  000902  6E22               	movwf	_winding,c
  2857                           
  2858                           ;main.c: 285: MOT_4 = 1;
  2859  000904  0E01               	movlw	1
  2860  000906  6E53               	movwf	_MOT_4,c
  2861                           
  2862                           ;main.c: 286: DIR_4 = 1;
  2863  000908  0E01               	movlw	1
  2864  00090A  6E1D               	movwf	_DIR_4,c
  2865                           
  2866                           ;main.c: 287: move_4 = 1;
  2867  00090C  0E01               	movlw	1
  2868  00090E  6E23               	movwf	_move_4,c
  2869                           
  2870                           ;main.c: 289: finish_flag = 1;
  2871  000910  0E01               	movlw	1
  2872  000912  6E1B               	movwf	_finish_flag,c
  2873  000914  0012               	return		;funcret
  2874  000916                     __end_ofi2_finish:
  2875                           	opt stack 0
  2876                           pclatu	equ	0xFFB
  2877                           pclath	equ	0xFFA
  2878                           tblptru	equ	0xFF8
  2879                           tblptrh	equ	0xFF7
  2880                           tblptrl	equ	0xFF6
  2881                           tablat	equ	0xFF5
  2882                           prodh	equ	0xFF4
  2883                           prodl	equ	0xFF3
  2884                           intcon	equ	0xFF2
  2885                           intcon2	equ	0xFF1
  2886                           intcon3	equ	0xFF0
  2887                           postinc0	equ	0xFEE
  2888                           fsr0h	equ	0xFEA
  2889                           fsr0l	equ	0xFE9
  2890                           wreg	equ	0xFE8
  2891                           postdec1	equ	0xFE5
  2892                           fsr1h	equ	0xFE2
  2893                           fsr1l	equ	0xFE1
  2894                           indf2	equ	0xFDF
  2895                           fsr2h	equ	0xFDA
  2896                           fsr2l	equ	0xFD9
  2897                           status	equ	0xFD8
  2898                           
  2899 ;; *************** function _mot_3_step_count *****************
  2900 ;; Defined at:
  2901 ;;		line 247 in file "main.c"
  2902 ;; Parameters:    Size  Location     Type
  2903 ;;  l               2    6[COMRAM] unsigned int 
  2904 ;;  ms              2    8[COMRAM] unsigned int 
  2905 ;; Auto vars:     Size  Location     Type
  2906 ;;		None
  2907 ;; Return value:  Size  Location     Type
  2908 ;;                  2    6[COMRAM] unsigned int 
  2909 ;; Registers used:
  2910 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2911 ;; Tracked objects:
  2912 ;;		On entry : 0/0
  2913 ;;		On exit  : 0/0
  2914 ;;		Unchanged: 0/0
  2915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2916 ;;      Params:         4       0       0       0       0       0       0       0       0
  2917 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2918 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2919 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2920 ;;Total ram usage:        6 bytes
  2921 ;; Hardware stack levels used:    1
  2922 ;; Hardware stack levels required when called:    1
  2923 ;; This function calls:
  2924 ;;		i2___wmul
  2925 ;; This function is called by:
  2926 ;;		_high_isr
  2927 ;; This function uses a non-reentrant model
  2928 ;;
  2929                           
  2930                           	psect	text12
  2931  0008AE                     __ptext12:
  2932                           	opt stack 0
  2933  0008AE                     _mot_3_step_count:
  2934                           	opt stack 27
  2935                           
  2936                           ;main.c: 249: return (ms * l) / 2;
  2937                           
  2938                           ;incstack = 0
  2939  0008AE  C030  F028         	movff	mot_3_step_count@ms,i2___wmul@multiplier
  2940  0008B2  C031  F029         	movff	mot_3_step_count@ms+1,i2___wmul@multiplier+1
  2941  0008B6  C02E  F02A         	movff	mot_3_step_count@l,i2___wmul@multiplicand
  2942  0008BA  C02F  F02B         	movff	mot_3_step_count@l+1,i2___wmul@multiplicand+1
  2943  0008BE  EC44  F004         	call	i2___wmul	;wreg free
  2944  0008C2  90D8               	bcf	status,0,c
  2945  0008C4  3029               	rrcf	?i2___wmul+1,w,c
  2946  0008C6  6E32               	movwf	??_mot_3_step_count& (0+255),c
  2947  0008C8  3028               	rrcf	?i2___wmul,w,c
  2948  0008CA  6E2E               	movwf	?_mot_3_step_count,c
  2949  0008CC  C032  F02F         	movff	??_mot_3_step_count,?_mot_3_step_count+1
  2950  0008D0  0012               	return	
  2951  0008D2                     __end_of_mot_3_step_count:
  2952                           	opt stack 0
  2953                           pclatu	equ	0xFFB
  2954                           pclath	equ	0xFFA
  2955                           tblptru	equ	0xFF8
  2956                           tblptrh	equ	0xFF7
  2957                           tblptrl	equ	0xFF6
  2958                           tablat	equ	0xFF5
  2959                           prodh	equ	0xFF4
  2960                           prodl	equ	0xFF3
  2961                           intcon	equ	0xFF2
  2962                           intcon2	equ	0xFF1
  2963                           intcon3	equ	0xFF0
  2964                           postinc0	equ	0xFEE
  2965                           fsr0h	equ	0xFEA
  2966                           fsr0l	equ	0xFE9
  2967                           wreg	equ	0xFE8
  2968                           postdec1	equ	0xFE5
  2969                           fsr1h	equ	0xFE2
  2970                           fsr1l	equ	0xFE1
  2971                           indf2	equ	0xFDF
  2972                           fsr2h	equ	0xFDA
  2973                           fsr2l	equ	0xFD9
  2974                           status	equ	0xFD8
  2975                           
  2976 ;; *************** function i2___wmul *****************
  2977 ;; Defined at:
  2978 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
  2979 ;; Parameters:    Size  Location     Type
  2980 ;;  multiplier      2    0[COMRAM] unsigned int 
  2981 ;;  multiplicand    2    2[COMRAM] unsigned int 
  2982 ;; Auto vars:     Size  Location     Type
  2983 ;;  __wmul          2    4[COMRAM] unsigned int 
  2984 ;; Return value:  Size  Location     Type
  2985 ;;                  2    0[COMRAM] unsigned int 
  2986 ;; Registers used:
  2987 ;;		wreg, status,2, status,0, prodl, prodh
  2988 ;; Tracked objects:
  2989 ;;		On entry : 0/0
  2990 ;;		On exit  : 0/0
  2991 ;;		Unchanged: 0/0
  2992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2993 ;;      Params:         4       0       0       0       0       0       0       0       0
  2994 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2995 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2996 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2997 ;;Total ram usage:        6 bytes
  2998 ;; Hardware stack levels used:    1
  2999 ;; This function calls:
  3000 ;;		Nothing
  3001 ;; This function is called by:
  3002 ;;		_mot_3_step_count
  3003 ;; This function uses a non-reentrant model
  3004 ;;
  3005                           
  3006                           	psect	text13
  3007  000888                     __ptext13:
  3008                           	opt stack 0
  3009  000888                     i2___wmul:
  3010                           	opt stack 27
  3011                           
  3012                           ;incstack = 0
  3013  000888  5028               	movf	i2___wmul@multiplier,w,c
  3014  00088A  022A               	mulwf	i2___wmul@multiplicand,c
  3015  00088C  CFF3 F02C          	movff	prodl,i2___wmul@product
  3016  000890  CFF4 F02D          	movff	prodh,i2___wmul@product+1
  3017  000894  5028               	movf	i2___wmul@multiplier,w,c
  3018  000896  022B               	mulwf	i2___wmul@multiplicand+1,c
  3019  000898  50F3               	movf	prodl,w,c
  3020  00089A  262D               	addwf	i2___wmul@product+1,f,c
  3021  00089C  5029               	movf	i2___wmul@multiplier+1,w,c
  3022  00089E  022A               	mulwf	i2___wmul@multiplicand,c
  3023  0008A0  50F3               	movf	prodl,w,c
  3024  0008A2  262D               	addwf	i2___wmul@product+1,f,c
  3025  0008A4  C02C  F028         	movff	i2___wmul@product,?i2___wmul
  3026  0008A8  C02D  F029         	movff	i2___wmul@product+1,?i2___wmul+1
  3027  0008AC  0012               	return	
  3028  0008AE                     __end_ofi2___wmul:
  3029                           	opt stack 0
  3030  0000                     pclatu	equ	0xFFB
  3031                           pclath	equ	0xFFA
  3032                           tblptru	equ	0xFF8
  3033                           tblptrh	equ	0xFF7
  3034                           tblptrl	equ	0xFF6
  3035                           tablat	equ	0xFF5
  3036                           prodh	equ	0xFF4
  3037                           prodl	equ	0xFF3
  3038                           intcon	equ	0xFF2
  3039                           intcon2	equ	0xFF1
  3040                           intcon3	equ	0xFF0
  3041                           postinc0	equ	0xFEE
  3042                           fsr0h	equ	0xFEA
  3043                           fsr0l	equ	0xFE9
  3044                           wreg	equ	0xFE8
  3045                           postdec1	equ	0xFE5
  3046                           fsr1h	equ	0xFE2
  3047                           fsr1l	equ	0xFE1
  3048                           indf2	equ	0xFDF
  3049                           fsr2h	equ	0xFDA
  3050                           fsr2l	equ	0xFD9
  3051                           status	equ	0xFD8
  3052                           pclatu	equ	0xFFB
  3053                           pclath	equ	0xFFA
  3054                           tblptru	equ	0xFF8
  3055                           tblptrh	equ	0xFF7
  3056                           tblptrl	equ	0xFF6
  3057                           tablat	equ	0xFF5
  3058                           prodh	equ	0xFF4
  3059                           prodl	equ	0xFF3
  3060                           intcon	equ	0xFF2
  3061                           intcon2	equ	0xFF1
  3062                           intcon3	equ	0xFF0
  3063                           postinc0	equ	0xFEE
  3064                           fsr0h	equ	0xFEA
  3065                           fsr0l	equ	0xFE9
  3066                           wreg	equ	0xFE8
  3067                           postdec1	equ	0xFE5
  3068                           fsr1h	equ	0xFE2
  3069                           fsr1l	equ	0xFE1
  3070                           indf2	equ	0xFDF
  3071                           fsr2h	equ	0xFDA
  3072                           fsr2l	equ	0xFD9
  3073                           status	equ	0xFD8
  3074                           
  3075                           	psect	rparam
  3076  0000                     pclatu	equ	0xFFB
  3077                           pclath	equ	0xFFA
  3078                           tblptru	equ	0xFF8
  3079                           tblptrh	equ	0xFF7
  3080                           tblptrl	equ	0xFF6
  3081                           tablat	equ	0xFF5
  3082                           prodh	equ	0xFF4
  3083                           prodl	equ	0xFF3
  3084                           intcon	equ	0xFF2
  3085                           intcon2	equ	0xFF1
  3086                           intcon3	equ	0xFF0
  3087                           postinc0	equ	0xFEE
  3088                           fsr0h	equ	0xFEA
  3089                           fsr0l	equ	0xFE9
  3090                           wreg	equ	0xFE8
  3091                           postdec1	equ	0xFE5
  3092                           fsr1h	equ	0xFE2
  3093                           fsr1l	equ	0xFE1
  3094                           indf2	equ	0xFDF
  3095                           fsr2h	equ	0xFDA
  3096                           fsr2l	equ	0xFD9
  3097                           status	equ	0xFD8
  3098                           
  3099                           	psect	temp
  3100  000054                     btemp:
  3101                           	opt stack 0
  3102  000054                     	ds	1
  3103  0000                     int$flags	set	btemp
  3104  0000                     wtemp6	set	btemp+1
  3105                           pclatu	equ	0xFFB
  3106                           pclath	equ	0xFFA
  3107                           tblptru	equ	0xFF8
  3108                           tblptrh	equ	0xFF7
  3109                           tblptrl	equ	0xFF6
  3110                           tablat	equ	0xFF5
  3111                           prodh	equ	0xFF4
  3112                           prodl	equ	0xFF3
  3113                           intcon	equ	0xFF2
  3114                           intcon2	equ	0xFF1
  3115                           intcon3	equ	0xFF0
  3116                           postinc0	equ	0xFEE
  3117                           fsr0h	equ	0xFEA
  3118                           fsr0l	equ	0xFE9
  3119                           wreg	equ	0xFE8
  3120                           postdec1	equ	0xFE5
  3121                           fsr1h	equ	0xFE2
  3122                           fsr1l	equ	0xFE1
  3123                           indf2	equ	0xFDF
  3124                           fsr2h	equ	0xFDA
  3125                           fsr2l	equ	0xFD9
  3126                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        18
    BSS         74
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     32      83
    BANK0           160      8      49
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    _high_isr->_mot_3_step_count
    _mot_3_step_count->i2___wmul

Critical Paths under _main in BANK0

    _main->___wmul

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    2660
                                              6 BANK0      2     2      0
                _ConfigureOscillator
                            _InitApp
                             ___wmul
                             _finish
                              _reset
                       _speed_select
                         _trans_Char
                             _unwind
                          _zero_mark
 ---------------------------------------------------------------------------------
 (1) _zero_mark                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _unwind                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _trans_Char                                           1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _speed_select                                         4     2      2     121
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _reset                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _finish                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4    2508
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigureOscillator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _high_isr                                            20    20      0     405
                                             12 COMRAM    20    20      0
                   _mot_3_step_count
                           i2_finish
 ---------------------------------------------------------------------------------
 (3) i2_finish                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _mot_3_step_count                                     6     2      4     405
                                              6 COMRAM     6     2      4
                           i2___wmul
 ---------------------------------------------------------------------------------
 (4) i2___wmul                                             6     2      4     209
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfigureOscillator
   _InitApp
   ___wmul
   _finish
   _reset
   _speed_select
   _trans_Char
   _unwind
   _zero_mark

 _high_isr (ROOT)
   _mot_3_step_count
     i2___wmul
   i2_finish

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      8      31       5       30.6%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     20      53       1       88.3%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      84      20        0.0%
DATA                 0      0      84       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Mon Aug 26 06:47:06 2019

                           _n 0013           ___wmul@multiplicand 0085                   __CFG_BORV$3 000000  
                __CFG_CP0$OFF 000000                  __CFG_CP1$OFF 000000                  __CFG_CP2$OFF 000000  
                __CFG_CP3$OFF 000000                           l220 001A                           l221 0408  
                         l222 01B6                           l303 083A                           l304 0818  
                         l240 02AA                           l224 01F6                           l305 085A  
                         l306 0830                           l226 023E                           l243 0294  
                         l227 0214                           l252 0310                           l236 026A  
                         l261 0336                           l253 02E0                           l237 025C  
                         l263 0346                           l255 02F8                           l249 02BE  
                         l266 03A4                           l259 0328                  __CFG_CPB$OFF 000000  
                         _PR2 000FCB                  __CFG_CPD$OFF 000000                           _RX9 007D5E  
                         _TX9 007D66                  __CFG_BOR$OFF 000000                           wreg 000FE8  
                __CFG_LVP$OFF 000000                  __CFG_WDT$OFF 000000                          l2018 0954  
                        l2160 039E                          _BRGH 007D62                          _CREN 007D5C  
                        u2100 02DC                          u2120 02F2                          u2130 02F4  
                        _LATA 000F89                          u2150 030A                          _LATB 000F8A  
                        _LATC 000F8B                          u2160 030C                          u2090 02DA  
                        u2180 0322                          u2190 0324                          u2277 0414  
                        u1805 0030                          u1910 020C                          u1806 0032  
                        u1815 003A                          u1840 005E                          u1816 003C  
                        u1825 0044                          u1770 0920                          u1826 0046  
                        u1835 004E                          u1780 0922                          u1836 0050  
                        u1858 0062                          u1795 0026                          u1796 0028  
                        _RCIE 007CED                          i2l93 057A                          i2l96 04DE  
                        i2l97 0508                          _TMR0 000FD6                          _TMR1 000FCE  
                        _SPEN 007D5F                          _TXIE 007CEC                          _TXIF 007CF4  
                        _TXEN 007D65                          _SYNC 007D64                          _main 0012  
                        _send 0074                          fsr0h 000FEA                          fsr1h 000FE2  
                        fsr2h 000FDA                          fsr0l 000FE9                          indf2 000FDF  
                        fsr1l 000FE1                          fsr2l 000FD9                          btemp 0054  
                        prodh 000FF4                          prodl 000FF3                          start 000E  
               __CFG_IESO$OFF 000000                 __CFG_MCLRE$ON 000000                  ___param_bank 000000  
             __end_of_InitApp 07A8                   _unwind_flag 0019                 __CFG_PLLDIV$1 000000  
              __CFG_CCP2MX$ON 000000                         ?_main 0028                         _ADRES 000FC3  
                       _BRG16 007DC3                         _DIR_1 001F                         _DIR_2 001E  
                       _DIR_3 0025                         _DIR_4 001D                         i2l102 061C  
                       i2l103 05A8                         i2l120 06A0                         i2l112 0664  
                       i2l104 05C6                         i2l114 0680                         i2l115 0676  
                       i2l107 0616                         i2l109 064C                         i2l119 0692  
                       _RCREG 000FAE                         _MOT_1 0027                         _MOT_2 0024  
                       _MOT_3 0026                         _MOT_4 0053                         _SPBRG 000FAF  
                       _PORTA 000F80                         _PORTB 000F81                         _PORTC 000F82  
               __CFG_USBDIV$1 000000                         _TXREG 000FAD           _ConfigureOscillator 096A  
               __CFG_PWRT$OFF 000000                 __CFG_WRT0$OFF 000000                 __CFG_WRT1$OFF 000000  
               __CFG_WRT2$OFF 000000                 __CFG_WRT3$OFF 000000                __CFG_EBTR0$OFF 000000  
              __CFG_FCMEN$OFF 000000                __CFG_EBTR1$OFF 000000                __CFG_EBTR2$OFF 000000  
              __CFG_EBTR3$OFF 000000                 __CFG_WRTB$OFF 000000                 __CFG_WRTC$OFF 000000  
               __CFG_WRTD$OFF 000000                __CFG_EBTRB$OFF 000000                         _reset 097C  
                       _turns 0050                   _turns_count 0003                         pclath 000FFA  
                       tablat 000FF5              __end_ofi2___wmul 08AE                         status 000FD8  
                       wtemp6 0055              __end_ofi2_finish 0916          ?_ConfigureOscillator 0028  
             __initialization 07A8                  __end_of_main 0422                        ??_main 0089  
               __activetblptr 000002                        _ADCON1 000FC1                        _ADCON2 000FC0  
                      _CCPR1L 000FBE                        ?_reset 0028                        _GODONE 007E11  
                      i2l1654 0508                        i2l1686 0616                     ??_InitApp 0083  
       ??_ConfigureOscillator 0083                __CFG_XINST$OFF 000000              __end_of_high_isr 06EC  
   __size_of_mot_3_step_count 0024                        ___wmul 0860                        _enable 001A  
                      _finish 08D2                        _length 004E                        _recibi 0021  
                      clear_0 07EE                        clear_1 07FA                        _move_4 0023  
                      _motor1 008B                        _motor2 007D                        _unwind 0916  
                __pdataCOMRAM 0048                        tblptrh 000FF7                        tblptrl 000FF6  
                      tblptru 000FF8                    __accesstop 0060       __end_of__initialization 0800  
             __CFG_PBADEN$OFF 000000                 ___rparam_used 000001                __pcstackCOMRAM 0028  
                __pidataBANK0 0976                 __end_of_reset 0980                     ?i2___wmul 0028  
                   ?i2_finish 0028                 trans_Char@out 0083                       ??_reset 0083  
                  __pbssBANK0 0060                       ?___wmul 0083                       ?_finish 0028  
          _ADC_previous_value 0015                       ?_unwind 0028                    ??i2___wmul 002C  
                  ??i2_finish 0028                       i2u94_40 04B2                       i2u95_48 04B4  
                     i2u99_41 051A                     ?_high_isr 0028               __CFG_VREGEN$OFF 000000  
          __size_of_zero_mark 001A                       _InitApp 06EC                       __Hparam 0000  
                     __Lparam 0000              _mot_3_step_count 08AE               __size_of___wmul 0028  
                     _caliber 0001               __size_of_finish 0022               __CFG_STVREN$OFF 000000  
                     __pcinit 07A8                       __ramtop 0800                       __ptext0 0012  
                     __ptext1 0936                       __ptext2 0916                       __ptext3 0950  
                     __ptext4 080E                       __ptext5 097C                       __ptext6 08D2  
                     __ptext7 0860                       __ptext8 06EC                       __ptext9 096A  
                  _param_flag 001C                     _T0CONbits 000FD5                       _count_1 004C  
                     _count_2 008F                       _count_3 004A                       _count_4 008D  
             __size_of_unwind 0020                     _T1CONbits 000FCD                       _palabra 0060  
                   _T2CONbits 000FCA                       _winding 0022              _mot_4_step_count 007B  
                     _steps_4 0017                    ??_high_isr 0034                __pintcode_body 0422  
        end_of_initialization 0800                 __Lmediumconst 0000                       int_func 0422  
         i2___wmul@multiplier 0028                 ?_speed_select 0083                       postdec1 000FE5  
                     postinc0 000FEE                     _PORTAbits 000F80                     _PORTBbits 000F81  
                   _PORTCbits 000F82             __end_of_zero_mark 0950                     _TRISAbits 000F92  
                   _TRISBbits 000F93                     _TRISCbits 000F94                    _trans_Char 0950  
 __end_of_ConfigureOscillator 0976                   _CCP1CONbits 000FBD                ??_speed_select 0085  
              __end_of___wmul 0888                 __pidataCOMRAM 095E                __end_of_finish 08F4  
            i2___wmul@product 002C                __end_of_unwind 0936           start_initialization 07A8  
           __size_ofi2___wmul 0026             __size_ofi2_finish 0022                      ??___wmul 0087  
                    ??_finish 0083                   __pdataBANK0 008B              __CFG_LPT1OSC$OFF 000000  
                    ??_unwind 0083                   __pbssCOMRAM 0001                 __pcstackBANK0 0083  
                 ?_trans_Char 0028      __end_of_mot_3_step_count 08D2             __size_of_high_isr 06E4  
                    ?_InitApp 0028                     __pintcode 0008          __end_of_speed_select 0860  
              __size_of_reset 0004                ___wmul@product 0087                      _LATAbits 000F89  
                    _LATBbits 000F8A                      _LATCbits 000F8B                      _IPR1bits 000F9F  
                    _PIE1bits 000F9D                      _RA0state 0020                      i2u100_40 052E  
                    i2u110_40 05B8                      i2u101_48 0530                      i2u102_41 0560  
                    i2u103_40 056C                      i2u111_48 05BA                      i2u104_40 056E  
                    i2u114_40 05DC                      i2u107_40 0598                      i2u115_48 05DE  
                    i2u108_48 059A                      i2u126_40 069C                      i2u127_40 069E  
                    _PIR1bits 000F9E                      _RCONbits 000FD0              __CFG_WDTPS$32768 000000  
         __size_of_trans_Char 000E                   _finish_flag 001B                    _ADCON0bits 000FC2  
           ___wmul@multiplier 0083                      i2___wmul 0888                      _PWM_duty 0048  
                    i2_finish 08F4               _ADC_value_press 000F                     _zero_flag 0052  
                   _zero_mark 0936                   _INTCON2bits 000FF1                   _INTCON3bits 000FF0  
                   copy_data0 07BC                     copy_data1 07DC              __size_of_InitApp 00BC  
                    __Hrparam 0000                      __Lrparam 0000         i2___wmul@multiplicand 002A  
                  ?_zero_mark 0028                      __ptext11 08F4                      __ptext12 08AE  
                    __ptext13 0888                      _high_isr 0008                 __size_of_main 0410  
                 _mot_1_steps 0009                   _mot_3_steps 0007                   _mot_4_steps 0005  
__size_of_ConfigureOscillator 000C                      _overflow 0011                      int$flags 0054  
          mot_3_step_count@ms 0030         __size_of_speed_select 0052         __CFG_CPUDIV$OSC1_PLL2 000000  
                  _INTCONbits 000FF2                  ??_trans_Char 0083                   _MOT_1_count 000D  
                 _MOT_2_count 0081                   _MOT_3_count 000B                   _MOT_4_count 007F  
           ?_mot_3_step_count 002E                      intlevel2 0000            ??_mot_3_step_count 0032  
                  _OSCCONbits 000FD3                  _speed_select 080E             mot_3_step_count@l 002E  
          __end_of_trans_Char 095E           __CFG_FOSC$INTOSC_EC 000000                   ??_zero_mark 0083  
             speed_select@var 0083  

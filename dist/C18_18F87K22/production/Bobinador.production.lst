

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Thu Aug 08 12:23:54 2019

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F2550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    14                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    15                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    16                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    18  0000                     
    19                           ; Version 1.45
    20                           ; Generated 16/11/2017 GMT
    21                           ; 
    22                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC18F2550 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     
    54                           	psect	idataCOMRAM
    55  0001EA                     __pidataCOMRAM:
    56                           	opt stack 0
    57                           
    58                           ;initializer for _motor1
    59  0001EA  0001               	dw	1
    60  0000                     _TMR0	set	4054
    61  0000                     _SPBRG	set	4015
    62  0000                     _TRISCbits	set	3988
    63  0000                     _T0CONbits	set	4053
    64  0000                     _INTCON2bits	set	4081
    65  0000                     _RCONbits	set	4048
    66  0000                     _TRISAbits	set	3986
    67  0000                     _ADCON1	set	4033
    68  0000                     _LATC	set	3979
    69  0000                     _PORTC	set	3970
    70  0000                     _LATB	set	3978
    71  0000                     _PORTB	set	3969
    72  0000                     _LATA	set	3977
    73  0000                     _PORTA	set	3968
    74  0000                     _OSCCONbits	set	4051
    75  0000                     _TXREG	set	4013
    76  0000                     _RCREG	set	4014
    77  0000                     _PIR1bits	set	3998
    78  0000                     _PORTAbits	set	3968
    79  0000                     _LATAbits	set	3977
    80  0000                     _INTCONbits	set	4082
    81  0000                     _TXIE	set	31980
    82  0000                     _RCIE	set	31981
    83  0000                     _RX9	set	32094
    84  0000                     _TX9	set	32102
    85  0000                     _CREN	set	32092
    86  0000                     _TXEN	set	32101
    87  0000                     _SYNC	set	32100
    88  0000                     _SPEN	set	32095
    89  0000                     _BRG16	set	32195
    90  0000                     _BRGH	set	32098
    91  0000                     _TXIF	set	31988
    92                           
    93                           ; #config settings
    94  0000                     
    95                           	psect	cinit
    96  0001AC                     __pcinit:
    97                           	opt stack 0
    98  0001AC                     start_initialization:
    99                           	opt stack 0
   100  0001AC                     __initialization:
   101                           	opt stack 0
   102                           
   103                           ; Initialize objects allocated to COMRAM (2 bytes)
   104                           ; load TBLPTR registers with __pidataCOMRAM
   105  0001AC  0EEA               	movlw	low __pidataCOMRAM
   106  0001AE  6EF6               	movwf	tblptrl,c
   107  0001B0  0E01               	movlw	high __pidataCOMRAM
   108  0001B2  6EF7               	movwf	tblptrh,c
   109  0001B4  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   110  0001B6  6EF8               	movwf	tblptru,c
   111  0001B8  0009               	tblrd		*+	;fetch initializer
   112  0001BA  CFF5 F033          	movff	tablat,__pdataCOMRAM
   113  0001BE  0009               	tblrd		*+	;fetch initializer
   114  0001C0  CFF5 F034          	movff	tablat,__pdataCOMRAM+1
   115                           
   116                           ; Clear objects allocated to COMRAM (31 bytes)
   117  0001C4  EE00  F001         	lfsr	0,__pbssCOMRAM
   118  0001C8  0E1F               	movlw	31
   119  0001CA                     clear_0:
   120  0001CA  6AEE               	clrf	postinc0,c
   121  0001CC  06E8               	decf	wreg,f,c
   122  0001CE  E1FD               	bnz	clear_0
   123  0001D0                     end_of_initialization:
   124                           	opt stack 0
   125  0001D0                     __end_of__initialization:
   126                           	opt stack 0
   127  0001D0  9035               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   128  0001D2  9235               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   129  0001D4  0E00               	movlw	low (__Lmediumconst shr (0+16))
   130  0001D6  6EF8               	movwf	tblptru,c
   131  0001D8  0100               	movlb	0
   132  0001DA  EFB4  F000         	goto	_main	;jump to C main() function
   133                           tblptru	equ	0xFF8
   134                           tblptrh	equ	0xFF7
   135                           tblptrl	equ	0xFF6
   136                           tablat	equ	0xFF5
   137                           postinc0	equ	0xFEE
   138                           wreg	equ	0xFE8
   139                           
   140                           	psect	bssCOMRAM
   141  000001                     __pbssCOMRAM:
   142                           	opt stack 0
   143  000001                     _palabra:
   144                           	opt stack 0
   145  000001                     	ds	20
   146  000015                     _get_value:
   147                           	opt stack 0
   148  000015                     	ds	2
   149  000017                     _motor2:
   150                           	opt stack 0
   151  000017                     	ds	2
   152  000019                     _overflow:
   153                           	opt stack 0
   154  000019                     	ds	2
   155  00001B                     _n:
   156                           	opt stack 0
   157  00001B                     	ds	2
   158  00001D                     _DIR_1:
   159                           	opt stack 0
   160  00001D                     	ds	1
   161  00001E                     _RA0state:
   162                           	opt stack 0
   163  00001E                     	ds	1
   164  00001F                     _recibi:
   165                           	opt stack 0
   166  00001F                     	ds	1
   167                           tblptru	equ	0xFF8
   168                           tblptrh	equ	0xFF7
   169                           tblptrl	equ	0xFF6
   170                           tablat	equ	0xFF5
   171                           postinc0	equ	0xFEE
   172                           wreg	equ	0xFE8
   173                           
   174                           	psect	dataCOMRAM
   175  000033                     __pdataCOMRAM:
   176                           	opt stack 0
   177  000033                     _motor1:
   178                           	opt stack 0
   179  000033                     	ds	2
   180                           tblptru	equ	0xFF8
   181                           tblptrh	equ	0xFF7
   182                           tblptrl	equ	0xFF6
   183                           tablat	equ	0xFF5
   184                           postinc0	equ	0xFEE
   185                           wreg	equ	0xFE8
   186                           
   187                           	psect	cstackCOMRAM
   188  000020                     __pcstackCOMRAM:
   189                           	opt stack 0
   190  000020                     ??_high_isr:
   191  000020                     
   192                           ; 1 bytes @ 0x0
   193  000020                     	ds	19
   194  000033                     tblptru	equ	0xFF8
   195                           tblptrh	equ	0xFF7
   196                           tblptrl	equ	0xFF6
   197                           tablat	equ	0xFF5
   198                           postinc0	equ	0xFEE
   199                           wreg	equ	0xFE8
   200                           
   201                           ; 1 bytes @ 0x13
   202 ;;
   203 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   204 ;;
   205 ;; *************** function _main *****************
   206 ;; Defined at:
   207 ;;		line 45 in file "main.c"
   208 ;; Parameters:    Size  Location     Type
   209 ;;		None
   210 ;; Auto vars:     Size  Location     Type
   211 ;;		None
   212 ;; Return value:  Size  Location     Type
   213 ;;                  1    wreg      void 
   214 ;; Registers used:
   215 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   216 ;; Tracked objects:
   217 ;;		On entry : 0/0
   218 ;;		On exit  : 0/0
   219 ;;		Unchanged: 0/0
   220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   221 ;;      Params:         0       0       0       0       0       0       0       0       0
   222 ;;      Locals:         0       0       0       0       0       0       0       0       0
   223 ;;      Temps:          0       0       0       0       0       0       0       0       0
   224 ;;      Totals:         0       0       0       0       0       0       0       0       0
   225 ;;Total ram usage:        0 bytes
   226 ;; Hardware stack levels required when called:    2
   227 ;; This function calls:
   228 ;;		_ConfigureOscillator
   229 ;;		_InitApp
   230 ;; This function is called by:
   231 ;;		Startup code after reset
   232 ;; This function uses a non-reentrant model
   233 ;;
   234                           
   235                           	psect	text0
   236  000168                     __ptext0:
   237                           	opt stack 0
   238  000168                     _main:
   239                           	opt stack 29
   240                           
   241                           ;main.c: 47: ConfigureOscillator();
   242                           
   243                           ;incstack = 0
   244  000168  ECEF  F000         	call	_ConfigureOscillator	;wreg free
   245                           
   246                           ;main.c: 50: InitApp();
   247  00016C  EC84  F000         	call	_InitApp	;wreg free
   248  000170                     
   249                           ;main.c: 56: LATAbits.LA1 = DIR_1;
   250  000170  B01D               	btfsc	_DIR_1,0,c
   251  000172  D002               	bra	u75
   252  000174  9289               	bcf	3977,1,c	;volatile
   253  000176  D001               	bra	u76
   254  000178                     u75:
   255  000178  8289               	bsf	3977,1,c	;volatile
   256  00017A                     u76:
   257                           
   258                           ;main.c: 58: if (recibi == 1) {
   259  00017A  041F               	decf	_recibi,w,c
   260  00017C  A4D8               	btfss	status,2,c
   261  00017E  D7F8               	goto	l63
   262                           
   263                           ;main.c: 59: recibi = 0;
   264  000180  0E00               	movlw	0
   265  000182  6E1F               	movwf	_recibi,c
   266                           
   267                           ;main.c: 60: switch (palabra[n]) {
   268  000184  D005               	goto	l65
   269  000186                     
   270                           ;main.c: 64: DIR_1 = 1;
   271  000186  0E01               	movlw	1
   272  000188  D001               	goto	L1
   273  00018A                     
   274                           ;main.c: 68: DIR_1 = 0;
   275  00018A  0E00               	movlw	0
   276  00018C                     L1:
   277  00018C  6E1D               	movwf	_DIR_1,c
   278                           
   279                           ;main.c: 70: }
   280                           
   281                           ;main.c: 69: break;
   282  00018E  D7F0               	goto	l63
   283  000190                     l65:
   284  000190  0E01               	movlw	low _palabra
   285  000192  241B               	addwf	_n,w,c
   286  000194  6ED9               	movwf	fsr2l,c
   287  000196  0E00               	movlw	high _palabra
   288  000198  201C               	addwfc	_n+1,w,c
   289  00019A  6EDA               	movwf	fsr2h,c
   290  00019C  50DF               	movf	indf2,w,c
   291                           
   292                           ; Switch size 1, requested type "space"
   293                           ; Number of cases is 2, Range of values is 49 to 50
   294                           ; switch strategies available:
   295                           ; Name         Instructions Cycles
   296                           ; simple_byte            7     4 (average)
   297                           ;	Chosen strategy is simple_byte
   298  00019E  0A31               	xorlw	49	; case 49
   299  0001A0  B4D8               	btfsc	status,2,c
   300  0001A2  D7F1               	goto	l66
   301  0001A4  0A03               	xorlw	3	; case 50
   302  0001A6  B4D8               	btfsc	status,2,c
   303  0001A8  D7F0               	goto	l68
   304  0001AA  D7E2               	goto	l63
   305  0001AC                     __end_of_main:
   306                           	opt stack 0
   307                           tblptru	equ	0xFF8
   308                           tblptrh	equ	0xFF7
   309                           tblptrl	equ	0xFF6
   310                           tablat	equ	0xFF5
   311                           postinc0	equ	0xFEE
   312                           wreg	equ	0xFE8
   313                           indf2	equ	0xFDF
   314                           fsr2h	equ	0xFDA
   315                           fsr2l	equ	0xFD9
   316                           status	equ	0xFD8
   317                           
   318 ;; *************** function _InitApp *****************
   319 ;; Defined at:
   320 ;;		line 28 in file "user.c"
   321 ;; Parameters:    Size  Location     Type
   322 ;;		None
   323 ;; Auto vars:     Size  Location     Type
   324 ;;		None
   325 ;; Return value:  Size  Location     Type
   326 ;;                  1    wreg      void 
   327 ;; Registers used:
   328 ;;		wreg, status,2
   329 ;; Tracked objects:
   330 ;;		On entry : 0/0
   331 ;;		On exit  : 0/0
   332 ;;		Unchanged: 0/0
   333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   334 ;;      Params:         0       0       0       0       0       0       0       0       0
   335 ;;      Locals:         0       0       0       0       0       0       0       0       0
   336 ;;      Temps:          0       0       0       0       0       0       0       0       0
   337 ;;      Totals:         0       0       0       0       0       0       0       0       0
   338 ;;Total ram usage:        0 bytes
   339 ;; Hardware stack levels used:    1
   340 ;; Hardware stack levels required when called:    1
   341 ;; This function calls:
   342 ;;		Nothing
   343 ;; This function is called by:
   344 ;;		_main
   345 ;; This function uses a non-reentrant model
   346 ;;
   347                           
   348                           	psect	text1
   349  000108                     __ptext1:
   350                           	opt stack 0
   351  000108                     _InitApp:
   352                           	opt stack 29
   353                           
   354                           ;user.c: 30: PORTA = 0;
   355                           
   356                           ;incstack = 0
   357  000108  0E00               	movlw	0
   358  00010A  6E80               	movwf	3968,c	;volatile
   359                           
   360                           ;user.c: 31: LATA = 0;
   361  00010C  0E00               	movlw	0
   362  00010E  6E89               	movwf	3977,c	;volatile
   363                           
   364                           ;user.c: 32: PORTB = 0;
   365  000110  0E00               	movlw	0
   366  000112  6E81               	movwf	3969,c	;volatile
   367                           
   368                           ;user.c: 33: LATB = 0;
   369  000114  0E00               	movlw	0
   370  000116  6E8A               	movwf	3978,c	;volatile
   371                           
   372                           ;user.c: 34: PORTC = 0;
   373  000118  0E00               	movlw	0
   374  00011A  6E82               	movwf	3970,c	;volatile
   375                           
   376                           ;user.c: 35: LATC = 0;
   377  00011C  0E00               	movlw	0
   378  00011E  6E8B               	movwf	3979,c	;volatile
   379                           
   380                           ;user.c: 37: ADCON1 = 0x0F;
   381  000120  0E0F               	movlw	15
   382  000122  6EC1               	movwf	4033,c	;volatile
   383                           
   384                           ;user.c: 39: TRISAbits.RA0 = 0;
   385  000124  9092               	bcf	3986,0,c	;volatile
   386                           
   387                           ;user.c: 40: TRISAbits.RA1 = 0;
   388  000126  9292               	bcf	3986,1,c	;volatile
   389                           
   390                           ;user.c: 42: RCONbits.IPEN = 0;
   391  000128  9ED0               	bcf	4048,7,c	;volatile
   392                           
   393                           ;user.c: 44: INTCONbits.GIE = 1;
   394  00012A  8EF2               	bsf	intcon,7,c	;volatile
   395                           
   396                           ;user.c: 45: INTCONbits.PEIE = 1;
   397  00012C  8CF2               	bsf	intcon,6,c	;volatile
   398                           
   399                           ;user.c: 46: INTCONbits.TMR0IE = 1;
   400  00012E  8AF2               	bsf	intcon,5,c	;volatile
   401                           
   402                           ;user.c: 47: INTCONbits.TMR0IF = 0;
   403  000130  94F2               	bcf	intcon,2,c	;volatile
   404                           
   405                           ;user.c: 48: INTCON2bits.TMR0IP = 1;
   406  000132  84F1               	bsf	intcon2,2,c	;volatile
   407                           
   408                           ;user.c: 49: T0CONbits.T08BIT = 1;
   409  000134  8CD5               	bsf	4053,6,c	;volatile
   410                           
   411                           ;user.c: 50: T0CONbits.T0CS = 0;
   412  000136  9AD5               	bcf	4053,5,c	;volatile
   413                           
   414                           ;user.c: 51: T0CONbits.PSA = 0;
   415  000138  96D5               	bcf	4053,3,c	;volatile
   416                           
   417                           ;user.c: 52: T0CONbits.T0PS = 0b101;
   418  00013A  50D5               	movf	4053,w,c	;volatile
   419  00013C  0BF8               	andlw	-8
   420  00013E  0905               	iorlw	5
   421  000140  6ED5               	movwf	4053,c	;volatile
   422                           
   423                           ;user.c: 53: TMR0 = 0x6;
   424  000142  0E00               	movlw	0
   425  000144  6ED7               	movwf	4055,c	;volatile
   426  000146  0E06               	movlw	6
   427  000148  6ED6               	movwf	4054,c	;volatile
   428                           
   429                           ;user.c: 55: TRISCbits.RC6 = 0;
   430  00014A  9C94               	bcf	3988,6,c	;volatile
   431                           
   432                           ;user.c: 56: TRISCbits.RC7 = 1;
   433  00014C  8E94               	bsf	3988,7,c	;volatile
   434                           
   435                           ;user.c: 57: BRGH = 1;
   436  00014E  84AC               	bsf	4012,2,c	;volatile
   437                           
   438                           ;user.c: 58: BRG16 = 1;
   439  000150  86B8               	bsf	4024,3,c	;volatile
   440                           
   441                           ;user.c: 59: SPBRG = 207;
   442  000152  0ECF               	movlw	207
   443  000154  6EAF               	movwf	4015,c	;volatile
   444                           
   445                           ;user.c: 60: SPEN = 1;
   446  000156  8EAB               	bsf	4011,7,c	;volatile
   447                           
   448                           ;user.c: 61: SYNC = 0;
   449  000158  98AC               	bcf	4012,4,c	;volatile
   450                           
   451                           ;user.c: 62: TXEN = 1;
   452  00015A  8AAC               	bsf	4012,5,c	;volatile
   453                           
   454                           ;user.c: 63: CREN = 1;
   455  00015C  88AB               	bsf	4011,4,c	;volatile
   456                           
   457                           ;user.c: 64: TX9 = 0;
   458  00015E  9CAC               	bcf	4012,6,c	;volatile
   459                           
   460                           ;user.c: 65: RX9 = 0;
   461  000160  9CAB               	bcf	4011,6,c	;volatile
   462                           
   463                           ;user.c: 67: RCIE = 1;
   464  000162  8A9D               	bsf	3997,5,c	;volatile
   465                           
   466                           ;user.c: 68: TXIE = 0;
   467  000164  989D               	bcf	3997,4,c	;volatile
   468  000166  0012               	return		;funcret
   469  000168                     __end_of_InitApp:
   470                           	opt stack 0
   471                           tblptru	equ	0xFF8
   472                           tblptrh	equ	0xFF7
   473                           tblptrl	equ	0xFF6
   474                           tablat	equ	0xFF5
   475                           intcon	equ	0xFF2
   476                           intcon2	equ	0xFF1
   477                           postinc0	equ	0xFEE
   478                           wreg	equ	0xFE8
   479                           indf2	equ	0xFDF
   480                           fsr2h	equ	0xFDA
   481                           fsr2l	equ	0xFD9
   482                           status	equ	0xFD8
   483                           
   484 ;; *************** function _ConfigureOscillator *****************
   485 ;; Defined at:
   486 ;;		line 24 in file "system.c"
   487 ;; Parameters:    Size  Location     Type
   488 ;;		None
   489 ;; Auto vars:     Size  Location     Type
   490 ;;		None
   491 ;; Return value:  Size  Location     Type
   492 ;;                  1    wreg      void 
   493 ;; Registers used:
   494 ;;		wreg, status,2
   495 ;; Tracked objects:
   496 ;;		On entry : 0/0
   497 ;;		On exit  : 0/0
   498 ;;		Unchanged: 0/0
   499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   500 ;;      Params:         0       0       0       0       0       0       0       0       0
   501 ;;      Locals:         0       0       0       0       0       0       0       0       0
   502 ;;      Temps:          0       0       0       0       0       0       0       0       0
   503 ;;      Totals:         0       0       0       0       0       0       0       0       0
   504 ;;Total ram usage:        0 bytes
   505 ;; Hardware stack levels used:    1
   506 ;; Hardware stack levels required when called:    1
   507 ;; This function calls:
   508 ;;		Nothing
   509 ;; This function is called by:
   510 ;;		_main
   511 ;; This function uses a non-reentrant model
   512 ;;
   513                           
   514                           	psect	text2
   515  0001DE                     __ptext2:
   516                           	opt stack 0
   517  0001DE                     _ConfigureOscillator:
   518                           	opt stack 29
   519                           
   520                           ;system.c: 27: OSCCONbits.IRCF = 0b111;
   521                           
   522                           ;incstack = 0
   523  0001DE  88D3               	bsf	4051,4,c	;volatile
   524  0001E0  8AD3               	bsf	4051,5,c	;volatile
   525  0001E2  8CD3               	bsf	4051,6,c	;volatile
   526                           
   527                           ;system.c: 28: OSCCONbits.SCS = 0b11;
   528  0001E4  0E03               	movlw	3
   529  0001E6  12D3               	iorwf	4051,f,c	;volatile
   530  0001E8  0012               	return		;funcret
   531  0001EA                     __end_of_ConfigureOscillator:
   532                           	opt stack 0
   533                           tblptru	equ	0xFF8
   534                           tblptrh	equ	0xFF7
   535                           tblptrl	equ	0xFF6
   536                           tablat	equ	0xFF5
   537                           intcon	equ	0xFF2
   538                           intcon2	equ	0xFF1
   539                           postinc0	equ	0xFEE
   540                           wreg	equ	0xFE8
   541                           indf2	equ	0xFDF
   542                           fsr2h	equ	0xFDA
   543                           fsr2l	equ	0xFD9
   544                           status	equ	0xFD8
   545                           
   546 ;; *************** function _high_isr *****************
   547 ;; Defined at:
   548 ;;		line 30 in file "interrupts.c"
   549 ;; Parameters:    Size  Location     Type
   550 ;;		None
   551 ;; Auto vars:     Size  Location     Type
   552 ;;		None
   553 ;; Return value:  Size  Location     Type
   554 ;;                  1    wreg      void 
   555 ;; Registers used:
   556 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   557 ;; Tracked objects:
   558 ;;		On entry : 0/0
   559 ;;		On exit  : 0/0
   560 ;;		Unchanged: 0/0
   561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   562 ;;      Params:         0       0       0       0       0       0       0       0       0
   563 ;;      Locals:         0       0       0       0       0       0       0       0       0
   564 ;;      Temps:         19       0       0       0       0       0       0       0       0
   565 ;;      Totals:        19       0       0       0       0       0       0       0       0
   566 ;;Total ram usage:       19 bytes
   567 ;; Hardware stack levels used:    1
   568 ;; This function calls:
   569 ;;		Nothing
   570 ;; This function is called by:
   571 ;;		Interrupt level 2
   572 ;; This function uses a non-reentrant model
   573 ;;
   574                           
   575                           	psect	intcode
   576  000008                     __pintcode:
   577                           	opt stack 0
   578  000008                     _high_isr:
   579                           	opt stack 29
   580                           
   581                           ;incstack = 0
   582  000008  8235               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
   583  00000A  ED09  F000         	call	int_func,f	;refresh shadow registers
   584                           tblptru	equ	0xFF8
   585                           tblptrh	equ	0xFF7
   586                           tblptrl	equ	0xFF6
   587                           tablat	equ	0xFF5
   588                           intcon	equ	0xFF2
   589                           intcon2	equ	0xFF1
   590                           postinc0	equ	0xFEE
   591                           wreg	equ	0xFE8
   592                           indf2	equ	0xFDF
   593                           fsr2h	equ	0xFDA
   594                           fsr2l	equ	0xFD9
   595                           status	equ	0xFD8
   596                           
   597                           	psect	intcode_body
   598  000012                     __pintcode_body:
   599                           	opt stack 29
   600  000012                     int_func:
   601                           	opt stack 29
   602  000012  0006               	pop		; remove dummy address from shadow register refresh
   603  000014  CFFA F021          	movff	pclath,??_high_isr+1
   604  000018  CFFB F022          	movff	pclatu,??_high_isr+2
   605  00001C  CFE9 F023          	movff	fsr0l,??_high_isr+3
   606  000020  CFEA F024          	movff	fsr0h,??_high_isr+4
   607  000024  CFE1 F025          	movff	fsr1l,??_high_isr+5
   608  000028  CFE2 F026          	movff	fsr1h,??_high_isr+6
   609  00002C  CFD9 F027          	movff	fsr2l,??_high_isr+7
   610  000030  CFDA F028          	movff	fsr2h,??_high_isr+8
   611  000034  CFF3 F029          	movff	prodl,??_high_isr+9
   612  000038  CFF4 F02A          	movff	prodh,??_high_isr+10
   613  00003C  CFF6 F02B          	movff	tblptrl,??_high_isr+11
   614  000040  CFF7 F02C          	movff	tblptrh,??_high_isr+12
   615  000044  CFF8 F02D          	movff	tblptru,??_high_isr+13
   616  000048  CFF5 F02E          	movff	tablat,??_high_isr+14
   617  00004C  C035  F02F         	movff	btemp,??_high_isr+15
   618  000050  C036  F030         	movff	btemp+1,??_high_isr+16
   619  000054  C037  F031         	movff	btemp+2,??_high_isr+17
   620  000058  C038  F032         	movff	btemp+3,??_high_isr+18
   621                           
   622                           ;interrupts.c: 31: if (INTCONbits.TMR0IF) {
   623  00005C  A4F2               	btfss	intcon,2,c	;volatile
   624  00005E  D013               	goto	i2l29
   625                           
   626                           ;interrupts.c: 33: INTCONbits.TMR0IF = 0;
   627  000060  94F2               	bcf	intcon,2,c	;volatile
   628                           
   629                           ;interrupts.c: 34: overflow++;
   630  000062  4A19               	infsnz	_overflow,f,c
   631  000064  2A1A               	incf	_overflow+1,f,c
   632                           
   633                           ;interrupts.c: 35: LATAbits.LA0 = !PORTAbits.RA0;
   634  000066  B080               	btfsc	3968,0,c	;volatile
   635  000068  D003               	goto	i2u2_40
   636  00006A  6A20               	clrf	??_high_isr& (0+255),c
   637  00006C  2A20               	incf	??_high_isr& (0+255),f,c
   638  00006E  D001               	goto	i2u3_48
   639  000070                     i2u2_40:
   640  000070  6A20               	clrf	??_high_isr& (0+255),c
   641  000072                     i2u3_48:
   642  000072  5089               	movf	3977,w,c	;volatile
   643  000074  1820               	xorwf	??_high_isr,w,c
   644  000076  0BFE               	andlw	-2
   645  000078  1820               	xorwf	??_high_isr,w,c
   646  00007A  6E89               	movwf	3977,c	;volatile
   647                           
   648                           ;interrupts.c: 36: TMR0 = 50;
   649  00007C  0E00               	movlw	0
   650  00007E  6ED7               	movwf	4055,c	;volatile
   651  000080  0E32               	movlw	50
   652  000082  6ED6               	movwf	4054,c	;volatile
   653                           
   654                           ;interrupts.c: 37: } else if (PIR1bits.RCIF) {
   655  000084  D01B               	goto	i2l32
   656  000086                     i2l29:
   657  000086  AA9E               	btfss	3998,5,c	;volatile
   658  000088  D019               	goto	i2l32
   659                           
   660                           ;interrupts.c: 39: PIR1bits.RCIF = 0;
   661  00008A  9A9E               	bcf	3998,5,c	;volatile
   662                           
   663                           ;interrupts.c: 40: palabra[n] = RCREG;
   664  00008C  0E01               	movlw	low _palabra
   665  00008E  241B               	addwf	_n,w,c
   666  000090  6ED9               	movwf	fsr2l,c
   667  000092  0E00               	movlw	high _palabra
   668  000094  201C               	addwfc	_n+1,w,c
   669  000096  6EDA               	movwf	fsr2h,c
   670  000098  CFAE FFDF          	movff	4014,indf2	;volatile
   671                           
   672                           ;interrupts.c: 41: n++;
   673  00009C  4A1B               	infsnz	_n,f,c
   674  00009E  2A1C               	incf	_n+1,f,c
   675                           
   676                           ;interrupts.c: 42: if (RCREG == '\r') {
   677  0000A0  0E0D               	movlw	13
   678  0000A2  18AE               	xorwf	4014,w,c	;volatile
   679  0000A4  A4D8               	btfss	status,2,c
   680  0000A6  D00A               	goto	i2l32
   681                           
   682                           ;interrupts.c: 43: TXREG = palabra[0];
   683  0000A8  C001  FFAD         	movff	_palabra,4013	;volatile
   684  0000AC  A89E               	btfss	3998,4,c	;volatile
   685  0000AE  D7FE               	goto	i2l34
   686                           
   687                           ;interrupts.c: 45: recibi = 1;
   688  0000B0  0E01               	movlw	1
   689  0000B2  6E1F               	movwf	_recibi,c
   690                           
   691                           ;interrupts.c: 46: n=0;
   692  0000B4  0E00               	movlw	0
   693  0000B6  6E1C               	movwf	_n+1,c
   694  0000B8  0E00               	movlw	0
   695  0000BA  6E1B               	movwf	_n,c
   696  0000BC                     i2l32:
   697  0000BC  C032  F038         	movff	??_high_isr+18,btemp+3
   698  0000C0  C031  F037         	movff	??_high_isr+17,btemp+2
   699  0000C4  C030  F036         	movff	??_high_isr+16,btemp+1
   700  0000C8  C02F  F035         	movff	??_high_isr+15,btemp
   701  0000CC  C02E  FFF5         	movff	??_high_isr+14,tablat
   702  0000D0  C02D  FFF8         	movff	??_high_isr+13,tblptru
   703  0000D4  C02C  FFF7         	movff	??_high_isr+12,tblptrh
   704  0000D8  C02B  FFF6         	movff	??_high_isr+11,tblptrl
   705  0000DC  C02A  FFF4         	movff	??_high_isr+10,prodh
   706  0000E0  C029  FFF3         	movff	??_high_isr+9,prodl
   707  0000E4  C028  FFDA         	movff	??_high_isr+8,fsr2h
   708  0000E8  C027  FFD9         	movff	??_high_isr+7,fsr2l
   709  0000EC  C026  FFE2         	movff	??_high_isr+6,fsr1h
   710  0000F0  C025  FFE1         	movff	??_high_isr+5,fsr1l
   711  0000F4  C024  FFEA         	movff	??_high_isr+4,fsr0h
   712  0000F8  C023  FFE9         	movff	??_high_isr+3,fsr0l
   713  0000FC  C022  FFFB         	movff	??_high_isr+2,pclatu
   714  000100  C021  FFFA         	movff	??_high_isr+1,pclath
   715  000104  9235               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
   716  000106  0011               	retfie		f
   717  000108                     __end_of_high_isr:
   718                           	opt stack 0
   719  0000                     pclatu	equ	0xFFB
   720                           pclath	equ	0xFFA
   721                           tblptru	equ	0xFF8
   722                           tblptrh	equ	0xFF7
   723                           tblptrl	equ	0xFF6
   724                           tablat	equ	0xFF5
   725                           prodh	equ	0xFF4
   726                           prodl	equ	0xFF3
   727                           intcon	equ	0xFF2
   728                           intcon2	equ	0xFF1
   729                           postinc0	equ	0xFEE
   730                           fsr0h	equ	0xFEA
   731                           fsr0l	equ	0xFE9
   732                           wreg	equ	0xFE8
   733                           fsr1h	equ	0xFE2
   734                           fsr1l	equ	0xFE1
   735                           indf2	equ	0xFDF
   736                           fsr2h	equ	0xFDA
   737                           fsr2l	equ	0xFD9
   738                           status	equ	0xFD8
   739                           pclatu	equ	0xFFB
   740                           pclath	equ	0xFFA
   741                           tblptru	equ	0xFF8
   742                           tblptrh	equ	0xFF7
   743                           tblptrl	equ	0xFF6
   744                           tablat	equ	0xFF5
   745                           prodh	equ	0xFF4
   746                           prodl	equ	0xFF3
   747                           intcon	equ	0xFF2
   748                           intcon2	equ	0xFF1
   749                           postinc0	equ	0xFEE
   750                           fsr0h	equ	0xFEA
   751                           fsr0l	equ	0xFE9
   752                           wreg	equ	0xFE8
   753                           fsr1h	equ	0xFE2
   754                           fsr1l	equ	0xFE1
   755                           indf2	equ	0xFDF
   756                           fsr2h	equ	0xFDA
   757                           fsr2l	equ	0xFD9
   758                           status	equ	0xFD8
   759                           
   760                           	psect	rparam
   761  0000                     pclatu	equ	0xFFB
   762                           pclath	equ	0xFFA
   763                           tblptru	equ	0xFF8
   764                           tblptrh	equ	0xFF7
   765                           tblptrl	equ	0xFF6
   766                           tablat	equ	0xFF5
   767                           prodh	equ	0xFF4
   768                           prodl	equ	0xFF3
   769                           intcon	equ	0xFF2
   770                           intcon2	equ	0xFF1
   771                           postinc0	equ	0xFEE
   772                           fsr0h	equ	0xFEA
   773                           fsr0l	equ	0xFE9
   774                           wreg	equ	0xFE8
   775                           fsr1h	equ	0xFE2
   776                           fsr1l	equ	0xFE1
   777                           indf2	equ	0xFDF
   778                           fsr2h	equ	0xFDA
   779                           fsr2l	equ	0xFD9
   780                           status	equ	0xFD8
   781                           
   782                           	psect	temp
   783  000035                     btemp:
   784                           	opt stack 0
   785  000035                     	ds	1
   786  0000                     int$flags	set	btemp
   787  0000                     wtemp6	set	btemp+1
   788                           pclatu	equ	0xFFB
   789                           pclath	equ	0xFFA
   790                           tblptru	equ	0xFF8
   791                           tblptrh	equ	0xFF7
   792                           tblptrl	equ	0xFF6
   793                           tablat	equ	0xFF5
   794                           prodh	equ	0xFF4
   795                           prodl	equ	0xFF3
   796                           intcon	equ	0xFF2
   797                           intcon2	equ	0xFF1
   798                           postinc0	equ	0xFEE
   799                           fsr0h	equ	0xFEA
   800                           fsr0l	equ	0xFE9
   801                           wreg	equ	0xFE8
   802                           fsr1h	equ	0xFE2
   803                           fsr1l	equ	0xFE1
   804                           indf2	equ	0xFDF
   805                           fsr2h	equ	0xFDA
   806                           fsr2l	equ	0xFD9
   807                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         31
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     19      52
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                _ConfigureOscillator
                            _InitApp
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigureOscillator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _high_isr                                            19    19      0       0
                                              0 COMRAM    19    19      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfigureOscillator
   _InitApp

 _high_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     13      34       1       55.3%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      34      20        0.0%
DATA                 0      0      34       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Thu Aug 08 12:23:54 2019

                           _n 001B                            l63 0170                            l65 0190  
                          l66 0186                            l68 018A                            u75 0178  
                          u76 017A                   __CFG_BORV$3 000000                  __CFG_CP0$OFF 000000  
                __CFG_CP1$OFF 000000                  __CFG_CP2$OFF 000000                  __CFG_CP3$OFF 000000  
                __CFG_CPB$OFF 000000                  __CFG_CPD$OFF 000000                           _RX9 007D5E  
                         _TX9 007D66                  __CFG_BOR$OFF 000000                           wreg 000FE8  
                __CFG_LVP$OFF 000000                  __CFG_WDT$OFF 000000                          _BRGH 007D62  
                        _CREN 007D5C                          _LATA 000F89                          _LATB 000F8A  
                        _LATC 000F8B                          _RCIE 007CED                          i2l32 00BC  
                        i2l34 00AC                          i2l29 0086                          _TMR0 000FD6  
                        _SPEN 007D5F                          _TXIE 007CEC                          _TXIF 007CF4  
                        _TXEN 007D65                          _SYNC 007D64                          _main 0168  
                        fsr0h 000FEA                          fsr1h 000FE2                          fsr2h 000FDA  
                        fsr0l 000FE9                          indf2 000FDF                          fsr1l 000FE1  
                        fsr2l 000FD9                          btemp 0035                          prodh 000FF4  
                        prodl 000FF3                          start 000E                 __CFG_IESO$OFF 000000  
               __CFG_MCLRE$ON 000000                  ___param_bank 000000               __end_of_InitApp 0168  
               __CFG_PLLDIV$1 000000                __CFG_CCP2MX$ON 000000                         ?_main 0020  
                       _BRG16 007DC3                         _DIR_1 001D                         _RCREG 000FAE  
                       _SPBRG 000FAF                         _PORTA 000F80                         _PORTB 000F81  
                       _PORTC 000F82                 __CFG_USBDIV$1 000000                         _TXREG 000FAD  
         _ConfigureOscillator 01DE                 __CFG_PWRT$OFF 000000                 __CFG_WRT0$OFF 000000  
               __CFG_WRT1$OFF 000000                 __CFG_WRT2$OFF 000000                 __CFG_WRT3$OFF 000000  
              __CFG_EBTR0$OFF 000000                __CFG_FCMEN$OFF 000000                __CFG_EBTR1$OFF 000000  
              __CFG_EBTR2$OFF 000000                __CFG_EBTR3$OFF 000000                 __CFG_WRTB$OFF 000000  
               __CFG_WRTC$OFF 000000                 __CFG_WRTD$OFF 000000                __CFG_EBTRB$OFF 000000  
                       pclath 000FFA                         tablat 000FF5                         status 000FD8  
                       wtemp6 0036          ?_ConfigureOscillator 0020               __initialization 01AC  
                __end_of_main 01AC                        ??_main 0033                 __activetblptr 000002  
                      _ADCON1 000FC1                        i2u2_40 0070                        i2u3_48 0072  
                   ??_InitApp 0033         ??_ConfigureOscillator 0033                __CFG_XINST$OFF 000000  
            __end_of_high_isr 0108                        _recibi 001F                        clear_0 01CA  
                      _motor1 0033                        _motor2 0017                  __pdataCOMRAM 0033  
                      tblptrh 000FF7                        tblptrl 000FF6                        tblptru 000FF8  
                  __accesstop 0060       __end_of__initialization 01D0               __CFG_PBADEN$OFF 000000  
               ___rparam_used 000001                __pcstackCOMRAM 0020                     ?_high_isr 0020  
             __CFG_VREGEN$OFF 000000                       _InitApp 0108                       __Hparam 0000  
                     __Lparam 0000               __CFG_STVREN$OFF 000000                       __pcinit 01AC  
                     __ramtop 0800                       __ptext0 0168                       __ptext1 0108  
                     __ptext2 01DE                     _T0CONbits 000FD5                       _palabra 0001  
                  ??_high_isr 0020                __pintcode_body 0012          end_of_initialization 01D0  
               __Lmediumconst 0000                       int_func 0012                       postinc0 000FEE  
                   _PORTAbits 000F80                     _TRISAbits 000F92                     _TRISCbits 000F94  
 __end_of_ConfigureOscillator 01EA                 __pidataCOMRAM 01EA           start_initialization 01AC  
            __CFG_LPT1OSC$OFF 000000                   __pbssCOMRAM 0001             __size_of_high_isr 0100  
                    ?_InitApp 0020                     __pintcode 0008                     _get_value 0015  
                    _LATAbits 000F89                      _RA0state 001E                      _PIR1bits 000F9E  
                    _RCONbits 000FD0              __CFG_WDTPS$32768 000000                   _INTCON2bits 000FF1  
            __size_of_InitApp 0060                      __Hrparam 0000                      __Lrparam 0000  
                    _high_isr 0008                 __size_of_main 0044  __size_of_ConfigureOscillator 000C  
                    _overflow 0019                      int$flags 0035         __CFG_CPUDIV$OSC1_PLL2 000000  
                  _INTCONbits 000FF2                      intlevel2 0000                    _OSCCONbits 000FD3  
         __CFG_FOSC$INTOSC_EC 000000  

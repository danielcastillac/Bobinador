

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Fri Aug 09 15:09:06 2019

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F2550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    14                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    15                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    16                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    18  0000                     
    19                           ; Version 1.45
    20                           ; Generated 16/11/2017 GMT
    21                           ; 
    22                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC18F2550 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     
    54                           	psect	idataCOMRAM
    55  00021A                     __pidataCOMRAM:
    56                           	opt stack 0
    57                           
    58                           ;initializer for _motor1
    59  00021A  0001               	dw	1
    60  0000                     _ADRES	set	4035
    61  0000                     _TMR0	set	4054
    62  0000                     _SPBRG	set	4015
    63  0000                     _TRISCbits	set	3988
    64  0000                     _T0CONbits	set	4053
    65  0000                     _INTCON2bits	set	4081
    66  0000                     _RCONbits	set	4048
    67  0000                     _PIE1bits	set	3997
    68  0000                     _ADCON2	set	4032
    69  0000                     _ADCON0bits	set	4034
    70  0000                     _TRISAbits	set	3986
    71  0000                     _ADCON1	set	4033
    72  0000                     _LATC	set	3979
    73  0000                     _PORTC	set	3970
    74  0000                     _LATB	set	3978
    75  0000                     _PORTB	set	3969
    76  0000                     _LATA	set	3977
    77  0000                     _PORTA	set	3968
    78  0000                     _OSCCONbits	set	4051
    79  0000                     _TXREG	set	4013
    80  0000                     _RCREG	set	4014
    81  0000                     _PIR1bits	set	3998
    82  0000                     _PORTAbits	set	3968
    83  0000                     _LATAbits	set	3977
    84  0000                     _INTCONbits	set	4082
    85  0000                     _TXIE	set	31980
    86  0000                     _RCIE	set	31981
    87  0000                     _RX9	set	32094
    88  0000                     _TX9	set	32102
    89  0000                     _CREN	set	32092
    90  0000                     _TXEN	set	32101
    91  0000                     _SYNC	set	32100
    92  0000                     _SPEN	set	32095
    93  0000                     _BRG16	set	32195
    94  0000                     _BRGH	set	32098
    95  0000                     _GODONE	set	32273
    96  0000                     _TXIF	set	31988
    97                           
    98                           ; #config settings
    99  0000                     
   100                           	psect	cinit
   101  0001DC                     __pcinit:
   102                           	opt stack 0
   103  0001DC                     start_initialization:
   104                           	opt stack 0
   105  0001DC                     __initialization:
   106                           	opt stack 0
   107                           
   108                           ; Initialize objects allocated to COMRAM (2 bytes)
   109                           ; load TBLPTR registers with __pidataCOMRAM
   110  0001DC  0E1A               	movlw	low __pidataCOMRAM
   111  0001DE  6EF6               	movwf	tblptrl,c
   112  0001E0  0E02               	movlw	high __pidataCOMRAM
   113  0001E2  6EF7               	movwf	tblptrh,c
   114  0001E4  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   115  0001E6  6EF8               	movwf	tblptru,c
   116  0001E8  0009               	tblrd		*+	;fetch initializer
   117  0001EA  CFF5 F033          	movff	tablat,__pdataCOMRAM
   118  0001EE  0009               	tblrd		*+	;fetch initializer
   119  0001F0  CFF5 F034          	movff	tablat,__pdataCOMRAM+1
   120                           
   121                           ; Clear objects allocated to COMRAM (31 bytes)
   122  0001F4  EE00  F001         	lfsr	0,__pbssCOMRAM
   123  0001F8  0E1F               	movlw	31
   124  0001FA                     clear_0:
   125  0001FA  6AEE               	clrf	postinc0,c
   126  0001FC  06E8               	decf	wreg,f,c
   127  0001FE  E1FD               	bnz	clear_0
   128  000200                     end_of_initialization:
   129                           	opt stack 0
   130  000200                     __end_of__initialization:
   131                           	opt stack 0
   132  000200  9035               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   133  000202  9235               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   134  000204  0E00               	movlw	low (__Lmediumconst shr (0+16))
   135  000206  6EF8               	movwf	tblptru,c
   136  000208  0100               	movlb	0
   137  00020A  EFC8  F000         	goto	_main	;jump to C main() function
   138                           tblptru	equ	0xFF8
   139                           tblptrh	equ	0xFF7
   140                           tblptrl	equ	0xFF6
   141                           tablat	equ	0xFF5
   142                           postinc0	equ	0xFEE
   143                           wreg	equ	0xFE8
   144                           
   145                           	psect	bssCOMRAM
   146  000001                     __pbssCOMRAM:
   147                           	opt stack 0
   148  000001                     _palabra:
   149                           	opt stack 0
   150  000001                     	ds	20
   151  000015                     _motor2:
   152                           	opt stack 0
   153  000015                     	ds	2
   154  000017                     _ADC_value:
   155                           	opt stack 0
   156  000017                     	ds	2
   157  000019                     _overflow:
   158                           	opt stack 0
   159  000019                     	ds	2
   160  00001B                     _n:
   161                           	opt stack 0
   162  00001B                     	ds	2
   163  00001D                     _DIR_1:
   164                           	opt stack 0
   165  00001D                     	ds	1
   166  00001E                     _RA0state:
   167                           	opt stack 0
   168  00001E                     	ds	1
   169  00001F                     _recibi:
   170                           	opt stack 0
   171  00001F                     	ds	1
   172                           tblptru	equ	0xFF8
   173                           tblptrh	equ	0xFF7
   174                           tblptrl	equ	0xFF6
   175                           tablat	equ	0xFF5
   176                           postinc0	equ	0xFEE
   177                           wreg	equ	0xFE8
   178                           
   179                           	psect	dataCOMRAM
   180  000033                     __pdataCOMRAM:
   181                           	opt stack 0
   182  000033                     _motor1:
   183                           	opt stack 0
   184  000033                     	ds	2
   185                           tblptru	equ	0xFF8
   186                           tblptrh	equ	0xFF7
   187                           tblptrl	equ	0xFF6
   188                           tablat	equ	0xFF5
   189                           postinc0	equ	0xFEE
   190                           wreg	equ	0xFE8
   191                           
   192                           	psect	cstackCOMRAM
   193  000020                     __pcstackCOMRAM:
   194                           	opt stack 0
   195  000020                     ??_high_isr:
   196  000020                     
   197                           ; 1 bytes @ 0x0
   198  000020                     	ds	19
   199  000033                     tblptru	equ	0xFF8
   200                           tblptrh	equ	0xFF7
   201                           tblptrl	equ	0xFF6
   202                           tablat	equ	0xFF5
   203                           postinc0	equ	0xFEE
   204                           wreg	equ	0xFE8
   205                           
   206                           ; 1 bytes @ 0x13
   207 ;;
   208 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   209 ;;
   210 ;; *************** function _main *****************
   211 ;; Defined at:
   212 ;;		line 43 in file "main.c"
   213 ;; Parameters:    Size  Location     Type
   214 ;;		None
   215 ;; Auto vars:     Size  Location     Type
   216 ;;		None
   217 ;; Return value:  Size  Location     Type
   218 ;;                  1    wreg      void 
   219 ;; Registers used:
   220 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   221 ;; Tracked objects:
   222 ;;		On entry : 0/0
   223 ;;		On exit  : 0/0
   224 ;;		Unchanged: 0/0
   225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   226 ;;      Params:         0       0       0       0       0       0       0       0       0
   227 ;;      Locals:         0       0       0       0       0       0       0       0       0
   228 ;;      Temps:          0       0       0       0       0       0       0       0       0
   229 ;;      Totals:         0       0       0       0       0       0       0       0       0
   230 ;;Total ram usage:        0 bytes
   231 ;; Hardware stack levels required when called:    2
   232 ;; This function calls:
   233 ;;		_ConfigureOscillator
   234 ;;		_InitApp
   235 ;; This function is called by:
   236 ;;		Startup code after reset
   237 ;; This function uses a non-reentrant model
   238 ;;
   239                           
   240                           	psect	text0
   241  000190                     __ptext0:
   242                           	opt stack 0
   243  000190                     _main:
   244                           	opt stack 29
   245                           
   246                           ;main.c: 45: ConfigureOscillator();
   247                           
   248                           ;incstack = 0
   249  000190  EC07  F001         	call	_ConfigureOscillator	;wreg free
   250                           
   251                           ;main.c: 48: InitApp();
   252  000194  EC8E  F000         	call	_InitApp	;wreg free
   253  000198                     
   254                           ;main.c: 52: LATAbits.LA1 = DIR_1;
   255  000198  B01D               	btfsc	_DIR_1,0,c
   256  00019A  D002               	bra	u85
   257  00019C  9289               	bcf	3977,1,c	;volatile
   258  00019E  D001               	bra	u86
   259  0001A0                     u85:
   260  0001A0  8289               	bsf	3977,1,c	;volatile
   261  0001A2                     u86:
   262                           
   263                           ;main.c: 54: if (recibi == 1) {
   264  0001A2  041F               	decf	_recibi,w,c
   265  0001A4  A4D8               	btfss	status,2,c
   266  0001A6  D016               	goto	l70
   267                           
   268                           ;main.c: 56: recibi = 0;
   269  0001A8  0E00               	movlw	0
   270  0001AA  6E1F               	movwf	_recibi,c
   271                           
   272                           ;main.c: 57: switch (palabra[n]) {
   273  0001AC  D005               	goto	l71
   274  0001AE                     
   275                           ;main.c: 61: DIR_1 = 1;
   276  0001AE  0E01               	movlw	1
   277  0001B0  D001               	goto	L1
   278  0001B2                     
   279                           ;main.c: 65: DIR_1 = 0;
   280  0001B2  0E00               	movlw	0
   281  0001B4                     L1:
   282  0001B4  6E1D               	movwf	_DIR_1,c
   283                           
   284                           ;main.c: 67: }
   285                           
   286                           ;main.c: 66: break;
   287  0001B6  D7F0               	goto	l69
   288  0001B8                     l71:
   289  0001B8  0E01               	movlw	low _palabra
   290  0001BA  241B               	addwf	_n,w,c
   291  0001BC  6ED9               	movwf	fsr2l,c
   292  0001BE  0E00               	movlw	high _palabra
   293  0001C0  201C               	addwfc	_n+1,w,c
   294  0001C2  6EDA               	movwf	fsr2h,c
   295  0001C4  50DF               	movf	indf2,w,c
   296                           
   297                           ; Switch size 1, requested type "space"
   298                           ; Number of cases is 2, Range of values is 49 to 50
   299                           ; switch strategies available:
   300                           ; Name         Instructions Cycles
   301                           ; simple_byte            7     4 (average)
   302                           ;	Chosen strategy is simple_byte
   303  0001C6  0A31               	xorlw	49	; case 49
   304  0001C8  B4D8               	btfsc	status,2,c
   305  0001CA  D7F1               	goto	l72
   306  0001CC  0A03               	xorlw	3	; case 50
   307  0001CE  B4D8               	btfsc	status,2,c
   308  0001D0  D7F0               	goto	l74
   309                           
   310                           ;main.c: 68: }
   311  0001D2  D7E2               	goto	l69
   312  0001D4                     l70:
   313                           
   314                           ;main.c: 69: else if(GODONE==0){
   315  0001D4  B2C2               	btfsc	4034,1,c	;volatile
   316  0001D6  D7E0               	goto	l69
   317                           
   318                           ;main.c: 70: GODONE=1;
   319  0001D8  82C2               	bsf	4034,1,c	;volatile
   320  0001DA  D7DE               	goto	l69
   321  0001DC                     __end_of_main:
   322                           	opt stack 0
   323                           tblptru	equ	0xFF8
   324                           tblptrh	equ	0xFF7
   325                           tblptrl	equ	0xFF6
   326                           tablat	equ	0xFF5
   327                           postinc0	equ	0xFEE
   328                           wreg	equ	0xFE8
   329                           indf2	equ	0xFDF
   330                           fsr2h	equ	0xFDA
   331                           fsr2l	equ	0xFD9
   332                           status	equ	0xFD8
   333                           
   334 ;; *************** function _InitApp *****************
   335 ;; Defined at:
   336 ;;		line 28 in file "user.c"
   337 ;; Parameters:    Size  Location     Type
   338 ;;		None
   339 ;; Auto vars:     Size  Location     Type
   340 ;;		None
   341 ;; Return value:  Size  Location     Type
   342 ;;                  1    wreg      void 
   343 ;; Registers used:
   344 ;;		wreg, status,2
   345 ;; Tracked objects:
   346 ;;		On entry : 0/0
   347 ;;		On exit  : 0/0
   348 ;;		Unchanged: 0/0
   349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   350 ;;      Params:         0       0       0       0       0       0       0       0       0
   351 ;;      Locals:         0       0       0       0       0       0       0       0       0
   352 ;;      Temps:          0       0       0       0       0       0       0       0       0
   353 ;;      Totals:         0       0       0       0       0       0       0       0       0
   354 ;;Total ram usage:        0 bytes
   355 ;; Hardware stack levels used:    1
   356 ;; Hardware stack levels required when called:    1
   357 ;; This function calls:
   358 ;;		Nothing
   359 ;; This function is called by:
   360 ;;		_main
   361 ;; This function uses a non-reentrant model
   362 ;;
   363                           
   364                           	psect	text1
   365  00011C                     __ptext1:
   366                           	opt stack 0
   367  00011C                     _InitApp:
   368                           	opt stack 29
   369                           
   370                           ;user.c: 30: PORTA = 0;
   371                           
   372                           ;incstack = 0
   373  00011C  0E00               	movlw	0
   374  00011E  6E80               	movwf	3968,c	;volatile
   375                           
   376                           ;user.c: 31: LATA = 0;
   377  000120  0E00               	movlw	0
   378  000122  6E89               	movwf	3977,c	;volatile
   379                           
   380                           ;user.c: 32: PORTB = 0;
   381  000124  0E00               	movlw	0
   382  000126  6E81               	movwf	3969,c	;volatile
   383                           
   384                           ;user.c: 33: LATB = 0;
   385  000128  0E00               	movlw	0
   386  00012A  6E8A               	movwf	3978,c	;volatile
   387                           
   388                           ;user.c: 34: PORTC = 0;
   389  00012C  0E00               	movlw	0
   390  00012E  6E82               	movwf	3970,c	;volatile
   391                           
   392                           ;user.c: 35: LATC = 0;
   393  000130  0E00               	movlw	0
   394  000132  6E8B               	movwf	3979,c	;volatile
   395                           
   396                           ;user.c: 37: ADCON1 = 0b1110;
   397  000134  0E0E               	movlw	14
   398  000136  6EC1               	movwf	4033,c	;volatile
   399                           
   400                           ;user.c: 38: TRISAbits.TRISA0 = 1;
   401  000138  8092               	bsf	3986,0,c	;volatile
   402                           
   403                           ;user.c: 39: ADCON0bits.CHS = 0;
   404  00013A  94C2               	bcf	4034,2,c	;volatile
   405  00013C  96C2               	bcf	4034,3,c	;volatile
   406  00013E  98C2               	bcf	4034,4,c	;volatile
   407  000140  9AC2               	bcf	4034,5,c	;volatile
   408                           
   409                           ;user.c: 40: ADCON2=0b10101100;
   410  000142  0EAC               	movlw	172
   411  000144  6EC0               	movwf	4032,c	;volatile
   412                           
   413                           ;user.c: 41: PIE1bits.ADIE=1;
   414  000146  8C9D               	bsf	3997,6,c	;volatile
   415                           
   416                           ;user.c: 42: PIR1bits.ADIF=0;
   417  000148  9C9E               	bcf	3998,6,c	;volatile
   418                           
   419                           ;user.c: 43: ADCON0bits.ADON = 1;
   420  00014A  80C2               	bsf	4034,0,c	;volatile
   421                           
   422                           ;user.c: 45: TRISAbits.RA2 = 0;
   423  00014C  9492               	bcf	3986,2,c	;volatile
   424                           
   425                           ;user.c: 46: TRISAbits.RA1 = 0;
   426  00014E  9292               	bcf	3986,1,c	;volatile
   427                           
   428                           ;user.c: 48: RCONbits.IPEN = 0;
   429  000150  9ED0               	bcf	4048,7,c	;volatile
   430                           
   431                           ;user.c: 50: INTCONbits.GIE = 1;
   432  000152  8EF2               	bsf	intcon,7,c	;volatile
   433                           
   434                           ;user.c: 51: INTCONbits.PEIE = 1;
   435  000154  8CF2               	bsf	intcon,6,c	;volatile
   436                           
   437                           ;user.c: 52: INTCONbits.TMR0IE = 1;
   438  000156  8AF2               	bsf	intcon,5,c	;volatile
   439                           
   440                           ;user.c: 53: INTCONbits.TMR0IF = 0;
   441  000158  94F2               	bcf	intcon,2,c	;volatile
   442                           
   443                           ;user.c: 54: INTCON2bits.TMR0IP = 1;
   444  00015A  84F1               	bsf	intcon2,2,c	;volatile
   445                           
   446                           ;user.c: 55: T0CONbits.T08BIT = 1;
   447  00015C  8CD5               	bsf	4053,6,c	;volatile
   448                           
   449                           ;user.c: 56: T0CONbits.T0CS = 0;
   450  00015E  9AD5               	bcf	4053,5,c	;volatile
   451                           
   452                           ;user.c: 57: T0CONbits.PSA = 0;
   453  000160  96D5               	bcf	4053,3,c	;volatile
   454                           
   455                           ;user.c: 58: T0CONbits.T0PS = 0b101;
   456  000162  50D5               	movf	4053,w,c	;volatile
   457  000164  0BF8               	andlw	-8
   458  000166  0905               	iorlw	5
   459  000168  6ED5               	movwf	4053,c	;volatile
   460                           
   461                           ;user.c: 59: TMR0 = 0x6;
   462  00016A  0E00               	movlw	0
   463  00016C  6ED7               	movwf	4055,c	;volatile
   464  00016E  0E06               	movlw	6
   465  000170  6ED6               	movwf	4054,c	;volatile
   466                           
   467                           ;user.c: 61: TRISCbits.RC6 = 0;
   468  000172  9C94               	bcf	3988,6,c	;volatile
   469                           
   470                           ;user.c: 62: TRISCbits.RC7 = 1;
   471  000174  8E94               	bsf	3988,7,c	;volatile
   472                           
   473                           ;user.c: 63: BRGH = 1;
   474  000176  84AC               	bsf	4012,2,c	;volatile
   475                           
   476                           ;user.c: 64: BRG16 = 1;
   477  000178  86B8               	bsf	4024,3,c	;volatile
   478                           
   479                           ;user.c: 65: SPBRG = 207;
   480  00017A  0ECF               	movlw	207
   481  00017C  6EAF               	movwf	4015,c	;volatile
   482                           
   483                           ;user.c: 66: SPEN = 1;
   484  00017E  8EAB               	bsf	4011,7,c	;volatile
   485                           
   486                           ;user.c: 67: SYNC = 0;
   487  000180  98AC               	bcf	4012,4,c	;volatile
   488                           
   489                           ;user.c: 68: TXEN = 1;
   490  000182  8AAC               	bsf	4012,5,c	;volatile
   491                           
   492                           ;user.c: 69: CREN = 1;
   493  000184  88AB               	bsf	4011,4,c	;volatile
   494                           
   495                           ;user.c: 70: TX9 = 0;
   496  000186  9CAC               	bcf	4012,6,c	;volatile
   497                           
   498                           ;user.c: 71: RX9 = 0;
   499  000188  9CAB               	bcf	4011,6,c	;volatile
   500                           
   501                           ;user.c: 72: RCIE = 1;
   502  00018A  8A9D               	bsf	3997,5,c	;volatile
   503                           
   504                           ;user.c: 73: TXIE = 0;
   505  00018C  989D               	bcf	3997,4,c	;volatile
   506  00018E  0012               	return		;funcret
   507  000190                     __end_of_InitApp:
   508                           	opt stack 0
   509                           tblptru	equ	0xFF8
   510                           tblptrh	equ	0xFF7
   511                           tblptrl	equ	0xFF6
   512                           tablat	equ	0xFF5
   513                           intcon	equ	0xFF2
   514                           intcon2	equ	0xFF1
   515                           postinc0	equ	0xFEE
   516                           wreg	equ	0xFE8
   517                           indf2	equ	0xFDF
   518                           fsr2h	equ	0xFDA
   519                           fsr2l	equ	0xFD9
   520                           status	equ	0xFD8
   521                           
   522 ;; *************** function _ConfigureOscillator *****************
   523 ;; Defined at:
   524 ;;		line 24 in file "system.c"
   525 ;; Parameters:    Size  Location     Type
   526 ;;		None
   527 ;; Auto vars:     Size  Location     Type
   528 ;;		None
   529 ;; Return value:  Size  Location     Type
   530 ;;                  1    wreg      void 
   531 ;; Registers used:
   532 ;;		wreg, status,2
   533 ;; Tracked objects:
   534 ;;		On entry : 0/0
   535 ;;		On exit  : 0/0
   536 ;;		Unchanged: 0/0
   537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   538 ;;      Params:         0       0       0       0       0       0       0       0       0
   539 ;;      Locals:         0       0       0       0       0       0       0       0       0
   540 ;;      Temps:          0       0       0       0       0       0       0       0       0
   541 ;;      Totals:         0       0       0       0       0       0       0       0       0
   542 ;;Total ram usage:        0 bytes
   543 ;; Hardware stack levels used:    1
   544 ;; Hardware stack levels required when called:    1
   545 ;; This function calls:
   546 ;;		Nothing
   547 ;; This function is called by:
   548 ;;		_main
   549 ;; This function uses a non-reentrant model
   550 ;;
   551                           
   552                           	psect	text2
   553  00020E                     __ptext2:
   554                           	opt stack 0
   555  00020E                     _ConfigureOscillator:
   556                           	opt stack 29
   557                           
   558                           ;system.c: 27: OSCCONbits.IRCF = 0b111;
   559                           
   560                           ;incstack = 0
   561  00020E  88D3               	bsf	4051,4,c	;volatile
   562  000210  8AD3               	bsf	4051,5,c	;volatile
   563  000212  8CD3               	bsf	4051,6,c	;volatile
   564                           
   565                           ;system.c: 28: OSCCONbits.SCS = 0b11;
   566  000214  0E03               	movlw	3
   567  000216  12D3               	iorwf	4051,f,c	;volatile
   568  000218  0012               	return		;funcret
   569  00021A                     __end_of_ConfigureOscillator:
   570                           	opt stack 0
   571                           tblptru	equ	0xFF8
   572                           tblptrh	equ	0xFF7
   573                           tblptrl	equ	0xFF6
   574                           tablat	equ	0xFF5
   575                           intcon	equ	0xFF2
   576                           intcon2	equ	0xFF1
   577                           postinc0	equ	0xFEE
   578                           wreg	equ	0xFE8
   579                           indf2	equ	0xFDF
   580                           fsr2h	equ	0xFDA
   581                           fsr2l	equ	0xFD9
   582                           status	equ	0xFD8
   583                           
   584 ;; *************** function _high_isr *****************
   585 ;; Defined at:
   586 ;;		line 32 in file "interrupts.c"
   587 ;; Parameters:    Size  Location     Type
   588 ;;		None
   589 ;; Auto vars:     Size  Location     Type
   590 ;;		None
   591 ;; Return value:  Size  Location     Type
   592 ;;                  1    wreg      void 
   593 ;; Registers used:
   594 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   595 ;; Tracked objects:
   596 ;;		On entry : 0/0
   597 ;;		On exit  : 0/0
   598 ;;		Unchanged: 0/0
   599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   600 ;;      Params:         0       0       0       0       0       0       0       0       0
   601 ;;      Locals:         0       0       0       0       0       0       0       0       0
   602 ;;      Temps:         19       0       0       0       0       0       0       0       0
   603 ;;      Totals:        19       0       0       0       0       0       0       0       0
   604 ;;Total ram usage:       19 bytes
   605 ;; Hardware stack levels used:    1
   606 ;; This function calls:
   607 ;;		Nothing
   608 ;; This function is called by:
   609 ;;		Interrupt level 2
   610 ;; This function uses a non-reentrant model
   611 ;;
   612                           
   613                           	psect	intcode
   614  000008                     __pintcode:
   615                           	opt stack 0
   616  000008                     _high_isr:
   617                           	opt stack 29
   618                           
   619                           ;incstack = 0
   620  000008  8235               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
   621  00000A  ED09  F000         	call	int_func,f	;refresh shadow registers
   622                           tblptru	equ	0xFF8
   623                           tblptrh	equ	0xFF7
   624                           tblptrl	equ	0xFF6
   625                           tablat	equ	0xFF5
   626                           intcon	equ	0xFF2
   627                           intcon2	equ	0xFF1
   628                           postinc0	equ	0xFEE
   629                           wreg	equ	0xFE8
   630                           indf2	equ	0xFDF
   631                           fsr2h	equ	0xFDA
   632                           fsr2l	equ	0xFD9
   633                           status	equ	0xFD8
   634                           
   635                           	psect	intcode_body
   636  000012                     __pintcode_body:
   637                           	opt stack 29
   638  000012                     int_func:
   639                           	opt stack 29
   640  000012  0006               	pop		; remove dummy address from shadow register refresh
   641  000014  CFFA F021          	movff	pclath,??_high_isr+1
   642  000018  CFFB F022          	movff	pclatu,??_high_isr+2
   643  00001C  CFE9 F023          	movff	fsr0l,??_high_isr+3
   644  000020  CFEA F024          	movff	fsr0h,??_high_isr+4
   645  000024  CFE1 F025          	movff	fsr1l,??_high_isr+5
   646  000028  CFE2 F026          	movff	fsr1h,??_high_isr+6
   647  00002C  CFD9 F027          	movff	fsr2l,??_high_isr+7
   648  000030  CFDA F028          	movff	fsr2h,??_high_isr+8
   649  000034  CFF3 F029          	movff	prodl,??_high_isr+9
   650  000038  CFF4 F02A          	movff	prodh,??_high_isr+10
   651  00003C  CFF6 F02B          	movff	tblptrl,??_high_isr+11
   652  000040  CFF7 F02C          	movff	tblptrh,??_high_isr+12
   653  000044  CFF8 F02D          	movff	tblptru,??_high_isr+13
   654  000048  CFF5 F02E          	movff	tablat,??_high_isr+14
   655  00004C  C035  F02F         	movff	btemp,??_high_isr+15
   656  000050  C036  F030         	movff	btemp+1,??_high_isr+16
   657  000054  C037  F031         	movff	btemp+2,??_high_isr+17
   658  000058  C038  F032         	movff	btemp+3,??_high_isr+18
   659                           
   660                           ;interrupts.c: 33: if (INTCONbits.TMR0IF) {
   661  00005C  A4F2               	btfss	intcon,2,c	;volatile
   662  00005E  D015               	goto	i2l33
   663                           
   664                           ;interrupts.c: 35: INTCONbits.TMR0IF = 0;
   665  000060  94F2               	bcf	intcon,2,c	;volatile
   666                           
   667                           ;interrupts.c: 36: overflow++;
   668  000062  4A19               	infsnz	_overflow,f,c
   669  000064  2A1A               	incf	_overflow+1,f,c
   670                           
   671                           ;interrupts.c: 37: LATAbits.LA2 = !PORTAbits.RA2;
   672  000066  B480               	btfsc	3968,2,c	;volatile
   673  000068  D003               	goto	i2u2_40
   674  00006A  6A20               	clrf	??_high_isr& (0+255),c
   675  00006C  2A20               	incf	??_high_isr& (0+255),f,c
   676  00006E  D001               	goto	i2u3_48
   677  000070                     i2u2_40:
   678  000070  6A20               	clrf	??_high_isr& (0+255),c
   679  000072                     i2u3_48:
   680  000072  4620               	rlncf	??_high_isr,f,c
   681  000074  4620               	rlncf	??_high_isr,f,c
   682  000076  5089               	movf	3977,w,c	;volatile
   683  000078  1820               	xorwf	??_high_isr,w,c
   684  00007A  0BFB               	andlw	-5
   685  00007C  1820               	xorwf	??_high_isr,w,c
   686  00007E  6E89               	movwf	3977,c	;volatile
   687                           
   688                           ;interrupts.c: 38: TMR0 = 50;
   689  000080  0E00               	movlw	0
   690  000082  6ED7               	movwf	4055,c	;volatile
   691  000084  0E32               	movlw	50
   692  000086  6ED6               	movwf	4054,c	;volatile
   693                           
   694                           ;interrupts.c: 39: } else if (PIR1bits.RCIF) {
   695  000088  D023               	goto	i2l41
   696  00008A                     i2l33:
   697  00008A  AA9E               	btfss	3998,5,c	;volatile
   698  00008C  D01A               	goto	i2l35
   699                           
   700                           ;interrupts.c: 41: PIR1bits.RCIF = 0;
   701  00008E  9A9E               	bcf	3998,5,c	;volatile
   702                           
   703                           ;interrupts.c: 42: palabra[n] = RCREG;
   704  000090  0E01               	movlw	low _palabra
   705  000092  241B               	addwf	_n,w,c
   706  000094  6ED9               	movwf	fsr2l,c
   707  000096  0E00               	movlw	high _palabra
   708  000098  201C               	addwfc	_n+1,w,c
   709  00009A  6EDA               	movwf	fsr2h,c
   710  00009C  CFAE FFDF          	movff	4014,indf2	;volatile
   711                           
   712                           ;interrupts.c: 43: n++;
   713  0000A0  4A1B               	infsnz	_n,f,c
   714  0000A2  2A1C               	incf	_n+1,f,c
   715                           
   716                           ;interrupts.c: 44: if (RCREG == '\r') {
   717  0000A4  0E0D               	movlw	13
   718  0000A6  18AE               	xorwf	4014,w,c	;volatile
   719  0000A8  A4D8               	btfss	status,2,c
   720  0000AA  D012               	goto	i2l41
   721                           
   722                           ;interrupts.c: 45: TXREG = palabra[0];
   723  0000AC  C001  FFAD         	movff	_palabra,4013	;volatile
   724  0000B0  A89E               	btfss	3998,4,c	;volatile
   725  0000B2  D7FE               	goto	i2l38
   726                           
   727                           ;interrupts.c: 47: recibi = 1;
   728  0000B4  0E01               	movlw	1
   729  0000B6  6E1F               	movwf	_recibi,c
   730                           
   731                           ;interrupts.c: 48: n = 0;
   732  0000B8  0E00               	movlw	0
   733  0000BA  6E1C               	movwf	_n+1,c
   734  0000BC  0E00               	movlw	0
   735  0000BE  6E1B               	movwf	_n,c
   736                           
   737                           ;interrupts.c: 49: }
   738                           ;interrupts.c: 50: } else if (PIR1bits.ADIF) {
   739  0000C0  D007               	goto	i2l41
   740  0000C2                     i2l35:
   741  0000C2  AC9E               	btfss	3998,6,c	;volatile
   742  0000C4  D005               	goto	i2l41
   743                           
   744                           ;interrupts.c: 52: PIR1bits.ADIF=0;
   745  0000C6  9C9E               	bcf	3998,6,c	;volatile
   746                           
   747                           ;interrupts.c: 53: ADC_value=ADRES;
   748  0000C8  CFC3 F017          	movff	4035,_ADC_value	;volatile
   749  0000CC  CFC4 F018          	movff	4036,_ADC_value+1	;volatile
   750  0000D0                     i2l41:
   751  0000D0  C032  F038         	movff	??_high_isr+18,btemp+3
   752  0000D4  C031  F037         	movff	??_high_isr+17,btemp+2
   753  0000D8  C030  F036         	movff	??_high_isr+16,btemp+1
   754  0000DC  C02F  F035         	movff	??_high_isr+15,btemp
   755  0000E0  C02E  FFF5         	movff	??_high_isr+14,tablat
   756  0000E4  C02D  FFF8         	movff	??_high_isr+13,tblptru
   757  0000E8  C02C  FFF7         	movff	??_high_isr+12,tblptrh
   758  0000EC  C02B  FFF6         	movff	??_high_isr+11,tblptrl
   759  0000F0  C02A  FFF4         	movff	??_high_isr+10,prodh
   760  0000F4  C029  FFF3         	movff	??_high_isr+9,prodl
   761  0000F8  C028  FFDA         	movff	??_high_isr+8,fsr2h
   762  0000FC  C027  FFD9         	movff	??_high_isr+7,fsr2l
   763  000100  C026  FFE2         	movff	??_high_isr+6,fsr1h
   764  000104  C025  FFE1         	movff	??_high_isr+5,fsr1l
   765  000108  C024  FFEA         	movff	??_high_isr+4,fsr0h
   766  00010C  C023  FFE9         	movff	??_high_isr+3,fsr0l
   767  000110  C022  FFFB         	movff	??_high_isr+2,pclatu
   768  000114  C021  FFFA         	movff	??_high_isr+1,pclath
   769  000118  9235               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
   770  00011A  0011               	retfie		f
   771  00011C                     __end_of_high_isr:
   772                           	opt stack 0
   773  0000                     pclatu	equ	0xFFB
   774                           pclath	equ	0xFFA
   775                           tblptru	equ	0xFF8
   776                           tblptrh	equ	0xFF7
   777                           tblptrl	equ	0xFF6
   778                           tablat	equ	0xFF5
   779                           prodh	equ	0xFF4
   780                           prodl	equ	0xFF3
   781                           intcon	equ	0xFF2
   782                           intcon2	equ	0xFF1
   783                           postinc0	equ	0xFEE
   784                           fsr0h	equ	0xFEA
   785                           fsr0l	equ	0xFE9
   786                           wreg	equ	0xFE8
   787                           fsr1h	equ	0xFE2
   788                           fsr1l	equ	0xFE1
   789                           indf2	equ	0xFDF
   790                           fsr2h	equ	0xFDA
   791                           fsr2l	equ	0xFD9
   792                           status	equ	0xFD8
   793                           pclatu	equ	0xFFB
   794                           pclath	equ	0xFFA
   795                           tblptru	equ	0xFF8
   796                           tblptrh	equ	0xFF7
   797                           tblptrl	equ	0xFF6
   798                           tablat	equ	0xFF5
   799                           prodh	equ	0xFF4
   800                           prodl	equ	0xFF3
   801                           intcon	equ	0xFF2
   802                           intcon2	equ	0xFF1
   803                           postinc0	equ	0xFEE
   804                           fsr0h	equ	0xFEA
   805                           fsr0l	equ	0xFE9
   806                           wreg	equ	0xFE8
   807                           fsr1h	equ	0xFE2
   808                           fsr1l	equ	0xFE1
   809                           indf2	equ	0xFDF
   810                           fsr2h	equ	0xFDA
   811                           fsr2l	equ	0xFD9
   812                           status	equ	0xFD8
   813                           
   814                           	psect	rparam
   815  0000                     pclatu	equ	0xFFB
   816                           pclath	equ	0xFFA
   817                           tblptru	equ	0xFF8
   818                           tblptrh	equ	0xFF7
   819                           tblptrl	equ	0xFF6
   820                           tablat	equ	0xFF5
   821                           prodh	equ	0xFF4
   822                           prodl	equ	0xFF3
   823                           intcon	equ	0xFF2
   824                           intcon2	equ	0xFF1
   825                           postinc0	equ	0xFEE
   826                           fsr0h	equ	0xFEA
   827                           fsr0l	equ	0xFE9
   828                           wreg	equ	0xFE8
   829                           fsr1h	equ	0xFE2
   830                           fsr1l	equ	0xFE1
   831                           indf2	equ	0xFDF
   832                           fsr2h	equ	0xFDA
   833                           fsr2l	equ	0xFD9
   834                           status	equ	0xFD8
   835                           
   836                           	psect	temp
   837  000035                     btemp:
   838                           	opt stack 0
   839  000035                     	ds	1
   840  0000                     int$flags	set	btemp
   841  0000                     wtemp6	set	btemp+1
   842                           pclatu	equ	0xFFB
   843                           pclath	equ	0xFFA
   844                           tblptru	equ	0xFF8
   845                           tblptrh	equ	0xFF7
   846                           tblptrl	equ	0xFF6
   847                           tablat	equ	0xFF5
   848                           prodh	equ	0xFF4
   849                           prodl	equ	0xFF3
   850                           intcon	equ	0xFF2
   851                           intcon2	equ	0xFF1
   852                           postinc0	equ	0xFEE
   853                           fsr0h	equ	0xFEA
   854                           fsr0l	equ	0xFE9
   855                           wreg	equ	0xFE8
   856                           fsr1h	equ	0xFE2
   857                           fsr1l	equ	0xFE1
   858                           indf2	equ	0xFDF
   859                           fsr2h	equ	0xFDA
   860                           fsr2l	equ	0xFD9
   861                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         31
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     19      52
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                _ConfigureOscillator
                            _InitApp
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigureOscillator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _high_isr                                            19    19      0       0
                                              0 COMRAM    19    19      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfigureOscillator
   _InitApp

 _high_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     13      34       1       55.3%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      34      20        0.0%
DATA                 0      0      34       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Fri Aug 09 15:09:06 2019

                           _n 001B                            l70 01D4                            l71 01B8  
                          l72 01AE                            l74 01B2                            l69 0198  
                          u85 01A0                            u86 01A2                   __CFG_BORV$3 000000  
                __CFG_CP0$OFF 000000                  __CFG_CP1$OFF 000000                  __CFG_CP2$OFF 000000  
                __CFG_CP3$OFF 000000                  __CFG_CPB$OFF 000000                  __CFG_CPD$OFF 000000  
                         _RX9 007D5E                           _TX9 007D66                  __CFG_BOR$OFF 000000  
                         wreg 000FE8                  __CFG_LVP$OFF 000000                  __CFG_WDT$OFF 000000  
                        _BRGH 007D62                          _CREN 007D5C                          _LATA 000F89  
                        _LATB 000F8A                          _LATC 000F8B                          _RCIE 007CED  
                        i2l41 00D0                          i2l33 008A                          i2l35 00C2  
                        i2l38 00B0                          _TMR0 000FD6                          _SPEN 007D5F  
                        _TXIE 007CEC                          _TXIF 007CF4                          _TXEN 007D65  
                        _SYNC 007D64                          _main 0190                          fsr0h 000FEA  
                        fsr1h 000FE2                          fsr2h 000FDA                          fsr0l 000FE9  
                        indf2 000FDF                          fsr1l 000FE1                          fsr2l 000FD9  
                        btemp 0035                          prodh 000FF4                          prodl 000FF3  
                        start 000E                 __CFG_IESO$OFF 000000                 __CFG_MCLRE$ON 000000  
                ___param_bank 000000               __end_of_InitApp 0190                 __CFG_PLLDIV$1 000000  
              __CFG_CCP2MX$ON 000000                         ?_main 0020                         _ADRES 000FC3  
                       _BRG16 007DC3                         _DIR_1 001D                         _RCREG 000FAE  
                       _SPBRG 000FAF                         _PORTA 000F80                         _PORTB 000F81  
                       _PORTC 000F82                 __CFG_USBDIV$1 000000                         _TXREG 000FAD  
         _ConfigureOscillator 020E                 __CFG_PWRT$OFF 000000                 __CFG_WRT0$OFF 000000  
               __CFG_WRT1$OFF 000000                 __CFG_WRT2$OFF 000000                 __CFG_WRT3$OFF 000000  
              __CFG_EBTR0$OFF 000000                __CFG_FCMEN$OFF 000000                __CFG_EBTR1$OFF 000000  
              __CFG_EBTR2$OFF 000000                __CFG_EBTR3$OFF 000000                 __CFG_WRTB$OFF 000000  
               __CFG_WRTC$OFF 000000                 __CFG_WRTD$OFF 000000                __CFG_EBTRB$OFF 000000  
                       pclath 000FFA                         tablat 000FF5                         status 000FD8  
                       wtemp6 0036          ?_ConfigureOscillator 0020               __initialization 01DC  
                __end_of_main 01DC                        ??_main 0033                 __activetblptr 000002  
                      _ADCON1 000FC1                        _ADCON2 000FC0                        _GODONE 007E11  
                      i2u2_40 0070                        i2u3_48 0072                     ??_InitApp 0033  
       ??_ConfigureOscillator 0033                __CFG_XINST$OFF 000000              __end_of_high_isr 011C  
                      _recibi 001F                        clear_0 01FA                        _motor1 0033  
                      _motor2 0015                  __pdataCOMRAM 0033                        tblptrh 000FF7  
                      tblptrl 000FF6                        tblptru 000FF8                    __accesstop 0060  
     __end_of__initialization 0200               __CFG_PBADEN$OFF 000000                 ___rparam_used 000001  
              __pcstackCOMRAM 0020                     ?_high_isr 0020               __CFG_VREGEN$OFF 000000  
                     _InitApp 011C                       __Hparam 0000                       __Lparam 0000  
                   _ADC_value 0017               __CFG_STVREN$OFF 000000                       __pcinit 01DC  
                     __ramtop 0800                       __ptext0 0190                       __ptext1 011C  
                     __ptext2 020E                     _T0CONbits 000FD5                       _palabra 0001  
                  ??_high_isr 0020                __pintcode_body 0012          end_of_initialization 0200  
               __Lmediumconst 0000                       int_func 0012                       postinc0 000FEE  
                   _PORTAbits 000F80                     _TRISAbits 000F92                     _TRISCbits 000F94  
 __end_of_ConfigureOscillator 021A                 __pidataCOMRAM 021A           start_initialization 01DC  
            __CFG_LPT1OSC$OFF 000000                   __pbssCOMRAM 0001             __size_of_high_isr 0114  
                    ?_InitApp 0020                     __pintcode 0008                      _LATAbits 000F89  
                    _PIE1bits 000F9D                      _RA0state 001E                      _PIR1bits 000F9E  
                    _RCONbits 000FD0              __CFG_WDTPS$32768 000000                    _ADCON0bits 000FC2  
                 _INTCON2bits 000FF1              __size_of_InitApp 0074                      __Hrparam 0000  
                    __Lrparam 0000                      _high_isr 0008                 __size_of_main 004C  
__size_of_ConfigureOscillator 000C                      _overflow 0019                      int$flags 0035  
       __CFG_CPUDIV$OSC1_PLL2 000000                    _INTCONbits 000FF2                      intlevel2 0000  
                  _OSCCONbits 000FD3           __CFG_FOSC$INTOSC_EC 000000  
